{"version":3,"file":"js/app.3d263835.js","mappings":"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","sources":["webpack://uimdCell/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://uimdCell/./src/common/defines/constants/commonCodeList.ts","webpack://uimdCell/./src/common/defines/constants/dataBase.ts","webpack://uimdCell/./src/common/lib/utils/conversionDataUtils.ts","webpack://uimdCell/./src/common/defines/constants/siteCd.ts","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue?cb1e","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue?1d54","webpack://uimdCell/./src/common/defines/constants/analysis.ts","webpack://uimdCell/./src/common/defines/constants/constantMessageText.ts","webpack://uimdCell/./src/common/lib/utils/dateUtils.ts","webpack://uimdCell/./src/common/defines/constants/tcpRequest/tcpReq.ts","webpack://uimdCell/./src/common/api/httpClient.ts","webpack://uimdCell/./src/common/api/apiConstants.ts","webpack://uimdCell/./src/common/api/service/setting/settingApi.ts","webpack://uimdCell/./src/eventBus/eventBus.ts","webpack://uimdCell/./src/components/commonUi/Alert.vue","webpack://uimdCell/./src/components/commonUi/Alert.vue?90b6","webpack://uimdCell/./src/common/defines/constants/settings.ts","webpack://uimdCell/./src/components/commonUi/Confirm.vue","webpack://uimdCell/./src/components/commonUi/Confirm.vue?15eb","webpack://uimdCell/./src/common/api/service/device/deviceApi.ts","webpack://uimdCell/./src/views/analysis/commponent/execute.vue?8b98","webpack://uimdCell/./src/views/analysis/commponent/execute.vue","webpack://uimdCell/./src/views/analysis/commponent/execute.vue?96b5","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue?dadc","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue?cfb3","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue?7c68","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue?9b7d","webpack://uimdCell/./src/store/modules/analysis/wbcclassification.ts","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue?479e","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue?392d","webpack://uimdCell/./src/store/modules/analysis/rbcClassification.ts","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue?b417","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue?44de","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue?a3fa","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue?439a","webpack://uimdCell/./src/components/commonUi/GaugeBar.vue?8f36","webpack://uimdCell/./src/components/commonUi/GaugeBar.vue","webpack://uimdCell/./src/components/commonUi/GaugeBar.vue?9b62","webpack://uimdCell/./src/views/analysis/commponent/renewalWorking.vue?0c63","webpack://uimdCell/./src/views/analysis/commponent/renewalWorking.vue","webpack://uimdCell/./src/views/analysis/commponent/renewalWorking.vue?a41c","webpack://uimdCell/./src/views/analysis/index.vue?4f95","webpack://uimdCell/./src/views/analysis/index.vue","webpack://uimdCell/./src/views/analysis/index.vue?b0e1","webpack://uimdCell/./src/views/HomeView.vue?71c7","webpack://uimdCell/./src/views/HomeView.vue","webpack://uimdCell/./src/common/api/service/user/userApi.ts","webpack://uimdCell/./src/views/join/index.vue?d437","webpack://uimdCell/./src/views/join/index.vue","webpack://uimdCell/./src/views/join/index.vue?f30d","webpack://uimdCell/./src/common/helpers/common/setting.ts","webpack://uimdCell/./src/common/api/service/fileReader/fileReaderApi.ts","webpack://uimdCell/./src/views/login/index.vue?959f","webpack://uimdCell/./src/views/login/index.vue","webpack://uimdCell/./src/views/login/index.vue?b794","webpack://uimdCell/./src/common/api/service/backup/wbcApi.ts","webpack://uimdCell/./src/components/commonUi/ConfirmThreeBtn.vue","webpack://uimdCell/./src/components/commonUi/ConfirmThreeBtn.vue?6bb8","webpack://uimdCell/./src/components/commonUi/Tooltip.vue?9339","webpack://uimdCell/./src/components/commonUi/Tooltip.vue","webpack://uimdCell/./src/common/lib/utils/scroll.ts","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue?ad77","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue?a264","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue?a52c","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue?f1e6","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue?0bb8","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue?be0b","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue?19b1","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue?4fc6","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue?0179","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue?5d3f","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue?d72d","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue?493e","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue?2fe3","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue?deaa","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue?fd0f","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue?1620","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue?c3ef","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue?2f57","webpack://uimdCell/./src/store/modules/userModule.ts","webpack://uimdCell/./src/store/modules/analysis/executeModule.ts","webpack://uimdCell/./src/store/modules/analysis/workingViewModule.ts","webpack://uimdCell/./src/store/modules/embeddedStatusModule.ts","webpack://uimdCell/./src/store/modules/analysis/orderListModule.ts","webpack://uimdCell/./src/store/modules/testPageCommon/ruuningInfo.ts","webpack://uimdCell/./src/store/modules/commonModule.ts","webpack://uimdCell/./src/store/modules/dataBaseSetData/dataBaseSetDataModule.ts","webpack://uimdCell/./src/store/modules/timeModule.ts","webpack://uimdCell/./src/store/modules/runningDataModule.ts","webpack://uimdCell/./src/store/index.ts","webpack://uimdCell/./src/common/lib/utils/settingSave.ts","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue?2732","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue?9ed3","webpack://uimdCell/./src/components/commonUi/modal.vue","webpack://uimdCell/./src/components/commonUi/modal.vue?4253","webpack://uimdCell/./src/common/lib/utils/validators.ts","webpack://uimdCell/./src/views/setting/lognAccount/index.vue?b666","webpack://uimdCell/./src/views/setting/lognAccount/index.vue","webpack://uimdCell/./src/views/setting/lognAccount/index.vue?27bd","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue?8c34","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue?56ba","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue?a6eb","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue?51fb","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue?d20a","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue?2655","webpack://uimdCell/./src/components/commonUi/crcCompontent.vue?8f50","webpack://uimdCell/./src/components/commonUi/crcCompontent.vue","webpack://uimdCell/./src/components/commonUi/crcCompontent.vue?0e36","webpack://uimdCell/./src/views/setting/report/component/crc.vue?4b8d","webpack://uimdCell/./src/views/setting/report/component/crc.vue","webpack://uimdCell/./src/views/setting/report/component/crc.vue?9068","webpack://uimdCell/./src/views/setting/report/component/arl.vue","webpack://uimdCell/./src/views/setting/report/component/arl.vue?8395","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue?e6b5","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue?84d4","webpack://uimdCell/./src/views/setting/report/index.vue?ebd0","webpack://uimdCell/./src/views/setting/report/index.vue","webpack://uimdCell/./src/views/setting/report/index.vue?9290","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue?2b55","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue?18fb","webpack://uimdCell/./src/views/setting/version/index.vue?c959","webpack://uimdCell/./src/views/setting/version/index.vue","webpack://uimdCell/./src/views/setting/version/index.vue?7549","webpack://uimdCell/./src/views/setting/index.vue?d55b","webpack://uimdCell/./src/views/setting/index.vue","webpack://uimdCell/./src/views/setting/index.vue?7828","webpack://uimdCell/./src/common/api/service/runningInfo/runningInfoApi.ts","webpack://uimdCell/./src/common/helpers/common/classPercent.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue?a1c9","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue?e29e","webpack://uimdCell/./src/gql/queries.ts","webpack://uimdCell/./src/gql/useQueries.ts","webpack://uimdCell/./src/views/datebase/commponent/list/listTable.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listTable.vue?e80c","webpack://uimdCell/./src/views/datebase/commponent/list/listInfo.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listInfo.vue?ef0e","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue?c177","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue?21a5","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue?1100","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue?17fe","webpack://uimdCell/./src/common/api/service/excel/excelApi.ts","webpack://uimdCell/./src/common/api/service/fileSys/fileSysApi.ts","webpack://uimdCell/./src/common/helpers/lisCbc/inhaCbcLis.ts","webpack://uimdCell/./src/common/defines/constants/autoResultCodeMatching.ts","webpack://uimdCell/./src/common/helpers/lisCbc/index.ts","webpack://uimdCell/./src/common/helpers/lisCbc/sdCbcLis.ts","webpack://uimdCell/./src/components/commonUi/PopupTable.vue?711c","webpack://uimdCell/./src/components/commonUi/PopupTable.vue","webpack://uimdCell/./src/components/commonUi/PopupTable.vue?fdde","webpack://uimdCell/./src/views/datebase/index.vue?61fa","webpack://uimdCell/./src/views/datebase/index.vue","webpack://uimdCell/./src/views/datebase/index.vue?ebef","webpack://uimdCell/./src/common/defines/constants/rbc.ts","webpack://uimdCell/./src/gql/mutation/slideData.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue?ab8c","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue?3a74","webpack://uimdCell/./src/common/api/service/dataBase/wbc/wbcApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue?484e","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue?b1d3","webpack://uimdCell/./src/common/lib/utils/assetUtils.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue?8cab","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue?e25a","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue?b2bc","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue?d9ae","webpack://uimdCell/./src/common/api/service/lisSend/lisSend.ts","webpack://uimdCell/./src/common/helpers/lisCbc/ywmcCbcLis.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue?364c","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue?a2b2","webpack://uimdCell/./src/views/datebase/commponent/detail/detailHeader.vue?32ab","webpack://uimdCell/./src/views/datebase/commponent/detail/detailHeader.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/detailHeader.vue?67f5","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue?91c1","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue?bac2","webpack://uimdCell/./src/common/defines/constants/lis.ts","webpack://uimdCell/./src/common/lib/utils/removeDuplicateIds.ts","webpack://uimdCell/./src/components/commonUi/ToastNotification.vue?ba52","webpack://uimdCell/./src/components/commonUi/ToastNotification.vue","webpack://uimdCell/./src/components/commonUi/ToastNotification.vue?ff45","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue?fb23","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue?2e79","webpack://uimdCell/./src/components/commonUi/PassWordCheck.vue?5338","webpack://uimdCell/./src/components/commonUi/PassWordCheck.vue","webpack://uimdCell/./src/components/commonUi/PassWordCheck.vue?1811","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/remark.vue?515b","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/remark.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/remark.vue?8627","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/crcAdd.vue?4723","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/crcAdd.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/crcAdd.vue?d4ce","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/crcList.vue?90dc","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/crcList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/crcList.vue?de18","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/cellStatusDashBoard.vue?0b75","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/cellStatusDashBoard.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/cellStatusDashBoard.vue?1303","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/resultImage.vue?e0e4","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/resultImage.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/resultImage.vue?a44d","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/autoCBCMatching.vue?75f8","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/autoCBCMatching.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/autoCBCMatching.vue?89ff","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/wbcImageSelect.vue?7c79","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/wbcImageSelect.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/component/wbcImageSelect.vue?81f7","webpack://uimdCell/./src/views/datebase/commponent/detail/report/crcResultCodes.vue?36cb","webpack://uimdCell/./src/views/datebase/commponent/detail/report/crcResultCodes.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/crcResultCodes.vue?54e9","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue?cb24","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue?301e","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commponent/wps.vue?a9bd","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commponent/wps.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commponent/wps.vue?8f9a","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/ImageGallery.vue?5895","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/ImageGallery.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/ImageGallery.vue?18ab","webpack://uimdCell/./src/common/lib/utils/changeData.ts","webpack://uimdCell/./src/common/helpers/lisCbc/initCBC.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue?5ca2","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue?8353","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue?f393","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue?2b16","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue?51a6","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue?7660","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue?2dfe","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue?3e85","webpack://uimdCell/./src/router/index.ts","webpack://uimdCell/./src/components/commonUi/ProgressBar.vue","webpack://uimdCell/./src/components/commonUi/ProgressBar.vue?b71c","webpack://uimdCell/./src/components/commonUi/ErrLog.vue?b58b","webpack://uimdCell/./src/components/commonUi/ErrLog.vue","webpack://uimdCell/./src/components/commonUi/ErrLog.vue?4e42","webpack://uimdCell/./src/components/layout/AppHeader.vue?527c","webpack://uimdCell/./src/components/layout/AppHeader.vue","webpack://uimdCell/./src/components/layout/AppHeader.vue?0448","webpack://uimdCell/./src/common/defines/constants/classArr.ts","webpack://uimdCell/./src/common/helpers/common/store/common.ts","webpack://uimdCell/./src/App.vue?2a5e","webpack://uimdCell/./src/App.vue","webpack://uimdCell/./src/App.vue?7ccd","webpack://uimdCell/./src/plugins/socketPlugin.ts","webpack://uimdCell/./src/icons/customIcons.ts","webpack://uimdCell/./src/graphql/apollo.ts","webpack://uimdCell/./src/main.ts","webpack://uimdCell/webpack/bootstrap","webpack://uimdCell/webpack/runtime/chunk loaded","webpack://uimdCell/webpack/runtime/compat get default export","webpack://uimdCell/webpack/runtime/define property getters","webpack://uimdCell/webpack/runtime/global","webpack://uimdCell/webpack/runtime/hasOwnProperty shorthand","webpack://uimdCell/webpack/runtime/make namespace object","webpack://uimdCell/webpack/runtime/node module decorator","webpack://uimdCell/webpack/runtime/publicPath","webpack://uimdCell/webpack/runtime/jsonp chunk loading","webpack://uimdCell/webpack/startup"],"sourcesContent":["var map = {\n\t\"./af\": 5177,\n\t\"./af.js\": 5177,\n\t\"./ar\": 1509,\n\t\"./ar-dz\": 1488,\n\t\"./ar-dz.js\": 1488,\n\t\"./ar-kw\": 8676,\n\t\"./ar-kw.js\": 8676,\n\t\"./ar-ly\": 2353,\n\t\"./ar-ly.js\": 2353,\n\t\"./ar-ma\": 4496,\n\t\"./ar-ma.js\": 4496,\n\t\"./ar-ps\": 6947,\n\t\"./ar-ps.js\": 6947,\n\t\"./ar-sa\": 2682,\n\t\"./ar-sa.js\": 2682,\n\t\"./ar-tn\": 9756,\n\t\"./ar-tn.js\": 9756,\n\t\"./ar.js\": 1509,\n\t\"./az\": 5533,\n\t\"./az.js\": 5533,\n\t\"./be\": 8959,\n\t\"./be.js\": 8959,\n\t\"./bg\": 7777,\n\t\"./bg.js\": 7777,\n\t\"./bm\": 4903,\n\t\"./bm.js\": 4903,\n\t\"./bn\": 1290,\n\t\"./bn-bd\": 7357,\n\t\"./bn-bd.js\": 7357,\n\t\"./bn.js\": 1290,\n\t\"./bo\": 1545,\n\t\"./bo.js\": 1545,\n\t\"./br\": 1470,\n\t\"./br.js\": 1470,\n\t\"./bs\": 4429,\n\t\"./bs.js\": 4429,\n\t\"./ca\": 7306,\n\t\"./ca.js\": 7306,\n\t\"./cs\": 6464,\n\t\"./cs.js\": 6464,\n\t\"./cv\": 3635,\n\t\"./cv.js\": 3635,\n\t\"./cy\": 4226,\n\t\"./cy.js\": 4226,\n\t\"./da\": 3601,\n\t\"./da.js\": 3601,\n\t\"./de\": 7853,\n\t\"./de-at\": 6111,\n\t\"./de-at.js\": 6111,\n\t\"./de-ch\": 4697,\n\t\"./de-ch.js\": 4697,\n\t\"./de.js\": 7853,\n\t\"./dv\": 708,\n\t\"./dv.js\": 708,\n\t\"./el\": 4691,\n\t\"./el.js\": 4691,\n\t\"./en-au\": 3872,\n\t\"./en-au.js\": 3872,\n\t\"./en-ca\": 8298,\n\t\"./en-ca.js\": 8298,\n\t\"./en-gb\": 6195,\n\t\"./en-gb.js\": 6195,\n\t\"./en-ie\": 6584,\n\t\"./en-ie.js\": 6584,\n\t\"./en-il\": 5543,\n\t\"./en-il.js\": 5543,\n\t\"./en-in\": 9033,\n\t\"./en-in.js\": 9033,\n\t\"./en-nz\": 9402,\n\t\"./en-nz.js\": 9402,\n\t\"./en-sg\": 3004,\n\t\"./en-sg.js\": 3004,\n\t\"./eo\": 2934,\n\t\"./eo.js\": 2934,\n\t\"./es\": 7650,\n\t\"./es-do\": 838,\n\t\"./es-do.js\": 838,\n\t\"./es-mx\": 7730,\n\t\"./es-mx.js\": 7730,\n\t\"./es-us\": 6575,\n\t\"./es-us.js\": 6575,\n\t\"./es.js\": 7650,\n\t\"./et\": 3035,\n\t\"./et.js\": 3035,\n\t\"./eu\": 3508,\n\t\"./eu.js\": 3508,\n\t\"./fa\": 119,\n\t\"./fa.js\": 119,\n\t\"./fi\": 527,\n\t\"./fi.js\": 527,\n\t\"./fil\": 5995,\n\t\"./fil.js\": 5995,\n\t\"./fo\": 2477,\n\t\"./fo.js\": 2477,\n\t\"./fr\": 5498,\n\t\"./fr-ca\": 6435,\n\t\"./fr-ca.js\": 6435,\n\t\"./fr-ch\": 7892,\n\t\"./fr-ch.js\": 7892,\n\t\"./fr.js\": 5498,\n\t\"./fy\": 7071,\n\t\"./fy.js\": 7071,\n\t\"./ga\": 1734,\n\t\"./ga.js\": 1734,\n\t\"./gd\": 217,\n\t\"./gd.js\": 217,\n\t\"./gl\": 7329,\n\t\"./gl.js\": 7329,\n\t\"./gom-deva\": 2124,\n\t\"./gom-deva.js\": 2124,\n\t\"./gom-latn\": 3383,\n\t\"./gom-latn.js\": 3383,\n\t\"./gu\": 5050,\n\t\"./gu.js\": 5050,\n\t\"./he\": 1713,\n\t\"./he.js\": 1713,\n\t\"./hi\": 3861,\n\t\"./hi.js\": 3861,\n\t\"./hr\": 6308,\n\t\"./hr.js\": 6308,\n\t\"./hu\": 609,\n\t\"./hu.js\": 609,\n\t\"./hy-am\": 7160,\n\t\"./hy-am.js\": 7160,\n\t\"./id\": 4063,\n\t\"./id.js\": 4063,\n\t\"./is\": 9374,\n\t\"./is.js\": 9374,\n\t\"./it\": 8383,\n\t\"./it-ch\": 1827,\n\t\"./it-ch.js\": 1827,\n\t\"./it.js\": 8383,\n\t\"./ja\": 3827,\n\t\"./ja.js\": 3827,\n\t\"./jv\": 9722,\n\t\"./jv.js\": 9722,\n\t\"./ka\": 1794,\n\t\"./ka.js\": 1794,\n\t\"./kk\": 7088,\n\t\"./kk.js\": 7088,\n\t\"./km\": 6870,\n\t\"./km.js\": 6870,\n\t\"./kn\": 4451,\n\t\"./kn.js\": 4451,\n\t\"./ko\": 3164,\n\t\"./ko.js\": 3164,\n\t\"./ku\": 8174,\n\t\"./ku-kmr\": 6181,\n\t\"./ku-kmr.js\": 6181,\n\t\"./ku.js\": 8174,\n\t\"./ky\": 8474,\n\t\"./ky.js\": 8474,\n\t\"./lb\": 9680,\n\t\"./lb.js\": 9680,\n\t\"./lo\": 5867,\n\t\"./lo.js\": 5867,\n\t\"./lt\": 5766,\n\t\"./lt.js\": 5766,\n\t\"./lv\": 9532,\n\t\"./lv.js\": 9532,\n\t\"./me\": 8076,\n\t\"./me.js\": 8076,\n\t\"./mi\": 1848,\n\t\"./mi.js\": 1848,\n\t\"./mk\": 306,\n\t\"./mk.js\": 306,\n\t\"./ml\": 3739,\n\t\"./ml.js\": 3739,\n\t\"./mn\": 9053,\n\t\"./mn.js\": 9053,\n\t\"./mr\": 6169,\n\t\"./mr.js\": 6169,\n\t\"./ms\": 3386,\n\t\"./ms-my\": 2297,\n\t\"./ms-my.js\": 2297,\n\t\"./ms.js\": 3386,\n\t\"./mt\": 7075,\n\t\"./mt.js\": 7075,\n\t\"./my\": 2264,\n\t\"./my.js\": 2264,\n\t\"./nb\": 2274,\n\t\"./nb.js\": 2274,\n\t\"./ne\": 8235,\n\t\"./ne.js\": 8235,\n\t\"./nl\": 2572,\n\t\"./nl-be\": 3784,\n\t\"./nl-be.js\": 3784,\n\t\"./nl.js\": 2572,\n\t\"./nn\": 4566,\n\t\"./nn.js\": 4566,\n\t\"./oc-lnc\": 9330,\n\t\"./oc-lnc.js\": 9330,\n\t\"./pa-in\": 9849,\n\t\"./pa-in.js\": 9849,\n\t\"./pl\": 4418,\n\t\"./pl.js\": 4418,\n\t\"./pt\": 9834,\n\t\"./pt-br\": 8303,\n\t\"./pt-br.js\": 8303,\n\t\"./pt.js\": 9834,\n\t\"./ro\": 4457,\n\t\"./ro.js\": 4457,\n\t\"./ru\": 2271,\n\t\"./ru.js\": 2271,\n\t\"./sd\": 1221,\n\t\"./sd.js\": 1221,\n\t\"./se\": 3478,\n\t\"./se.js\": 3478,\n\t\"./si\": 7538,\n\t\"./si.js\": 7538,\n\t\"./sk\": 5784,\n\t\"./sk.js\": 5784,\n\t\"./sl\": 6637,\n\t\"./sl.js\": 6637,\n\t\"./sq\": 6794,\n\t\"./sq.js\": 6794,\n\t\"./sr\": 5719,\n\t\"./sr-cyrl\": 3322,\n\t\"./sr-cyrl.js\": 3322,\n\t\"./sr.js\": 5719,\n\t\"./ss\": 6000,\n\t\"./ss.js\": 6000,\n\t\"./sv\": 1011,\n\t\"./sv.js\": 1011,\n\t\"./sw\": 748,\n\t\"./sw.js\": 748,\n\t\"./ta\": 1025,\n\t\"./ta.js\": 1025,\n\t\"./te\": 1885,\n\t\"./te.js\": 1885,\n\t\"./tet\": 8861,\n\t\"./tet.js\": 8861,\n\t\"./tg\": 6571,\n\t\"./tg.js\": 6571,\n\t\"./th\": 5802,\n\t\"./th.js\": 5802,\n\t\"./tk\": 9527,\n\t\"./tk.js\": 9527,\n\t\"./tl-ph\": 9231,\n\t\"./tl-ph.js\": 9231,\n\t\"./tlh\": 1052,\n\t\"./tlh.js\": 1052,\n\t\"./tr\": 5096,\n\t\"./tr.js\": 5096,\n\t\"./tzl\": 9846,\n\t\"./tzl.js\": 9846,\n\t\"./tzm\": 1765,\n\t\"./tzm-latn\": 7711,\n\t\"./tzm-latn.js\": 7711,\n\t\"./tzm.js\": 1765,\n\t\"./ug-cn\": 8414,\n\t\"./ug-cn.js\": 8414,\n\t\"./uk\": 6618,\n\t\"./uk.js\": 6618,\n\t\"./ur\": 158,\n\t\"./ur.js\": 158,\n\t\"./uz\": 7609,\n\t\"./uz-latn\": 4856,\n\t\"./uz-latn.js\": 4856,\n\t\"./uz.js\": 7609,\n\t\"./vi\": 1135,\n\t\"./vi.js\": 1135,\n\t\"./x-pseudo\": 4051,\n\t\"./x-pseudo.js\": 4051,\n\t\"./yo\": 2218,\n\t\"./yo.js\": 2218,\n\t\"./zh-cn\": 2648,\n\t\"./zh-cn.js\": 2648,\n\t\"./zh-hk\": 1632,\n\t\"./zh-hk.js\": 1632,\n\t\"./zh-mo\": 1541,\n\t\"./zh-mo.js\": 1541,\n\t\"./zh-tw\": 304,\n\t\"./zh-tw.js\": 304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5358;","export const commonCodeList = [\r\n    { grpCd: '00', grpNm: 'User position', cd: '00', cdNm: 'Position' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '01', cdNm: 'Executive advisor' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '02', cdNm: 'General manager' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '03', cdNm: 'Chief' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '04', cdNm: 'Assistant manager' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '05', cdNm: 'Staff' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '01', cdNm: 'Normal' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '02', cdNm: 'Admin' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '03', cdNm: 'Developer' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '0', cdNm: 'Empty' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '1', cdNm: 'Ready' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '2', cdNm: 'Analyzing' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '3', cdNm: 'Complete' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '4', cdNm: 'Error' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '9', cdNm: 'Scan' },\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '01', cdNm: 'Cassette Loaded.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '02', cdNm: 'PB/BM Sequence Start.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '03', cdNm: 'Cassette Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '04', cdNm: 'Cassette Scanned.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '05', cdNm: 'Loading Slide #'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '06', cdNm: 'Barcode Scanned : '},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '07', cdNm: 'Low Power Slide Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '08', cdNm: 'Low Power Slide Scan Complete.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '09', cdNm: 'Dispensing Immersion Oil......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '10', cdNm: 'High Power Slide Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '11', cdNm: 'RBC Classification Processing......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '11', cdNm: 'WBC Classification Processing......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '12', cdNm: 'Unloading Slide #'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '13', cdNm: 'Cassette Complete'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '01', cdNm: 'PB smear'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '02', cdNm: 'BM smear'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '03', cdNm: 'Touch print'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '04', cdNm: 'BM biopsy'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '05', cdNm: 'Clot section'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '01', cdNm: '100 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '02', cdNm: '200 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '03', cdNm: '300 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '04', cdNm: '400 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '05', cdNm: '500 count'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '01', cdNm: 'Wright stain'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '02', cdNm: 'Giemsa stain'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '03', cdNm: 'Wright & Giemsa stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '04', cdNm: 'Iron stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '05', cdNm: 'Trichrome stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '06', cdNm: 'Myeloperoxidase stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '07', cdNm: 'NSE stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '08', cdNm: 'NSE stain after NaFinhibition'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '09', cdNm: 'Reticulin stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '10', cdNm: 'PAS stain'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '11', cdNm: 'CD 3'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '12', cdNm: 'CD 5'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '13', cdNm: 'CD 20'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '14', cdNm: 'CD 79a'},\r\n    { grpCd: '09', grpNm: 'Sampling stain', cd: '01', cdNm: 'Single'},\r\n    { grpCd: '09', grpNm: 'Sampling stain', cd: '02', cdNm: 'Both'},\r\n    { grpCd: '10', grpNm: 'Gender', cd: '01', cdNm: 'Male'},\r\n    { grpCd: '10', grpNm: 'Gender', cd: '02', cdNm: 'Female'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '01', cdNm: 'PB'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '02', cdNm: 'BF(Default)'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '03', cdNm: 'BF(Select)'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '04', cdNm: 'Premium'},\r\n    { grpCd: '12', grpNm: 'Signed state', cd: '01', cdNm: 'Signed'},\r\n    { grpCd: '12', grpNm: 'Signed state', cd: '02', cdNm: 'Ready'},\r\n    { grpCd: '13', grpNm: 'Log type', cd: '00', cdNm: 'User log'},\r\n    { grpCd: '13', grpNm: 'Log type', cd: '01', cdNm: 'System log'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '00', cdNm: 'Empty'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '01', cdNm: 'Ready'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '02', cdNm: 'Scan'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '03', cdNm: 'Analyzing'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '04', cdNm: 'Complete'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '05', cdNm: 'Error'}\r\n]\r\n\r\nexport const RUNNING_INFO_INTERFACE_CODE = {\r\n    I_CAS_STAT_ID_LIST: [\r\n        { cd: '0', cdNm: 'Empty' },\r\n        { cd: '1', cdNm: 'Ready' },\r\n        { cd: '2', cdNm: 'Analyzing' },\r\n        { cd: '3', cdNm: 'Complete' },\r\n        { cd: '4', cdNm: 'Error' },\r\n        { cd: '9', cdNm: 'Scan' },\r\n    ]\r\n}","export const testType = [\r\n    {value: '01', text: 'WBC Diff'},\r\n    {value: '04', text: 'PBS'},\r\n    {value: '02', text: 'Body fluid default'},\r\n    {value: '03', text: 'Body fluid select'}\r\n];\r\n\r\nexport const bmTestType = [\r\n    {value: '02', text: 'BM smear'},\r\n    {value: '03', text: 'Touch print'},\r\n    {value: '04', text: 'BM biopsy'},\r\n    {value: '05', text: 'Clot section'}\r\n];\r\n\r\nexport const RBC_CODE_CLASS_ID = {\r\n    SIZE: {\r\n        CATEGORY_ID: '01',\r\n        NORMAL: '01',\r\n        MACROCYTE: '02',\r\n        MICROCTYE: '03',\r\n        ANISOCYTOSIS: '04',\r\n    },\r\n    CHROMIA: {\r\n        CATEGORY_ID: '02',\r\n        NORMAL: '01',\r\n        HYPERCHROMIC: '02',\r\n        HYPOCHROMIC: '03',\r\n        POLYCHROMIA: '04',\r\n    },\r\n    SHAPE: {\r\n        CATEGORY_ID: '03',\r\n        NORMAL: '01',\r\n        POLIKILOCYTOSIS: '02',\r\n        TARGET_CELL: '03',\r\n        BURR_CELL: '04',\r\n        ACANTHOCYTE: '05',\r\n        OVALOCYTE: '06',\r\n        SCHISTOCYTE: '07',\r\n        SICKLE_CELL: '08',\r\n        STOMATOCYTE: '09',\r\n        TEAR_DROP_CELL: '10',\r\n        SPHEROCYTE: '11'\r\n    },\r\n    INCLUSION_BODY: {\r\n        CATEGORY_ID: '05',\r\n        HOWELL_JOLLY_BODY: '01',\r\n        BASOPHILIC_STIPPLING: '02',\r\n        MALARIA: '03',\r\n    },\r\n    OTHERS: {\r\n        CATEGORY_ID: '04',\r\n        PLATELET: '01',\r\n    }\r\n}\r\n\r\nexport const SHOWING_RBC_SHAPE_CLASS_IDS = [\r\n    RBC_CODE_CLASS_ID.SHAPE.NORMAL,\r\n    RBC_CODE_CLASS_ID.SHAPE.POLIKILOCYTOSIS,\r\n    RBC_CODE_CLASS_ID.SHAPE.TARGET_CELL,\r\n    RBC_CODE_CLASS_ID.SHAPE.BURR_CELL,\r\n    RBC_CODE_CLASS_ID.SHAPE.ACANTHOCYTE,\r\n    RBC_CODE_CLASS_ID.SHAPE.OVALOCYTE,\r\n    RBC_CODE_CLASS_ID.SHAPE.SCHISTOCYTE,\r\n    RBC_CODE_CLASS_ID.SHAPE.SICKLE_CELL,\r\n    RBC_CODE_CLASS_ID.SHAPE.STOMATOCYTE,\r\n    RBC_CODE_CLASS_ID.SHAPE.TEAR_DROP_CELL,\r\n    RBC_CODE_CLASS_ID.SHAPE.SPHEROCYTE,\r\n]","import { commonCodeList } from '@/common/defines/constants/commonCodeList';\r\nimport {bmTestType, testType} from \"@/common/defines/constants/dataBase\";\r\ninterface CommonCode {\r\n    grpCd: string;\r\n    cd: string;\r\n    cdNm: string; // Add cdNm property to the CommonCode interface\r\n}\r\n\r\n\r\nexport const getCommonCode = (grpCd: string, cd: string): string | undefined => {\r\n    const foundCode = commonCodeList.find((code) => code.grpCd === grpCd && code.cd === cd);\r\n\r\n    return foundCode?.cdNm;\r\n};\r\n\r\nexport function stringToDateTime(str: string): string {\r\n    if (!str) {\r\n        return '';\r\n    }\r\n\r\n    const [year, month, day, hour, minute, second] = [\r\n        str.substring(0, 4),\r\n        str.substring(4, 6),\r\n        str.substring(6, 8),\r\n        str.substring(8, 10),\r\n        str.substring(10, 12),\r\n        str.substring(12, 14)\r\n    ];\r\n\r\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\r\n}\r\n\r\nexport const getTestTypeText = (value: string) => {\r\n    const matchingOption = testType.find(option => option.value === value);\r\n    return matchingOption ? matchingOption.text : '';\r\n};\r\n\r\nexport const getBmTestTypeText = (value: string) => {\r\n    const matchingOption = bmTestType.find(option => option.value === value);\r\n    return matchingOption ? matchingOption.text : '';\r\n};\r\n\r\nexport const getBarcodeDetailImageUrl = (imageName: string, iaRootPath: string, slotId: string, barcodeDirName: string): string => {\r\n    const apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\n    return `${apiBaseUrl}/images/imgQualityCdn?folder=${iaRootPath + \"/\" + slotId + \"/\" + barcodeDirName + \"/\"}&imageName=${imageName}&quality=30`;\r\n}\r\n","export const HOSPITAL_SITE_CD_BY_NAME = {\r\n    'UIMD': '0000',\r\n    'NONE': '',\r\n    '서울성모병원': '0002',\r\n    '스타고': '0003',\r\n    '이원의료재단': '0004',\r\n    '일산병원': '0005',\r\n    '고대안암병원': '0006',\r\n    '삼광의료재단': '0007',\r\n    '신촌세브란스병원': '0008',\r\n    '양산부산병원': '0009',\r\n    '녹십자의료재단': '0010',\r\n    '인하대병원': '0011',\r\n    '경북대학교병원': '0012',\r\n    '부산인제백병원': '0013',\r\n    '씨젠검사센터_부산': '0014',\r\n    '씨젠검사센터_대구': '0015',\r\n    '영남대학교': '0016',\r\n    '씨젠검사센터_서울': '0017',\r\n    '창원경상대학병원': '0018',\r\n    '인천길병원': '0019',\r\n    '충남대병원': '0020',\r\n    '인천성모병원': '0021',\r\n    '삼성서울병원': '0022',\r\n    '충북대병원': '0023',\r\n    '천안순천향병원': '0024',\r\n    '부산해운대백병원': '0025',\r\n    '건국대학교병원': '0026',\r\n    '광명중앙대학교병원': '0027',\r\n    '전북대학교병원': '0028',\r\n    '진주경상대병원': '0029',\r\n    '원주기독병원': '0030',\r\n    'SD의학연구소': '0031',\r\n    '강북삼성병원': '0032',\r\n    '원자력병원': '0033',\r\n    '고대구로병원': '0034',\r\n    '국립암센터': '0035',\r\n    '대구카톨릭병원': '0036',\r\n    '츠쿠바': '0099'\r\n} as const;\r\n\r\nexport type HospitalSiteCodesType = typeof HOSPITAL_SITE_CD_BY_NAME[keyof typeof HOSPITAL_SITE_CD_BY_NAME];","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, unref as _unref, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"processInfoUl\" }\nconst _hoisted_2 = { class: \"proVal\" }\nconst _hoisted_3 = { class: \"proVal\" }\nconst _hoisted_4 = { class: \"proVal\" }\nconst _hoisted_5 = { class: \"proVal\" }\nconst _hoisted_6 = { class: \"proSpan\" }\nconst _hoisted_7 = { class: \"proVal\" }\nconst _hoisted_8 = { class: \"proVal\" }\nconst _hoisted_9 = { class: \"proVal\" }\nconst _hoisted_10 = { class: \"proVal\" }\nconst _hoisted_11 = { class: \"proSpan\" }\nconst _hoisted_12 = { class: \"proVal\" }\n\nimport {ref, computed, watch, onMounted, getCurrentInstance} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport process from \"process\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"../../../common/defines/constants/siteCd\";\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'processInfo',\n  props: [ 'parsedData'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n// processInfoItem 초기화\r\nconst processInfoItem = ref<any>({});\r\nconst prevOilCount = ref<string | null>(null);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst currentCardCount = ref('');\r\nconst currentCardName = ref('');\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVal) => {\r\n  if (newVal.length > 0) {\r\n    const sysInfo = newVal[0].sysInfo;\r\n    if(sysInfo.oilCount !== prevOilCount.value){\r\n      processInfoItem.value.oilCount = sysInfo.oilCount;\r\n      prevOilCount.value = sysInfo.oilCount;\r\n    }\r\n    currentCardCount.value = sysInfo.currentCardCount;\r\n    currentCardName.value = sysInfo.currentCardName;\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  prevOilCount.value = embeddedStatusJobCmd.value[0]?.sysInfo.oilCount;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = parsedData?.slotInfo;\r\n    if (currentSlot) {\r\n      processInfoItem.value = {\r\n        cassetteNo: parsedData.cassetId ?? '',\r\n        barcodeId: currentSlot.barcodeNo,\r\n        patientId: currentSlot.patientId,\r\n        patientName: currentSlot.patientNm,\r\n        // wbcCount: currentSlot.maxWbcCount,\r\n        orderDate: stringToDateTime(currentSlot.orderDttm),\r\n        analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 실행정보를 가지고 온다.\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _cache[11] || (_cache[11] = _createElementVNode(\"h3\", { class: \"titleText\" }, \"Processing Information \", -1)),\n    _createElementVNode(\"ul\", _hoisted_1, [\n      _createElementVNode(\"li\", null, [\n        _cache[0] || (_cache[0] = _createElementVNode(\"span\", { class: \"proSpan\" }, \"Cassette No\", -1)),\n        _cache[1] || (_cache[1] = _createTextVNode()),\n        _createElementVNode(\"span\", _hoisted_2, _toDisplayString(processInfoItem.value?.cassetteNo), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _cache[2] || (_cache[2] = _createElementVNode(\"span\", { class: \"proSpan\" }, \"Barcode ID\", -1)),\n        _cache[3] || (_cache[3] = _createTextVNode()),\n        _createElementVNode(\"span\", _hoisted_3, _toDisplayString(processInfoItem.value?.barcodeId), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _cache[4] || (_cache[4] = _createElementVNode(\"span\", { class: \"proSpan\" }, \"Patient ID\", -1)),\n        _cache[5] || (_cache[5] = _createTextVNode()),\n        _createElementVNode(\"span\", _hoisted_4, _toDisplayString(processInfoItem.value?.patientId), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _cache[6] || (_cache[6] = _createElementVNode(\"span\", { class: \"proSpan\" }, \"Patient Name\", -1)),\n        _cache[7] || (_cache[7] = _createTextVNode()),\n        _createElementVNode(\"span\", _hoisted_5, _toDisplayString(processInfoItem.value?.patientName), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_6, _toDisplayString(projectBm.value ? 'BM CELL Count ' : 'WBC Count '), 1),\n        _createElementVNode(\"span\", _hoisted_7, _toDisplayString(processInfoItem.value?.wbcCount), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        (_unref(HOSPITAL_SITE_CD_BY_NAME)['인천길병원'] === siteCd.value)\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              _cache[8] || (_cache[8] = _createElementVNode(\"span\", { class: \"proSpan\" }, \"Order Date\", -1)),\n              _createElementVNode(\"span\", _hoisted_8, _toDisplayString(processInfoItem.value?.analyzedDttm), 1)\n            ], 64))\n          : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n              _cache[9] || (_cache[9] = _createElementVNode(\"span\", { class: \"proSpan\" }, \"Analyzed Date\", -1)),\n              _createElementVNode(\"span\", _hoisted_9, _toDisplayString(processInfoItem.value?.orderDate), 1)\n            ], 64))\n      ]),\n      _createElementVNode(\"li\", null, [\n        _cache[10] || (_cache[10] = _createElementVNode(\"span\", { class: \"proSpan\" }, \"Oil Count\", -1)),\n        _createElementVNode(\"span\", _hoisted_10, _toDisplayString(prevOilCount.value), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_11, _toDisplayString(currentCardName.value), 1),\n        _createElementVNode(\"span\", _hoisted_12, _toDisplayString(currentCardCount.value), 1)\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\">Processing Information </h3>\r\n    <ul class=\"processInfoUl\">\r\n      <li><span class=\"proSpan\">Cassette No</span> <span class=\"proVal\">{{ processInfoItem?.cassetteNo }}</span></li>\r\n      <li><span class=\"proSpan\">Barcode ID</span> <span class=\"proVal\">{{ processInfoItem?.barcodeId }}</span></li>\r\n      <li><span class=\"proSpan\">Patient ID</span> <span class=\"proVal\">{{ processInfoItem?.patientId }}</span></li>\r\n      <li><span class=\"proSpan\">Patient Name</span> <span class=\"proVal\">{{ processInfoItem?.patientName }}</span></li>\r\n      <li>\r\n        <span class=\"proSpan\">{{ projectBm ? 'BM CELL Count ' : 'WBC Count ' }} </span>\r\n        <span class=\"proVal\">{{ processInfoItem?.wbcCount }}</span></li>\r\n      <li>\r\n        <!--0019 길병원-->\r\n        <template v-if=\"HOSPITAL_SITE_CD_BY_NAME['인천길병원'] === siteCd\">\r\n          <span class=\"proSpan\">Order Date</span>\r\n          <span class=\"proVal\">{{ processInfoItem?.analyzedDttm }}</span>\r\n        </template>\r\n        <template v-else>\r\n          <span class=\"proSpan\">Analyzed Date</span>\r\n          <span class=\"proVal\">{{ processInfoItem?.orderDate }}</span>\r\n        </template>\r\n      </li>\r\n      <li>\r\n        <span class=\"proSpan\">Oil Count</span>\r\n        <span class=\"proVal\">{{ prevOilCount }}</span>\r\n      </li>\r\n      <li>\r\n        <span class=\"proSpan\">{{ currentCardName }}</span>\r\n        <span class=\"proVal\">{{ currentCardCount }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed, watch, onMounted, getCurrentInstance, defineProps} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport process from \"process\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"../../../common/defines/constants/siteCd\";\r\nconst props = defineProps([ 'parsedData']);\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n// processInfoItem 초기화\r\nconst processInfoItem = ref<any>({});\r\nconst prevOilCount = ref<string | null>(null);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst currentCardCount = ref('');\r\nconst currentCardName = ref('');\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVal) => {\r\n  if (newVal.length > 0) {\r\n    const sysInfo = newVal[0].sysInfo;\r\n    if(sysInfo.oilCount !== prevOilCount.value){\r\n      processInfoItem.value.oilCount = sysInfo.oilCount;\r\n      prevOilCount.value = sysInfo.oilCount;\r\n    }\r\n    currentCardCount.value = sysInfo.currentCardCount;\r\n    currentCardName.value = sysInfo.currentCardName;\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  prevOilCount.value = embeddedStatusJobCmd.value[0]?.sysInfo.oilCount;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = parsedData?.slotInfo;\r\n    if (currentSlot) {\r\n      processInfoItem.value = {\r\n        cassetteNo: parsedData.cassetId ?? '',\r\n        barcodeId: currentSlot.barcodeNo,\r\n        patientId: currentSlot.patientId,\r\n        patientName: currentSlot.patientNm,\r\n        // wbcCount: currentSlot.maxWbcCount,\r\n        orderDate: stringToDateTime(currentSlot.orderDttm),\r\n        analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 실행정보를 가지고 온다.\r\n\r\n</script>\r\n","import script from \"./processInfo.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./processInfo.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const WBC_COUNT_OPTIONS = [\r\n    {value: '100', text: '100 WBC'},\r\n    {value: '150', text: '150 WBC'},\r\n    {value: '200', text: '200 WBC'},\r\n    {value: '250', text: '250 WBC'},\r\n    {value: '300', text: '300 WBC'},\r\n    {value: '350', text: '350 WBC'},\r\n    {value: '400', text: '400 WBC'},\r\n    {value: '450', text: '450 WBC'},\r\n    {value: '500', text: '500 WBC'}\r\n];\r\n\r\nexport const BM_COUNT_OPTIONS = [\r\n    { value: '100', text: '100' },\r\n    { value: '200', text: '200' },\r\n    { value: '300', text: '300' },\r\n    { value: '400', text: '400' },\r\n    { value: '500', text: '500' },\r\n    { value: '600', text: '600' },\r\n    { value: '700', text: '700' },\r\n    { value: '800', text: '800' },\r\n    { value: '900', text: '900' },\r\n    { value: '1000', text: '1000' },\r\n    { value: '1100', text: '1100' },\r\n    { value: '1200', text: '1200' },\r\n    { value: '1300', text: '1300' },\r\n    { value: '1400', text: '1400' },\r\n    { value: '1500', text: '1500' },\r\n];\r\n\r\nexport const STITCH_COUNT_OPTIONS = [\r\n    { value: '1', text: '1 stitch' },\r\n    { value: '2', text: '2 stitch' },\r\n    { value: '3', text: '3 stitch' },\r\n    { value: '4', text: '4 stitch' },\r\n    { value: '5', text: '5 stitch' }\r\n];\r\n\r\nexport const SLIDE_CARD_12A = {\r\n    INPUT: [\r\n        { slotNo: 1, slotState: '0' },\r\n        { slotNo: 2, slotState: '0' },\r\n        { slotNo: 3, slotState: '0' },\r\n        { slotNo: 4, slotState: '0' },\r\n        { slotNo: 5, slotState: '0' },\r\n        { slotNo: 6, slotState: '0' },\r\n        { slotNo: 7, slotState: '0' },\r\n        { slotNo: 8, slotState: '0' },\r\n        { slotNo: 9, slotState: '0' },\r\n        { slotNo: 10, slotState: '0' },\r\n        { slotNo: 11, slotState: '0' },\r\n        { slotNo: 12, slotState: '0' }\r\n    ],\r\n    OUTPUT: [\r\n        { slotNo: 1, slotState: '0' },\r\n        { slotNo: 2, slotState: '0' },\r\n        { slotNo: 3, slotState: '0' },\r\n        { slotNo: 4, slotState: '0' },\r\n        { slotNo: 5, slotState: '0' },\r\n        { slotNo: 6, slotState: '0' },\r\n        { slotNo: 7, slotState: '0' },\r\n        { slotNo: 8, slotState: '0' },\r\n        { slotNo: 9, slotState: '0' },\r\n        { slotNo: 10, slotState: '0' },\r\n        { slotNo: 11, slotState: '0' },\r\n        { slotNo: 12, slotState: '0' }\r\n    ]\r\n};\r\n\r\nexport const SLIDE_CARD_100A = {\r\n    INPUT: [\r\n        { slotNo: 1, slotState: '0' },\r\n        { slotNo: 2, slotState: '0' },\r\n        { slotNo: 3, slotState: '0' },\r\n        { slotNo: 4, slotState: '0' },\r\n        { slotNo: 5, slotState: '0' },\r\n        { slotNo: 6, slotState: '0' },\r\n        { slotNo: 7, slotState: '0' },\r\n        { slotNo: 8, slotState: '0' },\r\n        { slotNo: 9, slotState: '0' },\r\n        { slotNo: 10, slotState: '0' },\r\n    ],\r\n    OUTPUT: [\r\n        { slotNo: 1, slotState: '0' },\r\n        { slotNo: 2, slotState: '0' },\r\n        { slotNo: 3, slotState: '0' },\r\n        { slotNo: 4, slotState: '0' },\r\n        { slotNo: 5, slotState: '0' },\r\n        { slotNo: 6, slotState: '0' },\r\n        { slotNo: 7, slotState: '0' },\r\n        { slotNo: 8, slotState: '0' },\r\n        { slotNo: 9, slotState: '0' },\r\n        { slotNo: 10, slotState: '0' },\r\n    ]\r\n};\r\n","export const enum MESSAGES {\r\n    LOGOUT = 'Would you like to log out?',\r\n\r\n    IDS_MSG_SUCCESS = 'Success',\r\n    // IDS_ERROR_CHECK_ID: 'The ID must be 5-20 letters or numbers starting with the alphabet.',\r\n    // IDS_ERROR_CHECK_PASSWORD: 'The password is a combination of 6-30 digits in English, numbers.',\r\n    IDS_ERROR_NOT_MATCHED_PASSWORD = 'Passwords do not match.',\r\n    IDS_ERROR_SIGINUP = 'Please check the input field.',\r\n    IDS_ERROR_SIGINUP_ALREADY_ID = 'ID already registered.',\r\n    IDS_ERROR_LOGIN_ERROR = 'Please check your ID and password.',\r\n    IDS_ERROR_LOGIN_ID = 'Please check your Login ID.',\r\n    IDS_ERROR_ALREADY_RUNNING = 'Process is already running.',\r\n    IDS_ERROR_STOP_PROCESS = 'Process is terminating.',\r\n    IDS_ERROR_INIT_ERROR = 'Please initialize.',\r\n    IDS_ERROR_CHECK_REQUIRED_FIELDS = 'Please check required fields',\r\n    IDS_ERROR_CHECK_SLOT_NO = 'Please check the slot number.',\r\n    IDS_ERROR_FAVORITE_MAX_REGIST = 'Up to 5 favorites can be registered.',\r\n    IDS_ERROR_FAVORITE_MAX_REGIST2 = 'Up to 12 favorites can be registered.',\r\n    IDS_ERROR_ENTER_YOUR_ORDER_DETAILS = 'Please enter your order details.',\r\n    IDS_ERROR_SELECT_A_TARGET_ITEM = 'Please select items',\r\n    IDS_ERROR_PLEASE_SELECT_AN_IMAGE = 'Please select an image.',\r\n    IDS_ERROR_ALREADY_ADDED = 'This item has already been added.',\r\n    IDS_ERROR_ADD_A_WORKLIST = 'Please add a worklist',\r\n    IDS_ERROR_NO_TEST_RESULTS = 'There are no test results.',\r\n    IDS_ERROR_FILE_CLISSIFICATION = 'File classification error',\r\n    IDS_ERROR_ENTER_CLASS_INFO = 'Please enter class information',\r\n    IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID = 'Please confirm your user ID.',\r\n\r\n    IDS_SIGNED_ITEMS_CANNOT_BE_MODIFIED = 'Signed items cannot be modified.',\r\n    IDS_RECOVER_GRIPPER_CONDITION = 'Would you like to recover the gripper condition?',\r\n    IDS_PLEASE_ENTER_END_DATE = 'Please enter the end date.',\r\n    IDS_PLEASE_ENTER_START_DATE = 'Please enter the start date.',\r\n    IDS_THE_MAXIMUM_INQUIRY_DATE_IS_31_DAYS = 'The maximum inquiry date is 31 days.',\r\n    IDS_START_DATE_IS_NOT_GREATER_THEN_END_DATE = 'Start date is not greater than end date.',\r\n    IDS_RESTART_SYSTEM = 'A new version has been downloaded. Please restart the application to apply the update.',\r\n    IDS_PLEASE_ENTER_YOUR_BARCODE_NUMBER = 'Please enter your barcode number',\r\n    IDS_BARCODE_REGISTRATION_SUCCESSFUL = 'Barcode registration successful',\r\n    IDS_THIS_IS_A_DUPLICATION_ABBREVIATION = 'This is a duplicate abbreviation.',\r\n    IDS_MSG_UPLOAD_LIS = 'Upload current results to LIS',\r\n    IDS_MSG_SUBMIT_SLIDE = 'Submit slide',\r\n    IDS_MSG_CONFIRM_SLIDE = 'Confirm slide',\r\n    IDS_PLEASE_SELECT_A_CLASS = 'Please select a class',\r\n    IDS_PLEASE_SELECT_A_BACKUP_DATE = 'Please select a backup date.',\r\n    IDS_PLEASE_SELECT_A_BACKUP_PATH = 'Please select a backup path.',\r\n    IDS_PLEASE_SELECT_A_BACKUP_FILE = 'Please select a backup file.',\r\n    IDS_NO_DATA_FOUND = 'No data found.',\r\n    IDS_MSG_DATA_BACKUP = 'Data from that period will be deleted. Would you like to proceed?',\r\n    IDS_MSG_DATA_RESTORE = 'Do you want to recover your data?',\r\n    IDS_MSG_SIZE_CHROMIA_LINKED_LIS = 'Size and Chromia categories are linked with LIS data.',\r\n    UPLOAD_PLEASE_LIS = 'To upload the LIS, please enter the content in the LIS File Path field under the LIS(CBC) Hot Key & File Path tab in the settings page and save it.',\r\n    UPLOAD_PLEASE_CBC = 'To load CBC, please enter the content in the CBC File Path field under the LIS(CBC) Hot Key & File Path tab in the settings page and save it.',\r\n\r\n    UPDATE_SUCCESSFULLY = 'Update Successfully',\r\n    TCP_DiSCONNECTED = 'The TCP connection was disconnected.',\r\n    alreadyInitialized = 'It has already been initialized.',\r\n\r\n    lockRow = 'Deletion is not allowed when locked.',\r\n    exit = 'Are you sure you want to quit the program?',\r\n\r\n    settingSaveSuccess = 'Saved successfully',\r\n    settingSaveFailure = 'Save failed',\r\n    settingUpdateSuccess = 'Updated successfully',\r\n    settingUpdateFailure = 'Update failed',\r\n    settingNotSaved = 'Setting not saved',\r\n\r\n    SAVE = 'Save',\r\n    LEAVE = 'Leave',\r\n    CANCEL = 'Cancel',\r\n    CLOSE = 'Close',\r\n    COPY = 'Copy',\r\n    MOVE = 'Move',\r\n    DELETE = 'Delete',\r\n    UPLOAD = 'Upload',\r\n    OK = 'Ok',\r\n    FULLSCREEN_SUGGEST = 'Please click the full screen button.',\r\n\r\n    TOAST_MSG_SUCCESS = 'success',\r\n    TOAST_MSG_ERROR = 'error',\r\n    TOAST_MSG_BAR_CODE_SUCCESS = 'Barcode Copied',\r\n\r\n    SETTING_INFO_DOWNLOAD_SAVE_PATH_EN = 'Destination path for download and Origin path for upload',\r\n    SETTING_INFO_DOWNLOAD_SAVE_PATH_KO = '다운로드 시 저장 경로 & 업로드 시 백업 파일 경로',\r\n    SETTING_INFO_UPLOAD_EN = '',\r\n    SETTING_INFO_UPLOAD_KO = 'Download Save Path에서 업로드할 폴더 선택 & 데이터 업로드 폴더 경로 선택',\r\n    SETTING_INFO_DOWNLOAD_EN = '',\r\n    SETTING_INFO_DOWNLOAD_KO = '다운로드 받을 날짜 선택 & copy: 다른 컴퓨터로 이동시킬때 사용(데이터 복사)',\r\n    SETTING_INFO_KEEP_PAGE_EN = 'Keep page when moving in Database detail page by up, down arrows',\r\n    SETTING_INFO_KEEP_PAGE_KO = '데이터베이스 상세 페이지에서 검체 이동 시 보고 있는 탭 유지',\r\n    SETTING_INFO_ALARM_TIME_EN = '',\r\n    SETTING_INFO_ALARM_TIME_KO = '알람 켜기/끄기 & 타이머(초) 선택',\r\n    SETTING_INFO_NS_NB_INTEGRATION_EN = '',\r\n    SETTING_INFO_NS_NB_INTEGRATION_KO = 'ON일 경우 Neutrophil-Segment, Neutrophil-Band 를 Neutrophil로 합쳐서 검사',\r\n    SETTING_INFO_IA_ROOT_PATH_EN = 'Data Save Path',\r\n    SETTING_INFO_IA_ROOT_PATH_KO = '검체 데이터 저장 경로 및 다운로드 진행 시 시작 경로',\r\n    SETTING_INFO_COMMON = '',\r\n    SETTING_INFO_BF_ANALYSIS_VALUES = '',\r\n    SETTING_INFO_PBS_ANALYSIS_VALUES = '',\r\n    SETTING_INFO_WBC_DIFF_ANALYSIS_VALUES = '',\r\n    SETTING_INFO_ANALYSIS_TYPE = '',\r\n}\r\n\r\nexport const MSG_GENERAL = {\r\n    SAVE: 'Save',\r\n    LEAVE: 'Leave',\r\n    CANCEL: 'Cancel',\r\n    CLOSE: 'Close',\r\n    COPY: 'Copy',\r\n    MOVE: 'Move',\r\n    DELETE: 'Delete',\r\n    UPLOAD: 'Upload',\r\n    OK: 'OK',\r\n    SUCCESS: 'Success',\r\n} as const;\r\n\r\nexport const MSG = {\r\n    TOOLTIP: {\r\n        BARCODE_COPY: 'Copy barcodeNo',\r\n        MEMO: 'Memo On/Off',\r\n        CONFIRM: 'Confirm',\r\n        CLASS_MOVE: 'Class Drag movement Lock/Unlock',\r\n        LIS_UPLOAD: 'Upload LIS',\r\n        COUNT_PERCENT: 'Count   Percent',\r\n        IA_ROOT_PATH: 'Analysis Data Save Path',\r\n        NS_NB_INTEGRATION: 'Integrate (Neutrophil-Segment & Neutrophil-Band) to Neutrophil',\r\n        ALARM: 'Alarm & Alarm Timer On/Off',\r\n        KEEP_PAGE: 'Maintain page state when navigating',\r\n        DOWNLOAD_SAVE_PATH: 'Download Save Path & Upload Data Path',\r\n        DOWNLOAD: '1. Select the date for download\\n2. Click \\'Copy\\' to back up the data or \\'Move\\' to change the storage location.',\r\n        UPLOAD: 'Select Upload Destination Path',\r\n        OPEN_DOWNLOAD_SAVE_PATH: 'Open Download Save Path',\r\n        LIS_UPLOAD_CHECK: 'Show LIS Upload Button after viewing all cell',\r\n\r\n    },\r\n    TOAST: {\r\n        SUCCESS: 'success',\r\n        ERROR: 'error',\r\n        BARCODE_COPIED: 'Barcode Copied',\r\n    },\r\n    ERROR: {\r\n        SETTING_SAVE: 'Save failed',\r\n        SETTING_UPDATE: 'Update failed',\r\n        SETTING_NOT_SAVE: 'Setting not saved',\r\n    },\r\n    SUCCESS: {\r\n        SETTING_SAVE: 'Saved successfully',\r\n        SETTING_UPDATE: 'Updated successfully',\r\n    },\r\n    SYSTEM: {\r\n        PROCESS_ALREADY_RUNNING: 'Process is already running.',\r\n        STOP_PROCESS: 'Process is terminating.',\r\n    }\r\n}","import moment from 'moment';\r\nimport 'moment-timezone';\r\n\r\nexport function getDateTimeStr(): string {\r\n    const now = moment();\r\n    const formattedTime = now.format('YYYYMMDDHHmm');\r\n    return formattedTime;\r\n}\r\n\r\nexport const getDateTimeYYYYMMDD = (dateString: Date | string) => {\r\n    if (!dateString) return null;\r\n    const momentObj = moment(dateString, 'YYYY-MM-DD');\r\n    return momentObj.format('YYYY-MM-DD');\r\n}\r\n\r\nexport const getDateTimeYYYYMMDDHHmmss = (dateString: Date | string) => {\r\n    if (!dateString) return null;\r\n    const momentObj = moment(dateString, 'YYYY-MM-DD HH:mm:ss');\r\n    return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\nexport function getDateTimeStrForUI(): string {\r\n    const now = moment();\r\n    const formattedTime = now.format('YYYYMMDDHHmmssSSSSS');\r\n    return formattedTime;\r\n}\r\n\r\nexport const formatDateString = (dateString: any) => {\r\n    if(!dateString){\r\n       return null;\r\n    }\r\n    const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n    return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\nexport const getCountToTime = (timeCount: number): string => {\r\n    const hour = Math.floor(timeCount / 3600);\r\n    const minutes = Math.floor((timeCount % 3600) / 60);\r\n    const seconds = Math.floor((timeCount % 3600) % 60);\r\n\r\n    return `${pad(hour, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`;\r\n}\r\n\r\nconst pad = (value: number, length: number): string => {\r\n    return String(value).padStart(length, '0');\r\n}\r\n\r\n\r\nexport const parseDateString = (dateString: string): Date => {\r\n    const year = +dateString.substring(0, 4);\r\n    const month = +dateString.substring(4, 6) - 1;\r\n    const day = +dateString.substring(6, 8);\r\n    const hours = +dateString.substring(8, 10);\r\n    const minutes = +dateString.substring(10, 12);\r\n    const seconds = +dateString.substring(12, 14);\r\n\r\n    return new Date(year, month, day, hours, minutes, seconds);\r\n}\r\n\r\nexport const formatDate = (date: any) => {\r\n    const year = date.getFullYear();\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n};","import {getDateTimeStr, getDateTimeStrForUI} from \"@/common/lib/utils/dateUtils\";\r\n\r\nexport const tcpReq:any = () => {\r\n    const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n    const saveReqDttm = getDateTimeStrForUI();\r\n\r\n    return {\r\n        embedStatus: {\r\n            start: {\r\n                jobCmd: \"START\",\r\n                reqUserId: '',\r\n                testType: \"\",\r\n                wbcCount: \"\",\r\n                reqDttm: reqDttm\r\n            },\r\n            startAction: {\r\n                jobCmd: 'START',\r\n                reqUserId: '',\r\n                testType: '01',\r\n                wbcCount: '',\r\n                stitchCount: '',\r\n                runningMode: '00',\r\n                positionMargin:  '0',\r\n                wbcPositionMargin: '0',\r\n                pltPositionMargin: '0',\r\n                reqDttm: reqDttm,\r\n            },\r\n            init: {\r\n                jobCmd: 'INIT',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            restart: {\r\n                jobCmd: 'RESTART',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                bfSelectFiles: []\r\n            },\r\n            stop: {\r\n                jobCmd: 'STOP',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                isEmergency: 'N',\r\n                isUserStop: 'Y'\r\n            },\r\n            end: {\r\n                jobCmd: \"END\",\r\n                reqUserId: '',\r\n                testType: \"\",\r\n                wbcCount: \"\",\r\n                reqDttm: reqDttm\r\n            },\r\n            runningInfo: {\r\n                jobCmd: \"RUNNING_INFO\",\r\n                reqUserId: '',\r\n                reqDttm: reqDttm\r\n            },\r\n            sysInfo: {\r\n                jobCmd: 'SYSINFO',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            pause: {\r\n                jobCmd: 'PAUSE',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            runIngComp: {\r\n                jobCmd: 'RUNNING_COMP',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            recovery: {\r\n                jobCmd: 'RECOVERY',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            settings: {\r\n                jobCmd: 'SETTINGS',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                saveReqDttm: saveReqDttm,\r\n                pbiaRootDir: 'D:/IA_Proc',\r\n                oilCount: '',\r\n                isOilReset: '',\r\n                deviceType: '01',\r\n                // uiVersion: 'web',\r\n                isNsNbIntegration: '',\r\n            },\r\n            oilPrime: {\r\n                jobCmd: 'OIL_PRIME',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            gripperOpen: {\r\n                jobCmd: 'GRIPPER_OPEN',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            cameraReset: {\r\n                jobCmd: 'CAMERA_RESET',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            exit: {\r\n                jobCmd: 'clientExit',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            searchCardCount: {\r\n                jobCmd: 'SEARCH_CARD_COUNT',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                testType: '',\r\n            },\r\n            errorClear: {\r\n                jobCmd: 'ERROR_CLEAR',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            }\r\n        },\r\n    };\r\n};\r\n","// useHttpClient.ts\r\nimport axios, {AxiosRequestConfig} from 'axios';\r\n\r\nimport {Endpoint, GenericObject} from '../type/generalTypes';\r\n\r\nexport interface ApiResponse<T> {\r\n    code: number;\r\n    data?: T;\r\n    success: any;\r\n}\r\n\r\ninterface HttpResponse<T> {\r\n    data?: ApiResponse<T>;\r\n    success: any;\r\n}\r\n\r\n\r\nexport function useHttpClient() {\r\n    let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    // type 용도 -> ? 쿼리 스트링으로 보낼지 여부\r\n    const httpGet = async <T>(url: Endpoint, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpGetAct(url.endpoint, parameters, type);\r\n    };\r\n\r\n    const httpGetAct = async <T>(url: string, parameters?: string, type?: boolean, callImg?: string): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Cache-Control': 'public, max-age=3600' // 응답을 1시간 동안 캐싱하도록 지정\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = parameters ? (type ? '?' : '/') : '';\r\n        parameters = parameters || '';\r\n        if (callImg === 'viewer') {\r\n            apiBaseUrl = window.MAIN_API_IP;\r\n        }\r\n        try {\r\n            const response: HttpResponse<T> = await axios.get(`${apiBaseUrl}/${url}${slush}${parameters}`, options);\r\n            return Promise.resolve(response.data || {code: 500, data: undefined, success: false});\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n\r\n    const httpPost = async <T>(url: Endpoint, payload: GenericObject, contentType?: string, formData = false, callImg?: string): Promise<ApiResponse<T>> => {\r\n        return httpPostAct(url.endpoint, payload, contentType, formData, callImg);\r\n    };\r\n\r\n    const httpPostAct = async <T>(url: string, payload: GenericObject, contentType?: string, formData = false, callImg?: string): Promise<ApiResponse<T>> => {\r\n\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n            },\r\n        };\r\n        if (contentType === 'blob') {\r\n            options.responseType = 'blob';\r\n        }\r\n        if (contentType === 'text/plain') {\r\n            options.headers = {\r\n                'Content-Type': 'text/plain',\r\n            }\r\n        }\r\n        if (formData) {\r\n            options.headers = {\r\n                'Content-Type': 'multipart/form-data',\r\n            }\r\n        }\r\n\r\n        axios.defaults.withCredentials = true;\r\n        if (callImg === 'viewer') {\r\n            apiBaseUrl = window.MAIN_API_IP;\r\n        }\r\n        try {\r\n            const response: HttpResponse<T> = await axios.post(`${apiBaseUrl}/${url}`, payload, options);\r\n            return Promise.resolve(response.data || {code: 500, data: undefined, success: false});\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n    const httpPut = async <T>(url: Endpoint, payload: GenericObject, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpPutAct(url.endpoint, payload, parameters, type);\r\n    };\r\n\r\n    const httpPutAct = async <T>(url: string, payload: GenericObject, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Cache-Control': 'no-cache', // 캐시 무효화\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = parameters ? (type ? '?' : '/') : '';\r\n        parameters = parameters || '';\r\n\r\n        try {\r\n            const response: HttpResponse<T> = await axios.put(`${apiBaseUrl}/${url}${slush}${parameters}`, payload, options);\r\n            return Promise.resolve(response.data || {code: 500, data: undefined, success: false});\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n    const httpDelete = async <T>(url: Endpoint, payload: GenericObject, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpDeleteAct(url.endpoint, payload, type);\r\n    };\r\n\r\n    const httpDeleteAct = async <T>(url: string, payload: GenericObject, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n                'Cache-Control': 'no-cache', // 캐시 무효화\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = type ? '?' : '/';\r\n        try {\r\n            const response: HttpResponse<T> = await axios.delete(`${apiBaseUrl}/${url}${slush}`, {\r\n                ...options,\r\n                data: payload\r\n            });\r\n            return Promise.resolve(response.data || {code: 500, data: undefined, success: false});\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n\r\n    return {\r\n        httpGet,\r\n        httpGetAct,\r\n        httpPost,\r\n        httpPostAct,\r\n        httpPut,\r\n        httpPutAct,\r\n        httpDelete,\r\n        httpDeleteAct,\r\n    };\r\n\r\n}\r\n","import {remainingCount} from \"@/common/api/service/setting/settingApi\";\r\n\r\nexport const apiConstants = {\r\n    lisSend: {\r\n        ywmcCbcCheck: {\r\n            endpoint: 'sybase/cbc-results',\r\n            requiresToken: false,\r\n        },\r\n        ywmcLisPostSend: {\r\n            endpoint: 'sybase/save-uimd-result',\r\n            requiresToken: false,\r\n        },\r\n        saveComment:{\r\n            endpoint: 'sybase/saveComment',\r\n            requiresToken: false,\r\n        },\r\n        cbcImgGet: {\r\n            endpoint: 'sybase/cbcImgGet',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    auth: {\r\n        refresh: {\r\n            endpoint: '/auth/refresh',\r\n            requiresToken: false,\r\n        },\r\n    },\r\n    processInfo: {\r\n        list: {\r\n            endpoint: 'proinfo/getAllProcessInfo',\r\n            requiresToken: false,\r\n        },\r\n    },\r\n    rbcclassification: {\r\n        list: {\r\n            endpoint: 'rbc/getAllRbc',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    wbcclassification: {\r\n        list: {\r\n            endpoint: 'wbc/getAllWbc',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    user: {\r\n        register: {\r\n            endpoint: 'user/register',\r\n            requiresToken: false,\r\n        },\r\n        login: {\r\n            endpoint: 'user/login',\r\n            requiresToken: false,\r\n        },\r\n        logout: {\r\n            endpoint: 'user/logout',\r\n            requiresToken: false,\r\n        },\r\n        userCheck: {\r\n            endpoint: 'user',\r\n            requiresToken: false,\r\n        },\r\n        // userIp:{\r\n        //     endpoint: 'ip',\r\n        //     requiresToken: false,\r\n        // },\r\n        getUsers: {\r\n            endpoint: 'user/getUsers',\r\n            requiresToken: false,\r\n        },\r\n        userDataPut: {\r\n            endpoint: 'user/update',\r\n            requiresToken: false,\r\n        },\r\n        deleteUser: {\r\n            endpoint: 'user/delete',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    settings: {\r\n        cellImgAnalyzedPost: {\r\n            cellImgAdd: {\r\n                endpoint: 'cellImgAnalyzed/cellImgAdd',\r\n                requiresToken: false,\r\n            },\r\n            cellImgGet: {\r\n                endpoint: 'cellImgAnalyzed',\r\n                requiresToken: false,\r\n            },\r\n            cellImgPut: {\r\n                endpoint: 'cellImgAnalyzed/update',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        rbcDegree: {\r\n            rbcDegreeAdd: {\r\n                endpoint: 'rbcDegree/rbcDegreeAdd',\r\n                requiresToken: false,\r\n            },\r\n            rbcDegree: {\r\n                endpoint: 'rbcDegree',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        wbcCustomClass: {\r\n            create: {\r\n                endpoint: 'wbcCustomClass/wbcCustomClassCreate',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'wbcCustomClass/wbcCustomClassUpdate',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'wbcCustomClass/wbcCustomClassGet',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        wbcHotKeys: {\r\n            create: {\r\n                endpoint: 'wbcHotKeys/wbcHotKeysCreate',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'wbcHotKeys/wbcHotKeysUpdate',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'wbcHotKeys/wbcHotKeysGet',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        bfHotKeys: {\r\n            create: {\r\n                endpoint: 'bfHotKeys/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'bfHotKeys/update',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'bfHotKeys/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        normalRange: {\r\n            create: {\r\n                endpoint: 'normalRange/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'normalRange/update',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'normalRange/normalRangeGet',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        imagePrint: {\r\n            create: {\r\n                endpoint: 'imagePrint/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'imagePrint/update',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'imagePrint/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        lisCode: {\r\n            create: {\r\n                endpoint: 'lisCode/lisCodeCreate',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'lisCode/lisCodeUpdate',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'lisCode/lisCodeGet',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        lisCodeRbc: {\r\n            create: {\r\n                endpoint: 'lisCodeRbc/lisCodeRbcCreate',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'lisCodeRbc/lisCodeRbcUpdate',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'lisCodeRbc/lisCodeRbcGet',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        cbcCode: {\r\n            create: {\r\n                endpoint: 'cbcCode/cbcCodeCreate',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'cbcCode/cbcCodeUpdate',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'cbcCode/cbcCodeGet',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        filePathSet: {\r\n            create: {\r\n                endpoint: 'filePathSet/filePathSetCreate',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'filePathSet/filePathSetUpdate',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'filePathSet/filePathSetGet',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        runCount: {\r\n            create: {\r\n                endpoint: 'runCount/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'runCount/update',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'runCount/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        minCount: {\r\n            create: {\r\n                endpoint: 'minCount/minCountCreate',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'minCount/minCountUpdate',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'minCount/minCountGet',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        runningInfo: {\r\n            create: {\r\n                endpoint: 'runningInfo/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'runningInfo/update',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'runningInfo/getAll',\r\n                requiresToken: false,\r\n            },\r\n            delete: {\r\n                endpoint: 'runningInfo/delete',\r\n                requiresToken: false,\r\n            },\r\n            detail: {\r\n                endpoint: 'runningInfo/detail',\r\n                requiresToken: false,\r\n            },\r\n            classInfoDetail: {\r\n                endpoint: 'runningInfo/classInfoDetail',\r\n                requiresToken: false,\r\n            },\r\n            classInfoDetailSelectQuery: {\r\n                endpoint: 'runningInfo/classInfoDetailSelectQuery',\r\n                requiresToken: false,\r\n            },\r\n            classInfoMenuDetailSelectQuery: {\r\n                endpoint: 'runningInfo/classInfoMenuDetailSelectQuery',\r\n                requiresToken: false,\r\n            },\r\n            pageUpDown: {\r\n                endpoint: 'runningInfo/pageUpDown',\r\n                requiresToken: false,\r\n            },\r\n            updatePcIpState: {\r\n                endpoint: 'runningInfo/updatePcIpState',\r\n                requiresToken: false,\r\n            },\r\n            clearPcIpState: {\r\n                endpoint: 'runningInfo/clearPcIpState',\r\n                requiresToken: false,\r\n            },\r\n            removePageAllData: {\r\n                endpoint: 'runningInfo/removePageAllData',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        folder: {\r\n            get: {\r\n                endpoint: 'folder/drives',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        folders: {\r\n            get: {\r\n                endpoint: 'folders',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        classOrder: {\r\n            create: {\r\n                endpoint: 'classOrders/classOrdersCreate',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'classOrders/classOrdersUpdate',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'classOrders/classOrdersGet',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        remainingCount: {\r\n            get: {\r\n                endpoint: 'remaining-count/execute',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        qualityCheck: {\r\n            get: {\r\n                endpoint: 'qualityCheck/execute',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        crc: {\r\n            crcSettingCreate: {\r\n                endpoint: 'crc-setting',\r\n                requiresToken: false,\r\n            },\r\n            crcGet: {\r\n                endpoint: 'crc-setting/crc-get',\r\n                requiresToken: false,\r\n            },\r\n            crcPut: {\r\n                endpoint: 'crc-setting/crc-put',\r\n                requiresToken: false,\r\n            },\r\n            crcDel: {\r\n                endpoint: 'crc-setting/crcDel',\r\n                requiresToken: false,\r\n            }\r\n        }\r\n    },\r\n    images: {\r\n        move: {\r\n            endpoint: 'images/move',\r\n            requiresToken: false,\r\n        },\r\n        moveClassImage: {\r\n            endpoint: 'images/moveClassImage',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    jsonReader: {\r\n        get: {\r\n            endpoint: 'jsonReader/send',\r\n            requiresToken: false,\r\n        },\r\n        jsonCreate: {\r\n            endpoint: 'jsonReader/upload',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    dziReader: {\r\n        get: {\r\n            endpoint: 'dzi/send',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    pdf: {\r\n        post: {\r\n            endpoint: 'pdf/generate',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    filesystem: {\r\n        post: {\r\n            endpoint: 'filesystem/create-folder',\r\n            requiresToken: false,\r\n        },\r\n        copy: {\r\n            endpoint: 'filesystem/copy',\r\n            requiresToken: false,\r\n        },\r\n        cleanup: {\r\n            endpoint: 'filesystem/cleanup',\r\n            requiresToken: false,\r\n        },\r\n        existsFile: {\r\n            endpoint: 'filesystem/existsFile',\r\n            requiresToken: false,\r\n        },\r\n        fileSearch:{\r\n            endpoint:'filesystem/fileSearch',\r\n            requiresToken: false,\r\n        },\r\n        delete: {\r\n            endpoint: 'filesystem/delete-folder',\r\n            requiresToken: false,\r\n        },\r\n        readGetJpg: {\r\n            endpoint: 'file/check-file-exists',\r\n            requiresToken: false,\r\n        },\r\n        createDirectory: {\r\n            endpoint: 'file/create-directory',\r\n            requiresToken: false,\r\n        },\r\n        fileCreate: {\r\n            endpoint: 'file/createFile',\r\n            requiresToken: false,\r\n        },\r\n        cbcSaveData: {\r\n            endpoint: 'file/cbcSaveData',\r\n            requiresToken: false,\r\n        },\r\n        errLogsRead:{\r\n            endpoint: 'filesystem/errLogsRead',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    fileTxtRead: {\r\n        get: {\r\n            endpoint: 'file/read',\r\n            requiresToken: false,\r\n        },\r\n        readFileEUCKR: {\r\n            endpoint: 'file/readFileEUCKR',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7Read: {\r\n        post: {\r\n            endpoint: 'hl7/parse',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7Message: {\r\n        post: {\r\n            endpoint: 'hl7/message',\r\n            requiresToken: false,\r\n        },\r\n        noFlagHl7: {\r\n            endpoint: 'hl7/noFlagMessage',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7MessageCustom: {\r\n        post: {\r\n            endpoint: 'hl7/customMessage',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    Hl7Create: {\r\n        post: {\r\n            endpoint: 'hl7/hl7Create',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    device: {\r\n        getDeviceInfo: {\r\n            create: {\r\n                endpoint: 'device/create',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'device/get',\r\n                requiresToken: false,\r\n            },\r\n            ip: {\r\n                endpoint: 'ip',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        updateDeviceInfo: {\r\n            endpoint: 'device/put',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    download: {\r\n        backUpDate: {\r\n            endpoint: 'download/post',\r\n            requiresToken: false,\r\n        },\r\n        checkIsPossibleToBackup: {\r\n            endpoint: 'download/check',\r\n            requiresToken: false,\r\n        },\r\n        openDrive: {\r\n            endpoint: 'download/openDrive',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    upload: {\r\n        restoreData: {\r\n            endpoint: 'upload/execute',\r\n            requiresToken: false,\r\n        },\r\n        checkDuplicated: {\r\n            endpoint: 'upload/checkDuplicatedData',\r\n            requiresToken: false,\r\n        },\r\n        checkPossibleUploadFile: {\r\n            endpoint: 'upload/checkPossibleUploadFile',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    excel: {\r\n        execute: {\r\n            endpoint: 'excel/execute',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    browser: {\r\n        exit: {\r\n            endpoint: 'browser/close-edge',\r\n            requiresToken: false,\r\n        },\r\n        nodeExit: {\r\n            endpoint: 'browser/close-node',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    img: {\r\n        checkImageExists: {\r\n            endpoint: 'images/checkImageExists',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    report: {\r\n        crcRemarkCreate: {\r\n            endpoint: 'crc-remark-setting/crcRemarkCreate',\r\n            requiresToken: false,\r\n        },\r\n        crcRemarkFindAll: {\r\n            endpoint: 'crc-remark-setting/crcRemarkFindAll',\r\n            requiresToken: false,\r\n        },\r\n        crcRemarkRemove: {\r\n            endpoint: 'crc-remark-setting/crcRemarkRemove',\r\n            requiresToken: false,\r\n        },\r\n        crcRemarkUpdate: {\r\n            endpoint: 'crc-remark-setting/crcRemarkUpdate',\r\n            requiresToken: false,\r\n        },\r\n        crcSearch: {\r\n            endpoint: 'crc-remark-setting/crcRemark',\r\n            requiresToken: false,\r\n        },\r\n        crcDataCreate: {\r\n            endpoint: 'crc-data-setting/crcDataCreate',\r\n            requiresToken: false,\r\n        },\r\n        crcDataFindAll: {\r\n            endpoint: 'crc-data-setting/crcDataDFindAll',\r\n            requiresToken: false,\r\n        },\r\n        crcDataRemove: {\r\n            endpoint: 'crc-data-setting/crcDataRemove',\r\n            requiresToken: false,\r\n        },\r\n        crcDataUpdate: {\r\n            endpoint: 'crc-data-setting/crcDataUpdate',\r\n            requiresToken: false,\r\n        },\r\n        crcOptionGet: {\r\n            endpoint: 'crc-option/crcOptionGet',\r\n            requiresToken: false,\r\n        },\r\n        crcOptionCreate: {\r\n            endpoint: 'crc-option/crcOptionCreate',\r\n            requiresToken: false,\r\n        },\r\n        crcOptionUpdate: {\r\n            endpoint: 'crc-option/crcOptionUpdate',\r\n            requiresToken: false,\r\n        },\r\n        crcRecoCreate: {\r\n            endpoint: 'crc-recommendation-setting/crcRecommendationCreate',\r\n            requiresToken: false,\r\n        },\r\n        crcRecoFindAll: {\r\n            endpoint: 'crc-recommendation-setting/crcRecommendationFindAll',\r\n            requiresToken: false,\r\n        },\r\n        crcRecoRemove: {\r\n            endpoint: 'crc-recommendation-setting/crcRecommendationRemove',\r\n            requiresToken: false,\r\n        },\r\n        crcRecoUpdate: {\r\n            endpoint: 'crc-recommendation-setting/crcRecommendationUpdate',\r\n            requiresToken: false,\r\n        },\r\n        crcRecoSearch: {\r\n            endpoint: 'crc-recommendation-setting/crcRSearch',\r\n            requiresToken: false,\r\n        },\r\n        crcCommentCreate: {\r\n            endpoint: 'crc-comment-setting/crcCommentCreate',\r\n            requiresToken: false,\r\n        },\r\n        crcCommentFindAll: {\r\n            endpoint: 'crc-comment-setting/crcCommentFindAll',\r\n            requiresToken: false,\r\n        },\r\n        crcCommentRemove: {\r\n            endpoint: 'crc-comment-setting/crcCommentRemove',\r\n            requiresToken: false,\r\n        },\r\n        crcCommentUpdate: {\r\n            endpoint: 'crc-comment-setting/crcCommentUpdate',\r\n            requiresToken: false,\r\n        },\r\n        crcCommentSearch: {\r\n            endpoint: 'crc-comment-setting/crcCommentSearch',\r\n            requiresToken: false,\r\n        },\r\n        saveDataCreate: {\r\n            endpoint: 'crc-save-data/saveDataCreate',\r\n            requiresToken: false,\r\n        },\r\n        saveDataSlotIdGet: {\r\n            endpoint: 'crc-save-data/saveDataSlotIdGet',\r\n            requiresToken: false,\r\n        },\r\n        saveDataPutData: {\r\n            endpoint: 'crc-save-data/saveDataPutData',\r\n            requiresToken: false,\r\n        },\r\n        saveDataDelete: {\r\n            endpoint: 'crc-save-data/saveDataDelete',\r\n            requiresToken: false,\r\n        }\r\n\r\n    }\r\n};","import {useHttpClient, ApiResponse} from '@/common/api/httpClient';\r\nimport {apiConstants} from '@/common/api/apiConstants';\r\nimport {\r\n    CellImgAnalyzedRequest,\r\n    CellImgAnalyzedResponse,\r\n} from '@/common/api/service/setting/dto/cellImgAnalyzedDto'\r\nimport {RbcDegreeDto, RbcDegreeRes} from \"@/common/api/service/setting/dto/rbcDegree\";\r\nimport {CreateWbcCustomClassDto, UpdateWbcCustomClassDto} from \"@/common/api/service/setting/dto/wbcCustomClassDto\";\r\nimport {CreateWbcHotKeysDto, UpdateWbcHotKeysDto} from \"@/common/api/service/setting/dto/wbcHotKeysDto\";\r\nimport {CreateBfHotKeysDto, UpdateBfHotKeysDto} from \"@/common/api/service/setting/dto/bfHotKeysDto\";\r\nimport {CreateNormalRange, NormalRangeUpdateDto} from \"@/common/api/service/setting/dto/normalRangeDto\";\r\nimport {\r\n    CreateImagePrintDto, ImagePrintItem,\r\n    UpdateImagePrintsDto\r\n} from \"@/common/api/service/setting/dto/imagePrintDto\";\r\nimport {\r\n    CreateCbcCodeRbcDto,\r\n    CreateLisCodeDto,\r\n    CreateLisCodeRbcDto, cbcCodeItem,\r\n    LisCodeRbcItem, LisCodeWbcItem, UpdateCbcCodeRbcDto,\r\n    UpdateLisCodeDto, UpdateLisCodeRbcDto\r\n} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {CreateFilePathDto, FilePathItem, UpdateFilePathsDto} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {CreateRunCountDto, runCountItem, UpdateRunCountDto} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport {CreateMinCountDto, minCountItem, UpdateMinCountDto} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createCellImgApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.cellImgAnalyzedPost.cellImgAdd, request);\r\n};\r\n\r\nexport const getCellImgApi = async (): Promise<ApiResponse<CellImgAnalyzedResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.cellImgAnalyzedPost.cellImgGet);\r\n};\r\n\r\nexport const putCellImgApi = async (request: any, id: string): Promise<ApiResponse<CellImgAnalyzedResponse | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.cellImgAnalyzedPost.cellImgPut, request, id);\r\n};\r\n\r\nexport const createRbcDegreeApi = async (request: RbcDegreeDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.rbcDegree.rbcDegreeAdd, request);\r\n};\r\n\r\nexport const putRbcDegreeApi = async (request: CellImgAnalyzedRequest): Promise<ApiResponse<RbcDegreeRes | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.rbcDegree.rbcDegree, request);\r\n};\r\n\r\nexport const getRbcDegreeApi = async (): Promise<ApiResponse<RbcDegreeRes | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.rbcDegree.rbcDegree);\r\n};\r\n\r\n\r\nexport const createWbcCustomClassApi = async (request: CreateWbcCustomClassDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.wbcCustomClass.create, request);\r\n};\r\n\r\nexport const updateWbcCustomClassApi = async (request: UpdateWbcCustomClassDto): Promise<ApiResponse<UpdateWbcCustomClassDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.wbcCustomClass.update, request);\r\n};\r\n\r\nexport const getWbcCustomClassApi = async (): Promise<ApiResponse<CreateWbcCustomClassDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.wbcCustomClass.get);\r\n};\r\n\r\n\r\nexport const createWbcHotKeysApi = async (request: CreateWbcHotKeysDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.wbcHotKeys.create, request);\r\n};\r\n\r\nexport const updateWbcHotKeysApi = async (request: UpdateWbcHotKeysDto): Promise<ApiResponse<UpdateWbcHotKeysDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.wbcHotKeys.update, request);\r\n};\r\n\r\nexport const getWbcHotKeysApi = async (): Promise<ApiResponse<CreateWbcHotKeysDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.wbcHotKeys.get);\r\n};\r\n\r\nexport const createBfHotKeysApi = async (request: CreateBfHotKeysDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.bfHotKeys.create, request);\r\n};\r\n\r\nexport const updateBfHotKeysApi = async (request: UpdateBfHotKeysDto): Promise<ApiResponse<UpdateBfHotKeysDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.bfHotKeys.update, request);\r\n};\r\n\r\nexport const getBfHotKeysApi = async (): Promise<ApiResponse<CreateBfHotKeysDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.bfHotKeys.get);\r\n};\r\n\r\nexport const createNormalRangeApi = async (request: CreateNormalRange): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.normalRange.create, request);\r\n};\r\n\r\nexport const updateNormalRangeApi = async (request: NormalRangeUpdateDto): Promise<ApiResponse<NormalRangeUpdateDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.normalRange.update, request);\r\n};\r\n\r\nexport const getNormalRangeApi = async (): Promise<ApiResponse<CreateNormalRange | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.normalRange.get);\r\n};\r\n\r\nexport const createImagePrintApi = async (request: CreateImagePrintDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.imagePrint.create, request);\r\n};\r\n\r\nexport const updateImagePrintApi = async (request: UpdateImagePrintsDto): Promise<ApiResponse<UpdateImagePrintsDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.imagePrint.update, request);\r\n};\r\n\r\nexport const getImagePrintApi = async (): Promise<ApiResponse<ImagePrintItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.imagePrint.get);\r\n};\r\n\r\n// lisCbc code wbc\r\nexport const createLisCodeWbcApi = async (request: CreateLisCodeDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.lisCode.create, request);\r\n};\r\n\r\nexport const updateLisCodeWbcApi = async (request: UpdateLisCodeDto): Promise<ApiResponse<UpdateLisCodeDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.lisCode.update, request);\r\n};\r\n\r\nexport const getLisCodeWbcApi = async (): Promise<ApiResponse<LisCodeWbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCode.get);\r\n};\r\n\r\n//lise code rbc\r\nexport const createLisCodeRbcApi = async (request: CreateLisCodeRbcDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.lisCodeRbc.create, request);\r\n};\r\n\r\nexport const updateLisCodeRbcApi = async (request: UpdateLisCodeRbcDto): Promise<ApiResponse<UpdateLisCodeRbcDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.lisCodeRbc.update, request);\r\n};\r\n\r\nexport const getLisCodeRbcApi = async (): Promise<ApiResponse<LisCodeRbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCodeRbc.get);\r\n};\r\n\r\n// cbc code\r\nexport const createCbcCodeRbcApi = async (request: CreateCbcCodeRbcDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.cbcCode.create, request);\r\n};\r\n\r\nexport const updateCbcCodeRbcApi = async (request: UpdateCbcCodeRbcDto): Promise<ApiResponse<UpdateCbcCodeRbcDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.cbcCode.update, request);\r\n};\r\n\r\nexport const getCbcCodeRbcApi = async (): Promise<ApiResponse<cbcCodeItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.cbcCode.get);\r\n};\r\n// file path set\r\nexport const createFilePathSetApi = async (request: CreateFilePathDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.filePathSet.create, request);\r\n};\r\n\r\nexport const updateFilePathSetApi = async (request: UpdateFilePathsDto): Promise<ApiResponse<UpdateFilePathsDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.filePathSet.update, request);\r\n};\r\n\r\nexport const getFilePathSetApi = async (): Promise<ApiResponse<FilePathItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.filePathSet.get);\r\n};\r\n\r\n// runInfoWbcCount\r\nexport const createRunInfoWbcApi = async (request: CreateRunCountDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.runCount.create, request);\r\n};\r\n\r\nexport const updateRunInfoApi = async (request: UpdateRunCountDto): Promise<ApiResponse<UpdateRunCountDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.runCount.update, request);\r\n};\r\n\r\nexport const getRunInfoApi = async (): Promise<ApiResponse<runCountItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runCount.get);\r\n};\r\n// minCount\r\nexport const createMinCountApi = async (request: CreateMinCountDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.minCount.create, request);\r\n};\r\n\r\nexport const updateMinCountApi = async (request: UpdateMinCountDto): Promise<ApiResponse<UpdateMinCountDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.minCount.update, request);\r\n};\r\n\r\nexport const getMinCountApi = async (): Promise<ApiResponse<minCountItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.minCount.get);\r\n};\r\n\r\nexport const getLisCodeApi = async (): Promise<ApiResponse<LisCodeWbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCode.get);\r\n};\r\n\r\n// --- 드라이브\r\nexport const getDrivesApi = async (): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.folder.get);\r\n};\r\n\r\n//-- 클래스 정렬\r\nexport const createOrderClassApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.classOrder.create, request);\r\n};\r\n\r\nexport const getOrderClassApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.classOrder.get);\r\n};\r\n\r\nexport const putOrderClassApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPut(apiConstants.settings.classOrder.update, request);\r\n};\r\n\r\n// remaining Count\r\nexport const remainingCount = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.remainingCount.get);\r\n};\r\n\r\nexport const qualityCheck = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.qualityCheck.get);\r\n};\r\n\r\nexport const createCrcApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.crc.crcSettingCreate, request);\r\n};\r\n\r\nexport const updateCrcApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.settings.crc.crcPut, request);\r\n};\r\n\r\nexport const crcGet = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.crc.crcGet);\r\n};\r\n\r\nexport const deleteCrcApi = async (req: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.settings.crc.crcDel, req, true);\r\n};\r\n\r\nexport const createCrcRemarkApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.report.crcRemarkCreate, request);\r\n};\r\nexport const crcRemarkGet = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.report.crcRemarkFindAll);\r\n};\r\n\r\nexport const crcSearchGet = async (request: { code?: string; remarkAllContent?: string }): Promise<ApiResponse<any>> => {\r\n    const queryString = Object.entries(request)\r\n        .filter(([key, value]) => value !== undefined)  // undefined 값은 제외\r\n        .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`)\r\n        .join('&');\r\n\r\n\r\n    return httpClient.httpGet(apiConstants.report.crcSearch, `${queryString}`, true);\r\n};\r\n\r\nexport const updateCrcRemarkApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.report.crcRemarkUpdate, request);\r\n};\r\n\r\nexport const deleteCrcRemarkApi = async (req: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.report.crcRemarkRemove, req, true);\r\n};\r\n\r\n\r\nexport const createCrcDataApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.report.crcDataCreate, request);\r\n};\r\nexport const crcDataGet = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.report.crcDataFindAll);\r\n};\r\n\r\nexport const updateCrcDataApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.report.crcDataUpdate, request);\r\n};\r\n\r\nexport const deleteCrcDataApi = async (req: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.report.crcDataRemove, req, true);\r\n};\r\n\r\n\r\nexport const createCrcOptionApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.report.crcOptionCreate, request);\r\n};\r\nexport const crcOptionGet = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.report.crcOptionGet);\r\n};\r\n\r\nexport const updateCrcOptionApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.report.crcOptionUpdate, request);\r\n};\r\n\r\nexport const createCrcRecoApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.report.crcRecoCreate, request);\r\n};\r\n\r\nexport const crcRecoGet = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.report.crcRecoFindAll);\r\n};\r\n\r\nexport const crcRecoSearchGet = async (request: { code?: string; remarkAllContent?: string }): Promise<ApiResponse<any>> => {\r\n    const queryString = Object.entries(request)\r\n        .filter(([key, value]) => value !== undefined)  // undefined 값은 제외\r\n        .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`)\r\n        .join('&');\r\n\r\n\r\n    return httpClient.httpGet(apiConstants.report.crcRecoSearch, `${queryString}`, true);\r\n};\r\n\r\nexport const updateCrcRecoApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.report.crcRecoUpdate, request);\r\n};\r\n\r\nexport const deleteCrcRecoApi = async (req: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.report.crcRecoRemove, req, true);\r\n};\r\n\r\nexport const createCrcCommentApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.report.crcCommentCreate, request);\r\n}\r\n\r\nexport const crcCommentGet = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.report.crcCommentFindAll);\r\n};\r\n\r\nexport const crcCommentSearchGet = async (request: { code?: string; remarkAllContent?: string }): Promise<ApiResponse<any>> => {\r\n    const queryString = Object.entries(request)\r\n        .filter(([key, value]) => value !== undefined)  // undefined 값은 제외\r\n        .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`)\r\n        .join('&');\r\n\r\n    return httpClient.httpGet(apiConstants.report.crcCommentSearch, `${queryString}`, true);\r\n};\r\n\r\nexport const updateCrcCommentApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.report.crcCommentUpdate, request);\r\n};\r\n\r\nexport const deleteCrcCommentApi = async (req: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.report.crcCommentRemove, req, true);\r\n};\r\n\r\nexport const saveDataCreateApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.report.saveDataCreate, request);\r\n};\r\n\r\nexport const  saveDataSlotIdGetApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.report.saveDataSlotIdGet, `${request}`, false);\r\n};\r\n\r\nexport const saveDataPutDataApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.report.saveDataPutData, request);\r\n};\r\n\r\nexport const saveDataDeleteApi = async (req: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.report.saveDataDelete, req, true);\r\n};","type EventHandler = (...args: any[]) => void | Promise<void>;\r\n\r\nclass EventBus {\r\n    private events: Record<string, EventHandler[]> = {};\r\n\r\n    // 이벤트를 구독하는 메서드\r\n    public subscribe(eventName: string, handler: EventHandler): void {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = [];\r\n        }\r\n        this.events[eventName].push(handler);\r\n    }\r\n\r\n    // 이벤트를 비동기적으로 발행하는 메서드 (Promise 반환)\r\n    public async publish(eventName: string, ...args: any[]): Promise<void> {\r\n        const handlers = this.events[eventName];\r\n        if (handlers) {\r\n            for (const handler of handlers) {\r\n                await handler(...args);  // 각 핸들러가 프로미스를 반환하면 대기\r\n            }\r\n        }\r\n    }\r\n\r\n    // 이벤트를 구독 해제하는 메서드\r\n    public unsubscribe(eventName: string, handler: EventHandler): void {\r\n        const handlers = this.events[eventName];\r\n        if (handlers) {\r\n            this.events[eventName] = handlers.filter(h => h !== handler);\r\n        }\r\n    }\r\n}\r\n\r\nexport default new EventBus();\r\n","<!-- Alert.vue -->\r\n<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p v-if=\"props.type === 'error'\">\r\n      <font-awesome-icon :icon=\"['fas', 'circle-exclamation']\" class=\"bigFont\" />\r\n    </p>\r\n    <p class=\"mb10 alertMessage\">{{ message }}</p>\r\n    <button class=\"alertButton\" @click=\"hideAlert\">Close</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\n\r\nconst props = defineProps(['isVisible', 'type', 'message']);\r\nconst typeClass = computed(() => `alert-${props.type}`);\r\nconst emit = defineEmits(['update:hideAlert']);\r\n\r\nconst hideAlert = () => {\r\n  emit('hide');\r\n};\r\n\r\n</script>","import script from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","interface WbcCustomClassInterface {\r\n    customNum: number;\r\n    abbreviation: string;\r\n    fullNm: string;\r\n}\r\n\r\nexport const testTypeList = [\r\n    {value: '01', text: 'WBC Diff(Standard)'},\r\n    {value: '04', text: 'PBS(Premium)'},\r\n    // {value: '02', text: 'Body fluid default'},\r\n    // {value: '03', text: 'Body fluid select'}\r\n    {value: '05', text: 'Quality Check'}\r\n];\r\n\r\nexport const testBmTypeList = [\r\n    {value: '02', text: 'BM wedge'},\r\n    {value: '06', text: 'BM squash'},\r\n    {value: '03', text: 'Touch print'},\r\n    {value: '04', text: 'BM biopsy'},\r\n    {value: '05', text: 'Clot section'},\r\n];\r\n\r\nexport const AnalysisList = [\r\n    {value: '100', text: '100'},\r\n    {value: '150', text: '150'},\r\n    {value: '200', text: '200'},\r\n    {value: '250', text: '250'},\r\n    {value: '300', text: '300'},\r\n    {value: '350', text: '350'},\r\n    {value: '400', text: '400'},\r\n    {value: '450', text: '450'},\r\n    {value: '500', text: '500'}\r\n];\r\n\r\nexport const bmAnalysisList = [\r\n    { value: '100', text: '100' },\r\n    { value: '200', text: '200' },\r\n    { value: '300', text: '300' },\r\n    { value: '400', text: '400' },\r\n    { value: '500', text: '500' },\r\n    { value: '600', text: '600' },\r\n    { value: '700', text: '700' },\r\n    { value: '800', text: '800' },\r\n    { value: '900', text: '900' },\r\n    { value: '1000', text: '1000' },\r\n    { value: '1100', text: '1100' },\r\n    { value: '1200', text: '1200' },\r\n    { value: '1300', text: '1300' },\r\n    { value: '1400', text: '1400' },\r\n    { value: '1500', text: '1500' },\r\n];\r\n\r\nexport const AnalysisList2 = [\r\n    {value: '50', text: '50'},\r\n    {value: '100', text: '100'},\r\n    {value: '150', text: '150'},\r\n    {value: '200', text: '200'},\r\n    {value: '250', text: '250'},\r\n    {value: '300', text: '300'},\r\n    {value: '350', text: '350'},\r\n    {value: '400', text: '400'},\r\n    {value: '450', text: '450'},\r\n    {value: '500', text: '500'}\r\n]\r\n\r\nexport const stitchCountList = [\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const edgeShotTypeList = [\r\n    { value: '0', text: 'None' },\r\n    { value: '1', text: 'Smear Top' },\r\n    { value: '2', text: 'Smear Top + Low Power Side' },\r\n    { value: '3', text: 'Smear Top + High Power Side' },\r\n]\r\n\r\nexport const EDGE_SHOT_COUNT_LIST_LP = [\r\n    { value: '1', text: '1' },\r\n    { value: '2', text: '2' },\r\n]\r\n\r\nexport const EDGE_SHOT_COUNT_LIST_HP = [\r\n    { value: '1', text: '1' },\r\n    { value: '2', text: '2' },\r\n    { value: '3', text: '3' },\r\n    { value: '4', text: '4' },\r\n    { value: '5', text: '5' },\r\n]\r\n\r\nexport const POSITION_MARGIN_LIST = [\r\n    { value: '-5', text: '-5' },\r\n    { value: '-4', text: '-4' },\r\n    { value: '-3', text: '-3' },\r\n    { value: '-2', text: '-2' },\r\n    { value: '-1', text: '-1' },\r\n    { value: '0', text: '0' },\r\n    { value: '1', text: '1' },\r\n    { value: '2', text: '2' },\r\n    { value: '3', text: '3' },\r\n    { value: '4', text: '4' },\r\n    { value: '5', text: '5' },\r\n]\r\n\r\nexport const runningModeList = [\r\n    {value: '00', text: 'Normal'},\r\n    {value: '01', text: 'RBC dection'},\r\n    {value: '02', text: 'Hardware'}\r\n]\r\n\r\nexport const searchUserType = [\r\n    {value: '00', text: 'User Id'},\r\n    {value: '01', text: 'User Name'}\r\n];\r\n\r\nexport const cbcList = [\r\n    {cd: '01', classCd: '', classNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', classCd: '', classNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', classCd: '', classNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', classCd: '', classNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', classCd: '', classNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', classCd: '', classNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', classCd: '', classNm: 'Basophils', isSelected: true},\r\n    {cd: '08', classCd: '', classNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', classCd: '', classNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', classCd: '', classNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', classCd: '', classNm: 'Blasts', isSelected: true},\r\n    {cd: '12', classCd: '', classNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', classCd: '', classNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', classCd: '', classNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', classCd: '', classNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', classCd: '', classNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', classCd: '', classNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', classCd: '', classNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', classCd: '', classNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', classCd: '', classNm: 'Others', isSelected: true},\r\n    {cd: '21', classCd: '', classNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', classCd: '', classNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', classCd: '', classNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', classCd: '', classNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', classCd: '', classNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', classCd: '', classNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', classCd: '', classNm: 'WBC', isSelected: true},\r\n    {cd: '28', classCd: '', classNm: 'RBC', isSelected: true},\r\n    {cd: '29', classCd: '', classNm: 'HGB', isSelected: true},\r\n    {cd: '30', classCd: '', classNm: 'HCT', isSelected: true},\r\n    {cd: '31', classCd: '', classNm: 'MCV', isSelected: true},\r\n    {cd: '32', classCd: '', classNm: 'MCH', isSelected: true},\r\n    {cd: '33', classCd: '', classNm: 'MCHC', isSelected: true},\r\n    {cd: '34', classCd: '', classNm: 'RDW', isSelected: true},\r\n    {cd: '35', classCd: '', classNm: 'Platelet', isSelected: true},\r\n    {cd: '36', classCd: '', classNm: 'PCT', isSelected: true},\r\n    {cd: '37', classCd: '', classNm: 'MPV', isSelected: true},\r\n    {cd: '38', classCd: '', classNm: 'PDW', isSelected: true},\r\n    {cd: '39', classCd: '', classNm: 'ESR', isSelected: true}\r\n];\r\n\r\nexport const defaultCbcList_0011 = [\r\n    {cd: '01', classCd: 'diff', fullNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', classCd: 'seg', fullNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', classCd: 'band', fullNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', classCd: '', fullNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', classCd: '', fullNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', classCd: '', fullNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', classCd: '', fullNm: 'Basophils', isSelected: true},\r\n    {cd: '08', classCd: '', fullNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', classCd: '', fullNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', classCd: '', fullNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', classCd: '', fullNm: 'Blasts', isSelected: true},\r\n    {cd: '12', classCd: '', fullNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', classCd: '', fullNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', classCd: '', fullNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', classCd: '', fullNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', classCd: '', fullNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', classCd: '', fullNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', classCd: '', fullNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', classCd: '', fullNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', classCd: '', fullNm: 'Others', isSelected: true},\r\n    {cd: '21', classCd: '', fullNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', classCd: '', fullNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', classCd: '', fullNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', classCd: '', fullNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', classCd: '', fullNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', classCd: '', fullNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', classCd: '', fullNm: 'WBC', isSelected: true},\r\n    {cd: '28', classCd: '', fullNm: 'RBC', isSelected: true},\r\n    {cd: '29', classCd: '', fullNm: 'HGB', isSelected: true},\r\n    {cd: '30', classCd: '', fullNm: 'HCT', isSelected: true},\r\n    {cd: '31', classCd: '', fullNm: 'MCV', isSelected: true},\r\n    {cd: '32', classCd: '', fullNm: 'MCH', isSelected: true},\r\n    {cd: '33', classCd: '', fullNm: 'MCHC', isSelected: true},\r\n    {cd: '34', classCd: '', fullNm: 'RDW', isSelected: true},\r\n    {cd: '35', classCd: '', fullNm: 'Platelet', isSelected: true},\r\n    {cd: '36', classCd: '', fullNm: 'PCT', isSelected: true},\r\n    {cd: '37', classCd: '', fullNm: 'MPV', isSelected: true},\r\n    {cd: '38', classCd: '', fullNm: 'PDW', isSelected: true},\r\n    {cd: '39', classCd: '', fullNm: 'ESR', isSelected: true},\r\n    {cd: '40', classCd: '', fullNm: 'LUC', isSelected: true}\r\n]\r\n\r\nexport const defaultCbcList = [\r\n    {cd: '01', classCd: 'diff', fullNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', classCd: 'seg', fullNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', classCd: 'band', fullNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', classCd: '', fullNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', classCd: '', fullNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', classCd: '', fullNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', classCd: '', fullNm: 'Basophils', isSelected: true},\r\n    {cd: '08', classCd: '', fullNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', classCd: '', fullNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', classCd: '', fullNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', classCd: '', fullNm: 'Blasts', isSelected: true},\r\n    {cd: '12', classCd: '', fullNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', classCd: '', fullNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', classCd: '', fullNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', classCd: '', fullNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', classCd: '', fullNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', classCd: '', fullNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', classCd: '', fullNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', classCd: '', fullNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', classCd: '', fullNm: 'Others', isSelected: true},\r\n    {cd: '21', classCd: '', fullNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', classCd: '', fullNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', classCd: '', fullNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', classCd: '', fullNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', classCd: '', fullNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', classCd: '', fullNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', classCd: '', fullNm: 'WBC', isSelected: true},\r\n    {cd: '28', classCd: '', fullNm: 'RBC', isSelected: true},\r\n    {cd: '29', classCd: '', fullNm: 'HGB', isSelected: true},\r\n    {cd: '30', classCd: '', fullNm: 'HCT', isSelected: true},\r\n    {cd: '31', classCd: '', fullNm: 'MCV', isSelected: true},\r\n    {cd: '32', classCd: '', fullNm: 'MCH', isSelected: true},\r\n    {cd: '33', classCd: '', fullNm: 'MCHC', isSelected: true},\r\n    {cd: '34', classCd: '', fullNm: 'RDW', isSelected: true},\r\n    {cd: '35', classCd: '', fullNm: 'Platelet', isSelected: true},\r\n    {cd: '36', classCd: '', fullNm: 'PCT', isSelected: true},\r\n    {cd: '37', classCd: '', fullNm: 'MPV', isSelected: true},\r\n    {cd: '38', classCd: '', fullNm: 'PDW', isSelected: true},\r\n    {cd: '39', classCd: '', fullNm: 'ESR', isSelected: true},\r\n    {cd: '40', classCd: '', fullNm: 'RETI', isSelected: true}\r\n];\r\n\r\nexport const rbcClassList = {\r\n    rbcClassList: [{\r\n        categoryId: '01',\r\n        categoryNm: 'Size',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Macrocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Microcyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Anisocytosis',\r\n            degree: '0'\r\n        }]\r\n    }, {\r\n        categoryId: '02',\r\n        categoryNm: 'Chromia',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Hyperchromic',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Hypochromic',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Polychromia',\r\n            degree: '0'\r\n        }]\r\n    }, {\r\n        categoryId: '03',\r\n        categoryNm: 'Shape',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Poikilocytosis',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Target Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Burr Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '05',\r\n            classNm: 'Acanthocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '06',\r\n            classNm: 'Ovalocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '07',\r\n            classNm: 'Schistocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '08',\r\n            classNm: 'Sickle Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '09',\r\n            classNm: 'Stomatocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '10',\r\n            classNm: 'Tear Drop Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '11',\r\n            classNm: 'Spherocyte',\r\n            degree: '0'\r\n        }]\r\n    },\r\n        // {\r\n        //   categoryId: '04',\r\n        //   categoryNm: 'Platelet',\r\n        //   classInfo: Object.freeze([{\r\n        //     classId: '01',\r\n        //     classNm: 'Giant Platelet',\r\n        //     degree: '0'\r\n        //   }])\r\n        // },\r\n        {\r\n            categoryId: '05',\r\n            categoryNm: 'Inclusion Body',\r\n            classInfo: [{\r\n                classId: '01',\r\n                classNm: 'Howell-Jolly Body',\r\n                degree: '0'\r\n            }, {\r\n                classId: '02',\r\n                classNm: 'Basophilic Stippling',\r\n                degree: '0'\r\n            }]\r\n        }],\r\n    malariaCount: 0,\r\n    currentRbcResults: null\r\n};\r\n\r\nexport const defaultRbcDegree = [\r\n{\r\n    categoryId: '01',\r\n    classId: '02',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '01',\r\n    classId: '03',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '01',\r\n    classId: '04',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '02',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '03',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '04',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '03',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '04',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '05',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '06',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '07',\r\n    degree1: '0.5',\r\n    degree2: '1',\r\n    degree3: '2'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '08',\r\n    degree1: '0.5',\r\n    degree2: '1',\r\n    degree3: '2'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '09',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '10',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '11',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '05',\r\n    classId: '01',\r\n    degree1: '1',\r\n    degree2: '2',\r\n    degree3: '3'\r\n}, {\r\n    categoryId: '05',\r\n    classId: '02',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}];\r\n\r\nexport const wbcHotKeys = [\r\n    { id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1 },\r\n    { id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2 },\r\n    { id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3 },\r\n    { id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4 },\r\n    { id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5 },\r\n    { id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6 },\r\n    { id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7 },\r\n    { id: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', key: '', orderIdx: 8 },\r\n    { id: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 9 },\r\n    { id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 10 },\r\n    { id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 11 },\r\n    { id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 12 },\r\n    { id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 13 },\r\n    { id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 14 },\r\n    { id: '12', abbreviation: 'NR', fullNm: 'nRBC', key: '', orderIdx: 15 },\r\n    { id: '13', abbreviation: 'GP', fullNm: 'Giant platelet', key: '', orderIdx: 16 },\r\n    { id: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', key: '', orderIdx: 17 },\r\n    { id: '16', abbreviation: 'MA', fullNm: 'Malaria', key: '', orderIdx: 18 },\r\n    { id: '15', abbreviation: 'AR', fullNm: 'Artifact(Smudge)', key: '', orderIdx: 19 },\r\n    { classId: '17', abbreviation: 'SM', fullNm: 'Smudge', orderIdx: 20 },\r\n]\r\n\r\nexport const bmHotKeys = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n}, {\r\n    id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n}, {\r\n    id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n}, {\r\n    id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n}, {\r\n    id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n}, {\r\n    id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n}, {\r\n    id: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 8\r\n}, {\r\n    id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 9\r\n}, {\r\n    id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 10\r\n}, {\r\n    id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 11\r\n}, {\r\n    id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 12\r\n}, {\r\n    id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 13\r\n}, {\r\n    id: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', key: '', orderIdx: 14\r\n}, {\r\n    id: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', key: '', orderIdx: 15\r\n}, {\r\n    id: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', key: '', orderIdx: 16\r\n}, {\r\n    id: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', key: '', orderIdx: 17\r\n}, {\r\n    id: '16', abbreviation: 'HC', fullNm: 'Histiocyte', key: '', orderIdx: 18\r\n}, {\r\n    id: '17', abbreviation: 'OT', fullNm: 'Others', key: '', orderIdx: 19\r\n}]\r\n\r\nexport const bfHotKeys = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '02', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 2\r\n}, {\r\n    id: '03', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 3\r\n}, {\r\n    id: '04', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 4\r\n}, {\r\n    id: '05', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 5\r\n}, {\r\n    id: '06', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 6\r\n}, {\r\n    id: '07', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 7\r\n}, {\r\n    id: '08', abbreviation: 'NR', fullNm: 'NRBC', key: '', orderIdx: 8\r\n}, {\r\n    id: '09', abbreviation: 'AR', fullNm: 'Artifact(Smudge)', key: '', orderIdx: 9\r\n}, {\r\n    id: '10', abbreviation: 'MC', fullNm: 'Malignant cell', key: '', orderIdx: 10\r\n}, {\r\n    id: '11', abbreviation: 'MT', fullNm: 'Mesothelial cell', key: '', orderIdx: 11\r\n}]\r\n\r\nexport const normalRange = [\r\n{\r\n    abbreviation: 'NE',\r\n    fullNm: 'Neutrophil',\r\n    classId: '01',\r\n    min: 42,\r\n    max: 85,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'ME',\r\n    fullNm: 'Metamyelocyte',\r\n    classId: '02',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'MY',\r\n    fullNm: 'Myelocyte',\r\n    classId: '03',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'PR',\r\n    fullNm: 'Promyelocyte',\r\n    classId: '04',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'LY',\r\n    fullNm: 'Lymphocyte',\r\n    classId: '05',\r\n    min: 11,\r\n    max: 49,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'MO',\r\n    fullNm: 'Monocyte',\r\n    classId: '07',\r\n    min: 0,\r\n    max: 9,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'EO',\r\n    fullNm: 'Eosinophil',\r\n    classId: '08',\r\n    min: 0,\r\n    max: 6,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'BA',\r\n    fullNm: 'Basophil',\r\n    classId: '09',\r\n    min: 0,\r\n    max: 2,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'BL',\r\n    fullNm: 'Blast',\r\n    classId: '10',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'PC',\r\n    fullNm: 'Plasma cell',\r\n    classId: '11',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'NR',\r\n    fullNm: 'nRBC',\r\n    classId: '12',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'GP',\r\n    fullNm: 'Giant platelet',\r\n    classId: '13',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'PA',\r\n    fullNm: 'Platelet aggregation',\r\n    classId: '14',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'AR',\r\n    fullNm: 'Artifact(Smudge)',\r\n    classId: '15',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'MA',\r\n    fullNm: 'Malaria',\r\n    classId: '16',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n},\r\n{\r\n    abbreviation: 'LR',\r\n    fullNm: 'Reactive lymphocyte',\r\n    classId: '61',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'LA',\r\n    fullNm: 'Abnormal lymphocyte',\r\n    classId: '62',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n},\r\n]\r\n\r\nexport const imagePrintAndWbc = [\r\n    { fullNm: 'Neutrophil', classId: '01', checked: false },\r\n    { fullNm: 'Neutrophil-Segmented', classId: '71', checked: false },\r\n    { fullNm: 'Neutrophil-Band', classId: '72', checked: false },\r\n    { fullNm: 'Metamyelocyte', classId: '02', checked: false },\r\n    { fullNm: 'Myelocyte', classId: '03', checked: false },\r\n    { fullNm: 'Promyelocyte', classId: '04', checked: false },\r\n    { fullNm: 'Lymphocyte', classId: '05', checked: false },\r\n    { fullNm: 'Reactive lymphocyte', classId: '61', checked: false },\r\n    { fullNm: 'Abnormal lymphocyte', classId: '62', checked: false },\r\n    { fullNm: 'Monocyte', classId: '07', checked: false },\r\n    { fullNm: 'Eosinophil', classId: '08', checked: false },\r\n    { fullNm: 'Basophil', classId: '09', checked: false},\r\n    { fullNm: 'Blast', classId: '10', checked: false},\r\n    { fullNm: 'Plasma cell', classId: '11', checked: false},\r\n    { fullNm: 'nRBC', classId: '12', checked: false},\r\n    { fullNm: 'Giant platelet', classId: '13', checked: false},\r\n    { fullNm: 'Platelet aggregation', classId: '14', checked: false},\r\n    { fullNm: 'Malaria', classId: '16', checked: false},\r\n    { fullNm: 'Artifact(Smudge)', classId: '15', checked: false},\r\n    { fullNm: 'rbcPrintModel', classId: '99999', checked: false},\r\n]\r\nexport const imagePrintAndBm = [\r\n    { fullNm: 'Neutrophil', classId: '01', checked: false },\r\n    { fullNm: 'Neutrophil-Segmented', classId: '71', checked: false },\r\n    { fullNm: 'Neutrophil-Band', classId: '72', checked: false },\r\n    { fullNm: 'Metamyelocyte', classId: '02', checked: false },\r\n    { fullNm: 'Myelocyte', classId: '03', checked: false },\r\n    { fullNm: 'Promyelocyte', classId: '04', checked: false },\r\n    { fullNm: 'Lymphocyte', classId: '05', checked: false },\r\n    { fullNm: 'Abnormal lymphocyte', classId: '06', checked: false },\r\n    { fullNm: 'Monocyte', classId: '07', checked: false },\r\n    { fullNm: 'Eosinophil', classId: '08', checked: false },\r\n    { fullNm: 'Basophil', classId: '09', checked: false },\r\n    { fullNm: 'Blast', classId: '10', checked: false },\r\n    { fullNm: 'Plasma cell', classId: '11', checked: false },\r\n    { fullNm: 'Orthochromic Normoblast', classId: '12', checked: false },\r\n    { fullNm: 'Polychromic Normoblast', classId: '13', checked: false },\r\n    { fullNm: 'Basophilic Normoblast', classId: '14', checked: false },\r\n    { fullNm: 'Proerythroblast', classId: '15', checked: false },\r\n    { fullNm: 'Histiocyte', classId: '16', checked: false },\r\n    { fullNm: 'Others', classId: '17', checked: false }\r\n];\r\n\r\n\r\nexport const lisCodeWbcOption = [\r\n    { fullNm: 'Neutrophil', classId: '01', key: 'NE' },\r\n    { fullNm: 'Neutrophil-Segmented', classId: '71', key: 'NS' },\r\n    { fullNm: 'Neutrophil-Band', classId: '72', key: 'NB' },\r\n    { fullNm: 'Metamyelocyte', classId: '02', key: 'ME' },\r\n    { fullNm: 'Myelocyte', classId: '03', key: 'MY' },\r\n    { fullNm: 'Promyelocyte', classId: '04', key: 'PR' },\r\n    { fullNm: 'Lymphocyte', classId: '05', key: 'LY' },\r\n    { fullNm: 'Reactive lymphocyte', classId: '61', key: 'LR' },\r\n    { fullNm: 'Abnormal lymphocyte', classId: '62', key: 'LA' },\r\n    { fullNm: 'Monocyte', classId: '07', key: 'MO' },\r\n    { fullNm: 'Eosinophil', classId: '08', key: 'EO' },\r\n    { fullNm: 'Basophil', classId: '09', key: 'BA' },\r\n    { fullNm: 'Blast', classId: '10', key: 'BL' },\r\n    { fullNm: 'Plasma cell', classId: '11', key: 'PC' },\r\n    { fullNm: 'nRBC', classId: '12', key: 'NR' },\r\n    { fullNm: 'Giant platelet', classId: '13', key: 'GP' },\r\n    { fullNm: 'Platelet aggregation', classId: '14', key: 'PA' },\r\n    { fullNm: 'Malaria', classId: '16', key: 'MA' },\r\n    { fullNm: 'Artifact(Smudge)', classId: '15', key: 'AR' },\r\n    { fullNm: 'rbcPrintModel', classId: '99999', key: '' },\r\n];\r\n\r\nexport const LIS_CODE_RBC_OPTION = [\r\n    { categoryId: '01', categoryNm: 'Size', classId: '01', fullNm: 'Normal', key: 'SIZENO' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '02', fullNm: 'Macrocyte', key: 'SIZEMA' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '03', fullNm: 'Microcyte', key: 'SIZEMI' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '04', fullNm: 'Anisocytosis', key: 'SIZEAN' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '01', fullNm: 'Normal', key: 'CHRONO' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '02', fullNm: 'Hyperchromic', key: 'CHRHPE' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '03', fullNm: 'Hypochromic', key: 'CHRHPO' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '04', fullNm: 'Polychromia', key: 'CHRPOL' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '01', fullNm: 'Normal', key: 'SHAPNO' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '02', fullNm: 'Poikilocytosis', key: 'SHAPPO' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '03', fullNm: 'Target Cell', key: 'SHAPTA' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '04', fullNm: 'Burr Cell', key: 'SHAPBU' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '05', fullNm: 'Acanthocyte', key: 'SHAPAC' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '06', fullNm: 'Ovalocyte', key: 'SHAPOV' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '07', fullNm: 'Schistocyte', key: 'SHAPSC' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '08', fullNm: 'Sickle Cell', key: 'SHAPSI' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '09', fullNm: 'Stomatocyte', key: 'SHAPST' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '10', fullNm: 'Tear Drop Cell', key: 'SHAPTE' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '11', fullNm: 'Spherocyte', key: 'SHAPSP' },\r\n    { categoryId: '04', categoryNm: 'Platelet', classId: '01', fullNm: 'Platelet', key: 'PLAT' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '01', fullNm: 'Howell-Jolly Body', key: 'INBDHO' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '02', fullNm: 'Basophilic Stippling', key: 'INBDBA' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '03', fullNm: 'Malaria', key: 'INBDMA' }\r\n];\r\n\r\nexport const minRunCount = [\r\n    { minGPCount:0, minPACount:0, },\r\n]\r\n\r\nexport const wbcRunningCount = [\r\n{\r\n    min: 0,\r\n    max: 700,\r\n    wbcTargetCount: 50\r\n}, {\r\n    min: 701,\r\n    max: 1000,\r\n    wbcTargetCount: 100\r\n}, {\r\n    min: 1001,\r\n    max: 2000,\r\n    wbcTargetCount: 150\r\n}, {\r\n    min: 2001,\r\n    max: 3000,\r\n    wbcTargetCount: 250\r\n}];\r\n\r\nexport const lisHotKeyAndLisFilePathAndUrl =[\r\n    { lisHotKey: '', lisFilePath:'', cbcFilePath:'' },\r\n]\r\n\r\nexport const DIR_NAME = {\r\n    HOWELL_JOLLY: '19_Howell_jolly',\r\n    MALARIA: '43_InclusionBody_Malaria',\r\n    NO_MALARIA: '44_InclusionBody_NoMalaria',\r\n    RBC_CLASS: '03_RBC_Classification',\r\n    RBC_IMAGE: '02_RBC_Image',\r\n    BARCODE: '00_Barcode_Image',\r\n    WBC_CLASS: '01_WBC_Classification',\r\n    BF: '02_LowPower_Image',\r\n    BF_HIGH: '03_HighPower_Image',\r\n    BF_CLASS: '05_BF_Classification',\r\n    IA_ROOT_PATH: 'D:/ia_proc',\r\n}\r\n\r\nexport const settingName = {\r\n    cellImageAnalyzed: 'cellImageAnalyzed',\r\n    rbcDegree: 'rbcDegree',\r\n    wbcRunningCount: 'wbcRunningCount',\r\n    wbcCustomClass: 'wbcCustomClass',\r\n    wbcHotKeys: 'wbcHotKeys',\r\n    bfHotKeys: 'bfHotKeys',\r\n    normalRange: 'normalRange',\r\n    classOrder: 'classOrder',\r\n    imagePrint: 'imagePrint',\r\n    lisCode: 'lisCode',\r\n    cbcCode: 'cbcCode',\r\n    filePathSet: 'filePathSet',\r\n}\r\n\r\nexport const WBC_CUSTOM_CLASS: WbcCustomClassInterface[] = [\r\n    { customNum: 90, abbreviation: '', fullNm: '' },\r\n    { customNum: 91, abbreviation: '', fullNm: '' },\r\n    { customNum: 92, abbreviation: '', fullNm: '' },\r\n    { customNum: 93, abbreviation: '', fullNm: '' },\r\n    { customNum: 94, abbreviation: '', fullNm: '' }\r\n]\r\n\r\nexport const DEFAULT_CRC_REMARK_COUNT_ARR = [\r\n    { \"checked\": false, \"name\": \"remark\"},\r\n    { \"checked\": false, \"name\": \"Comment\"},\r\n    { \"checked\": false, \"name\": \"Recommendation\" }\r\n];","<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p class=\"mb10 fs10\">\r\n      {{ message }}\r\n    </p>\r\n    <button class=\"alertButton\" @click=\"okConfirm\">{{ typeConvertConfirmText(type) || 'OK' }}</button>\r\n    <button class=\"alertCloseButton\" @click=\"hideConfirm\">{{ typeConvertCloseText(type) || 'CLOSE' }}</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nconst props = defineProps(['isVisible', 'type', 'message']);\r\nconst typeClass = computed(() => `confirm-${props.type}`);\r\nconst emit = defineEmits(['okConfirm']);\r\n\r\nconst typeConvertConfirmText = (type) => {\r\n  switch (type) {\r\n    case 'setting':\r\n      return MESSAGES.SAVE;\r\n    case 'delete':\r\n      return MESSAGES.DELETE;\r\n    default:\r\n      return 'OK';\r\n  }\r\n}\r\n\r\nconst typeConvertCloseText = (type) => {\r\n  switch (type) {\r\n    case 'setting':\r\n      return MESSAGES.LEAVE;\r\n    case 'delete':\r\n      return MESSAGES.CLOSE;\r\n    default:\r\n      return 'CLOSE';\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  emit('hide');\r\n};\r\n\r\nconst okConfirm = () => {\r\n  emit('okConfirm');\r\n}\r\n</script>\r\n","import script from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createDeviceInfoApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.device.getDeviceInfo.create, request);\r\n}\r\n\r\nexport const getDeviceInfoApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.device.getDeviceInfo.get);\r\n}\r\n\r\nexport const putDeviceInfoApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.device.updateDeviceInfo, request);\r\n}\r\n\r\nexport const getDeviceIpApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.device.getDeviceInfo.ip);\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, createCommentVNode as _createCommentVNode, unref as _unref, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"execute\" }\nconst _hoisted_2 = { class: \"startDiv\" }\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = { class: \"stopDiv\" }\nconst _hoisted_6 = [\"disabled\"]\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = [\"value\"]\nconst _hoisted_10 = { class: \"flex-justify-between\" }\n\nimport {ref, computed, watch, onMounted, nextTick, onBeforeMount} from \"vue\";\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  WBC_COUNT_OPTIONS,\r\n  STITCH_COUNT_OPTIONS,\r\n  BM_COUNT_OPTIONS\r\n} from '@/common/defines/constants/analysis';\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport {tcpReq} from '@/common/defines/constants/tcpRequest/tcpReq';\r\nimport {getCellImgApi, getRunInfoApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {testBmTypeList, testTypeList, wbcRunningCount} from \"@/common/defines/constants/settings\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport router from \"@/router\";\r\nimport {getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'execute',\n  setup(__props, { emit: __emit }) {\n\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst projectType = ref('pb');\r\nconst countType = ref<any>([]);\r\n\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst executeState = computed(() => store.state.executeModule);\r\nconst isPause = ref(runInfo.value?.isPause);\r\nconst isRunningState = computed(() => store.state.commonModule.isRunningState);\r\nconst userStop = ref(embeddedStatusJobCmd.value?.userStop);\r\nconst isRecoveryRun = ref(embeddedStatusJobCmd.value?.isRecoveryRun);\r\nconst isInit = ref(embeddedStatusJobCmd.value?.isInit);\r\nconst userId = ref('');\r\nconst analysisType = ref();\r\nconst wbcCount = ref();\r\nconst stitchCount = ref();\r\nconst bfSelectFiles = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst showStopBtn = ref(false);\r\nconst btnStatus = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst testTypeArr = ref<any>([]);\r\nconst emits = __emit;\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst siteCd = ref('');\r\nconst filteredWbcCount = ref<any>();\r\nconst is100A = ref(false);\r\n\r\nwatch(userModuleDataGet.value, async (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  userId.value = newUserId.id;\r\n  await initDataExecute();\r\n});\r\n\r\nonBeforeMount(() => {\r\n  is100A.value = window.MACHINE_VERSION === '100a';\r\n})\r\n\r\nonMounted(async () => {\r\n  await initDataExecute();\r\n});\r\n\r\nconst initDataExecute = async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n\r\n  countType.value = window.PROJECT_TYPE === 'bm' ? BM_COUNT_OPTIONS : WBC_COUNT_OPTIONS\r\n  // userId.value = getStoredUser.id;\r\n\r\n  await nextTick();\r\n  await cellImgGet();\r\n  await getDeviceInfo();\r\n  await setWbcRunningCount();\r\n  await initData();\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    btnStatus.value = 'start';\r\n    showStopBtn.value = true;\r\n  }\r\n}\r\n\r\nwatch(commonDataGet.value, (value) => {\r\n  if (value.loginSetData === '') {\r\n    initDataExecute();\r\n    store.dispatch('commonModule/setCommonInfo', {loginSetData: 'nn'});\r\n  }\r\n  if(value.resetAnalyzing){\r\n    cellImgGet();\r\n    store.dispatch('commonModule/setCommonInfo', {resetAnalyzing: false});\r\n  }\r\n},{deep: true});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const { bfSelectFiles: newBfSelectFiles} = newRunInfo || {};\r\n  bfSelectFiles.value = newBfSelectFiles;\r\n\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    // btnStatus.value = 'isInit';\r\n    showStopBtn.value = true;\r\n  }\r\n})\r\n\r\n\r\n// 스토어 변경 감시\r\nwatch([embeddedStatusJobCmd.value, executeState.value], async (newVals) => {\r\n  const [newEmbeddedStatusJobCmd] = newVals;\r\n\r\n  await nextTick();\r\n  const {\r\n    isPause: newIsPause,\r\n    userStop: newUserStop,\r\n    isRecoveryRun: newIsRecoveryRun,\r\n    isInit: newIsInit,\r\n  } = newEmbeddedStatusJobCmd || {};\r\n\r\n  if (is100A.value && Number(newEmbeddedStatusJobCmd.sysInfo.autoStart)) {\r\n    toggleStartStop('start', 'autoStart');\r\n  }\r\n\r\n  isPause.value = newIsPause;\r\n  userStop.value = newUserStop;\r\n  isRecoveryRun.value = newIsRecoveryRun;\r\n  isInit.value = newIsInit;\r\n\r\n  if (isPause.value) {\r\n    btnStatus.value = 'isPause';\r\n  } else if (userStop.value && !isRecoveryRun.value) {\r\n    btnStatus.value = 'onRecover';\r\n  } else if (isInit.value === 'N' || isInit.value === '') {\r\n    btnStatus.value = 'isInit';\r\n  } else {\r\n    btnStatus.value = 'start';\r\n  }\r\n});\r\n\r\n\r\n//웹소켓으로 백엔드에 전송\r\nconst emitSocketData = async (type: string, payload: any) => {\r\n  await EventBus.publish('childEmitSocketData', payload);\r\n};\r\n\r\nconst sendSearchCardCount = () => {\r\n  const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n  const req = {\r\n    jobCmd: 'SEARCH_CARD_COUNT',\r\n    reqUserId: userId.value,\r\n    reqDttm: reqDttm,\r\n    testType: analysisType.value,\r\n  }\r\n  tcpReq().embedStatus.searchCardCount.reqUserId = userId.value;\r\n  tcpReq().embedStatus.searchCardCount.testType = analysisType.value;\r\n  EventBus.publish('childEmitSocketData', req);\r\n}\r\n\r\nconst toggleStartStop = (action: 'start' | 'stop', autoStart = '') => {\r\n  if (viewerCheck.value !== 'main' && window.FORCE_VIEWER !== 'main') return;\r\n\r\n  if (action === 'start') {\r\n    if (isPause.value) { // 일시정지인 상태일 경우 임베디드에게 상태값을 알려준다.\r\n\r\n      tcpReq().embedStatus.restart.bfSelectFiles = bfSelectFiles.value;\r\n      tcpReq().embedStatus.restart.reqUserId = userId.value;\r\n      emitSocketData('SEND_DATA', tcpReq().embedStatus.restart);\r\n      return;\r\n    }\r\n    // 실행 여부 체크\r\n    if (isRunningState.value && autoStart !== 'autoStart') {\r\n      showSuccessAlert(MESSAGES.IDS_ERROR_ALREADY_RUNNING);\r\n      return;\r\n    } else if (userStop.value) {\r\n      confirmMessage.value = MESSAGES.IDS_RECOVER_GRIPPER_CONDITION;\r\n      showConfirm.value = true;\r\n      return;\r\n    }\r\n    const rbcPositionMargin = sessionStorage.getItem('rbcPositionMargin');\r\n    const wbcPositionMargin = sessionStorage.getItem('wbcPositionMargin');\r\n    const pltPositionMargin = sessionStorage.getItem('pltPositionMargin');\r\n    const edgeShotType = sessionStorage.getItem('edgeShotType') || '0';\r\n    const autoStart = sessionStorage.getItem('autoStart') || 1;\r\n\r\n    let startAction = tcpReq().embedStatus.startAction;\r\n    Object.assign(startAction, {\r\n      testType: analysisType.value,\r\n      wbcCount: filteredWbcCount.value || wbcCount.value,\r\n      stitchCount: stitchCount.value,\r\n      reqUserId: userId.value,\r\n      rbcPositionMargin: rbcPositionMargin || '0',\r\n      wbcPositionMargin: wbcPositionMargin || '0',\r\n      pltPositionMargin: pltPositionMargin || '0',\r\n      edgeShotType:  edgeShotType || '0',\r\n    });\r\n\r\n    if (is100A.value) {\r\n      Object.assign(startAction, {\r\n        autoStart: Number(autoStart),\r\n      })\r\n    }\r\n\r\n    // 2: LowPower | 3: HighPower\r\n    if (window.PROJECT_TYPE === 'pb' && ['2', '3'].includes(edgeShotType)) {\r\n      const key = edgeShotType === '2' ? 'edgeShotLPCount' : 'edgeShotHPCount';\r\n      const defaultCount = edgeShotType === '2' ? '1' : '3';\r\n      const edgeShotCount = sessionStorage.getItem(key) || defaultCount;\r\n\r\n      Object.assign(startAction, { edgeShotCount });\r\n    }\r\n\r\n\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      startAction = {\r\n        \"jobCmd\": \"START\",\r\n        \"reqUserId\": userId.value,\r\n        \"reqDttm\": tcpReq().embedStatus.startAction.reqDttm,\r\n        \"orderInfo\": [{\r\n          \"orderId\": \"1\",\r\n          \"cassetNo\": \"\",\r\n          \"slotNo\": \"1\",\r\n          \"bmNo\": \"1\",\r\n          \"patientId\": \"\",\r\n          \"patientNm\": \"\",\r\n          \"age\": \"1\",\r\n          \"gender\": \"01\",\r\n          \"testType\": '02',\r\n          \"stainType\": \"01\",\r\n          \"userInputStainType\": \"\",\r\n          \"analysisType\": analysisType.value,\r\n          \"bmSamplingSide\": \"01\",\r\n          \"cellCount\": wbcCount.value,\r\n          \"department\": \"s\",\r\n          \"stitchCount\": stitchCount.value,\r\n        }],\r\n        \"runningMode\": \"00\",\r\n        \"positionMargin\": \"0\"\r\n      }\r\n    }\r\n\r\n    if (isInit.value === 'Y') { // 초기화 여부 체크 초기화가 되어있는 상태이면 실행\r\n      // 웹소켓으로 백엔드에 전송\r\n      emitSocketData('SEND_DATA', startAction);\r\n      const InfoData = {\r\n        startEmbedded: true,\r\n      }\r\n      // 시작 버튼이 눌리면 연속적으로 실행정보, 장비정보를 요청한다.\r\n      store.dispatch('commonModule/setCommonInfo', InfoData);\r\n    }\r\n  } else {\r\n    // 장비 중단\r\n    if (!isRunningState.value) {\r\n      showSuccessAlert(MESSAGES.IDS_ERROR_STOP_PROCESS);\r\n      return;\r\n    }\r\n    store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: true});\r\n    tcpReq().embedStatus.stop.reqUserId = userId.value;\r\n    emitSocketData('SEND_DATA', tcpReq().embedStatus.stop);\r\n\r\n  }\r\n\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorALert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  showConfirm.value = false;\r\n  tcpReq().embedStatus.recovery.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.recovery);\r\n}\r\n\r\nconst sendInit = () => { // 장비 초기화 진행\r\n  if (viewerCheck.value !== 'main' && window.FORCE_VIEWER !== 'main') return;\r\n  if (isInit.value === 'Y') {\r\n    showSuccessAlert(MESSAGES.alreadyInitialized);\r\n    return;\r\n  }\r\n\r\n  tcpReq().embedStatus.init.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.init);\r\n  emits('initDataChangeText', true);\r\n}\r\n\r\nconst sendRewindBelt = async (isRewindingBelt: boolean) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { isRewindingBelt: isRewindingBelt });\r\n}\r\n\r\nconst initData = async () => {\r\n  const newObj = {...embeddedStatusJobCmd.value }\r\n  isInit.value = newObj.isInit;\r\n  isPause.value = newObj.isPause;\r\n  userStop.value = newObj.userStop;\r\n  isRecoveryRun.value = newObj.isRecoveryRun;\r\n  showStopBtn.value = (isInit.value === 'N' || isInit.value === '') && !isRunningState.value;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        analysisType.value = data.analysisType;\r\n        await store.dispatch('commonModule/setCommonInfo', { analysisType: analysisType.value });\r\n        if (window.PROJECT_TYPE === 'bm') {\r\n          wbcCount.value = data.diffCellAnalyzingCount;\r\n        } else {\r\n          switch (analysisType.value) {\r\n            case '01':\r\n              wbcCount.value = data.diffCellAnalyzingCount;\r\n              break;\r\n            case '04':\r\n              wbcCount.value = data.pbsCellAnalyzingCount;\r\n              break;\r\n            default:\r\n              wbcCount.value = data.bfCellAnalyzingCount;\r\n          }\r\n        }\r\n\r\n        stitchCount.value = data.stitchCount\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst setWbcRunningCount = async () => {\r\n  // 0011 - 인하대인 경우 -> WbcRunningCount로 분류\r\n  if (window.PROJECT_TYPE !== 'pb' || siteCd.value !== '0011') return;\r\n\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runCountData = runCountResult.data;\r\n\r\n      if (runCountData && runCountData?.length > 0) {\r\n        const filteredRunCountData: any = runCountData.filter(data => data.min <= wbcCount.value && wbcCount.value <= data.max)[0];\r\n        if (filteredRunCountData.wbcTargetCount) {\r\n          filteredWbcCount.value = filteredRunCountData.wbcTargetCount;\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const deviceData = await getDeviceInfoApi();\r\n    siteCd.value = deviceData.data.siteCd;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((analysisType).value = $event)),\n          disabled: isRunningState.value,\n          onChange: sendSearchCardCount\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(testTypeArr.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_4))\n          }), 128))\n        ], 40, _hoisted_3), [\n          [_vModelSelect, analysisType.value]\n        ]),\n        (showStopBtn.value)\n          ? (_openBlock(), _createElementBlock(\"p\", {\n              key: 0,\n              class: \"startStopP\",\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (isInit.value === 'Y' && toggleStartStop('start')))\n            }, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-play'],\n                class: _normalizeClass({ 'startBtn': true, [btnStatus.value]: true })\n              }, null, 8, [\"class\"])\n            ]))\n          : (_openBlock(), _createElementBlock(\"p\", {\n              key: 1,\n              class: \"startStopP\",\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (toggleStartStop('stop')))\n            }, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-stop'],\n                class: \"stopBtn\"\n              })\n            ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((wbcCount).value = $event)),\n          disabled: isRunningState.value || (analysisType.value === '05')\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(countType.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_7))\n          }), 128))\n        ], 8, _hoisted_6), [\n          [_vModelSelect, wbcCount.value]\n        ]),\n        _withDirectives(_createElementVNode(\"select\", {\n          class: \"stopDivSelect\",\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((stitchCount).value = $event)),\n          disabled: isRunningState.value || (analysisType.value === '05')\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(STITCH_COUNT_OPTIONS), (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_9))\n          }), 128))\n        ], 8, _hoisted_8), [\n          [_vModelSelect, stitchCount.value]\n        ]),\n        _createElementVNode(\"div\", _hoisted_10, [\n          (is100A.value)\n            ? (_openBlock(), _createElementBlock(\"div\", {\n                key: 0,\n                class: \"rewindBtn flex-center\",\n                onMousedown: _cache[5] || (_cache[5] = ($event: any) => (sendRewindBelt(true))),\n                onMouseup: _cache[6] || (_cache[6] = ($event: any) => (sendRewindBelt(false)))\n              }, [\n                _createVNode(_component_font_awesome_icon, {\n                  icon: ['fas', 'backward-fast'],\n                  flip: \"horizontal\"\n                })\n              ], 32))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass([\"initBtn\", {'isInitDisabled': isInit.value === 'Y', 'initBtn-is100a': is100A.value }]),\n            onClick: sendInit,\n            style: {\"width\":\"100%\"}\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(isRunningState.value ? 'INITIALIZING' : 'INITIALIZE'), 1)\n          ], 2)\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 1,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"execute\">\r\n    <div class='startDiv'>\r\n      <select v-model=\"analysisType\" :disabled=\"isRunningState\" @change=\"sendSearchCardCount\">\r\n        <option v-for=\"option in testTypeArr\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <p class=\"startStopP\" v-if=\"showStopBtn\" @click=\"isInit === 'Y' && toggleStartStop('start')\">\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-play']\"\r\n            :class=\"{ 'startBtn': true, [btnStatus]: true }\"\r\n        />\r\n      </p>\r\n      <p class=\"startStopP\" v-else @click=\"toggleStartStop('stop')\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-stop']\" class='stopBtn' />\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"stopDiv\">\r\n      <select v-model=\"wbcCount\" :disabled=\"isRunningState || (analysisType === '05')\">\r\n        <option v-for=\"option in countType\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <select class=\"stopDivSelect\" v-model=\"stitchCount\" :disabled=\"isRunningState || (analysisType === '05')\">\r\n        <option v-for=\"option in STITCH_COUNT_OPTIONS\" :key=\"option.value\" :value=\"option.value\">\r\n          {{ option.text }}\r\n        </option>\r\n      </select>\r\n\r\n      <div class=\"flex-justify-between\">\r\n        <div v-if=\"is100A\" class=\"rewindBtn flex-center\" @mousedown=\"sendRewindBelt(true)\" @mouseup=\"sendRewindBelt(false)\">\r\n          <font-awesome-icon :icon=\"['fas', 'backward-fast']\" flip=\"horizontal\" />\r\n        </div>\r\n\r\n        <div class=\"initBtn\" @click=\"sendInit\" :class=\"{'isInitDisabled': isInit === 'Y', 'initBtn-is100a': is100A }\" style=\"width: 100%;\">\r\n          <span> {{isRunningState ? 'INITIALIZING' : 'INITIALIZE' }} </span>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed, watch, onMounted, nextTick, defineEmits, onBeforeMount} from \"vue\";\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  WBC_COUNT_OPTIONS,\r\n  STITCH_COUNT_OPTIONS,\r\n  BM_COUNT_OPTIONS\r\n} from '@/common/defines/constants/analysis';\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport {tcpReq} from '@/common/defines/constants/tcpRequest/tcpReq';\r\nimport {getCellImgApi, getRunInfoApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {testBmTypeList, testTypeList, wbcRunningCount} from \"@/common/defines/constants/settings\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport router from \"@/router\";\r\nimport {getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\n\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst projectType = ref('pb');\r\nconst countType = ref<any>([]);\r\n\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst executeState = computed(() => store.state.executeModule);\r\nconst isPause = ref(runInfo.value?.isPause);\r\nconst isRunningState = computed(() => store.state.commonModule.isRunningState);\r\nconst userStop = ref(embeddedStatusJobCmd.value?.userStop);\r\nconst isRecoveryRun = ref(embeddedStatusJobCmd.value?.isRecoveryRun);\r\nconst isInit = ref(embeddedStatusJobCmd.value?.isInit);\r\nconst userId = ref('');\r\nconst analysisType = ref();\r\nconst wbcCount = ref();\r\nconst stitchCount = ref();\r\nconst bfSelectFiles = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst showStopBtn = ref(false);\r\nconst btnStatus = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst testTypeArr = ref<any>([]);\r\nconst emits = defineEmits();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst siteCd = ref('');\r\nconst filteredWbcCount = ref<any>();\r\nconst is100A = ref(false);\r\n\r\nwatch(userModuleDataGet.value, async (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  userId.value = newUserId.id;\r\n  await initDataExecute();\r\n});\r\n\r\nonBeforeMount(() => {\r\n  is100A.value = window.MACHINE_VERSION === '100a';\r\n})\r\n\r\nonMounted(async () => {\r\n  await initDataExecute();\r\n});\r\n\r\nconst initDataExecute = async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n\r\n  countType.value = window.PROJECT_TYPE === 'bm' ? BM_COUNT_OPTIONS : WBC_COUNT_OPTIONS\r\n  // userId.value = getStoredUser.id;\r\n\r\n  await nextTick();\r\n  await cellImgGet();\r\n  await getDeviceInfo();\r\n  await setWbcRunningCount();\r\n  await initData();\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    btnStatus.value = 'start';\r\n    showStopBtn.value = true;\r\n  }\r\n}\r\n\r\nwatch(commonDataGet.value, (value) => {\r\n  if (value.loginSetData === '') {\r\n    initDataExecute();\r\n    store.dispatch('commonModule/setCommonInfo', {loginSetData: 'nn'});\r\n  }\r\n  if(value.resetAnalyzing){\r\n    cellImgGet();\r\n    store.dispatch('commonModule/setCommonInfo', {resetAnalyzing: false});\r\n  }\r\n},{deep: true});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const { bfSelectFiles: newBfSelectFiles} = newRunInfo || {};\r\n  bfSelectFiles.value = newBfSelectFiles;\r\n\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    // btnStatus.value = 'isInit';\r\n    showStopBtn.value = true;\r\n  }\r\n})\r\n\r\n\r\n// 스토어 변경 감시\r\nwatch([embeddedStatusJobCmd.value, executeState.value], async (newVals) => {\r\n  const [newEmbeddedStatusJobCmd] = newVals;\r\n\r\n  await nextTick();\r\n  const {\r\n    isPause: newIsPause,\r\n    userStop: newUserStop,\r\n    isRecoveryRun: newIsRecoveryRun,\r\n    isInit: newIsInit,\r\n  } = newEmbeddedStatusJobCmd || {};\r\n\r\n  if (is100A.value && Number(newEmbeddedStatusJobCmd.sysInfo.autoStart)) {\r\n    toggleStartStop('start', 'autoStart');\r\n  }\r\n\r\n  isPause.value = newIsPause;\r\n  userStop.value = newUserStop;\r\n  isRecoveryRun.value = newIsRecoveryRun;\r\n  isInit.value = newIsInit;\r\n\r\n  if (isPause.value) {\r\n    btnStatus.value = 'isPause';\r\n  } else if (userStop.value && !isRecoveryRun.value) {\r\n    btnStatus.value = 'onRecover';\r\n  } else if (isInit.value === 'N' || isInit.value === '') {\r\n    btnStatus.value = 'isInit';\r\n  } else {\r\n    btnStatus.value = 'start';\r\n  }\r\n});\r\n\r\n\r\n//웹소켓으로 백엔드에 전송\r\nconst emitSocketData = async (type: string, payload: any) => {\r\n  await EventBus.publish('childEmitSocketData', payload);\r\n};\r\n\r\nconst sendSearchCardCount = () => {\r\n  const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n  const req = {\r\n    jobCmd: 'SEARCH_CARD_COUNT',\r\n    reqUserId: userId.value,\r\n    reqDttm: reqDttm,\r\n    testType: analysisType.value,\r\n  }\r\n  tcpReq().embedStatus.searchCardCount.reqUserId = userId.value;\r\n  tcpReq().embedStatus.searchCardCount.testType = analysisType.value;\r\n  EventBus.publish('childEmitSocketData', req);\r\n}\r\n\r\nconst toggleStartStop = (action: 'start' | 'stop', autoStart = '') => {\r\n  if (viewerCheck.value !== 'main' && window.FORCE_VIEWER !== 'main') return;\r\n\r\n  if (action === 'start') {\r\n    if (isPause.value) { // 일시정지인 상태일 경우 임베디드에게 상태값을 알려준다.\r\n\r\n      tcpReq().embedStatus.restart.bfSelectFiles = bfSelectFiles.value;\r\n      tcpReq().embedStatus.restart.reqUserId = userId.value;\r\n      emitSocketData('SEND_DATA', tcpReq().embedStatus.restart);\r\n      return;\r\n    }\r\n    // 실행 여부 체크\r\n    if (isRunningState.value && autoStart !== 'autoStart') {\r\n      showSuccessAlert(MESSAGES.IDS_ERROR_ALREADY_RUNNING);\r\n      return;\r\n    } else if (userStop.value) {\r\n      confirmMessage.value = MESSAGES.IDS_RECOVER_GRIPPER_CONDITION;\r\n      showConfirm.value = true;\r\n      return;\r\n    }\r\n    const rbcPositionMargin = sessionStorage.getItem('rbcPositionMargin');\r\n    const wbcPositionMargin = sessionStorage.getItem('wbcPositionMargin');\r\n    const pltPositionMargin = sessionStorage.getItem('pltPositionMargin');\r\n    const edgeShotType = sessionStorage.getItem('edgeShotType') || '0';\r\n    const autoStart = sessionStorage.getItem('autoStart') || 1;\r\n\r\n    let startAction = tcpReq().embedStatus.startAction;\r\n    Object.assign(startAction, {\r\n      testType: analysisType.value,\r\n      wbcCount: filteredWbcCount.value || wbcCount.value,\r\n      stitchCount: stitchCount.value,\r\n      reqUserId: userId.value,\r\n      rbcPositionMargin: rbcPositionMargin || '0',\r\n      wbcPositionMargin: wbcPositionMargin || '0',\r\n      pltPositionMargin: pltPositionMargin || '0',\r\n      edgeShotType:  edgeShotType || '0',\r\n    });\r\n\r\n    if (is100A.value) {\r\n      Object.assign(startAction, {\r\n        autoStart: Number(autoStart),\r\n      })\r\n    }\r\n\r\n    // 2: LowPower | 3: HighPower\r\n    if (window.PROJECT_TYPE === 'pb' && ['2', '3'].includes(edgeShotType)) {\r\n      const key = edgeShotType === '2' ? 'edgeShotLPCount' : 'edgeShotHPCount';\r\n      const defaultCount = edgeShotType === '2' ? '1' : '3';\r\n      const edgeShotCount = sessionStorage.getItem(key) || defaultCount;\r\n\r\n      Object.assign(startAction, { edgeShotCount });\r\n    }\r\n\r\n\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      startAction = {\r\n        \"jobCmd\": \"START\",\r\n        \"reqUserId\": userId.value,\r\n        \"reqDttm\": tcpReq().embedStatus.startAction.reqDttm,\r\n        \"orderInfo\": [{\r\n          \"orderId\": \"1\",\r\n          \"cassetNo\": \"\",\r\n          \"slotNo\": \"1\",\r\n          \"bmNo\": \"1\",\r\n          \"patientId\": \"\",\r\n          \"patientNm\": \"\",\r\n          \"age\": \"1\",\r\n          \"gender\": \"01\",\r\n          \"testType\": '02',\r\n          \"stainType\": \"01\",\r\n          \"userInputStainType\": \"\",\r\n          \"analysisType\": analysisType.value,\r\n          \"bmSamplingSide\": \"01\",\r\n          \"cellCount\": wbcCount.value,\r\n          \"department\": \"s\",\r\n          \"stitchCount\": stitchCount.value,\r\n        }],\r\n        \"runningMode\": \"00\",\r\n        \"positionMargin\": \"0\"\r\n      }\r\n    }\r\n\r\n    if (isInit.value === 'Y') { // 초기화 여부 체크 초기화가 되어있는 상태이면 실행\r\n      // 웹소켓으로 백엔드에 전송\r\n      emitSocketData('SEND_DATA', startAction);\r\n      const InfoData = {\r\n        startEmbedded: true,\r\n      }\r\n      // 시작 버튼이 눌리면 연속적으로 실행정보, 장비정보를 요청한다.\r\n      store.dispatch('commonModule/setCommonInfo', InfoData);\r\n    }\r\n  } else {\r\n    // 장비 중단\r\n    if (!isRunningState.value) {\r\n      showSuccessAlert(MESSAGES.IDS_ERROR_STOP_PROCESS);\r\n      return;\r\n    }\r\n    store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: true});\r\n    tcpReq().embedStatus.stop.reqUserId = userId.value;\r\n    emitSocketData('SEND_DATA', tcpReq().embedStatus.stop);\r\n\r\n  }\r\n\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorALert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  showConfirm.value = false;\r\n  tcpReq().embedStatus.recovery.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.recovery);\r\n}\r\n\r\nconst sendInit = () => { // 장비 초기화 진행\r\n  if (viewerCheck.value !== 'main' && window.FORCE_VIEWER !== 'main') return;\r\n  if (isInit.value === 'Y') {\r\n    showSuccessAlert(MESSAGES.alreadyInitialized);\r\n    return;\r\n  }\r\n\r\n  tcpReq().embedStatus.init.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.init);\r\n  emits('initDataChangeText', true);\r\n}\r\n\r\nconst sendRewindBelt = async (isRewindingBelt: boolean) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { isRewindingBelt: isRewindingBelt });\r\n}\r\n\r\nconst initData = async () => {\r\n  const newObj = {...embeddedStatusJobCmd.value }\r\n  isInit.value = newObj.isInit;\r\n  isPause.value = newObj.isPause;\r\n  userStop.value = newObj.userStop;\r\n  isRecoveryRun.value = newObj.isRecoveryRun;\r\n  showStopBtn.value = (isInit.value === 'N' || isInit.value === '') && !isRunningState.value;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        analysisType.value = data.analysisType;\r\n        await store.dispatch('commonModule/setCommonInfo', { analysisType: analysisType.value });\r\n        if (window.PROJECT_TYPE === 'bm') {\r\n          wbcCount.value = data.diffCellAnalyzingCount;\r\n        } else {\r\n          switch (analysisType.value) {\r\n            case '01':\r\n              wbcCount.value = data.diffCellAnalyzingCount;\r\n              break;\r\n            case '04':\r\n              wbcCount.value = data.pbsCellAnalyzingCount;\r\n              break;\r\n            default:\r\n              wbcCount.value = data.bfCellAnalyzingCount;\r\n          }\r\n        }\r\n\r\n        stitchCount.value = data.stitchCount\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst setWbcRunningCount = async () => {\r\n  // 0011 - 인하대인 경우 -> WbcRunningCount로 분류\r\n  if (window.PROJECT_TYPE !== 'pb' || siteCd.value !== '0011') return;\r\n\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runCountData = runCountResult.data;\r\n\r\n      if (runCountData && runCountData?.length > 0) {\r\n        const filteredRunCountData: any = runCountData.filter(data => data.min <= wbcCount.value && wbcCount.value <= data.max)[0];\r\n        if (filteredRunCountData.wbcTargetCount) {\r\n          filteredWbcCount.value = filteredRunCountData.wbcTargetCount;\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const deviceData = await getDeviceInfoApi();\r\n    siteCd.value = deviceData.data.siteCd;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./execute.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./execute.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, vShow as _vShow, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = { class: \"circular-progress-bar mt20\" }\nconst _hoisted_2 = {\n  class: \"progress-ring\",\n  width: \"120\",\n  height: \"120\"\n}\nconst _hoisted_3 = {\n  id: \"gradient\",\n  x1: \"0%\",\n  y1: \"0%\",\n  x2: \"100%\",\n  y2: \"100%\"\n}\nconst _hoisted_4 = [\"stop-color\"]\nconst _hoisted_5 = [\"cx\", \"cy\", \"r\", \"stroke-width\"]\nconst _hoisted_6 = [\"cx\", \"cy\", \"r\", \"stroke-width\", \"stroke-dasharray\", \"stroke-dashoffset\"]\nconst _hoisted_7 = { class: \"slideTime\" }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"slideCardWrap\"\n}\nconst _hoisted_9 = { class: \"slideContent\" }\nconst _hoisted_10 = { class: \"mt10\" }\nconst _hoisted_11 = { class: \"slideContent\" }\nconst _hoisted_12 = { class: \"mt10\" }\nconst _hoisted_13 = {\n  key: 1,\n  class: \"slideCardWrap\"\n}\nconst _hoisted_14 = { class: \"slideContent pb100a\" }\n\nimport { ref, onMounted, onBeforeUnmount, watch, computed, onBeforeMount } from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport { SLIDE_CARD_12A, SLIDE_CARD_100A } from \"@/common/defines/constants/analysis\";\r\n\r\n// 스토어\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'workingView',\n  props: ['parsedData', 'pb100aCassette'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst initValData = computed(() => store.state.commonModule.initValData);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst props = __props;\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(SLIDE_CARD_12A);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst isBm = ref(false);\r\nconst fixEqStatCd = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\n\r\nwatch(() => embeddedStatusJobCmd.value?.userStop, (userStop) => {\r\n  if (userStop) {\r\n    progressColor.value = 'red';\r\n    const nnn = pbVersion.value === '100a' ? SLIDE_CARD_100A : SLIDE_CARD_12A;\r\n    slideCardData.value = {\r\n      INPUT: nnn.INPUT.map(item => ({ ...item, slotState: '0' })),\r\n      OUTPUT: nnn.OUTPUT.map(item => ({ ...item, slotState: '0' }))\r\n    };\r\n\r\n  } else {\r\n    progressColor.value = '#00c2ff';\r\n  }\r\n})\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  if (sysInfo.eqStatCd === '02') {\r\n    fixEqStatCd.value = false;\r\n  }\r\n\r\n  if (!fixEqStatCd.value) {\r\n    eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  }\r\n\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.INPUT);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.OUTPUT);\r\n  } else {\r\n    dashoffset.value = circumference.value;\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.INPUT);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.OUTPUT);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if (newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n    dashoffset.value = circumference.value;\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = window.PROJECT_TYPE === 'pb' ? Number(currentSlot.maxWbcCount) : Number(currentSlot.cellCount);\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = calculateDashOffset(percentage);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(() => eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\nwatch(() => initValData.value, (newVal) => {\r\n  if (newVal) {\r\n    eqStatCd.value = '05';\r\n  }\r\n  fixEqStatCd.value = newVal;\r\n})\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nonBeforeMount(() => {\r\n  pbVersion.value = window.MACHINE_VERSION;\r\n  slideCardData.value = pbVersion.value === '100a' ? SLIDE_CARD_100A : SLIDE_CARD_12A;\r\n})\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.INPUT.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.OUTPUT.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  isBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst calculateDashOffset = (percentage: number) => circumference.value * (1 - percentage / 100);\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', { slideTime: getCountToTime(elapsedTimeCount.value) });\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nonBeforeUnmount(() => {\r\n  if (countingInterval) {\r\n    clearInterval(countingInterval);\r\n    countingInterval = null;\r\n  }\r\n  if (countingIntervalTotal) {\r\n    clearInterval(countingIntervalTotal);\r\n    countingIntervalTotal = null;\r\n  }\r\n});\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _cache[6] || (_cache[6] = _createElementVNode(\"h3\", { class: \"titleText\" }, \"Working View\", -1)),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"p\", {\n        class: _normalizeClass({'blinkColor': isBlinking.value})\n      }, _toDisplayString(changeWqStatCd()), 3),\n      _createElementVNode(\"p\", null, _toDisplayString(wbcCount.value), 1),\n      _createElementVNode(\"div\", _hoisted_1, [\n        (_openBlock(), _createElementBlock(\"svg\", _hoisted_2, [\n          _createElementVNode(\"defs\", null, [\n            _createElementVNode(\"linearGradient\", _hoisted_3, [\n              (!embeddedStatusJobCmd.value.value?.userStop)\n                ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                    _cache[0] || (_cache[0] = _createElementVNode(\"stop\", {\n                      offset: \"0%\",\n                      \"stop-color\": \"#56ccf2\"\n                    }, null, -1)),\n                    _cache[1] || (_cache[1] = _createElementVNode(\"stop\", {\n                      offset: \"50%\",\n                      \"stop-color\": \"#35b0b6\"\n                    }, null, -1)),\n                    _cache[2] || (_cache[2] = _createElementVNode(\"stop\", {\n                      offset: \"100%\",\n                      \"stop-color\": \"#2f80ed\"\n                    }, null, -1))\n                  ], 64))\n                : (_openBlock(), _createElementBlock(\"stop\", {\n                    key: 1,\n                    offset: \"100%\",\n                    \"stop-color\": progressColor.value\n                  }, null, 8, _hoisted_4)),\n              _cache[3] || (_cache[3] = _createElementVNode(\"animateTransform\", {\n                attributeName: \"gradientTransform\",\n                type: \"rotate\",\n                from: \"0 0.5 0.5\",\n                to: \"360 0.5 0.5\",\n                dur: \"2s\",\n                repeatCount: \"indefinite\"\n              }, null, -1))\n            ]),\n            _cache[4] || (_cache[4] = _createElementVNode(\"filter\", { id: \"shadow\" }, [\n              _createElementVNode(\"feDropShadow\", {\n                dx: \"0\",\n                dy: \"0\",\n                stdDeviation: \"6\",\n                \"flood-color\": \"rgba(0, 0, 0, 0.3)\"\n              })\n            ], -1))\n          ]),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"#ccc\",\n            fill: \"none\"\n          }, null, 8, _hoisted_5),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"url(#gradient)\",\n            fill: \"none\",\n            \"stroke-dasharray\": circumference.value,\n            \"stroke-dashoffset\": dashoffset.value,\n            filter: \"url(#shadow)\"\n          }, null, 8, _hoisted_6)\n        ])),\n        _createElementVNode(\"p\", _hoisted_7, _toDisplayString(timeDataGet.value.slideTime), 1)\n      ]),\n      _cache[5] || (_cache[5] = _createElementVNode(\"p\", { class: \"slideTime1 mt20\" }, \"Total Time\", -1)),\n      _createElementVNode(\"p\", null, _toDisplayString(timeDataGet.value.totalSlideTime), 1)\n    ]),\n    (pbVersion.value === '12a')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _createElementVNode(\"ul\", _hoisted_9, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.INPUT, (item) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: item.slotNo,\n                class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n              }, null, 2))\n            }), 128)),\n            _withDirectives(_createElementVNode(\"p\", _hoisted_10, \"INPUT\", 512), [\n              [_vShow, commonDataGet.value.isRunningState]\n            ])\n          ]),\n          _createElementVNode(\"ul\", _hoisted_11, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.OUTPUT, (item) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: item.slotNo,\n                class: _normalizeClass(getSlotStateClass(item.slotState,'output'))\n              }, null, 2))\n            }), 128)),\n            _withDirectives(_createElementVNode(\"p\", _hoisted_12, \"OUTPUT\", 512), [\n              [_vShow, commonDataGet.value.isRunningState]\n            ])\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n          _createElementVNode(\"ul\", _hoisted_14, [\n            _withDirectives(_createElementVNode(\"p\", null, \"INPUT : \" + _toDisplayString(casExistChangeText(iCasExist.value)), 513), [\n              [_vShow, commonDataGet.value.isRunningState]\n            ]),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([...slideCardData.value.INPUT].reverse(), (item) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: item.slotNo,\n                class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n              }, null, 2))\n            }), 128)),\n            _withDirectives(_createElementVNode(\"p\", { class: \"mt10\" }, \"OUTPUT : \" + _toDisplayString(casExistChangeText(oCasExist.value)), 513), [\n              [_vShow, commonDataGet.value.isRunningState]\n            ])\n          ])\n        ]))\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\">Working View</h3>\r\n    <div>\r\n      <p :class=\"{'blinkColor': isBlinking}\">{{ changeWqStatCd() }}</p>\r\n      <p>{{ wbcCount }}</p>\r\n\r\n      <div class=\"circular-progress-bar mt20\">\r\n        <svg class=\"progress-ring\" width=\"120\" height=\"120\">\r\n          <!-- Define Rotating Gradient -->\r\n          <defs>\r\n\r\n            <!-- Gradient for Progress Circle -->\r\n            <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n              <template v-if=\"!embeddedStatusJobCmd.value?.userStop\">\r\n                <stop offset=\"0%\" stop-color=\"#56ccf2\" />\r\n                <stop offset=\"50%\" stop-color=\"#35b0b6\" />\r\n                <stop offset=\"100%\" stop-color=\"#2f80ed\" />\r\n              </template>\r\n              <template v-else>\r\n                <stop offset=\"100%\" :stop-color=\"progressColor\" />\r\n              </template>\r\n\r\n              <!-- Rotate the gradient over time -->\r\n              <animateTransform\r\n                  attributeName=\"gradientTransform\"\r\n                  type=\"rotate\"\r\n                  from=\"0 0.5 0.5\"\r\n                  to=\"360 0.5 0.5\"\r\n                  dur=\"2s\"\r\n                  repeatCount=\"indefinite\"\r\n              />\r\n            </linearGradient>\r\n\r\n            <!-- Drop Shadow Filter -->\r\n            <filter id=\"shadow\">\r\n              <feDropShadow dx=\"0\" dy=\"0\" stdDeviation=\"6\" flood-color=\"rgba(0, 0, 0, 0.3)\" />\r\n            </filter>\r\n          </defs>\r\n\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"#ccc\"\r\n              fill=\"none\"\r\n          />\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"url(#gradient)\"\r\n              fill=\"none\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"dashoffset\"\r\n              filter=\"url(#shadow)\"\r\n          />\r\n        </svg>\r\n        <p class=\"slideTime\"> {{ timeDataGet.slideTime }} </p>\r\n      </div>\r\n      <p class=\"slideTime1 mt20\">Total Time</p>\r\n      <p> {{ timeDataGet.totalSlideTime }} </p>\r\n\r\n    </div>\r\n    <div class='slideCardWrap' v-if=\"pbVersion === '12a'\">\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.INPUT\" :key=\"item.slotNo\" :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p v-show=\"commonDataGet.isRunningState\" class=\"mt10\">INPUT</p>\r\n      </ul>\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.OUTPUT\" :key=\"item.slotNo\" :class=\"getSlotStateClass(item.slotState,'output')\"></li>\r\n        <p v-show=\"commonDataGet.isRunningState\" class=\"mt10\">OUTPUT</p>\r\n      </ul>\r\n    </div>\r\n    <div class='slideCardWrap' v-else>\r\n      <ul class='slideContent pb100a'>\r\n        <p v-show=\"commonDataGet.isRunningState\">INPUT : {{ casExistChangeText(iCasExist) }}</p>\r\n        <li v-for=\"item in [...slideCardData.INPUT].reverse()\" :key=\"item.slotNo\" :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p v-show=\"commonDataGet.isRunningState\" class=\"mt10\">OUTPUT : {{ casExistChangeText(oCasExist) }}</p>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, onBeforeUnmount, watch, computed, defineProps, onBeforeMount } from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport { SLIDE_CARD_12A, SLIDE_CARD_100A } from \"@/common/defines/constants/analysis\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst initValData = computed(() => store.state.commonModule.initValData);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst props = defineProps(['parsedData', 'pb100aCassette']);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(SLIDE_CARD_12A);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst isBm = ref(false);\r\nconst fixEqStatCd = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\n\r\nwatch(() => embeddedStatusJobCmd.value?.userStop, (userStop) => {\r\n  if (userStop) {\r\n    progressColor.value = 'red';\r\n    const nnn = pbVersion.value === '100a' ? SLIDE_CARD_100A : SLIDE_CARD_12A;\r\n    slideCardData.value = {\r\n      INPUT: nnn.INPUT.map(item => ({ ...item, slotState: '0' })),\r\n      OUTPUT: nnn.OUTPUT.map(item => ({ ...item, slotState: '0' }))\r\n    };\r\n\r\n  } else {\r\n    progressColor.value = '#00c2ff';\r\n  }\r\n})\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  if (sysInfo.eqStatCd === '02') {\r\n    fixEqStatCd.value = false;\r\n  }\r\n\r\n  if (!fixEqStatCd.value) {\r\n    eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  }\r\n\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.INPUT);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.OUTPUT);\r\n  } else {\r\n    dashoffset.value = circumference.value;\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.INPUT);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.OUTPUT);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if (newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n    dashoffset.value = circumference.value;\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = window.PROJECT_TYPE === 'pb' ? Number(currentSlot.maxWbcCount) : Number(currentSlot.cellCount);\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = calculateDashOffset(percentage);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(() => eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\nwatch(() => initValData.value, (newVal) => {\r\n  if (newVal) {\r\n    eqStatCd.value = '05';\r\n  }\r\n  fixEqStatCd.value = newVal;\r\n})\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nonBeforeMount(() => {\r\n  pbVersion.value = window.MACHINE_VERSION;\r\n  slideCardData.value = pbVersion.value === '100a' ? SLIDE_CARD_100A : SLIDE_CARD_12A;\r\n})\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.INPUT.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.OUTPUT.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  isBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst calculateDashOffset = (percentage: number) => circumference.value * (1 - percentage / 100);\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', { slideTime: getCountToTime(elapsedTimeCount.value) });\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nonBeforeUnmount(() => {\r\n  if (countingInterval) {\r\n    clearInterval(countingInterval);\r\n    countingInterval = null;\r\n  }\r\n  if (countingIntervalTotal) {\r\n    clearInterval(countingIntervalTotal);\r\n    countingIntervalTotal = null;\r\n  }\r\n});\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./workingView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./workingView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, unref as _unref, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"orderListTableContainer\" }\nconst _hoisted_2 = { class: \"orderListTable\" }\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = { key: 1 }\n\nimport { computed, ref, watch } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { stringToDateTime } from \"@/common/lib/utils/conversionDataUtils\";\r\nimport { formatDateString } from \"@/common/lib/utils/dateUtils\";\r\nimport { RUNNING_INFO_INTERFACE_CODE } from \"@/common/defines/constants/commonCodeList\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"../../../common/defines/constants/siteCd\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'orderList',\n  props: ['parsedData', 'startStatus', 'pb100aCassette'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst props = __props;\r\nconst dspOrderList = ref<any>([]);\r\n\r\nwatch(() => props.parsedData, (newVal) => {\r\n      runningInfoGet(newVal);\r\n    }, {deep: true});\r\n\r\nwatch(() => props.pb100aCassette, (newVal) => {\r\n      if (newVal === 'reset') {\r\n        dspOrderList.value = [];\r\n        console.log('pb100aCassette 초기화', dspOrderList.value)\r\n      }\r\n    }, {deep: true});\r\n\r\n\r\nwatch(() => props.startStatus, (newVal) => {\r\n      if (newVal === true) {\r\n        dspOrderList.value = [];\r\n      }\r\n    }, {deep: true});\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if (parsedData.jobCmd === 'RUNNING_INFO') {\r\n    const currentSlot = parsedData?.slotInfo\r\n    if (currentSlot) {\r\n      const barcodeNo = currentSlot.barcodeNo;\r\n      const existingItemIndex = dspOrderList.value.findIndex((item: any) => item.barcodeId === barcodeNo);\r\n      const inputCassetteArr = [...parsedData?.iCasStat].filter((id: string) => id !== '0');\r\n      if (existingItemIndex === -1 && barcodeNo !== '') {\r\n\r\n        /** 만약 오류가 발생해서 OrderList가 10개 초과일 경우 화면에서 보여주는 OrderList를 10개까지만 보여주는 코드 */\r\n        if (dspOrderList.value.length > 10) dspOrderList.value = [];\r\n\r\n        if (dspOrderList.value && dspOrderList.value.length > 0) {\r\n          // Core에서 받는 stateCd가 저장되는 타이밍을 잡기 어려워 추가한 stateCd 변경 코드\r\n          const completedCassetteIndex = inputCassetteArr.lastIndexOf('3');\r\n          if (completedCassetteIndex !== -1) {\r\n            dspOrderList.value[completedCassetteIndex].stateCd = RUNNING_INFO_INTERFACE_CODE.I_CAS_STAT_ID_LIST[3].cdNm;\r\n          }\r\n        }\r\n\r\n        const stateCdObj = RUNNING_INFO_INTERFACE_CODE.I_CAS_STAT_ID_LIST.find((code: {cd: string; cdNm: string}) => code.cd === inputCassetteArr[dspOrderList.value.length]);\r\n\r\n        dspOrderList.value.push({\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm) || 0,\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm) || 0,\r\n          stateCd: stateCdObj?.cdNm,\r\n        });\r\n      } else {\r\n        // for (const [dspOrderListIndex, orderItem] of dspOrderList.value.entries()) {\r\n        //   const localStateCd = RUNNING_INFO_INTERFACE_CODE.I_CAS_STAT_ID_LIST.find((code: {cd: string; cdNm: string}) => code.cd === inputCassetteArr[dspOrderListIndex])?.cdNm\r\n        //   orderItem.stateCd = localStateCd;\r\n        // }\r\n        const stateCdObj = RUNNING_INFO_INTERFACE_CODE.I_CAS_STAT_ID_LIST.find((code: {cd: string; cdNm: string}) => code.cd === inputCassetteArr[existingItemIndex]);\r\n        if (dspOrderList.value && dspOrderList.value.length > 0) {\r\n          if (dspOrderList.value[existingItemIndex]?.stateCd) {\r\n            dspOrderList.value[existingItemIndex].stateCd = stateCdObj?.cdNm;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[2] || (_cache[2] = _createElementVNode(\"h3\", { class: \"titleText\" }, \"Order List\", -1)),\n    _createElementVNode(\"table\", _hoisted_2, [\n      _cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [\n        _createElementVNode(\"tr\", null, [\n          _createElementVNode(\"th\", null, \"Barcode ID\"),\n          _createElementVNode(\"th\", null, \"Patient Name\"),\n          _createElementVNode(\"th\", null, \"Order Date\"),\n          _createElementVNode(\"th\", null, \"State\")\n        ])\n      ], -1)),\n      (dspOrderList.value.length > 0)\n        ? (_openBlock(), _createElementBlock(\"tbody\", _hoisted_3, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspOrderList.value, (slot, index) => {\n              return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.barcodeId), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.patientName), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_unref(HOSPITAL_SITE_CD_BY_NAME)['인천길병원'] === siteCd.value\r\n              ? _unref(formatDateString)(slot?.analyzedDttm)\r\n              : _unref(formatDateString)(slot?.orderDate)), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.stateCd), 1)\n              ]))\n            }), 128))\n          ]))\n        : (_openBlock(), _createElementBlock(\"tbody\", _hoisted_4, _cache[0] || (_cache[0] = [\n            _createElementVNode(\"tr\", null, [\n              _createElementVNode(\"td\", { colspan: \"4\" }, \"Data is empty.\")\n            ], -1)\n          ])))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"orderListTableContainer\">\r\n    <h3 class=\"titleText\">Order List</h3>\r\n    <table class=\"orderListTable\">\r\n      <thead>\r\n      <tr>\r\n        <th>Barcode ID</th>\r\n        <th>Patient Name</th>\r\n        <th>Order Date</th>\r\n        <th>State</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody v-if=\"dspOrderList.length > 0\">\r\n        <tr v-for=\"(slot, index) in dspOrderList\" :key=\"index\">\r\n          <td>{{ slot?.barcodeId }}</td>\r\n          <td>{{ slot?.patientName }}</td>\r\n          <!--    0019는 길병원(검사 끝나는 시간으로 해달라는 길병원 요구)    -->\r\n          <td>\r\n            {{ HOSPITAL_SITE_CD_BY_NAME['인천길병원'] === siteCd\r\n              ? formatDateString(slot?.analyzedDttm)\r\n              : formatDateString(slot?.orderDate)\r\n            }}\r\n          </td>\r\n          <td>{{ slot?.stateCd }}</td>\r\n        </tr>\r\n      </tbody>\r\n      <tbody v-else>\r\n      <tr>\r\n        <td colspan=\"4\">Data is empty.</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, defineProps, ref, watch } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { stringToDateTime } from \"@/common/lib/utils/conversionDataUtils\";\r\nimport { formatDateString } from \"@/common/lib/utils/dateUtils\";\r\nimport { RUNNING_INFO_INTERFACE_CODE } from \"@/common/defines/constants/commonCodeList\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"../../../common/defines/constants/siteCd\";\r\n\r\nconst store = useStore();\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst props = defineProps(['parsedData', 'startStatus', 'pb100aCassette']);\r\nconst dspOrderList = ref<any>([]);\r\n\r\nwatch(() => props.parsedData, (newVal) => {\r\n      runningInfoGet(newVal);\r\n    }, {deep: true});\r\n\r\nwatch(() => props.pb100aCassette, (newVal) => {\r\n      if (newVal === 'reset') {\r\n        dspOrderList.value = [];\r\n        console.log('pb100aCassette 초기화', dspOrderList.value)\r\n      }\r\n    }, {deep: true});\r\n\r\n\r\nwatch(() => props.startStatus, (newVal) => {\r\n      if (newVal === true) {\r\n        dspOrderList.value = [];\r\n      }\r\n    }, {deep: true});\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if (parsedData.jobCmd === 'RUNNING_INFO') {\r\n    const currentSlot = parsedData?.slotInfo\r\n    if (currentSlot) {\r\n      const barcodeNo = currentSlot.barcodeNo;\r\n      const existingItemIndex = dspOrderList.value.findIndex((item: any) => item.barcodeId === barcodeNo);\r\n      const inputCassetteArr = [...parsedData?.iCasStat].filter((id: string) => id !== '0');\r\n      if (existingItemIndex === -1 && barcodeNo !== '') {\r\n\r\n        /** 만약 오류가 발생해서 OrderList가 10개 초과일 경우 화면에서 보여주는 OrderList를 10개까지만 보여주는 코드 */\r\n        if (dspOrderList.value.length > 10) dspOrderList.value = [];\r\n\r\n        if (dspOrderList.value && dspOrderList.value.length > 0) {\r\n          // Core에서 받는 stateCd가 저장되는 타이밍을 잡기 어려워 추가한 stateCd 변경 코드\r\n          const completedCassetteIndex = inputCassetteArr.lastIndexOf('3');\r\n          if (completedCassetteIndex !== -1) {\r\n            dspOrderList.value[completedCassetteIndex].stateCd = RUNNING_INFO_INTERFACE_CODE.I_CAS_STAT_ID_LIST[3].cdNm;\r\n          }\r\n        }\r\n\r\n        const stateCdObj = RUNNING_INFO_INTERFACE_CODE.I_CAS_STAT_ID_LIST.find((code: {cd: string; cdNm: string}) => code.cd === inputCassetteArr[dspOrderList.value.length]);\r\n\r\n        dspOrderList.value.push({\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm) || 0,\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm) || 0,\r\n          stateCd: stateCdObj?.cdNm,\r\n        });\r\n      } else {\r\n        // for (const [dspOrderListIndex, orderItem] of dspOrderList.value.entries()) {\r\n        //   const localStateCd = RUNNING_INFO_INTERFACE_CODE.I_CAS_STAT_ID_LIST.find((code: {cd: string; cdNm: string}) => code.cd === inputCassetteArr[dspOrderListIndex])?.cdNm\r\n        //   orderItem.stateCd = localStateCd;\r\n        // }\r\n        const stateCdObj = RUNNING_INFO_INTERFACE_CODE.I_CAS_STAT_ID_LIST.find((code: {cd: string; cdNm: string}) => code.cd === inputCassetteArr[existingItemIndex]);\r\n        if (dspOrderList.value && dspOrderList.value.length > 0) {\r\n          if (dspOrderList.value[existingItemIndex]?.stateCd) {\r\n            dspOrderList.value[existingItemIndex].stateCd = stateCdObj?.cdNm;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n</script>","import script from \"./orderList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./orderList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// wbcclassificationModule.ts\r\nimport {Commit} from 'vuex';\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\nexport interface WbcInfo {\r\n    barcodeID?: string;\r\n    id: string;\r\n    abbreviation: string;\r\n    title: string;\r\n    fullNm: string;\r\n    count: string | number;\r\n    percent?: string | number;\r\n    images?: Image[];\r\n}\r\n\r\nexport interface BmInfo {\r\n    barcodeID?: string;\r\n    id: string;\r\n    abbreviation: string;\r\n    fullNm: string;\r\n    count: string | number;\r\n    percent?: string | number;\r\n    images?: Image[];\r\n}\r\n\r\ninterface WbcClassificationState {\r\n    wbcInfo: WbcInfo | null;\r\n}\r\n\r\ninterface WbcClassificationModule {\r\n    namespaced: true;\r\n    state: () => WbcClassificationState;\r\n    mutations: {\r\n        setWbcInfo: (state: WbcClassificationState, value: WbcInfo) => void;\r\n    };\r\n    actions: {\r\n        setWbcInfo: (context: { commit: Commit }, payload: WbcInfo) => void;\r\n    };\r\n}\r\n\r\nexport const wbcClassificationModule: WbcClassificationModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        wbcInfo: null,\r\n    }),\r\n    mutations: {\r\n        setWbcInfo(state: WbcClassificationState, value: WbcInfo): void {\r\n            state.wbcInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setWbcInfo({commit}: { commit: Commit }, payload: WbcInfo): void {\r\n            commit('setWbcInfo', payload);\r\n        },\r\n    },\r\n};\r\n\r\nexport interface DefaultBasicWbcArrType {\r\n    id: string,\r\n    abbreviation: string,\r\n    fullNm: string,\r\n    key: string,\r\n    orderIdx: number\r\n}\r\n\r\n\r\nexport const basicWbcArr: DefaultBasicWbcArrType[] = [\r\n    {\r\n        id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n    }, {\r\n        id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n    }, {\r\n        id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n    }, {\r\n        id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n    }, {\r\n        id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n    }, {\r\n        id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n    }, {\r\n        id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n    }, {\r\n        id: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', key: '', orderIdx: 8\r\n    }, {\r\n        id: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 9\r\n    }, {\r\n        id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 10\r\n    }, {\r\n        id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 11\r\n    }, {\r\n        id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 12\r\n    }, {\r\n        id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 13\r\n    }, {\r\n        id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 14\r\n    }, {\r\n        id: '12', abbreviation: 'NR', fullNm: 'nRBC', key: '', orderIdx: 15\r\n    }, {\r\n        id: '13', abbreviation: 'GP', fullNm: 'Giant platelet', key: '', orderIdx: 16\r\n    }, {\r\n        id: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', key: '', orderIdx: 17\r\n    }, {\r\n        id: '16', abbreviation: 'MA', fullNm: 'Malaria', key: '', orderIdx: 18\r\n    }, {\r\n        id: '15', abbreviation: 'AR', fullNm: 'Artifact', key: '', orderIdx: 19\r\n    }, {\r\n        id: '17', abbreviation: 'SM', fullNm: 'Smudge', key: '', orderIdx: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassList: DefaultBasicWbcArrType[] = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n}, {\r\n    id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n}, {\r\n    id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n}, {\r\n    id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n}, {\r\n    id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n}, {\r\n    id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n}, {\r\n    id: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 8\r\n}, {\r\n    id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 9\r\n}, {\r\n    id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 10\r\n}, {\r\n    id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 11\r\n}, {\r\n    id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 12\r\n}, {\r\n    id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 13\r\n}, {\r\n    id: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', key: '', orderIdx: 14\r\n}, {\r\n    id: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', key: '', orderIdx: 15\r\n}, {\r\n    id: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', key: '', orderIdx: 16\r\n}, {\r\n    id: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', key: '', orderIdx: 17\r\n}, {\r\n    id: '16', abbreviation: 'HC', fullNm: 'Histiocyte', key: '', orderIdx: 18\r\n}, {\r\n    id: '17', abbreviation: 'OT', fullNm: 'Others', key: '', orderIdx: 19\r\n}]\r\n\r\nexport const defaultWbcClassList = [\r\n    { classId: '01', abbreviation: 'NE', fullNm: 'Neutrophil', orderIdx: 1 },\r\n    { classId: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', orderIdx: 2 },\r\n    { classId: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', orderIdx: 3 },\r\n    { classId: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', orderIdx: 4 },\r\n    { classId: '03', abbreviation: 'MY', fullNm: 'Myelocyte', orderIdx: 5 },\r\n    { classId: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', orderIdx: 6 },\r\n    { classId: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', orderIdx: 7 },\r\n    { classId: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', orderIdx: 8 },\r\n    { classId: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', orderIdx: 9 },\r\n    { classId: '07', abbreviation: 'MO', fullNm: 'Monocyte', orderIdx: 10 },\r\n    { classId: '08', abbreviation: 'EO', fullNm: 'Eosinophil', orderIdx: 11 },\r\n    { classId: '09', abbreviation: 'BA', fullNm: 'Basophil', orderIdx: 12 },\r\n    { classId: '10', abbreviation: 'BL', fullNm: 'Blast', orderIdx: 13 },\r\n    { classId: '11', abbreviation: 'PC', fullNm: 'Plasma cell', orderIdx: 14 },\r\n    { classId: '12', abbreviation: 'NR', fullNm: 'nRBC', orderIdx: 15 },\r\n    { classId: '13', abbreviation: 'GP', fullNm: 'Giant platelet', orderIdx: 16 },\r\n    { classId: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', orderIdx: 17 },\r\n    { classId: '16', abbreviation: 'MA', fullNm: 'Malaria', orderIdx: 18 },\r\n    { classId: '15', abbreviation: 'AR', fullNm: 'Artifact', orderIdx: 19 },\r\n    { classId: '17', abbreviation: 'SM', fullNm: 'Smudge', orderIdx: 20 },\r\n]\r\n\r\nexport const defaultBmClassList = [\r\n    { classId: '01', abbreviation: 'NE', fullNm: 'Neutrophil', orderIdx: 1 },\r\n    { classId: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', orderIdx: 2 },\r\n    { classId: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', orderIdx: 3 },\r\n    { classId: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', orderIdx: 4 },\r\n    { classId: '03', abbreviation: 'MY', fullNm: 'Myelocyte', orderIdx: 5 },\r\n    { classId: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', orderIdx: 6 },\r\n    { classId: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', orderIdx: 7 },\r\n    { classId: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', orderIdx: 8 },\r\n    { classId: '07', abbreviation: 'MO', fullNm: 'Monocyte', orderIdx: 9 },\r\n    { classId: '08', abbreviation: 'EO', fullNm: 'Eosinophil', orderIdx: 10 },\r\n    { classId: '09', abbreviation: 'BA', fullNm: 'Basophil', orderIdx: 11 },\r\n    { classId: '10', abbreviation: 'BL', fullNm: 'Blast', orderIdx: 12 },\r\n    { classId: '11', abbreviation: 'PC', fullNm: 'Plasma cell', orderIdx: 13 },\r\n    { classId: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', orderIdx: 14 },\r\n    { classId: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', orderIdx: 15 },\r\n    { classId: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', orderIdx: 16 },\r\n    { classId: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', orderIdx: 17 },\r\n    { classId: '16', abbreviation: 'HC', fullNm: 'Histiocyte', orderIdx: 18 },\r\n    { classId: '17', abbreviation: 'OT', fullNm: 'Others', orderIdx: 19 }\r\n];\r\n\r\nexport const basicWbcArrClint = [\r\n    {\r\n        id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n    }, {\r\n        id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n    }, {\r\n        id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n    }, {\r\n        id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, key: '', order: 4\r\n    }, {\r\n        id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, key: '', order: 5\r\n    }, {\r\n        id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, key: '', order: 6\r\n    }, {\r\n        id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 7\r\n    }, {\r\n        id: '61', title: 'LR', name: 'Reactive lymphocyte', count: 0, percent: 0, key: '', order: 8\r\n    }, {\r\n        id: '62', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, key: '', order: 9\r\n    }, {\r\n        id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 10\r\n    }, {\r\n        id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 11\r\n    }, {\r\n        id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 12\r\n    }, {\r\n        id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 13\r\n    }, {\r\n        id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 14\r\n    }, {\r\n        id: '12', title: 'NR', name: 'nRBC', count: 0, percent: 0, key: '', order: 15\r\n    }, {\r\n        id: '13', title: 'GP', name: 'Giant platelet', count: 0, percent: 0, key: '', order: 16\r\n    }, {\r\n        id: '14', title: 'PA', name: 'Platelet aggregation', count: 0, percent: 0, key: '', order: 17\r\n    }, {\r\n        id: '16', title: 'MA', name: 'Malaria', count: 0, percent: 0, key: '', order: 18\r\n    }, {\r\n        id: '15', title: 'AR', name: 'Artifact', count: 0, percent: 0, key: '', order: 19\r\n    }, {\r\n        id: '17', title: 'SM', name: 'Smudge', count: 0, percent: 0, key: '', order: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassListClint = [\r\n{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, order: 1\r\n}, {\r\n    id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, order: 4\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, order: 5\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, order: 6\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, order: 7\r\n}, {\r\n    id: '06', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, order: 8\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, order: 9\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, order: 10\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, order: 11\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, order: 12\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, order: 13\r\n}, {\r\n    id: '12', title: 'ON', name: 'Orthochromic Normoblast', count: 0, percent: 0, order: 14\r\n}, {\r\n    id: '13', title: 'PN', name: 'Polychromic Normoblast', count: 0, percent: 0, order: 15\r\n}, {\r\n    id: '14', title: 'BN', name: 'Basophilic Normoblast', count: 0, percent: 0, order: 16\r\n}, {\r\n    id: '15', title: 'PE', name: 'Proerythroblast', count: 0, percent: 0, order: 17\r\n}, {\r\n    id: '16', title: 'HC', name: 'Histiocyte', count: 0, percent: 0, order: 18\r\n}, {\r\n    id: '17', title: 'OT', name: 'Others', count: 0, percent: 0, order: 19\r\n}]","import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"titleText\" }\nconst _hoisted_2 = { class: \"analysisWbc\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"categories\"\n}\nconst _hoisted_4 = { class: \"categoryNm\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_6 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_7 = { class: \"classNm\" }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_9 = { style: {\"text-align\":\"center\",\"cursor\":\"default\"} }\nconst _hoisted_10 = { class: \"degree\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_12 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_13 = { class: \"categories\" }\nconst _hoisted_14 = { class: \"classNm\" }\nconst _hoisted_15 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_16 = {\n  key: 0,\n  class: \"categories mt10\"\n}\nconst _hoisted_17 = { class: \"categoryNm\" }\nconst _hoisted_18 = {\n  key: 0,\n  class: \"mb10 liTitle\"\n}\nconst _hoisted_19 = { class: \"classNm\" }\nconst _hoisted_20 = {\n  key: 0,\n  class: \"mb10 liTitle\"\n}\nconst _hoisted_21 = { style: {\"text-align\":\"center\"} }\nconst _hoisted_22 = { class: \"degree\" }\nconst _hoisted_23 = {\n  key: 0,\n  class: \"mb10 liTitle\"\n}\nconst _hoisted_24 = { class: \"mt10\" }\nconst _hoisted_25 = {\n  class: \"categoryNm\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_26 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_27 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_28 = { class: \"classNm\" }\nconst _hoisted_29 = {\n  key: 0,\n  class: \"mb10 liTitle\"\n}\nconst _hoisted_30 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_31 = { key: 0 }\nconst _hoisted_32 = { class: \"degree\" }\nconst _hoisted_33 = {\n  key: 0,\n  class: \"mb10 liTitle\"\n}\n\nimport { computed, ref, onMounted, watch, getCurrentInstance } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport {\r\n  WbcInfo,\r\n  basicWbcArr,\r\n  basicBmClassList,\r\n  basicWbcArrClint,\r\n  basicBmClassListClint\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\n\r\ninterface SlotInfo {\r\n  stateCd: string;\r\n  testType: string;\r\n  maxWbcCount: string;\r\n  malariaCount: string;\r\n  wbcInfo: WbcInfo[];\r\n}\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'classInfoification',\n  props: ['bmIsBoolen','parsedData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst storeEm = useStore();\r\nconst siteCd = computed(() => storeEm.state.commonModule.siteCd);\r\nconst firstTry = ref(false);\r\n\r\nconst dspWbcClassList = ref<any>([]);\r\nconst dspBfClassList = ref<any[]>([]);\r\n\r\nconst testType = ref<string>(\"\");\r\nconst totalCount = ref<string>(\"0\");\r\nconst maxWbcCount = ref<string>('');\r\nconst emits = __emit;\r\n\r\nconst isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n\r\nonMounted(() => {\r\n  updateDataArray( basicBmClassList, null, true);\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    await updateDataArray({wbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\nconst updateDataArray = async (newSlotInfo: any, parsedData?: any, type?: boolean) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n  if (slotArray.wbcInfo) {\r\n    testType.value = slotArray?.wbcInfo?.testType;\r\n    const wbcinfoType = props.bmIsBoolen ? [slotArray.wbcInfo.bmInfo] : [slotArray.wbcInfo.wbcInfo];\r\n    const wbcInfoArray = wbcinfoType;\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = wbcInfoArray[0].length > 0 ? wbcInfoArray : arrType;\r\n\r\n    const areAllCountsZero = (classList: any[]) => {\r\n      // 모든 요소의 count가 0인지 확인\r\n      return classList.every((classGroup) => {\r\n        return classGroup.every((category: any) => {\r\n          return category.count === '0';\r\n        });\r\n      });\r\n    };\r\n\r\n    // dspWbcClassList.value 배열의 모든 count 값이 '0'인지 확인\r\n    const allCountsAreZero = areAllCountsZero(dspWbcClassList.value);\r\n\r\n    if (allCountsAreZero) {\r\n      totalCount.value = '0'\r\n    }\r\n\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n\r\n  } else {\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = arrType;\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n  }\r\n  if (slotArray && slotArray.wbcInfo) {\r\n    const currentSlot = slotArray.wbcInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      // if (currentSlot.wbcCount === '00') {\r\n      //   return;\r\n      // }\r\n      await updateCounts(currentSlot);\r\n      maxWbcCount.value = currentSlot.maxWbcCount;\r\n    }\r\n  }\r\n  // await updatePercentages();\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  // if(lastCompleteIndex !== slotIndex.value){\r\n  //   return;\r\n  // }\r\n  if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n    const data = {\r\n      classInfo:{\r\n        wbcInfo: dspWbcClassList.value,\r\n        // nonRbcClassList: nonWbcClassList,\r\n        totalCount: totalCount.value,\r\n        maxWbcCount: maxWbcCount.value,\r\n        slotId: parsedData.slotInfo.slotId\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    };\r\n    emits('classInfoUpdate',data)\r\n  }\r\n};\r\n\r\nconst selectNonWbc = (wbcArray: any) => {\r\n  return wbcArray.flat().filter((item: any) => ['NR', 'AR', 'GP', 'PA', 'MC', 'MA', 'GP', 'PA', 'SM'].includes(item?.title));\r\n}\r\n\r\nconst getIncludesStrBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd || siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", \"GP\", \"PA\", \"OT\"],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"GP\", \"PA\", \"OT\"],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n// 퍼센트 계산 하는 부분\r\nconst calculateWbcPercentages = (\r\n    classList: WbcInfo[],\r\n    wbcList: WbcInfo[]\r\n) => {\r\n\r\n  const includesStr = getIncludesStrBySiteCd(siteCd.value, testType.value);\r\n  let total = 0;\r\n\r\n  for (let category of classList) {\r\n    if (!includesStr.includes(category.title)) {\r\n      total += Number(category.count);\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\nconst updateCounts = async (currentSlot: any) => {\r\n  const arrType = props.bmIsBoolen ? currentSlot.bmInfo : currentSlot.wbcInfo;\r\n  const wbcList = arrType;\r\n  let totalVal = \"0\";\r\n\r\n  if (testType.value === \"01\" || testType.value === \"04\") {\r\n    totalVal = calculateWbcPercentages(\r\n        dspWbcClassList.value.flat(),\r\n        wbcList\r\n    ).toFixed(0);\r\n  } else {\r\n    totalVal = calculateWbcPercentages(dspBfClassList.value, wbcList).toFixed(0);\r\n  }\r\n\r\n\r\n  totalCount.value = totalVal;\r\n  await updatePercentages();\r\n};\r\n\r\nconst shouldRenderCategory = (category: WbcInfo) => {\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, testType.value);\r\n  return !targetArray.includes(category.title);\r\n};\r\n\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nconst updatePercentages = async () => {\r\n\r\n  const percent = dspWbcClassList.value.map((classList: any) => {\r\n    return classList.map((category: any) => {\r\n      const percentage = totalCount.value && totalCount.value !== '0'\r\n          ? ((Number(category.count) / Number(totalCount.value)) * 100).toFixed(1)\r\n          : '0';\r\n      // 퍼센트를 정수와 비교해서 정수일 경우 정수만, 그렇지 않으면 소수점 한 자리까지 표시\r\n      const formattedPercent = (Number(percentage) === Math.floor(Number(percentage)))\r\n          ? Math.floor(Number(percentage)).toString()\r\n          : percentage;\r\n\r\n      return {\r\n        ...category,\r\n        percent: formattedPercent,\r\n      };\r\n    });\r\n  });\r\n  dspWbcClassList.value = percent;\r\n};\r\n\r\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([__props.bmIsBoolen ? 'bmclass' : ''])\n  }, [\n    _createElementVNode(\"h3\", _hoisted_1, [\n      (__props.bmIsBoolen)\n        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n            _createTextVNode(\"BM Classification \")\n          ], 64))\n        : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n            _createTextVNode(\"WBC Classification\")\n          ], 64))\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspWbcClassList.value, (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n              (shouldRenderCategory(category))\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n                    _createElementVNode(\"ul\", _hoisted_4, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_5, \"Class\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_6, _toDisplayString(getCategoryName(category)), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_7, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_8, \"Count\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_9, _toDisplayString(category?.count), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_10, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"%\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_12, _toDisplayString(totalCount.value && totalCount.value !== '0' ? ((Number(category?.count) / Number(totalCount.value)) * 100).toFixed((Number(category?.count) / Number(totalCount.value)) === 0 ? 0 : 1) : '0'), 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_13, [\n        _cache[0] || (_cache[0] = _createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n          _createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, \" Total \")\n        ], -1)),\n        _createElementVNode(\"ul\", _hoisted_14, [\n          _createElementVNode(\"li\", _hoisted_15, _toDisplayString(totalCount.value || 0), 1)\n        ]),\n        _cache[1] || (_cache[1] = _createElementVNode(\"ul\", { class: \"degree\" }, [\n          _createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, \" 100.00 \")\n        ], -1))\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspWbcClassList.value, (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n              (category.title === 'OT')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n                    _createElementVNode(\"ul\", _hoisted_17, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_18, \"Class\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_19, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_20, \"Count\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_21, _toDisplayString(category?.count), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_22, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_23, \"-\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(totalCount.value && totalCount.value !== '0' ? ((Number(category?.count) / Number(totalCount.value)) * 100).toFixed(0) : '0'), 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_24, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(selectNonWbc(dspWbcClassList.value), (nWbcItem, outerIndex) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: outerIndex,\n            class: \"categories\"\n          }, [\n            _createElementVNode(\"ul\", _hoisted_25, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_26, \"non-WBC\"))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", _hoisted_27, _toDisplayString(getCategoryName(nWbcItem)), 1)\n            ]),\n            _createElementVNode(\"ul\", _hoisted_28, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_29))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", _hoisted_30, [\n                _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                (nWbcItem.title === 'NR' || nWbcItem.title === 'GP')\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_31, \" / \" + _toDisplayString(maxWbcCount.value) + \" WBC\", 1))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _createElementVNode(\"ul\", _hoisted_32, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_33))\n                : _createCommentVNode(\"\", true),\n              _cache[2] || (_cache[2] = _createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, \"-\", -1))\n            ])\n          ]))\n        }), 128))\n      ])\n    ])\n  ], 2))\n}\n}\n\n})","<template>\r\n  <div :class=\"[bmIsBoolen ? 'bmclass' : '']\">\r\n    <h3 class=\"titleText\">\r\n      <template v-if=\"bmIsBoolen\">BM Classification\r\n      </template>\r\n      <template v-else>WBC Classification</template>\r\n    </h3>\r\n    <div class=\"analysisWbc\">\r\n      <template v-for=\"(classList, outerIndex) in dspWbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories\" v-if=\"shouldRenderCategory(category)\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb10 liTitle\" style=\"cursor: default;\">Class</li>\r\n              <li style=\"cursor: default;\">{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb10 liTitle\" style=\"cursor: default;\">Count</li>\r\n              <li style=\"text-align: center; cursor: default;\">{{ category?.count }}</li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb10 liTitle\" style=\"cursor: default;\">%</li>\r\n              <li style=\"cursor: default;\">\r\n                {{\r\n                  totalCount && totalCount !== '0' ? ((Number(category?.count) / Number(totalCount)) * 100).toFixed((Number(category?.count) / Number(totalCount)) === 0 ? 0 : 1) : '0'\r\n                }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li style=\"cursor: default;\">\r\n            Total\r\n          </li>\r\n        </ul>\r\n        <ul class=\"classNm\">\r\n          <li style=\"cursor: default;\">\r\n            {{ totalCount || 0 }}\r\n          </li>\r\n        </ul>\r\n        <ul class=\"degree\">\r\n          <li style=\"cursor: default;\">\r\n            100.00\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <template v-for=\"(classList, outerIndex) in dspWbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories mt10\" v-if=\"category.title === 'OT'\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb10 liTitle\">Class</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb10 liTitle\">Count</li>\r\n              <li style=\"text-align: center\">{{ category?.count }}</li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb10 liTitle\">-</li>\r\n              <li>\r\n                {{\r\n                  totalCount && totalCount !== '0' ? ((Number(category?.count) / Number(totalCount)) * 100).toFixed(0) : '0'\r\n                }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n\r\n      <!-- nonWbc -->\r\n      <div class='mt10'>\r\n        <template v-for=\"(nWbcItem, outerIndex) in selectNonWbc(dspWbcClassList)\" :key=\"outerIndex\">\r\n          <div class=\"categories\">\r\n            <ul class=\"categoryNm\" style=\"cursor: default;\">\r\n              <li class=\"mb10 liTitle\" v-if=\"outerIndex === 0\" style=\"cursor: default;\">non-WBC</li>\r\n              <li style=\"cursor: default;\">{{ getCategoryName(nWbcItem) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li class=\"mb10 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li style=\"cursor: default;\">{{ nWbcItem?.count }} <span\r\n                  v-if=\"nWbcItem.title === 'NR' || nWbcItem.title === 'GP'\"> / {{ maxWbcCount }} WBC</span></li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li class=\"mb10 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li style=\"cursor: default;\">-</li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, ref, onMounted, watch, defineProps, getCurrentInstance, defineEmits } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport {\r\n  WbcInfo,\r\n  basicWbcArr,\r\n  basicBmClassList,\r\n  basicWbcArrClint,\r\n  basicBmClassListClint\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\n\r\nconst props = defineProps(['bmIsBoolen','parsedData']);\r\nconst storeEm = useStore();\r\nconst siteCd = computed(() => storeEm.state.commonModule.siteCd);\r\nconst firstTry = ref(false);\r\n\r\ninterface SlotInfo {\r\n  stateCd: string;\r\n  testType: string;\r\n  maxWbcCount: string;\r\n  malariaCount: string;\r\n  wbcInfo: WbcInfo[];\r\n}\r\n\r\nconst dspWbcClassList = ref<any>([]);\r\nconst dspBfClassList = ref<any[]>([]);\r\n\r\nconst testType = ref<string>(\"\");\r\nconst totalCount = ref<string>(\"0\");\r\nconst maxWbcCount = ref<string>('');\r\nconst emits = defineEmits();\r\n\r\nconst isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n\r\nonMounted(() => {\r\n  updateDataArray( basicBmClassList, null, true);\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    await updateDataArray({wbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\nconst updateDataArray = async (newSlotInfo: any, parsedData?: any, type?: boolean) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n  if (slotArray.wbcInfo) {\r\n    testType.value = slotArray?.wbcInfo?.testType;\r\n    const wbcinfoType = props.bmIsBoolen ? [slotArray.wbcInfo.bmInfo] : [slotArray.wbcInfo.wbcInfo];\r\n    const wbcInfoArray = wbcinfoType;\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = wbcInfoArray[0].length > 0 ? wbcInfoArray : arrType;\r\n\r\n    const areAllCountsZero = (classList: any[]) => {\r\n      // 모든 요소의 count가 0인지 확인\r\n      return classList.every((classGroup) => {\r\n        return classGroup.every((category: any) => {\r\n          return category.count === '0';\r\n        });\r\n      });\r\n    };\r\n\r\n    // dspWbcClassList.value 배열의 모든 count 값이 '0'인지 확인\r\n    const allCountsAreZero = areAllCountsZero(dspWbcClassList.value);\r\n\r\n    if (allCountsAreZero) {\r\n      totalCount.value = '0'\r\n    }\r\n\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n\r\n  } else {\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = arrType;\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n  }\r\n  if (slotArray && slotArray.wbcInfo) {\r\n    const currentSlot = slotArray.wbcInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      // if (currentSlot.wbcCount === '00') {\r\n      //   return;\r\n      // }\r\n      await updateCounts(currentSlot);\r\n      maxWbcCount.value = currentSlot.maxWbcCount;\r\n    }\r\n  }\r\n  // await updatePercentages();\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  // if(lastCompleteIndex !== slotIndex.value){\r\n  //   return;\r\n  // }\r\n  if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n    const data = {\r\n      classInfo:{\r\n        wbcInfo: dspWbcClassList.value,\r\n        // nonRbcClassList: nonWbcClassList,\r\n        totalCount: totalCount.value,\r\n        maxWbcCount: maxWbcCount.value,\r\n        slotId: parsedData.slotInfo.slotId\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    };\r\n    emits('classInfoUpdate',data)\r\n  }\r\n};\r\n\r\nconst selectNonWbc = (wbcArray: any) => {\r\n  return wbcArray.flat().filter((item: any) => ['NR', 'AR', 'GP', 'PA', 'MC', 'MA', 'GP', 'PA', 'SM'].includes(item?.title));\r\n}\r\n\r\nconst getIncludesStrBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd || siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", \"GP\", \"PA\", \"OT\"],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"GP\", \"PA\", \"OT\"],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n// 퍼센트 계산 하는 부분\r\nconst calculateWbcPercentages = (\r\n    classList: WbcInfo[],\r\n    wbcList: WbcInfo[]\r\n) => {\r\n\r\n  const includesStr = getIncludesStrBySiteCd(siteCd.value, testType.value);\r\n  let total = 0;\r\n\r\n  for (let category of classList) {\r\n    if (!includesStr.includes(category.title)) {\r\n      total += Number(category.count);\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\nconst updateCounts = async (currentSlot: any) => {\r\n  const arrType = props.bmIsBoolen ? currentSlot.bmInfo : currentSlot.wbcInfo;\r\n  const wbcList = arrType;\r\n  let totalVal = \"0\";\r\n\r\n  if (testType.value === \"01\" || testType.value === \"04\") {\r\n    totalVal = calculateWbcPercentages(\r\n        dspWbcClassList.value.flat(),\r\n        wbcList\r\n    ).toFixed(0);\r\n  } else {\r\n    totalVal = calculateWbcPercentages(dspBfClassList.value, wbcList).toFixed(0);\r\n  }\r\n\r\n\r\n  totalCount.value = totalVal;\r\n  await updatePercentages();\r\n};\r\n\r\nconst shouldRenderCategory = (category: WbcInfo) => {\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, testType.value);\r\n  return !targetArray.includes(category.title);\r\n};\r\n\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nconst updatePercentages = async () => {\r\n\r\n  const percent = dspWbcClassList.value.map((classList: any) => {\r\n    return classList.map((category: any) => {\r\n      const percentage = totalCount.value && totalCount.value !== '0'\r\n          ? ((Number(category.count) / Number(totalCount.value)) * 100).toFixed(1)\r\n          : '0';\r\n      // 퍼센트를 정수와 비교해서 정수일 경우 정수만, 그렇지 않으면 소수점 한 자리까지 표시\r\n      const formattedPercent = (Number(percentage) === Math.floor(Number(percentage)))\r\n          ? Math.floor(Number(percentage)).toString()\r\n          : percentage;\r\n\r\n      return {\r\n        ...category,\r\n        percent: formattedPercent,\r\n      };\r\n    });\r\n  });\r\n  dspWbcClassList.value = percent;\r\n};\r\n\r\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\n</script>\r\n","import script from \"./classInfoification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfoification.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// rbcInfoModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\nexport interface BasicRbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: {\r\n        classId: string;\r\n        classNm: string;\r\n        degree: string;\r\n    }[];\r\n}\r\n\r\nexport interface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\n interface RbcInfoState {\r\n    rbcInfo: RbcInfo | null;\r\n}\r\n\r\ninterface RbcInfoModule {\r\n    namespaced: true,\r\n    state: () => RbcInfoState;\r\n    mutations: {\r\n        setRbcInfo: (state: RbcInfoState, value: RbcInfo) => void;\r\n    };\r\n    actions: {\r\n        setRbcInfo: (context: { commit: Commit }, payload: RbcInfo) => void;\r\n    };\r\n}\r\n\r\nexport const rbcClassificationModule: RbcInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        rbcInfo: null,\r\n    }),\r\n    mutations: {\r\n        setRbcInfo(state: RbcInfoState, value: RbcInfo): void {\r\n            state.rbcInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setRbcInfo({ commit }: { commit: Commit }, payload: RbcInfo): void {\r\n            commit('setRbcInfo', payload);\r\n        },\r\n    },\r\n};\r\n\r\nexport const basicRbcArr = [\r\n    {\r\n        \"categoryId\": \"01\",\r\n        \"categoryNm\": \"Size\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Macrocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Microcyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Anisocytosis\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"02\",\r\n        \"categoryNm\": \"Chromia\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Hyperchromic\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Hypochromic\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Polychromia\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"03\",\r\n        \"categoryNm\": \"Shape\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Poikilocytosis\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Target Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Burr Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"05\",\r\n                \"classNm\": \"Acanthocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"06\",\r\n                \"classNm\": \"Ovalocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"07\",\r\n                \"classNm\": \"Schistocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"08\",\r\n                \"classNm\": \"Sickle Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"09\",\r\n                \"classNm\": \"Stomatocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"10\",\r\n                \"classNm\": \"Tear Drop Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"11\",\r\n                \"classNm\": \"Spherocyte\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"05\",\r\n        \"categoryNm\": \"Inclusion Body\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Howell-Jolly Body\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Basophilic Stippling\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    }\r\n];","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { class: \"row\" }\nconst _hoisted_3 = [\"src\", \"id\", \"onClick\"]\nconst _hoisted_4 = {\n  key: 0,\n  class: \"mt-3 row\"\n}\nconst _hoisted_5 = { class: \"col\" }\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = { class: \"categoryNm\" }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_9 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_10 = { class: \"classNmRbc\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_12 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_13 = {\n  key: 0,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_14 = { class: \"degree analysis\" }\nconst _hoisted_15 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_16 = {\n  key: 0,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_17 = {\n  key: 1,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_18 = { key: 0 }\nconst _hoisted_19 = { key: 1 }\nconst _hoisted_20 = {\n  key: 2,\n  style: {\"font-size\":\"0.7rem\",\"cursor\":\"default\"}\n}\nconst _hoisted_21 = { class: \"categories\" }\nconst _hoisted_22 = { class: \"degree analysis\" }\nconst _hoisted_23 = { style: {\"font-size\":\"0.7rem\",\"cursor\":\"default\"} }\n\nimport {ref, onMounted, watch} from \"vue\";\r\nimport {RbcInfo, basicRbcArr} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'rbcclassification',\n  props: ['bmIsBoolen','parsedData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\nconst dspRbcClassList = ref<RbcInfo[][]>([]);\r\nconst malariaCount = ref('');\r\nconst maxRbcCount = ref('');\r\nconst pltCount = ref('');\r\nconst testType = ref<string>(\"01\");\r\nconst bfSelectModeList = ref<any>([]);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst emits = __emit;\r\n\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await updateDataArray({rbcInfo: props.parsedData.slotInfo},'');\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = data?.slotInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      malariaCount.value = currentSlot.malariaCount;\r\n      maxRbcCount.value = currentSlot.maxRbcCount;\r\n      pltCount.value = currentSlot.pltCount;\r\n    }\r\n    await updateDataArray({rbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\n\r\nconst lowPowerPath = ref([]);\r\nconst updateDataArray = async (newSlotInfo: any, parsedData: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n\r\n  if (Array.isArray(slotArray.rbcInfo)) {\r\n    testType.value = slotArray.rbcInfo[0].testType;\r\n    if(!slotArray.rbcInfo[0]){\r\n      return\r\n    }\r\n    const wbcInfoArray = [slotArray.rbcInfo[0].rbcInfo];\r\n    const wbcInfoArr = wbcInfoArray[0].length > 0 ? wbcInfoArray : [basicRbcArr];\r\n\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree(wbcInfoArr[0], parsedData)\r\n    \r\n    if (slotArray.rbcInfo[0].lowPowerPath) {\r\n      lowPowerPath.value = slotArray.rbcInfo[0].lowPowerPath.sort(function (a: any, b: any) {\r\n        return a.seqNo - b.seqNo;\r\n      });\r\n    } else {\r\n      lowPowerPath.value = [];\r\n    }\r\n\r\n\r\n  } else {\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree([basicRbcArr][0], parsedData);\r\n  }\r\n\r\n\r\n};\r\n\r\nconst calcRbcDegree = (rbcInfos: any, parsedData: any) => {\r\n  let totalCount = 0;\r\n  let sizeTotal = 0;\r\n  let chromiaTotal = 0;\r\n  const originalData = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  const rbcInfo = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size total\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId !== '04') {\r\n          sizeTotal += Number(rbcClass.degree)\r\n        }\r\n      }\r\n\r\n      // chromia total\r\n      else if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId !== '04') {\r\n          chromiaTotal += Number(rbcClass.degree)\r\n        }\r\n      } else {\r\n        totalCount += Number(rbcClass.degree)\r\n      }\r\n    });\r\n  });\r\n\r\n  rbcInfo.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if(!rbcDegreeStandard.value){\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  dspRbcClassList.value[0] = rbcInfo;\r\n  if (rbcInfo.length === 0) {\r\n    dspRbcClassList.value[0] = basicRbcArr;\r\n  }\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  if(iCasStatArr.lastIndexOf(\"2\") !== -1){\r\n    const data = {\r\n      rbc:{\r\n        rbcInfo: rbcInfo,\r\n        slotId: parsedData.slotInfo.slotId,\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    }\r\n    emits('rbcUpdate',data);\r\n  }\r\n};\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\n\r\nconst onClickBfImg = (event: any, lowPower: any) => {\r\n  if (testType.value === '03') {\r\n    // lowPower가 이미 bfSelectModeList에 있는지 확인\r\n    const existingIndex = bfSelectModeList.value.findIndex((item: any) => item.seqNo === lowPower.seqNo);\r\n\r\n    if (existingIndex !== -1) {\r\n      // 만약 lowPower가 이미 bfSelectModeList에 있다면, 제거\r\n      bfSelectModeList.value.splice(existingIndex, 1);\r\n    } else {\r\n      // lowPower가 bfSelectModeList에 없다면, 추가\r\n      bfSelectModeList.value.push(lowPower);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (testType.value !== '01' && testType.value !== '04')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _cache[1] || (_cache[1] = _createElementVNode(\"h3\", { class: \"titleText\" }, [\n            _createElementVNode(\"span\", { class: \"greenColor\" }, \"Whole\"),\n            _createTextVNode(\" Slide Image \")\n          ], -1)),\n          _createElementVNode(\"div\", null, [\n            (_openBlock(), _createElementBlock(_Fragment, null, _renderList([0, 6, 12, 18, 24, 30], (rowStart, rowIndex) => {\n              return _createElementVNode(\"div\", {\n                key: rowIndex,\n                class: \"pl-2\"\n              }, [\n                _createElementVNode(\"div\", _hoisted_2, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lowPowerPath.value.slice(rowStart, rowStart + 6), (lowPower, colIndex) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: colIndex,\n                      class: \"col-2 p-1\"\n                    }, [\n                      _createElementVNode(\"img\", {\n                        src: lowPower.path,\n                        id: lowPower.seqNo,\n                        ref_for: true,\n                        ref: \"wholeSlideImg\",\n                        class: \"wholeSlideImg\",\n                        onClick: ($event: any) => (onClickBfImg($event, lowPower)),\n                        style: {\"width\":\"75px\"}\n                      }, null, 8, _hoisted_3)\n                    ]))\n                  }), 128))\n                ])\n              ])\n            }), 64)),\n            (testType.value === '03')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                  _cache[0] || (_cache[0] = _createElementVNode(\"div\", { class: \"col\" }, [\n                    _createElementVNode(\"div\", { style: {\"color\":\"#2798DC\"} }, \"Select Interest Area\")\n                  ], -1)),\n                  _createElementVNode(\"div\", _hoisted_5, [\n                    _createElementVNode(\"div\", null, _toDisplayString(bfSelectModeList.value.length), 1)\n                  ])\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n          _cache[2] || (_cache[2] = _createElementVNode(\"h3\", { class: \"titleText\" }, \"RBC Classification\", -1)),\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspRbcClassList.value, (classList, outerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  key: innerIndex,\n                  class: \"categories\"\n                }, [\n                  _createElementVNode(\"ul\", _hoisted_7, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_8, \"Category\"))\n                      : _createCommentVNode(\"\", true),\n                    _createElementVNode(\"li\", _hoisted_9, _toDisplayString(getCategoryName(category)), 1)\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_10, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"Class\"))\n                      : _createCommentVNode(\"\", true),\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                        _createElementVNode(\"li\", _hoisted_12, _toDisplayString(classInfo?.classNm), 1),\n                        (classInfo.classNm === 'Basophilic Stippling')\n                          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, \"Malaria\"))\n                          : _createCommentVNode(\"\", true)\n                      ], 64))\n                    }), 128))\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_14, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_15, \"Degree\"))\n                      : _createCommentVNode(\"\", true),\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                        (classInfo.classId !== '01' || category.categoryId === '05')\n                          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_16, [\n                              (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                return _createVNode(_component_font_awesome_icon, {\n                                  icon: ['fas', 'circle'],\n                                  key: degreeIndex,\n                                  class: _normalizeClass({\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }),\n                                  style: {\"cursor\":\"default\"}\n                                }, null, 8, [\"class\"])\n                              }), 64))\n                            ]))\n                          : (_openBlock(), _createElementBlock(\"li\", _hoisted_17, [\n                              (classInfo.degree === '0')\n                                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                                    _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle'] })\n                                  ]))\n                                : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                                    _createVNode(_component_font_awesome_icon, {\n                                      icon: ['fas', 'circle'],\n                                      class: \"degreeActive\"\n                                    })\n                                  ]))\n                            ])),\n                        (classInfo.classNm === 'Basophilic Stippling')\n                          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_20, _toDisplayString(malariaCount.value || 0) + \" / \" + _toDisplayString(maxRbcCount.value || 0) + \" RBC\", 1))\n                          : _createCommentVNode(\"\", true)\n                      ], 64))\n                    }), 128))\n                  ])\n                ]))\n              }), 128))\n            ], 64))\n          }), 128))\n        ])),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_21, [\n        _cache[3] || (_cache[3] = _createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n          _createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, \"Others\")\n        ], -1)),\n        _cache[4] || (_cache[4] = _createElementVNode(\"ul\", { class: \"classNmRbc\" }, [\n          _createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, \"Platelets\")\n        ], -1)),\n        _createElementVNode(\"ul\", _hoisted_22, [\n          _createElementVNode(\"li\", _hoisted_23, _toDisplayString(pltCount.value || 0) + \" PLT / 1000 RBC\", 1)\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div v-if=\"testType !== '01' && testType !== '04'\">\r\n      <h3 class=\"titleText\">\r\n        <span class=\"greenColor\">Whole</span> Slide Image\r\n      </h3>\r\n      <div>\r\n        <div v-for=\"(rowStart, rowIndex) in [0, 6, 12, 18, 24, 30]\" :key=\"rowIndex\" class=\"pl-2\">\r\n          <div class=\"row\">\r\n            <div v-for=\"(lowPower, colIndex) in lowPowerPath.slice(rowStart, rowStart + 6)\" :key=\"colIndex\"\r\n                 class=\"col-2 p-1\">\r\n              <img :src=\"lowPower.path\" :id=\"lowPower.seqNo\" ref=\"wholeSlideImg\" class=\"wholeSlideImg\"\r\n                   @click=\"onClickBfImg($event, lowPower)\" style=\"width: 75px;\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"testType === '03'\" class=\"mt-3 row\">\r\n          <div class=\"col\">\r\n            <div style=\"color: #2798DC\">Select Interest Area</div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div>{{ bfSelectModeList.length }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <h3 class=\"titleText\">RBC Classification</h3>\r\n      <template v-for=\"(classList, outerIndex) in dspRbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb10 liTitle\" style=\"cursor: default;\">Category</li>\r\n              <li style=\"cursor: default;\">{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNmRbc\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb10 liTitle\" style=\"cursor: default;\">Class</li>\r\n              <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                <li style=\"cursor: default;\">{{ classInfo?.classNm }}</li>\r\n\r\n                <li v-if=\"classInfo.classNm === 'Basophilic Stippling'\" style=\"cursor: default;\">Malaria</li>\r\n              </template>\r\n            </ul>\r\n            <ul class=\"degree analysis\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb10 liTitle\" style=\"cursor: default;\">Degree</li>\r\n              <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                <li v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\" style=\"cursor: default;\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fas', 'circle']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex\"\r\n                      :class=\"{\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }\"\r\n                      style=\"cursor: default;\"\r\n                  />\r\n                </li>\r\n                <li v-else style=\"cursor: default;\">\r\n                  <div v-if=\"classInfo.degree === '0'\">\r\n                    <font-awesome-icon\r\n                        :icon=\"['fas', 'circle']\"\r\n                    />\r\n                  </div>\r\n                  <div v-else>\r\n                    <font-awesome-icon\r\n                        :icon=\"['fas', 'circle']\"\r\n                        class=\"degreeActive\"\r\n                    />\r\n                  </div>\r\n                </li>\r\n\r\n                <li v-if=\"classInfo.classNm === 'Basophilic Stippling'\" style=\"font-size: 0.7rem; cursor: default;\">{{ malariaCount || 0 }} / {{ maxRbcCount || 0 }} RBC</li>\r\n              </template>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n    </div>\r\n\r\n    <!-- Others -->\r\n    <div>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li style=\"cursor: default;\">Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li style=\"cursor: default;\">Platelets</li>\r\n<!--          <li style=\"cursor: default;\">Malaria</li>-->\r\n        </ul>\r\n        <ul class=\"degree analysis\">\r\n          <li style=\"font-size: 0.7rem; cursor: default;\">{{ pltCount || 0 }} PLT / 1000 RBC</li>\r\n<!--          <li style=\"font-size: 0.7rem; cursor: default;\">{{ malariaCount || 0 }} / {{ maxRbcCount || 0 }} RBC</li>-->\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, defineProps, watch, defineEmits} from \"vue\";\r\nimport {RbcInfo, basicRbcArr} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nconst props = defineProps(['bmIsBoolen','parsedData']);\r\n\r\nconst dspRbcClassList = ref<RbcInfo[][]>([]);\r\nconst malariaCount = ref('');\r\nconst maxRbcCount = ref('');\r\nconst pltCount = ref('');\r\nconst testType = ref<string>(\"01\");\r\nconst bfSelectModeList = ref<any>([]);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst emits = defineEmits();\r\n\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await updateDataArray({rbcInfo: props.parsedData.slotInfo},'');\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = data?.slotInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      malariaCount.value = currentSlot.malariaCount;\r\n      maxRbcCount.value = currentSlot.maxRbcCount;\r\n      pltCount.value = currentSlot.pltCount;\r\n    }\r\n    await updateDataArray({rbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\n\r\nconst lowPowerPath = ref([]);\r\nconst updateDataArray = async (newSlotInfo: any, parsedData: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n\r\n  if (Array.isArray(slotArray.rbcInfo)) {\r\n    testType.value = slotArray.rbcInfo[0].testType;\r\n    if(!slotArray.rbcInfo[0]){\r\n      return\r\n    }\r\n    const wbcInfoArray = [slotArray.rbcInfo[0].rbcInfo];\r\n    const wbcInfoArr = wbcInfoArray[0].length > 0 ? wbcInfoArray : [basicRbcArr];\r\n\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree(wbcInfoArr[0], parsedData)\r\n    \r\n    if (slotArray.rbcInfo[0].lowPowerPath) {\r\n      lowPowerPath.value = slotArray.rbcInfo[0].lowPowerPath.sort(function (a: any, b: any) {\r\n        return a.seqNo - b.seqNo;\r\n      });\r\n    } else {\r\n      lowPowerPath.value = [];\r\n    }\r\n\r\n\r\n  } else {\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree([basicRbcArr][0], parsedData);\r\n  }\r\n\r\n\r\n};\r\n\r\nconst calcRbcDegree = (rbcInfos: any, parsedData: any) => {\r\n  let totalCount = 0;\r\n  let sizeTotal = 0;\r\n  let chromiaTotal = 0;\r\n  const originalData = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  const rbcInfo = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size total\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId !== '04') {\r\n          sizeTotal += Number(rbcClass.degree)\r\n        }\r\n      }\r\n\r\n      // chromia total\r\n      else if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId !== '04') {\r\n          chromiaTotal += Number(rbcClass.degree)\r\n        }\r\n      } else {\r\n        totalCount += Number(rbcClass.degree)\r\n      }\r\n    });\r\n  });\r\n\r\n  rbcInfo.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if(!rbcDegreeStandard.value){\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  dspRbcClassList.value[0] = rbcInfo;\r\n  if (rbcInfo.length === 0) {\r\n    dspRbcClassList.value[0] = basicRbcArr;\r\n  }\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  if(iCasStatArr.lastIndexOf(\"2\") !== -1){\r\n    const data = {\r\n      rbc:{\r\n        rbcInfo: rbcInfo,\r\n        slotId: parsedData.slotInfo.slotId,\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    }\r\n    emits('rbcUpdate',data);\r\n  }\r\n};\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\n\r\nconst onClickBfImg = (event: any, lowPower: any) => {\r\n  if (testType.value === '03') {\r\n    // lowPower가 이미 bfSelectModeList에 있는지 확인\r\n    const existingIndex = bfSelectModeList.value.findIndex((item: any) => item.seqNo === lowPower.seqNo);\r\n\r\n    if (existingIndex !== -1) {\r\n      // 만약 lowPower가 이미 bfSelectModeList에 있다면, 제거\r\n      bfSelectModeList.value.splice(existingIndex, 1);\r\n    } else {\r\n      // lowPower가 bfSelectModeList에 없다면, 추가\r\n      bfSelectModeList.value.push(lowPower);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n</script>\r\n<style>\r\ntd, th {\r\n  border: 1px solid #353942;\r\n}\r\n</style>","import script from \"./rbcclassification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcclassification.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./rbcclassification.vue?vue&type=style&index=0&id=0c5667d0&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt10\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"slider-found\"\n}\nconst _hoisted_3 = [\"src\"]\n\nimport {ref, watch, computed} from 'vue';\r\nimport {useStore} from \"vuex\";\r\ninterface RunningPathItem {\r\n  path: string;\r\n  id: string;\r\n}\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'foundingCells',\n  props: [ 'parsedData', 'pb100aCassette'],\n  setup(__props) {\n\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst props = __props;\r\nconst store = useStore();\r\nconst changeSlide = computed(() => store.state.runningInfoModule.changeSlideState);\r\n\r\nconst images = ref<RunningPathItem[]>([]);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      console.log(\"IMAGE_RESET - should be 'reset'\", newVal)\r\n      if(newVal === 'reset'){\r\n        images.value = [];\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      const slotInfo = newVal?.slotInfo;\r\n      if(changeSlide.value.changeSlide.value === 'afterChange'){\r\n        images.value = [];\r\n      }\r\n      if (slotInfo && slotInfo.stateCd === '03' && slotInfo.runningPath && slotInfo.runningPath.length > 0) {\r\n        const runningPath: RunningPathItem[] = slotInfo.runningPath.map((pathItem: any) => ({\r\n          ...pathItem,\r\n          // path: pathItem.path + '?' + getDateTimeStr(),\r\n          path: pathItem.path,\r\n          id: generateUniqueId()\r\n        }));\r\n        for (const image of runningPath) {\r\n          images.value.unshift(image);\r\n        }\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nfunction generateUniqueId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction getImageUrl(types: RunningPathItem[] | undefined): string {\r\n  if (!types || types.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  // 각 이미지의 URL을 가져와서 배열에 추가\r\n  const folderPath = types?.path.match(/^(.*\\\\)\\d+_Real_Time\\\\/)?.[0];\r\n\r\n  // 파일 경로에서 파일 이름 부분 추출\r\n  const fileName = types?.path.match(/[^\\\\]*$/)[0];\r\n\r\n  // 이미지의 URL 생성\r\n  const imageUrl = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${fileName}`;\r\n\r\n  return imageUrl;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_Transition, {\n      name: \"fade\",\n      mode: \"out-in\"\n    }, {\n      default: _withCtx(() => [\n        (images.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(images.value, (type) => {\n                return (_openBlock(), _createElementBlock(_Fragment, {\n                  key: type.id\n                }, [\n                  (getImageUrl(type))\n                    ? (_openBlock(), _createElementBlock(\"img\", {\n                        key: 0,\n                        style: {\"width\":\"150px\",\"height\":\"150px\"},\n                        src: getImageUrl(type),\n                        alt: \"Slide\"\n                      }, null, 8, _hoisted_3))\n                    : _createCommentVNode(\"\", true)\n                ], 64))\n              }), 128))\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt10\">\r\n    <transition name=\"fade\" mode=\"out-in\">\r\n      <div class=\"slider-found\" v-if=\"images.length > 0\">\r\n        <template v-for=\"type in images\" :key=\"type.id\">\r\n          <img\r\n              style=\"width: 150px; height: 150px;\"\r\n              :src=\"getImageUrl(type)\"\r\n              v-if=\"getImageUrl(type)\"\r\n              alt=\"Slide\"\r\n          />\r\n        </template>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, watch, defineProps, computed} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst props = defineProps([ 'parsedData', 'pb100aCassette']);\r\nconst store = useStore();\r\nconst changeSlide = computed(() => store.state.runningInfoModule.changeSlideState);\r\n\r\nconst images = ref<RunningPathItem[]>([]);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      console.log(\"IMAGE_RESET - should be 'reset'\", newVal)\r\n      if(newVal === 'reset'){\r\n        images.value = [];\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\ninterface RunningPathItem {\r\n  path: string;\r\n  id: string;\r\n}\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      const slotInfo = newVal?.slotInfo;\r\n      if(changeSlide.value.changeSlide.value === 'afterChange'){\r\n        images.value = [];\r\n      }\r\n      if (slotInfo && slotInfo.stateCd === '03' && slotInfo.runningPath && slotInfo.runningPath.length > 0) {\r\n        const runningPath: RunningPathItem[] = slotInfo.runningPath.map((pathItem: any) => ({\r\n          ...pathItem,\r\n          // path: pathItem.path + '?' + getDateTimeStr(),\r\n          path: pathItem.path,\r\n          id: generateUniqueId()\r\n        }));\r\n        for (const image of runningPath) {\r\n          images.value.unshift(image);\r\n        }\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nfunction generateUniqueId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction getImageUrl(types: RunningPathItem[] | undefined): string {\r\n  if (!types || types.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  // 각 이미지의 URL을 가져와서 배열에 추가\r\n  const folderPath = types?.path.match(/^(.*\\\\)\\d+_Real_Time\\\\/)?.[0];\r\n\r\n  // 파일 경로에서 파일 이름 부분 추출\r\n  const fileName = types?.path.match(/[^\\\\]*$/)[0];\r\n\r\n  // 이미지의 URL 생성\r\n  const imageUrl = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${fileName}`;\r\n\r\n  return imageUrl;\r\n}\r\n</script>\r\n","import script from \"./foundingCells.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./foundingCells.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { class: \"progress-bar-guage\" }\nconst _hoisted_2 = { class: \"steps\" }\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = { key: 1 }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"lineGuasge\"\n}\nconst _hoisted_6 = { class: \"newProgressNm\" }\n\nimport {reactive, watch, onMounted} from 'vue';\r\n\r\n// Props 정의\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'GaugeBar',\n  props: ['parsedDataSysInfo'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\n// 내부 상태: parsedData를 복사하여 관리\r\nconst progressData: any = reactive({\r\n  progressBarText: '',\r\n  progressBarPercent: 0,\r\n  progressArr: [],\r\n});\r\n\r\n// Props의 parsedData 변경 감지 및 progressData 업데이트\r\nwatch(\r\n    () => props.parsedDataSysInfo,\r\n    (newData) => {\r\n      if (newData) {\r\n        progressData.progressBarText = newData.progressBarText || '';\r\n        progressData.progressBarPercent = newData.progressBarPercent || 0;\r\n        console.log(newData.progressArr)\r\n        progressData.progressArr = (newData.progressArr || []).map((step) => ({\r\n          progressNo: step.progressNo,\r\n          progressName: step.progressName,\r\n          progressPercent: step.progressPercent,\r\n        }));\r\n      }\r\n    },\r\n    {immediate: true, deep: true}\r\n);\r\n\r\n// 테스트용 데이터 생성 함수\r\nconst startFakeDataTest = () => {\r\n  let fakePercent = 0;\r\n  const interval = setInterval(() => {\r\n    if (fakePercent > 100) {\r\n      clearInterval(interval); // 100%에 도달하면 테스트 종료\r\n    } else {\r\n      // progressData 값 업데이트\r\n      progressData.progressBarText = `테스트 진행 중 (${fakePercent}%)`;\r\n      progressData.progressBarPercent = fakePercent;\r\n\r\n      // 단계별 진행도 계산\r\n      progressData.progressArr.forEach((step: any, index: any) => {\r\n        const stepStart = index * 33.33; // 각 단계는 33.33%씩 차지\r\n        const stepEnd = (index + 1) * 33.33;\r\n\r\n        if (fakePercent >= stepEnd) {\r\n          step.progressPercent = 100; // 단계 완료\r\n        } else if (fakePercent > stepStart) {\r\n          step.progressPercent = ((fakePercent - stepStart) / (stepEnd - stepStart)) * 100;\r\n        } else {\r\n          step.progressPercent = 0;\r\n        }\r\n      });\r\n\r\n      fakePercent += 5; // 5%씩 증가\r\n    }\r\n  }, 500); // 0.5초 간격으로 업데이트\r\n};\r\n\r\n// 컴포넌트가 마운트되면 테스트 모드 실행 (옵션)\r\nonMounted(() => {\r\n  if (progressData.progressArr.length === 0) {\r\n    progressData.progressArr = [\r\n      {progressNo: 1, progressName: \"Step 1\", progressPercent: 0},\r\n      {progressNo: 2, progressName: \"Step 2\", progressPercent: 0},\r\n      {progressNo: 3, progressName: \"Step 3\", progressPercent: 0},\r\n    ];\r\n  }\r\n  // startFakeDataTest();\r\n});\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(progressData.progressArr, (step, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: index,\n          class: \"step-container\"\n        }, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass([\"circleGuage\", {\r\n            completed: step.progressPercent === 100,\r\n            active: step.progressPercent > 0 && step.progressPercent < 100,\r\n            waiting: step.progressPercent === '' && index === progressData.progressArr.length - 1,\r\n          }])\n          }, [\n            (step.progressPercent === 100)\n              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"✔\"))\n              : (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(step.progressNo), 1))\n          ], 2),\n          (index < progressData.progressArr.length)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                _createElementVNode(\"div\", {\n                  class: \"line-fill\",\n                  style: _normalizeStyle({\r\n              width: step.progressPercent + '%',\r\n              transition: 'width 0.5s ease',\r\n            })\n                }, null, 4),\n                _createElementVNode(\"div\", _hoisted_6, _toDisplayString(step.progressName), 1)\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"progress-bar-guage\">\r\n    <div class=\"steps\">\r\n      <div\r\n          v-for=\"(step, index) in progressData.progressArr\"\r\n          :key=\"index\"\r\n          class=\"step-container\"\r\n      >\r\n        <!-- 동그라미 -->\r\n        <div\r\n            class=\"circleGuage\"\r\n            :class=\"{\r\n            completed: step.progressPercent === 100,\r\n            active: step.progressPercent > 0 && step.progressPercent < 100,\r\n            waiting: step.progressPercent === '' && index === progressData.progressArr.length - 1,\r\n          }\"\r\n        >\r\n          <span v-if=\"step.progressPercent === 100\">✔</span>\r\n          <span v-else>{{ step.progressNo }}</span>\r\n        </div>\r\n\r\n        <!-- 선 -->\r\n        <div v-if=\"index < progressData.progressArr.length\" class=\"lineGuasge\">\r\n          <div\r\n              class=\"line-fill\"\r\n              :style=\"{\r\n              width: step.progressPercent + '%',\r\n              transition: 'width 0.5s ease',\r\n            }\"\r\n          ></div>\r\n          <div class=\"newProgressNm\">\r\n            {{ step.progressName }}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {reactive, watch, onMounted, defineProps} from 'vue';\r\n\r\n// Props 정의\r\nconst props = defineProps(['parsedDataSysInfo']);\r\n\r\n// 내부 상태: parsedData를 복사하여 관리\r\nconst progressData: any = reactive({\r\n  progressBarText: '',\r\n  progressBarPercent: 0,\r\n  progressArr: [],\r\n});\r\n\r\n// Props의 parsedData 변경 감지 및 progressData 업데이트\r\nwatch(\r\n    () => props.parsedDataSysInfo,\r\n    (newData) => {\r\n      if (newData) {\r\n        progressData.progressBarText = newData.progressBarText || '';\r\n        progressData.progressBarPercent = newData.progressBarPercent || 0;\r\n        console.log(newData.progressArr)\r\n        progressData.progressArr = (newData.progressArr || []).map((step) => ({\r\n          progressNo: step.progressNo,\r\n          progressName: step.progressName,\r\n          progressPercent: step.progressPercent,\r\n        }));\r\n      }\r\n    },\r\n    {immediate: true, deep: true}\r\n);\r\n\r\n// 테스트용 데이터 생성 함수\r\nconst startFakeDataTest = () => {\r\n  let fakePercent = 0;\r\n  const interval = setInterval(() => {\r\n    if (fakePercent > 100) {\r\n      clearInterval(interval); // 100%에 도달하면 테스트 종료\r\n    } else {\r\n      // progressData 값 업데이트\r\n      progressData.progressBarText = `테스트 진행 중 (${fakePercent}%)`;\r\n      progressData.progressBarPercent = fakePercent;\r\n\r\n      // 단계별 진행도 계산\r\n      progressData.progressArr.forEach((step: any, index: any) => {\r\n        const stepStart = index * 33.33; // 각 단계는 33.33%씩 차지\r\n        const stepEnd = (index + 1) * 33.33;\r\n\r\n        if (fakePercent >= stepEnd) {\r\n          step.progressPercent = 100; // 단계 완료\r\n        } else if (fakePercent > stepStart) {\r\n          step.progressPercent = ((fakePercent - stepStart) / (stepEnd - stepStart)) * 100;\r\n        } else {\r\n          step.progressPercent = 0;\r\n        }\r\n      });\r\n\r\n      fakePercent += 5; // 5%씩 증가\r\n    }\r\n  }, 500); // 0.5초 간격으로 업데이트\r\n};\r\n\r\n// 컴포넌트가 마운트되면 테스트 모드 실행 (옵션)\r\nonMounted(() => {\r\n  if (progressData.progressArr.length === 0) {\r\n    progressData.progressArr = [\r\n      {progressNo: 1, progressName: \"Step 1\", progressPercent: 0},\r\n      {progressNo: 2, progressName: \"Step 2\", progressPercent: 0},\r\n      {progressNo: 3, progressName: \"Step 3\", progressPercent: 0},\r\n    ];\r\n  }\r\n  // startFakeDataTest();\r\n});\r\n\r\n</script>\r\n\r\n","import script from \"./GaugeBar.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GaugeBar.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createBlock as _createBlock, renderList as _renderList, vShow as _vShow, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = { class: \"circular-progress-bar mt20\" }\nconst _hoisted_2 = {\n  class: \"progress-ring\",\n  width: \"140\",\n  height: \"140\"\n}\nconst _hoisted_3 = {\n  id: \"gradient\",\n  x1: \"0%\",\n  y1: \"0%\",\n  x2: \"100%\",\n  y2: \"100%\"\n}\nconst _hoisted_4 = [\"stop-color\"]\nconst _hoisted_5 = [\"cx\", \"cy\", \"r\", \"stroke-width\"]\nconst _hoisted_6 = [\"cx\", \"cy\", \"r\", \"stroke-width\", \"stroke-dasharray\", \"stroke-dashoffset\"]\nconst _hoisted_7 = { class: \"progress-bar-text-gauge\" }\nconst _hoisted_8 = {\n  key: 1,\n  class: \"slideCardWrap\"\n}\nconst _hoisted_9 = { class: \"slideContent\" }\nconst _hoisted_10 = { class: \"mt10\" }\nconst _hoisted_11 = { class: \"slideContent\" }\nconst _hoisted_12 = { class: \"mt10\" }\nconst _hoisted_13 = {\n  key: 2,\n  class: \"slideCardWrap\"\n}\nconst _hoisted_14 = { class: \"slideContent pb100a\" }\nconst _hoisted_15 = { class: \"renewalTotalTime\" }\nconst _hoisted_16 = { class: \"renewalSlideTime\" }\nconst _hoisted_17 = { class: \"slideTime\" }\n\nimport {ref, onMounted, onBeforeUnmount, watch, computed, onBeforeMount, reactive, nextTick} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {SLIDE_CARD_12A, SLIDE_CARD_100A} from \"@/common/defines/constants/analysis\";\r\nimport GaugeBar from \"@/components/commonUi/GaugeBar.vue\";\r\n\r\n// 스토어\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'renewalWorking',\n  props: ['parsedData', 'pb100aCassette', 'parsedDataSysInfo'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst initValData = computed(() => store.state.commonModule.initValData);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst props = __props;\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(140); // SVG 크기\r\nconst strokeWidth = ref(3); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref<any>({});\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst isBm = ref(false);\r\nconst fixEqStatCd = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\nconst progressData = reactive({\r\n  progressBarText: '',\r\n  progressBarPercent: 0,\r\n});\r\n\r\n\r\nwatch(() => embeddedStatusJobCmd.value?.userStop, async (userStop) => {\r\n  if (userStop) {\r\n    await nextTick();\r\n    progressColor.value = 'red';\r\n    progressData.progressBarPercent = 0;\r\n    const nnn = pbVersion.value === '100a' ? SLIDE_CARD_100A : SLIDE_CARD_12A;\r\n    slideCardData.value = {\r\n      INPUT: nnn.INPUT.map(item => ({ ...item, slotState: '0' })),\r\n      OUTPUT: nnn.OUTPUT.map(item => ({ ...item, slotState: '0' }))\r\n    };\r\n\r\n    console.log('slideCardData', slideCardData.value)\r\n  } else {\r\n    progressColor.value = '#00c2ff';\r\n  }\r\n})\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  if (sysInfo.eqStatCd === '02') {\r\n    fixEqStatCd.value = false;\r\n  }\r\n\r\n  if (!fixEqStatCd.value) {\r\n    eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  }\r\n\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.INPUT);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.OUTPUT);\r\n  } else {\r\n    dashoffset.value = circumference.value;\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.INPUT);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.OUTPUT);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if (newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n    dashoffset.value = circumference.value;\r\n  }\r\n});\r\n\r\nwatch(\r\n    () => props.parsedDataSysInfo, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      progressData.progressBarText = newVal.progressBarText || '';\r\n      progressData.progressBarPercent = newVal.progressBarPercent || 25;\r\n      // 데이터 변경 시 실행할 코드\r\n      console.log(newVal)\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot));\r\n  console.log('slotArray', slotArray)\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = window.PROJECT_TYPE === 'pb' ? Number(currentSlot.maxWbcCount) : Number(currentSlot.cellCount);\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = calculateDashOffset(percentage);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(() => eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\nwatch(() => initValData.value, (newVal) => {\r\n  if (newVal) {\r\n    eqStatCd.value = '05';\r\n  }\r\n  fixEqStatCd.value = newVal;\r\n})\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nonBeforeMount(() => {\r\n  pbVersion.value = window.MACHINE_VERSION;\r\n  slideCardData.value = pbVersion.value === '100a'\r\n      ? JSON.parse(JSON.stringify(SLIDE_CARD_100A))\r\n      : JSON.parse(JSON.stringify(SLIDE_CARD_12A));\r\n})\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.INPUT.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.OUTPUT.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  isBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst calculateDashOffset = (percentage: number) => circumference.value * (1 - percentage / 100);\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nonBeforeUnmount(() => {\r\n  if (countingInterval) {\r\n    clearInterval(countingInterval);\r\n    countingInterval = null;\r\n  }\r\n  if (countingIntervalTotal) {\r\n    clearInterval(countingIntervalTotal);\r\n    countingIntervalTotal = null;\r\n  }\r\n});\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _cache[7] || (_cache[7] = _createElementVNode(\"h3\", { class: \"titleText\" }, \"Working View\", -1)),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        (_openBlock(), _createElementBlock(\"svg\", _hoisted_2, [\n          _createElementVNode(\"defs\", null, [\n            _createElementVNode(\"linearGradient\", _hoisted_3, [\n              (!embeddedStatusJobCmd.value.value?.userStop)\n                ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                    _cache[0] || (_cache[0] = _createElementVNode(\"stop\", {\n                      offset: \"0%\",\n                      \"stop-color\": \"#56ccf2\"\n                    }, null, -1)),\n                    _cache[1] || (_cache[1] = _createElementVNode(\"stop\", {\n                      offset: \"50%\",\n                      \"stop-color\": \"#35b0b6\"\n                    }, null, -1)),\n                    _cache[2] || (_cache[2] = _createElementVNode(\"stop\", {\n                      offset: \"100%\",\n                      \"stop-color\": \"#2f80ed\"\n                    }, null, -1))\n                  ], 64))\n                : (_openBlock(), _createElementBlock(\"stop\", {\n                    key: 1,\n                    offset: \"100%\",\n                    \"stop-color\": progressColor.value\n                  }, null, 8, _hoisted_4)),\n              _cache[3] || (_cache[3] = _createElementVNode(\"animateTransform\", {\n                attributeName: \"gradientTransform\",\n                type: \"rotate\",\n                from: \"0 0.5 0.5\",\n                to: \"360 0.5 0.5\",\n                dur: \"2s\",\n                repeatCount: \"indefinite\"\n              }, null, -1))\n            ]),\n            _cache[4] || (_cache[4] = _createElementVNode(\"filter\", { id: \"shadow\" }, [\n              _createElementVNode(\"feDropShadow\", {\n                dx: \"0\",\n                dy: \"0\",\n                stdDeviation: \"6\",\n                \"flood-color\": \"rgba(0, 0, 0, 0.3)\"\n              })\n            ], -1))\n          ]),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"#2e2e2e\",\n            fill: \"none\"\n          }, null, 8, _hoisted_5),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"url(#gradient)\",\n            fill: \"none\",\n            \"stroke-dasharray\": circumference.value,\n            \"stroke-dashoffset\": dashoffset.value,\n            filter: \"url(#shadow)\"\n          }, null, 8, _hoisted_6)\n        ])),\n        _createElementVNode(\"p\", {\n          class: _normalizeClass({'blinkColor': isBlinking.value,'renewalStateText': true})\n        }, _toDisplayString(changeWqStatCd()), 3),\n        _createElementVNode(\"div\", _hoisted_7, [\n          _createElementVNode(\"div\", null, _toDisplayString(progressData.progressBarPercent), 1),\n          _cache[5] || (_cache[5] = _createElementVNode(\"span\", null, \"%\", -1))\n        ])\n      ])\n    ]),\n    (siteCd.value === '0000')\n      ? (_openBlock(), _createBlock(GaugeBar, {\n          key: 0,\n          parsedDataSysInfo: __props.parsedDataSysInfo\n        }, null, 8, [\"parsedDataSysInfo\"]))\n      : _createCommentVNode(\"\", true),\n    (pbVersion.value === '12a')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _createElementVNode(\"ul\", _hoisted_9, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.INPUT, (item) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: item.slotNo,\n                class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n              }, null, 2))\n            }), 128)),\n            _withDirectives(_createElementVNode(\"p\", _hoisted_10, \"INPUT\", 512), [\n              [_vShow, commonDataGet.value.isRunningState]\n            ])\n          ]),\n          _createElementVNode(\"ul\", _hoisted_11, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.OUTPUT, (item) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: item.slotNo,\n                class: _normalizeClass(getSlotStateClass(item.slotState,'output'))\n              }, null, 2))\n            }), 128)),\n            _withDirectives(_createElementVNode(\"p\", _hoisted_12, \"OUTPUT\", 512), [\n              [_vShow, commonDataGet.value.isRunningState]\n            ])\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n          _createElementVNode(\"ul\", _hoisted_14, [\n            _withDirectives(_createElementVNode(\"p\", null, \"INPUT : \" + _toDisplayString(casExistChangeText(iCasExist.value)), 513), [\n              [_vShow, commonDataGet.value.isRunningState]\n            ]),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([...slideCardData.value.INPUT].reverse(), (item) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: item.slotNo,\n                class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n              }, null, 2))\n            }), 128)),\n            _withDirectives(_createElementVNode(\"p\", { class: \"mt10\" }, \"OUTPUT : \" + _toDisplayString(casExistChangeText(oCasExist.value)), 513), [\n              [_vShow, commonDataGet.value.isRunningState]\n            ])\n          ])\n        ])),\n    _cache[8] || (_cache[8] = _createElementVNode(\"div\", { class: \"lineRenewal\" }, null, -1)),\n    _cache[9] || (_cache[9] = _createElementVNode(\"p\", { class: \"renewal slideTime1\" }, \"Processing Total Time\", -1)),\n    _createElementVNode(\"p\", _hoisted_15, _toDisplayString(timeDataGet.value.totalSlideTime), 1),\n    _createElementVNode(\"div\", _hoisted_16, [\n      _cache[6] || (_cache[6] = _createElementVNode(\"span\", null, \"Slide Time\", -1)),\n      _createElementVNode(\"p\", _hoisted_17, _toDisplayString(timeDataGet.value.slideTime), 1)\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\">Working View</h3>\r\n    <div>\r\n\r\n      <div class=\"circular-progress-bar mt20\">\r\n        <svg class=\"progress-ring\" width=\"140\" height=\"140\">\r\n          <!-- Define Rotating Gradient -->\r\n          <defs>\r\n\r\n            <!-- Gradient for Progress Circle -->\r\n            <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\r\n              <template v-if=\"!embeddedStatusJobCmd.value?.userStop\">\r\n                <stop offset=\"0%\" stop-color=\"#56ccf2\"/>\r\n                <stop offset=\"50%\" stop-color=\"#35b0b6\"/>\r\n                <stop offset=\"100%\" stop-color=\"#2f80ed\"/>\r\n              </template>\r\n              <template v-else>\r\n                <stop offset=\"100%\" :stop-color=\"progressColor\"/>\r\n              </template>\r\n\r\n              <!-- Rotate the gradient over time -->\r\n              <animateTransform\r\n                  attributeName=\"gradientTransform\"\r\n                  type=\"rotate\"\r\n                  from=\"0 0.5 0.5\"\r\n                  to=\"360 0.5 0.5\"\r\n                  dur=\"2s\"\r\n                  repeatCount=\"indefinite\"\r\n              />\r\n            </linearGradient>\r\n\r\n            <!-- Drop Shadow Filter -->\r\n            <filter id=\"shadow\">\r\n              <feDropShadow dx=\"0\" dy=\"0\" stdDeviation=\"6\" flood-color=\"rgba(0, 0, 0, 0.3)\"/>\r\n            </filter>\r\n          </defs>\r\n\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"#2e2e2e\"\r\n              fill=\"none\"\r\n          />\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"url(#gradient)\"\r\n              fill=\"none\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"dashoffset\"\r\n              filter=\"url(#shadow)\"\r\n          />\r\n        </svg>\r\n        <p :class=\"{'blinkColor': isBlinking,'renewalStateText': true}\">{{ changeWqStatCd() }}</p>\r\n        <div class=\"progress-bar-text-gauge\">\r\n          <div>{{ progressData.progressBarPercent }}</div>\r\n          <span>%</span>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n    <GaugeBar :parsedDataSysInfo=\"parsedDataSysInfo\" v-if=\"siteCd === '0000'\"/>\r\n    <div class='slideCardWrap' v-if=\"pbVersion === '12a'\">\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.INPUT\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p v-show=\"commonDataGet.isRunningState\" class=\"mt10\">INPUT</p>\r\n      </ul>\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.OUTPUT\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'output')\"></li>\r\n        <p v-show=\"commonDataGet.isRunningState\" class=\"mt10\">OUTPUT</p>\r\n      </ul>\r\n    </div>\r\n    <div class='slideCardWrap' v-else>\r\n      <ul class='slideContent pb100a'>\r\n        <p v-show=\"commonDataGet.isRunningState\">INPUT : {{ casExistChangeText(iCasExist) }}</p>\r\n        <li v-for=\"item in [...slideCardData.INPUT].reverse()\" :key=\"item.slotNo\" :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p v-show=\"commonDataGet.isRunningState\" class=\"mt10\">OUTPUT : {{ casExistChangeText(oCasExist) }}</p>\r\n      </ul>\r\n    </div>\r\n    <div class=\"lineRenewal\"></div>\r\n    <p class=\"renewal slideTime1\">Processing Total Time</p>\r\n    <p class=\"renewalTotalTime\"> {{ timeDataGet.totalSlideTime }} </p>\r\n    <div class=\"renewalSlideTime\">\r\n      <span>Slide Time</span>\r\n      <p class=\"slideTime\"> {{ timeDataGet.slideTime }} </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeUnmount, watch, computed, defineProps, onBeforeMount, reactive, nextTick} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {SLIDE_CARD_12A, SLIDE_CARD_100A} from \"@/common/defines/constants/analysis\";\r\nimport GaugeBar from \"@/components/commonUi/GaugeBar.vue\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst initValData = computed(() => store.state.commonModule.initValData);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst props = defineProps(['parsedData', 'pb100aCassette', 'parsedDataSysInfo']);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(140); // SVG 크기\r\nconst strokeWidth = ref(3); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref<any>({});\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst isBm = ref(false);\r\nconst fixEqStatCd = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\nconst progressData = reactive({\r\n  progressBarText: '',\r\n  progressBarPercent: 0,\r\n});\r\n\r\n\r\nwatch(() => embeddedStatusJobCmd.value?.userStop, async (userStop) => {\r\n  if (userStop) {\r\n    await nextTick();\r\n    progressColor.value = 'red';\r\n    progressData.progressBarPercent = 0;\r\n    const nnn = pbVersion.value === '100a' ? SLIDE_CARD_100A : SLIDE_CARD_12A;\r\n    slideCardData.value = {\r\n      INPUT: nnn.INPUT.map(item => ({ ...item, slotState: '0' })),\r\n      OUTPUT: nnn.OUTPUT.map(item => ({ ...item, slotState: '0' }))\r\n    };\r\n\r\n    console.log('slideCardData', slideCardData.value)\r\n  } else {\r\n    progressColor.value = '#00c2ff';\r\n  }\r\n})\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  if (sysInfo.eqStatCd === '02') {\r\n    fixEqStatCd.value = false;\r\n  }\r\n\r\n  if (!fixEqStatCd.value) {\r\n    eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  }\r\n\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.INPUT);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.OUTPUT);\r\n  } else {\r\n    dashoffset.value = circumference.value;\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.INPUT);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.OUTPUT);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if (newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n    dashoffset.value = circumference.value;\r\n  }\r\n});\r\n\r\nwatch(\r\n    () => props.parsedDataSysInfo, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      progressData.progressBarText = newVal.progressBarText || '';\r\n      progressData.progressBarPercent = newVal.progressBarPercent || 25;\r\n      // 데이터 변경 시 실행할 코드\r\n      console.log(newVal)\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot));\r\n  console.log('slotArray', slotArray)\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = window.PROJECT_TYPE === 'pb' ? Number(currentSlot.maxWbcCount) : Number(currentSlot.cellCount);\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = calculateDashOffset(percentage);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(() => eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\nwatch(() => initValData.value, (newVal) => {\r\n  if (newVal) {\r\n    eqStatCd.value = '05';\r\n  }\r\n  fixEqStatCd.value = newVal;\r\n})\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nonBeforeMount(() => {\r\n  pbVersion.value = window.MACHINE_VERSION;\r\n  slideCardData.value = pbVersion.value === '100a'\r\n      ? JSON.parse(JSON.stringify(SLIDE_CARD_100A))\r\n      : JSON.parse(JSON.stringify(SLIDE_CARD_12A));\r\n})\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.INPUT.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.OUTPUT.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  isBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst calculateDashOffset = (percentage: number) => circumference.value * (1 - percentage / 100);\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nonBeforeUnmount(() => {\r\n  if (countingInterval) {\r\n    clearInterval(countingInterval);\r\n    countingInterval = null;\r\n  }\r\n  if (countingIntervalTotal) {\r\n    clearInterval(countingIntervalTotal);\r\n    countingIntervalTotal = null;\r\n  }\r\n});\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./renewalWorking.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./renewalWorking.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"contentLeft\" }\nconst _hoisted_2 = { class: \"contentRight\" }\nconst _hoisted_3 = { class: \"contentBottom\" }\n\nimport ProcessInfo from '@/views/analysis/commponent/processInfo.vue';\r\nimport Execute from '@/views/analysis/commponent/execute.vue';\r\nimport workingView from '@/views/analysis/commponent/workingView.vue';\r\nimport orderList from './commponent/orderList.vue';\r\nimport wbcclassification from './commponent/classInfoification.vue';\r\nimport rbcclassification from './commponent/rbcclassification.vue';\r\nimport FoundingCells from \"@/views/analysis/commponent/foundingCells.vue\";\r\nimport {onMounted, ref, onBeforeMount, computed, watch} from \"vue\";\r\nimport router from \"@/router\";\r\nimport {useStore} from \"vuex\";\r\nimport RenewalWorking from \"@/views/analysis/commponent/renewalWorking.vue\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  props: ['parsedData', 'isClass', 'startStatus', 'pb100aCassette', 'parsedDataSysInfo'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit;\r\n\r\nconst store = useStore();\r\nconst bmIsBoolen = ref(false);\r\nconst props = __props;\r\nconst pbVersion = ref<any>('');\r\nconst initValData = ref(false);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\nonBeforeMount(async () => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    router.push('/database')\r\n  }\r\n\r\n  pbVersion.value = window.MACHINE_VERSION;\r\n  bmIsBoolen.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n});\r\n\r\n\r\nconst rbcUpdate = (data: any) => {\r\n  emits('rbcAppUpdate', data);\r\n}\r\n\r\nconst classInfoUpdate = (data: any) => {\r\n  emits('classAppUpdateLast', data);\r\n}\r\n\r\nconst initDataChangeText = (val: any) => {\r\n  store.dispatch('commonModule/setCommonInfo', {initValData: val});\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(Execute, { onInitDataChangeText: initDataChangeText }),\n      _createVNode(ProcessInfo, {\n        parsedData: props.parsedData,\n        pb100aCassette: __props.pb100aCassette\n      }, null, 8, [\"parsedData\", \"pb100aCassette\"]),\n      _createVNode(orderList, {\n        parsedData: props.parsedData,\n        startStatus: props.startStatus,\n        pb100aCassette: __props.pb100aCassette\n      }, null, 8, [\"parsedData\", \"startStatus\", \"pb100aCassette\"])\n    ], 512), [\n      [_vShow, props.isClass]\n    ]),\n    _withDirectives(_createElementVNode(\"div\", _hoisted_2, [\n      (siteCd.value === '9090')\n        ? (_openBlock(), _createBlock(RenewalWorking, {\n            key: 0,\n            initValData: initValData.value,\n            parsedData: props.parsedData,\n            parsedDataSysInfo: __props.parsedDataSysInfo,\n            pb100aCassette: __props.pb100aCassette,\n            class: \"contentRightChild\"\n          }, null, 8, [\"initValData\", \"parsedData\", \"parsedDataSysInfo\", \"pb100aCassette\"]))\n        : (_openBlock(), _createBlock(workingView, {\n            key: 1,\n            initValData: initValData.value,\n            parsedData: props.parsedData,\n            pb100aCassette: __props.pb100aCassette,\n            class: \"contentRightChild\"\n          }, null, 8, [\"initValData\", \"parsedData\", \"pb100aCassette\"])),\n      (!bmIsBoolen.value)\n        ? (_openBlock(), _createBlock(rbcclassification, {\n            key: 2,\n            onRbcUpdate: rbcUpdate,\n            parsedData: props.parsedData,\n            class: \"contentRightChild\"\n          }, null, 8, [\"parsedData\"]))\n        : _createCommentVNode(\"\", true),\n      _createVNode(wbcclassification, {\n        onClassInfoUpdate: classInfoUpdate,\n        parsedData: props.parsedData,\n        bmIsBoolen: bmIsBoolen.value,\n        class: \"contentRightChild\"\n      }, null, 8, [\"parsedData\", \"bmIsBoolen\"]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createVNode(FoundingCells, {\n          parsedData: props.parsedData,\n          pb100aCassette: __props.pb100aCassette\n        }, null, 8, [\"parsedData\", \"pb100aCassette\"])\n      ])\n    ], 512), [\n      [_vShow, props.isClass]\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"contentLeft\" v-show=\"props.isClass\">\r\n    <Execute @initDataChangeText=\"initDataChangeText\"/>\r\n    <ProcessInfo :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\"/>\r\n    <orderList :parsedData=\"props.parsedData\" :startStatus=\"props.startStatus\" :pb100aCassette=\"pb100aCassette\"/>\r\n  </div>\r\n  <div class=\"contentRight\" v-show=\"props.isClass\">\r\n    <RenewalWorking :initValData=\"initValData\" :parsedData=\"props.parsedData\" :parsedDataSysInfo=\"parsedDataSysInfo\" :pb100aCassette=\"pb100aCassette\"\r\n                    v-if=\"siteCd === '9090'\"\r\n                    class=\"contentRightChild\"/>\r\n    <workingView :initValData=\"initValData\" :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\"\r\n                 v-else\r\n                 class=\"contentRightChild\"/>\r\n    <rbcclassification @rbcUpdate=\"rbcUpdate\" :parsedData=\"props.parsedData\" v-if=\"!bmIsBoolen\"\r\n                       class=\"contentRightChild\"/>\r\n    <wbcclassification @classInfoUpdate=\"classInfoUpdate\" :parsedData=\"props.parsedData\" :bmIsBoolen=\"bmIsBoolen\"\r\n                       class=\"contentRightChild\"/>\r\n    <div class=\"contentBottom\">\r\n      <FoundingCells :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport ProcessInfo from '@/views/analysis/commponent/processInfo.vue';\r\nimport Execute from '@/views/analysis/commponent/execute.vue';\r\nimport workingView from '@/views/analysis/commponent/workingView.vue';\r\nimport orderList from './commponent/orderList.vue';\r\nimport wbcclassification from './commponent/classInfoification.vue';\r\nimport rbcclassification from './commponent/rbcclassification.vue';\r\nimport FoundingCells from \"@/views/analysis/commponent/foundingCells.vue\";\r\nimport {defineEmits, defineProps, onMounted, ref, onBeforeMount, computed, watch} from \"vue\";\r\nimport router from \"@/router\";\r\nimport {useStore} from \"vuex\";\r\nimport RenewalWorking from \"@/views/analysis/commponent/renewalWorking.vue\";\r\n\r\nconst emits = defineEmits();\r\n\r\nconst store = useStore();\r\nconst bmIsBoolen = ref(false);\r\nconst props = defineProps(['parsedData', 'isClass', 'startStatus', 'pb100aCassette', 'parsedDataSysInfo']);\r\nconst pbVersion = ref<any>('');\r\nconst initValData = ref(false);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\nonBeforeMount(async () => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    router.push('/database')\r\n  }\r\n\r\n  pbVersion.value = window.MACHINE_VERSION;\r\n  bmIsBoolen.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n});\r\n\r\n\r\nconst rbcUpdate = (data: any) => {\r\n  emits('rbcAppUpdate', data);\r\n}\r\n\r\nconst classInfoUpdate = (data: any) => {\r\n  emits('classAppUpdateLast', data);\r\n}\r\n\r\nconst initDataChangeText = (val: any) => {\r\n  store.dispatch('commonModule/setCommonInfo', {initValData: val});\r\n}\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'HomeView',\n  setup(__props) {\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_Fragment = _resolveComponent(\"Fragment\")!\n\n  return (_openBlock(), _createBlock(_component_Fragment, null, {\n    default: _withCtx(() => [\n      _createVNode(Analysis)\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { useHttpClient, ApiResponse } from '@/common/api/httpClient';\r\nimport { apiConstants } from '@/common/api/apiConstants';\r\nimport { CreateUser, loginUser, UserResponse } from '@/common/api/service/user/dto/userDto'\r\n\r\n// Create an instance of the http client\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createUser = async (request: CreateUser): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.user.register, request);\r\n};\r\n\r\nexport const login = async (request: loginUser): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.user.login, request);\r\n};\r\n\r\nexport const logoutApi = async (request: Pick<loginUser, 'userId'>): Promise<ApiResponse<UserResponse | string | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.user.logout, request);\r\n}\r\n\r\nexport const getAllUsersApi = async (userId: string): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.user.getUsers, userId);\r\n}\r\n\r\nexport const getUserApi = async (userId: string): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.user.userCheck, userId);\r\n}\r\n\r\nexport const putUserDataApi = async (request: any, userId: string): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPut(apiConstants.user.userDataPut, request, userId);\r\n};\r\n\r\nexport const deleteUserApi = async (userId: any): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpDelete(apiConstants.user.deleteUser, userId, true);\r\n}\r\n\r\n// export const getUserIpApi = async (): Promise<ApiResponse<any>> => {\r\n//     return httpClient.httpGet(apiConstants.user.userIp, '');\r\n// }","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"joinContent\" }\nconst _hoisted_2 = { class: \"joinWrapper\" }\n\nimport {ref} from \"vue\";\r\nimport {createUser} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst employeeNo = ref('');\r\nconst idVal = ref('');\r\nconst nameVal = ref('');\r\nconst passwordRepeat = ref('');\r\nconst password = ref('');\r\nconst userType = ref('normal');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst goLoginPage = () => {\r\n  router.push('/user/login');\r\n}\r\nconst createAccount = async () => {\r\n  const currentDate = new Date();\r\n\r\n  if (idVal.value === \"\") {\r\n    await showErrorAlert('Please enter id');\r\n    return;\r\n  }\r\n  else if (idVal.value.includes('_')) {\r\n    await showErrorAlert('UserId is not available');\r\n    return;\r\n  }\r\n  else if (password.value === \"\") {\r\n    await showErrorAlert('Please enter password');\r\n    return;\r\n  }\r\n  else if (nameVal.value === \"\") {\r\n    await showErrorAlert('Please enter name');\r\n    return;\r\n  }\r\n  else if (employeeNo.value === \"\") {\r\n    await showErrorAlert('Please enter Employee No');\r\n    return;\r\n  }\r\n  else if (passwordRepeat.value === \"\") {\r\n    await showErrorAlert('Please enter repeat password');\r\n    return;\r\n  }\r\n  else if (password.value !== passwordRepeat.value) {\r\n    await showErrorAlert('Please check if the password and password are the same');\r\n    return;\r\n  }\r\n\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n    name: nameVal.value,\r\n    employeeNo: employeeNo.value,\r\n    userType: userType.value,\r\n    subscriptionDate: currentDate,\r\n  }\r\n\r\n  try {\r\n    const result: any = await createUser(user);\r\n    if (result.data?.userId) {\r\n      await showSuccessAlert('registration successful');\r\n      await router.push('/user/login');\r\n    } else {\r\n\r\n      // User Id 중복\r\n      if (result.data.includes('Duplicate')) {\r\n        await showErrorAlert('Duplicated user id');\r\n      }\r\n\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n    await showErrorAlert('Signin fail');\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _cache[13] || (_cache[13] = _createElementVNode(\"p\", { class: \"mt20 mb40\" }, \"CREATE ACCOUNT\", -1)),\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"ul\", _hoisted_2, [\n          _createElementVNode(\"li\", null, [\n            _cache[6] || (_cache[6] = _createElementVNode(\"span\", { class: \"loginTitle\" }, \"ID\", -1)),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((idVal).value = $event))\n            }, null, 512), [\n              [_vModelText, idVal.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _cache[7] || (_cache[7] = _createElementVNode(\"span\", { class: \"loginTitle\" }, \"password\", -1)),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event))\n            }, null, 512), [\n              [_vModelText, password.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _cache[8] || (_cache[8] = _createElementVNode(\"span\", { class: \"loginTitle\" }, \"Repeat password\", -1)),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((passwordRepeat).value = $event))\n            }, null, 512), [\n              [_vModelText, passwordRepeat.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _cache[9] || (_cache[9] = _createElementVNode(\"span\", { class: \"loginTitle\" }, \"name\", -1)),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((nameVal).value = $event))\n            }, null, 512), [\n              [_vModelText, nameVal.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _cache[10] || (_cache[10] = _createElementVNode(\"span\", { class: \"loginTitle\" }, \"Employee No\", -1)),\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((employeeNo).value = $event))\n            }, null, 512), [\n              [_vModelText, employeeNo.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _cache[12] || (_cache[12] = _createElementVNode(\"span\", { class: \"loginTitle\" }, \"user Type\", -1)),\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((userType).value = $event)),\n              disabled: \"\"\n            }, _cache[11] || (_cache[11] = [\n              _createElementVNode(\"option\", { value: \"admin\" }, \"Admin\", -1),\n              _createElementVNode(\"option\", { value: \"normal\" }, \"Normal\", -1)\n            ]), 512), [\n              [_vModelSelect, userType.value]\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", { class: \"joinBtn\" }, [\n          _createElementVNode(\"button\", {\n            class: \"defaultBtn\",\n            type: \"button\",\n            onClick: createAccount\n          }, \"Create Account\"),\n          _createElementVNode(\"button\", {\n            class: \"defaultBtn\",\n            type: \"button\",\n            onClick: goLoginPage\n          }, \"Back\")\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"joinContent\">\r\n    <p class=\"mt20 mb40 \">CREATE ACCOUNT</p>\r\n    <div>\r\n      <ul class=\"joinWrapper\">\r\n        <li>\r\n          <span class=\"loginTitle\">ID</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"idVal\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">password</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"password\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">Repeat password</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"passwordRepeat\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">name</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"nameVal\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">Employee No</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"employeeNo\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">user Type</span>\r\n          <select v-model=\"userType\" disabled>\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"normal\">Normal</option>\r\n          </select>\r\n        </li>\r\n      </ul>\r\n      <div class='joinBtn'>\r\n        <button class=\"defaultBtn\" type=\"button\" @click='createAccount'>Create Account</button>\r\n        <button class=\"defaultBtn\" type=\"button\" @click='goLoginPage'>Back</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref} from \"vue\";\r\nimport {createUser} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst employeeNo = ref('');\r\nconst idVal = ref('');\r\nconst nameVal = ref('');\r\nconst passwordRepeat = ref('');\r\nconst password = ref('');\r\nconst userType = ref('normal');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst goLoginPage = () => {\r\n  router.push('/user/login');\r\n}\r\nconst createAccount = async () => {\r\n  const currentDate = new Date();\r\n\r\n  if (idVal.value === \"\") {\r\n    await showErrorAlert('Please enter id');\r\n    return;\r\n  }\r\n  else if (idVal.value.includes('_')) {\r\n    await showErrorAlert('UserId is not available');\r\n    return;\r\n  }\r\n  else if (password.value === \"\") {\r\n    await showErrorAlert('Please enter password');\r\n    return;\r\n  }\r\n  else if (nameVal.value === \"\") {\r\n    await showErrorAlert('Please enter name');\r\n    return;\r\n  }\r\n  else if (employeeNo.value === \"\") {\r\n    await showErrorAlert('Please enter Employee No');\r\n    return;\r\n  }\r\n  else if (passwordRepeat.value === \"\") {\r\n    await showErrorAlert('Please enter repeat password');\r\n    return;\r\n  }\r\n  else if (password.value !== passwordRepeat.value) {\r\n    await showErrorAlert('Please check if the password and password are the same');\r\n    return;\r\n  }\r\n\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n    name: nameVal.value,\r\n    employeeNo: employeeNo.value,\r\n    userType: userType.value,\r\n    subscriptionDate: currentDate,\r\n  }\r\n\r\n  try {\r\n    const result: any = await createUser(user);\r\n    if (result.data?.userId) {\r\n      await showSuccessAlert('registration successful');\r\n      await router.push('/user/login');\r\n    } else {\r\n\r\n      // User Id 중복\r\n      if (result.data.includes('Duplicate')) {\r\n        await showErrorAlert('Duplicated user id');\r\n      }\r\n\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n    await showErrorAlert('Signin fail');\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {reactive, ref} from 'vue';\r\nimport {\r\n    getCellImgApi,\r\n    createCellImgApi,\r\n    createOrderClassApi,\r\n    getOrderClassApi,\r\n    createNormalRangeApi,\r\n    getNormalRangeApi,\r\n    createRbcDegreeApi,\r\n    getRbcDegreeApi,\r\n    getCbcCodeRbcApi,\r\n    createCbcCodeRbcApi,\r\n    createLisCodeWbcApi,\r\n    createLisCodeRbcApi,\r\n    getLisCodeWbcApi, getLisCodeRbcApi\r\n} from '@/common/api/service/setting/settingApi';\r\nimport { defaultBmClassList, defaultWbcClassList } from \"@/store/modules/analysis/wbcclassification\";\r\nimport { defaultCbcList, defaultRbcDegree, LIS_CODE_RBC_OPTION, lisCodeWbcOption, normalRange, rbcClassList } from \"@/common/defines/constants/settings\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\n\r\nconst projectType = window.PROJECT_TYPE === 'bm';\r\nconst defaultCellImgData = {\r\n    testTypeCd: projectType ? '02' : '01',\r\n    diffCellAnalyzingCount: projectType ? '500':'100',\r\n    diffWbcPositionMargin: '0',\r\n    diffRbcPositionMargin: '0',\r\n    diffPltPositionMargin: '0',\r\n    pbsCellAnalyzingCount: '100',\r\n    stitchCount: '1',\r\n    edgeShotType: '0',\r\n    edgeShotLPCount: '1',\r\n    edgeShotHPCount: '3',\r\n    bfCellAnalyzingCount: '100',\r\n    iaRootPath: projectType ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc',\r\n    isNsNbIntegration: false,\r\n    isAlarm: false,\r\n    alarmCount: '5',\r\n    keepPage: false,\r\n    lisUploadCheckAll: false,\r\n    backupPath: '',\r\n    backupStartDate: new Date(),\r\n    backupEndDate: new Date(),\r\n    userId: '', // 사용자 ID 기본값\r\n};\r\n\r\n\r\n/**\r\n * API 요청 시 분류할 Constant\r\n * sendingForm: Create 요청 시 사용할 key 값\r\n * defaultItem: Create 요청 시 보내는 body\r\n * getRequest: get 요청 함수\r\n * createRequest: create 요청 함수\r\n * */\r\nconst settingsConstant = ref<any>({\r\n    'lisCodeWbc': {\r\n        'sendingForm': 'lisCodeItems',\r\n        'defaultItem': lisCodeWbcOption,\r\n        'getRequest': getLisCodeWbcApi,\r\n        'createRequest': createLisCodeWbcApi,\r\n    },\r\n    'lisCodeRbc': {\r\n        'sendingForm': 'lisCodeItems',\r\n        'defaultItem': LIS_CODE_RBC_OPTION,\r\n        'getRequest': getLisCodeRbcApi,\r\n        'createRequest': createLisCodeRbcApi,\r\n    },\r\n    'cbcCode': {\r\n        'sendingForm': 'cbcCodeItems',\r\n        'defaultItem': defaultCbcList,\r\n        'getRequest': getCbcCodeRbcApi,\r\n        'createRequest': createCbcCodeRbcApi,\r\n    },\r\n    'cellImage': {\r\n        'getRequest': getCellImgApi,\r\n        'createRequest': createCellImgApi,\r\n    },\r\n    'normalRange': {\r\n        'sendingForm': 'normalRangeItems',\r\n        'defaultItem': normalRange,\r\n        'getRequest': getNormalRangeApi,\r\n        'createRequest': createNormalRangeApi,\r\n    },\r\n    'orderClass': {\r\n        'getRequest': getOrderClassApi,\r\n        'createRequest': createOrderClassApi,\r\n    },\r\n    'rbcDegree': {\r\n        'getRequest': getRbcDegreeApi,\r\n        'createRequest': createRbcDegreeApi,\r\n    },\r\n})\r\n\r\n/** 로그인 시 Setting 값 설정 함수 */\r\nexport const initializeAllSettings = async () => {\r\n    await firstGetSettings('cellImage');\r\n    await firstGetSettings('orderClass');\r\n    await firstGetSettings('rbcDegree');\r\n    await firstGetSettings('lisCodeWbc')\r\n    await firstGetSettings('lisCodeRbc')\r\n    await firstGetSettings('cbcCode')\r\n    await firstGetSettings('normalRange')\r\n}\r\n\r\nconst firstGetSettings = async (initializeType: string) => {\r\n    const getRequest = settingsConstant.value[initializeType].getRequest;\r\n    try {\r\n        const { data } = await getRequest() || {};\r\n        if (!data || data.length === 0 || Object.keys(data).length === 0) {\r\n            const sendingFormStr = settingsConstant.value[initializeType]?.sendingForm;\r\n            const defaultItem = settingsConstant.value[initializeType].defaultItem;\r\n            const createRequest = settingsConstant.value[initializeType].createRequest;\r\n\r\n            const anotherDefaultValue = await defaultComputedValueForCreateRequest(initializeType)\r\n\r\n            if (sendingFormStr) {\r\n                await createRequest({ [sendingFormStr]: anotherDefaultValue || defaultItem });\r\n            } else {\r\n                await createRequest(anotherDefaultValue || defaultItem);\r\n            }\r\n\r\n            afterResponse(initializeType);\r\n        }\r\n    } catch (e) {\r\n        console.error(`${initializeType} Error - ${e}`);\r\n    }\r\n}\r\n\r\n/** Create 요청시 보낼 defaultValue 중 계산되어야 하는 값들을 반환하는 함수 */\r\nconst defaultComputedValueForCreateRequest = async (initializeType: string) => {\r\n    switch (initializeType) {\r\n        case 'cellImage':\r\n            const cellImgSet = {\r\n                analysisType: defaultCellImgData.testTypeCd,\r\n                diffCellAnalyzingCount: defaultCellImgData.diffCellAnalyzingCount,\r\n                diffWbcPositionMargin: defaultCellImgData.diffWbcPositionMargin,\r\n                diffRbcPositionMargin: defaultCellImgData.diffRbcPositionMargin,\r\n                diffPltPositionMargin: defaultCellImgData.diffPltPositionMargin,\r\n                pbsCellAnalyzingCount: defaultCellImgData.pbsCellAnalyzingCount,\r\n                stitchCount: defaultCellImgData.stitchCount,\r\n                edgeShotType: defaultCellImgData.edgeShotType,\r\n                edgeShotLPCount: defaultCellImgData.edgeShotLPCount,\r\n                edgeShotHPCount: defaultCellImgData.edgeShotHPCount,\r\n                bfCellAnalyzingCount: defaultCellImgData.bfCellAnalyzingCount,\r\n                iaRootPath: defaultCellImgData.iaRootPath,\r\n                isNsNbIntegration: defaultCellImgData.isNsNbIntegration ? 'Y' : 'N',\r\n                isAlarm: defaultCellImgData.isAlarm,\r\n                alarmCount: defaultCellImgData.alarmCount,\r\n                keepPage: defaultCellImgData.keepPage,\r\n                lisUploadCheckAll: defaultCellImgData.lisUploadCheckAll,\r\n                backupPath: defaultCellImgData.backupPath,\r\n                backupStartDate: defaultCellImgData.backupStartDate.toISOString().split('T')[0],\r\n                backupEndDate: defaultCellImgData.backupEndDate.toISOString().split('T')[0],\r\n                autoBackUpMonth: 'Not selected',\r\n                autoBackUpStartDate: null,\r\n            };\r\n            return cellImgSet;\r\n\r\n        case 'orderClass':\r\n            const orderList: any = window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n            for (const index in orderList) {\r\n                orderList[index].orderIdx = index;\r\n            }\r\n            return orderList;\r\n\r\n        case 'rbcDegree':\r\n            await combindDegree();\r\n            const rbcDegreeList: any = [];\r\n\r\n            rbcClassListArr.value.forEach((category: any) => {\r\n                category.classInfo.forEach((classItem: any) => {\r\n                    rbcDegreeList.push({\r\n                        categoryId: category.categoryId,\r\n                        categoryNm: category.categoryNm,\r\n                        classId: classItem.classId,\r\n                        classNm: classItem.classNm,\r\n                        degree1: classItem.degree1,\r\n                        degree2: classItem.degree2,\r\n                        degree3: classItem.degree3,\r\n                    });\r\n                });\r\n            });\r\n            return rbcDegreeList;\r\n\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\n/** Response를 받은 후 할 작업 정리 함수 */\r\nconst afterResponse = async (initializeType: string) => {\r\n    const store = useStore();\r\n\r\n    switch (initializeType) {\r\n        case 'cellImage':\r\n            sessionStorage.setItem('isNsNbIntegration', defaultCellImgData.isNsNbIntegration ? 'Y' : 'N');\r\n            sessionStorage.setItem('wbcPositionMargin', String(defaultCellImgData?.diffWbcPositionMargin));\r\n            sessionStorage.setItem('rbcPositionMargin', String(defaultCellImgData?.diffRbcPositionMargin));\r\n            sessionStorage.setItem('pltPositionMargin', String(defaultCellImgData?.diffPltPositionMargin));\r\n            sessionStorage.setItem('edgeShotType', String(defaultCellImgData?.edgeShotType));\r\n            sessionStorage.setItem('edgeShotLPCount', String(defaultCellImgData?.edgeShotLPCount));\r\n            sessionStorage.setItem('edgeShotHPCount', String(defaultCellImgData?.edgeShotHPCount));\r\n            sessionStorage.setItem('iaRootPath', String(defaultCellImgData?.iaRootPath));\r\n            sessionStorage.setItem('keepPage', String(defaultCellImgData?.keepPage));\r\n            await store.dispatch('commonModule/setCommonInfo', { showLISUploadAfterCheckingAll: defaultCellImgData?.lisUploadCheckAll });\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nconst combindDegree = async () => {\r\n    rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n        return {\r\n            ...category,\r\n            classInfo: category.classInfo.map((classItem: any) => {\r\n                const defaultDegree = defaultRbcDegree.find(\r\n                    (defaultItem) =>\r\n                        defaultItem.categoryId === category.categoryId &&\r\n                        defaultItem.classId === classItem.classId\r\n                );\r\n\r\n                return {\r\n                    ...classItem,\r\n                    degree1: defaultDegree?.degree1 || 0,\r\n                    degree2: defaultDegree?.degree2 || 0,\r\n                    degree3: defaultDegree?.degree3 || 0,\r\n                };\r\n            }),\r\n        };\r\n    });\r\n}","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const readJsonFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.jsonReader.get, request, '', false, sessionStorage.getItem('viewerCheck') || 'viewer');\r\n};\r\n\r\nexport const readDziFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.dziReader.get, request);\r\n}\r\n\r\nexport const pdfPost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.pdf.post, request, 'blob');\r\n};\r\n\r\nexport const readFileTxt = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.fileTxtRead.get, `${request}`, true);\r\n};\r\n\r\nexport const readFileEUCKR = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.fileTxtRead.readFileEUCKR, `${request}`, true);\r\n};\r\n\r\nexport const readH7File = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Read.post, request, 'text/plain', false, sessionStorage.getItem('viewerCheck') || 'viewer');\r\n};\r\n\r\nexport const readH7Message = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Message.post, request, '', false, sessionStorage.getItem('viewerCheck') || 'viewer');\r\n};\r\n\r\nexport const readNoFlagHl7Message = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Message.noFlagHl7, request, '', false, sessionStorage.getItem('viewerCheck') || 'viewer');\r\n}\r\n\r\nexport const readCustomH7Message = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7MessageCustom.post, request, '', false, sessionStorage.getItem('viewerCheck') || 'viewer');\r\n};\r\n\r\nexport const createH17 = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.Hl7Create.post, request);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"progressBarLogin\"\n}\nconst _hoisted_2 = { class: \"progressDiv\" }\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = { class: \"uimdLogin\" }\nconst _hoisted_5 = { class: \"loginContent\" }\nconst _hoisted_6 = { class: \"mt30 loginDiv\" }\nconst _hoisted_7 = { class: \"loginUl\" }\nconst _hoisted_8 = { class: \"loginBtn\" }\n\nimport {getCurrentInstance, ref, onMounted, computed, onBeforeMount, watch} from \"vue\";\r\nimport {login} from \"@/common/api/service/user/userApi\";\r\nimport {\r\n  createDeviceInfoApi,\r\n  getDeviceInfoApi,\r\n  getDeviceIpApi,\r\n  putDeviceInfoApi\r\n} from \"@/common/api/service/device/deviceApi\";\r\nimport router from \"@/router\";\r\nimport {UserResponse} from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {initializeAllSettings} from \"@/common/helpers/common/setting\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport {readFileTxt} from \"@/common/api/service/fileReader/fileReaderApi\";\r\n\r\n// 스토어\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst password = ref('');\r\nconst idVal = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst isAutoLoginEnabled = ref(false);\r\nconst isTcpConnected = computed(() => store.state.commonModule.isTcpConnected);\r\nconst isViewer = ref(false);\r\nconst forceViewer = ref('');\r\nconst uimdOpenIp = ref('');\r\nconst progress = ref(0);\r\nconst progressOnOff = ref(false);\r\n\r\nonBeforeMount(async () => {\r\n  uimdOpenIp.value = window.MAIN_WEBSOCKET_IP;\r\n  forceViewer.value = window.FORCE_VIEWER;\r\n  await checkIsViewer();\r\n})\r\n\r\nconst startProgress = () => {\r\n  progress.value = 0;\r\n\r\n  const interval = setInterval(() => {\r\n    if (!isTcpConnected.value) {\r\n      progress.value += 0.5;\r\n    } else {\r\n      progress.value = 100;\r\n      clearInterval(interval);\r\n    }\r\n  }, 1000);\r\n\r\n  watch(isTcpConnected, (newValue) => {\r\n    if (newValue) {\r\n      progress.value = 100;\r\n      setTimeout(() => {\r\n        progressOnOff.value = true;\r\n      }, 1000);\r\n      clearInterval(interval);\r\n    }\r\n  });\r\n};\r\n\r\n\r\n\r\nonMounted(async () => {\r\n  isAutoLogginable();\r\n  startProgress();\r\n  if(isTcpConnected.value){\r\n    progressOnOff.value = true;\r\n  }\r\n})\r\n\r\n/** 자동 로그인 확인 */\r\nconst isAutoLogginable = () => {\r\n  const getStoredUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n  if (getStoredUser.userId && getStoredUser.password) {\r\n    idVal.value = getStoredUser.userId;\r\n    password.value = getStoredUser.password;\r\n    loginUser();\r\n  }\r\n};\r\n\r\nconst getDeviceInfoFromTxt = async () => {\r\n  const filePath = 'D:\\\\UIMD_Data\\\\Backend_INI';\r\n  const fileName = 'HW_Config';\r\n  try {\r\n    const result = await readFileTxt(`path=${filePath}&filename=${fileName}`);\r\n    const iniFileData = result.data.data;\r\n    const deviceBarcodePattern = /DEVICE_SERIAL\\s*=\\s*(.+)/;\r\n    const siteCdPattern = /SERVICE_SITE\\s*=\\s*(.+)/;\r\n\r\n    const deviceBarcode = iniFileData.match(deviceBarcodePattern)[1] || '';\r\n    const siteCd = iniFileData.match(siteCdPattern)[1] || '';\r\n\r\n    const deviceInfoObj = {\r\n      siteCd,\r\n      deviceSerialNm: deviceBarcode,\r\n    }\r\n\r\n    const deviceData = await getDeviceInfoApi();\r\n    if (deviceData.data.length === 0 || !deviceData.data) {\r\n      await createDeviceInfoApi({ deviceItem: deviceInfoObj });\r\n      sessionStorage.setItem('autoStart', 'true');\r\n    } else {\r\n      sessionStorage.setItem('autoStart', deviceData.data[0]?.autoStart);\r\n      await putDeviceInfoApi({ siteCd: siteCd, deviceSerialNm: deviceBarcode });\r\n    }\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', { siteCd: siteCd })\r\n    localStorage.setItem('siteCd', siteCd);\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\r\nconst goJoinPage = () => {\r\n  router.push('/user/join');\r\n}\r\n\r\nconst loginUser = async (event?: KeyboardEvent) => {\r\n  if (event && event.key !== 'Enter' && event.type !== 'click') return;\r\n\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n  }\r\n\r\n  if (user.userId === '' || user.password === '') {\r\n    showSuccessAlert('Login failed.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const result: ApiResponse<UserResponse | undefined | any> = await login(user);\r\n    if (result?.data?.user) {\r\n      await getDeviceInfoFromTxt();\r\n      await initializeAllSettings();\r\n      await store.dispatch('userModule/setUserAction', result.data?.user);\r\n      sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n      if (isAutoLoginEnabled.value) {\r\n        localStorage.setItem('user', JSON.stringify((result.data.user)))\r\n      }\r\n      await getIpAddress(result?.data?.user.userId);\r\n\r\n    } else {\r\n      showSuccessAlert('Login failed.');\r\n    }\r\n  } catch (e) {\r\n    showSuccessAlert('server Err.')\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst checkIsViewer = async () => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if ((result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data)))) {\r\n      isViewer.value = false;\r\n    } else {\r\n      isViewer.value = true;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst getIpAddress = async (userId: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if ((result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data))) && window.FORCE_VIEWER !== 'viewer') {\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'main'});\r\n      await updateAccount('main');\r\n      sessionStorage.setItem('viewerCheck', 'main');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    } else {\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'viewer'});\r\n      await updateAccount('viewer');\r\n      sessionStorage.setItem('viewerCheck', 'viewer');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n      const deviceInfo = await getDeviceInfoApi();\r\n      const siteCd = deviceInfo.data[0]?.siteCd ? deviceInfo.data[0]?.siteCd : HOSPITAL_SITE_CD_BY_NAME['UIMD'];\r\n      await store.dispatch('commonModule/setCommonInfo', {siteCd: siteCd})\r\n      localStorage.setItem('siteCd', siteCd);\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst updateAccount = async (viewerCheck: string) => {\r\n  showSuccessAlert('login successful.');\r\n\r\n  if (viewerCheck === 'main') {\r\n    await router.push('/');\r\n    await document.documentElement.requestFullscreen();\r\n  } else {\r\n    await router.push('/dataBase');\r\n    await document.documentElement.requestFullscreen();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n  await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (!progressOnOff.value && forceViewer.value === 'main' && !isViewer.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createElementVNode(\"progress\", {\n              id: \"file\",\n              value: progress.value,\n              max: \"100\"\n            }, null, 8, _hoisted_3),\n            _cache[3] || (_cache[3] = _createElementVNode(\"div\", { class: \"loading-text\" }, \"Loading...\", -1))\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"div\", _hoisted_5, [\n        _cache[4] || (_cache[4] = _createElementVNode(\"p\", { class: \"loginTitle\" }, [\n          _createElementVNode(\"span\", { class: \"loginColorSpan\" }, \"U\"),\n          _createTextVNode(\"IMD\")\n        ], -1)),\n        _cache[5] || (_cache[5] = _createElementVNode(\"p\", { class: \"loginP mt20\" }, \"Unique Idea Medical Device\", -1)),\n        _createElementVNode(\"div\", _hoisted_6, [\n          _createElementVNode(\"ul\", _hoisted_7, [\n            _createElementVNode(\"li\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"loginInput\",\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((idVal).value = $event)),\n                placeholder: \"ID\",\n                onKeydown: loginUser\n              }, null, 544), [\n                [_vModelText, idVal.value]\n              ])\n            ]),\n            _createElementVNode(\"li\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"loginInput\",\n                type: \"password\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event)),\n                placeholder: \"password\",\n                onKeydown: loginUser\n              }, null, 544), [\n                [_vModelText, password.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_8, [\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (loginUser())),\n              onKeydown: loginUser\n            }, \"Login\", 32),\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              onClick: goJoinPage\n            }, \"Add User\")\n          ])\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"progressBarLogin\" v-if=\"!progressOnOff && forceViewer === 'main' && !isViewer\">\r\n    <div class=\"progressDiv\">\r\n      <progress id=\"file\" :value=\"progress\" max=\"100\"></progress>\r\n      <div class=\"loading-text\">Loading...</div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class='uimdLogin'>\r\n    <div class='loginContent'>\r\n      <p class=\"loginTitle\"><span class=\"loginColorSpan\">U</span>IMD</p>\r\n      <p class='loginP mt20'>Unique Idea Medical Device</p>\r\n      <div class=\"mt30 loginDiv\">\r\n        <ul class=\"loginUl\">\r\n          <li>\r\n            <input class=\"loginInput\" type=\"text\" v-model=\"idVal\" placeholder=\"ID\" @keydown=\"loginUser\">\r\n          </li>\r\n          <li>\r\n            <input class=\"loginInput\" type=\"password\" v-model=\"password\" placeholder=\"password\" @keydown=\"loginUser\">\r\n          </li>\r\n        </ul>\r\n\r\n        <div class='loginBtn'>\r\n          <button type=\"button\" @click=\"loginUser()\" @keydown=\"loginUser\">Login</button>\r\n          <button type=\"button\" @click=\"goJoinPage\">Add User</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {getCurrentInstance, ref, onMounted, computed, onBeforeMount, watch} from \"vue\";\r\nimport {login} from \"@/common/api/service/user/userApi\";\r\nimport {\r\n  createDeviceInfoApi,\r\n  getDeviceInfoApi,\r\n  getDeviceIpApi,\r\n  putDeviceInfoApi\r\n} from \"@/common/api/service/device/deviceApi\";\r\nimport router from \"@/router\";\r\nimport {UserResponse} from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {initializeAllSettings} from \"@/common/helpers/common/setting\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport {readFileTxt} from \"@/common/api/service/fileReader/fileReaderApi\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst password = ref('');\r\nconst idVal = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst isAutoLoginEnabled = ref(false);\r\nconst isTcpConnected = computed(() => store.state.commonModule.isTcpConnected);\r\nconst isViewer = ref(false);\r\nconst forceViewer = ref('');\r\nconst uimdOpenIp = ref('');\r\nconst progress = ref(0);\r\nconst progressOnOff = ref(false);\r\n\r\nonBeforeMount(async () => {\r\n  uimdOpenIp.value = window.MAIN_WEBSOCKET_IP;\r\n  forceViewer.value = window.FORCE_VIEWER;\r\n  await checkIsViewer();\r\n})\r\n\r\nconst startProgress = () => {\r\n  progress.value = 0;\r\n\r\n  const interval = setInterval(() => {\r\n    if (!isTcpConnected.value) {\r\n      progress.value += 0.5;\r\n    } else {\r\n      progress.value = 100;\r\n      clearInterval(interval);\r\n    }\r\n  }, 1000);\r\n\r\n  watch(isTcpConnected, (newValue) => {\r\n    if (newValue) {\r\n      progress.value = 100;\r\n      setTimeout(() => {\r\n        progressOnOff.value = true;\r\n      }, 1000);\r\n      clearInterval(interval);\r\n    }\r\n  });\r\n};\r\n\r\n\r\n\r\nonMounted(async () => {\r\n  isAutoLogginable();\r\n  startProgress();\r\n  if(isTcpConnected.value){\r\n    progressOnOff.value = true;\r\n  }\r\n})\r\n\r\n/** 자동 로그인 확인 */\r\nconst isAutoLogginable = () => {\r\n  const getStoredUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n  if (getStoredUser.userId && getStoredUser.password) {\r\n    idVal.value = getStoredUser.userId;\r\n    password.value = getStoredUser.password;\r\n    loginUser();\r\n  }\r\n};\r\n\r\nconst getDeviceInfoFromTxt = async () => {\r\n  const filePath = 'D:\\\\UIMD_Data\\\\Backend_INI';\r\n  const fileName = 'HW_Config';\r\n  try {\r\n    const result = await readFileTxt(`path=${filePath}&filename=${fileName}`);\r\n    const iniFileData = result.data.data;\r\n    const deviceBarcodePattern = /DEVICE_SERIAL\\s*=\\s*(.+)/;\r\n    const siteCdPattern = /SERVICE_SITE\\s*=\\s*(.+)/;\r\n\r\n    const deviceBarcode = iniFileData.match(deviceBarcodePattern)[1] || '';\r\n    const siteCd = iniFileData.match(siteCdPattern)[1] || '';\r\n\r\n    const deviceInfoObj = {\r\n      siteCd,\r\n      deviceSerialNm: deviceBarcode,\r\n    }\r\n\r\n    const deviceData = await getDeviceInfoApi();\r\n    if (deviceData.data.length === 0 || !deviceData.data) {\r\n      await createDeviceInfoApi({ deviceItem: deviceInfoObj });\r\n      sessionStorage.setItem('autoStart', 'true');\r\n    } else {\r\n      sessionStorage.setItem('autoStart', deviceData.data[0]?.autoStart);\r\n      await putDeviceInfoApi({ siteCd: siteCd, deviceSerialNm: deviceBarcode });\r\n    }\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', { siteCd: siteCd })\r\n    localStorage.setItem('siteCd', siteCd);\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\r\nconst goJoinPage = () => {\r\n  router.push('/user/join');\r\n}\r\n\r\nconst loginUser = async (event?: KeyboardEvent) => {\r\n  if (event && event.key !== 'Enter' && event.type !== 'click') return;\r\n\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n  }\r\n\r\n  if (user.userId === '' || user.password === '') {\r\n    showSuccessAlert('Login failed.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const result: ApiResponse<UserResponse | undefined | any> = await login(user);\r\n    if (result?.data?.user) {\r\n      await getDeviceInfoFromTxt();\r\n      await initializeAllSettings();\r\n      await store.dispatch('userModule/setUserAction', result.data?.user);\r\n      sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n      if (isAutoLoginEnabled.value) {\r\n        localStorage.setItem('user', JSON.stringify((result.data.user)))\r\n      }\r\n      await getIpAddress(result?.data?.user.userId);\r\n\r\n    } else {\r\n      showSuccessAlert('Login failed.');\r\n    }\r\n  } catch (e) {\r\n    showSuccessAlert('server Err.')\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst checkIsViewer = async () => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if ((result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data)))) {\r\n      isViewer.value = false;\r\n    } else {\r\n      isViewer.value = true;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst getIpAddress = async (userId: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if ((result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data))) && window.FORCE_VIEWER !== 'viewer') {\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'main'});\r\n      await updateAccount('main');\r\n      sessionStorage.setItem('viewerCheck', 'main');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    } else {\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'viewer'});\r\n      await updateAccount('viewer');\r\n      sessionStorage.setItem('viewerCheck', 'viewer');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n      const deviceInfo = await getDeviceInfoApi();\r\n      const siteCd = deviceInfo.data[0]?.siteCd ? deviceInfo.data[0]?.siteCd : HOSPITAL_SITE_CD_BY_NAME['UIMD'];\r\n      await store.dispatch('commonModule/setCommonInfo', {siteCd: siteCd})\r\n      localStorage.setItem('siteCd', siteCd);\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst updateAccount = async (viewerCheck: string) => {\r\n  showSuccessAlert('login successful.');\r\n\r\n  if (viewerCheck === 'main') {\r\n    await router.push('/');\r\n    await document.documentElement.requestFullscreen();\r\n  } else {\r\n    await router.push('/dataBase');\r\n    await document.documentElement.requestFullscreen();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n  await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const backUpDateApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.download.backUpDate, request);\r\n};\r\n\r\nexport const downloadPossibleApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPost(apiConstants.download.checkIsPossibleToBackup, request);\r\n}\r\n\r\nexport const openDriveApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.download.openDrive, request);\r\n}\r\n\r\nexport const uploadBackupApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.upload.restoreData, request);\r\n}\r\n\r\nexport const uploadPossibleApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.upload.checkDuplicated, request);\r\n}\r\n\r\nexport const checkPossibleUploadFileApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPost(apiConstants.upload.checkPossibleUploadFile, request);\r\n}","<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p class=\"mb10\">\r\n      {{ message }}\r\n    </p>\r\n    <button class=\"alertButton\" @click=\"okConfirm\">{{ confirmFirstText || 'OK' }}</button>\r\n    <button class=\"alertButton\" @click=\"okConfirm2\">{{ confirmSecondText || 'OK' }}</button>\r\n    <button class=\"alertCloseButton\" @click=\"hideConfirm\">{{ closeText || 'CLOSE' }}</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, computed} from 'vue';\r\n\r\nconst props = defineProps(['isVisible', 'type', 'message', 'confirmFirstText', 'confirmSecondText', 'closeText']);\r\nconst typeClass = computed(() => `confirm-${props.type}`);\r\nconst emit = defineEmits(['okConfirm, okConfirm2']);\r\n\r\nconst hideConfirm = () => {\r\n  emit('hide');\r\n};\r\n\r\nconst okConfirm = () => {\r\n  emit('okConfirm');\r\n}\r\n\r\nconst okConfirm2 = () => {\r\n  emit('okConfirm2');\r\n}\r\n\r\n</script>\r\n","import script from \"./ConfirmThreeBtn.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmThreeBtn.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\n\r\n\r\ninterface PropsType {\r\n  isVisible: boolean;\r\n  type?: string;\r\n  message: string;\r\n  position?: 'top' | 'bottom' | 'left' | 'right';\r\n  className?: string;\r\n}\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Tooltip',\n  props: {\n    isVisible: { type: Boolean },\n    type: {},\n    message: {},\n    position: { default: 'top' },\n    className: {}\n  },\n  setup(__props: any) {\n\r\nconst props = __props;\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_ctx.isVisible)\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass(`tooltip-container tooltip-pos-${_ctx.position} ${_ctx.className}`)\n      }, [\n        _createElementVNode(\"pre\", null, _toDisplayString(_ctx.message), 1)\n      ], 2))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","import script from \"./Tooltip.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Tooltip.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","const disableScroll = () => {\r\n    document.body.style.overflow = 'hidden';\r\n}\r\n\r\nconst enableScroll = () => {\r\n    document.body.style.overflow = 'auto';\r\n}\r\n\r\nconst scrollToTop = () => {\r\n    window.scrollTo({top: 0, behavior: 'smooth'});\r\n}\r\n\r\nexport { disableScroll, enableScroll, scrollToTop };","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelSelect as _vModelSelect, unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, Transition as _Transition, withCtx as _withCtx, createTextVNode as _createTextVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, vModelRadio as _vModelRadio, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"loadingBackground\" }\nconst _hoisted_2 = { class: \"progressContainer\" }\nconst _hoisted_3 = { class: \"loadingProgressBarText\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loadingBackground\"\n}\nconst _hoisted_5 = { class: \"settingTable\" }\nconst _hoisted_6 = { key: 0 }\nconst _hoisted_7 = { colspan: \"2\" }\nconst _hoisted_8 = [\"value\"]\nconst _hoisted_9 = { key: 1 }\nconst _hoisted_10 = {\n  key: 0,\n  rowspan: \"1\"\n}\nconst _hoisted_11 = { key: 1 }\nconst _hoisted_12 = [\"value\"]\nconst _hoisted_13 = { key: 2 }\nconst _hoisted_14 = [\"rowspan\"]\nconst _hoisted_15 = [\"value\"]\nconst _hoisted_16 = { key: 3 }\nconst _hoisted_17 = { key: 0 }\nconst _hoisted_18 = [\"value\"]\nconst _hoisted_19 = { class: \"pos-relative\" }\nconst _hoisted_20 = {\n  key: 0,\n  class: \"tutorial-edgeShotType-container\"\n}\nconst _hoisted_21 = [\"src\"]\nconst _hoisted_22 = [\"value\"]\nconst _hoisted_23 = [\"value\"]\nconst _hoisted_24 = [\"value\"]\nconst _hoisted_25 = { key: 4 }\nconst _hoisted_26 = [\"value\"]\nconst _hoisted_27 = { key: 5 }\nconst _hoisted_28 = {\n  rowspan: \"3\",\n  class: \"pos-relative\"\n}\nconst _hoisted_29 = { class: \"tutorial-positionMargin-container\" }\nconst _hoisted_30 = [\"src\"]\nconst _hoisted_31 = [\"value\"]\nconst _hoisted_32 = { key: 6 }\nconst _hoisted_33 = [\"value\"]\nconst _hoisted_34 = { key: 7 }\nconst _hoisted_35 = [\"value\"]\nconst _hoisted_36 = { colspan: \"2\" }\nconst _hoisted_37 = [\"value\"]\nconst _hoisted_38 = { key: 8 }\nconst _hoisted_39 = { class: \"pos-relative\" }\nconst _hoisted_40 = { key: 9 }\nconst _hoisted_41 = { class: \"pos-relative\" }\nconst _hoisted_42 = { class: \"pos-relative\" }\nconst _hoisted_43 = { class: \"settingTable auto\" }\nconst _hoisted_44 = { class: \"pos-relative\" }\nconst _hoisted_45 = { class: \"downloadSavePathContainer\" }\nconst _hoisted_46 = [\"value\"]\nconst _hoisted_47 = { class: \"pos-relative\" }\nconst _hoisted_48 = { class: \"pos-relative\" }\nconst _hoisted_49 = { class: \"backupDatePickers\" }\nconst _hoisted_50 = { class: \"pos-relative\" }\nconst _hoisted_51 = { colspan: \"2\" }\nconst _hoisted_52 = { class: \"settingUploadContainer\" }\nconst _hoisted_53 = [\"value\"]\nconst _hoisted_54 = {\n  key: 0,\n  class: \"fs12\",\n  style: {\"top\":\"0\"}\n}\nconst _hoisted_55 = {\n  key: 1,\n  class: \"fs12\"\n}\nconst _hoisted_56 = {\n  key: 2,\n  class: \"uploadDuplicatedSlotContainer\"\n}\nconst _hoisted_57 = { class: \"uploadDuplicatedSlotWrapper\" }\nconst _hoisted_58 = { class: \"uploadModalBtnContainer\" }\nconst _hoisted_59 = { class: \"downloadDeleteContainer\" }\nconst _hoisted_60 = { class: \"downloadDeleteWrapper\" }\nconst _hoisted_61 = { style: {\"font-size\":\"0.8rem\"} }\nconst _hoisted_62 = [\"value\"]\nconst _hoisted_63 = { class: \"mt40\" }\nconst _hoisted_64 = { class: \"uploadModalBtnContainer\" }\n\nimport { createCellImgApi, getCellImgApi, getDrivesApi, putCellImgApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Datepicker from 'vue3-datepicker';\r\nimport {computed, nextTick, onMounted, ref, watch, getCurrentInstance, reactive, onBeforeMount} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport moment from \"moment\";\r\nimport {\r\n  AnalysisList,\r\n  stitchCountList,\r\n  testTypeList,\r\n  testBmTypeList,\r\n  bmAnalysisList,\r\n  settingName,\r\n  edgeShotTypeList,\r\n  POSITION_MARGIN_LIST,\r\n  EDGE_SHOT_COUNT_LIST_LP, EDGE_SHOT_COUNT_LIST_HP\r\n} from \"@/common/defines/constants/settings\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {MESSAGES, MSG} from \"@/common/defines/constants/constantMessageText\";\r\nimport {\r\n  backUpDateApi,\r\n  downloadPossibleApi,\r\n  uploadPossibleApi,\r\n  uploadBackupApi,\r\n  openDriveApi,\r\n  checkPossibleUploadFileApi\r\n} from \"@/common/api/service/backup/wbcApi\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport ConfirmThreeBtn from \"@/components/commonUi/ConfirmThreeBtn.vue\";\r\nimport commonPositionMargin from \"@/assets/images/commonMargin.png\";\r\nimport smearTop from \"@/assets/images/smearTop.png\";\r\nimport Tooltip from \"@/components/commonUi/Tooltip.vue\";\r\nimport { CellImageAnalyzedType } from \"@/common/type/tooltipType\";\r\nimport {scrollToTop} from \"@/common/lib/utils/scroll\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'cellImageAnalyzed',\n  setup(__props) {\n\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst showUploadModal = ref(false);\r\nconst alertMessage = ref('');\r\nconst analysisVal = ref<any>([]);\r\nconst testTypeCd = ref('01');\r\nconst diffCellAnalyzingCount = ref('100');\r\nconst wbcPositionMargin = ref('0');\r\nconst rbcPositionMargin = ref('0');\r\nconst pltPositionMargin = ref('0');\r\nconst pbsCellAnalyzingCount = ref('100');\r\nconst stitchCount = ref('1');\r\nconst edgeShotType = ref('0');\r\nconst edgeShotCount = ref({\r\n  'LP': '1',\r\n  'HP': '3',\r\n})\r\nconst bfCellAnalyzingCount = ref('100');\r\nconst iaRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst downloadRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\UIMD_BM_backup' : 'D:\\\\UIMD_PB_backup');\r\nconst uploadRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst isNsNbIntegration = ref(false);\r\nconst isAlarm = ref(false);\r\nconst alarmCount = ref('5');\r\nconst keepPage = ref(false);\r\nconst lisUploadCheckAll = ref(false);\r\nconst backupStartDate = ref(moment().local().toDate());\r\nconst backupEndDate = ref(moment().local().toDate());\r\nconst autoDate = ref([\r\n  {value: 'Not selected'},\r\n  {value: 1},\r\n  {value: 2},\r\n  {value: 3},\r\n  {value: 4},\r\n  {value: 5},\r\n  {value: 6},\r\n  {value: 7},\r\n  {value: 8},\r\n  {value: 9},\r\n  {value: 10},\r\n  {value: 11},\r\n  {value: 12}\r\n]);\r\nconst autoBackUpMonth = ref('Not selected');\r\nconst saveHttpType = ref('');\r\nconst drive = ref<any>([]);\r\nconst backupDrive = ref<any>([]);\r\nconst cellimgId = ref('');\r\n\r\nconst projectType = ref('pb');\r\nconst testTypeArr = ref<any>([]);\r\nconst uploadSlotIdObj = ref({duplicated: [], nonDuplicated: []});\r\nconst possibleUploadCount = computed(() => uploadSlotIdObj.value?.nonDuplicated && uploadSlotIdObj.value?.nonDuplicated.length);\r\nconst impossibleUploadCount = computed(() => uploadSlotIdObj.value?.duplicated && uploadSlotIdObj.value?.duplicated.length);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst isRestoring = ref(false);\r\nconst isDownloading = ref(false);\r\nconst isLoadingProgressBar = ref(false);\r\nconst showDownloadConfirm = ref(false);\r\nconst downloadConfirmMessage = ref('');\r\nconst downloadDto = ref<any>({});\r\nconst totalFileCount = ref(1);\r\nconst successFileCount = ref(0);\r\nconst downloadUploadType = ref('copy');\r\nconst intervalId = ref<any>(null);\r\nconst deletableDownloadFiles = ref({});\r\nconst loadingState = ref('');\r\nconst showUploadSelectModal = ref(false);\r\nconst possibleUploadFileNames = ref([]);\r\nconst selectedUploadFile = ref('');\r\nconst showTutorialImage = ref({\r\n  edgeShotType: false,\r\n  positionMargin: false,\r\n})\r\nconst apiUrl = ref('');\r\nconst tooltipVisible = ref({\r\n  iaRootPath: false,\r\n  nsNbIntegration: false,\r\n  alarm: false,\r\n  keepPage: false,\r\n  lisUploadCheckAll: false,\r\n  downloadSavePath: false,\r\n  download: false,\r\n  upload: false,\r\n  openDownloadSavePath: false,\r\n})\r\nconst machineVersion = ref<'12a' | '100a'>('12a');\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('downloadUploadFinished', async (downloadUploadObj: { type: 'download' | 'upload'; isFinished: boolean}) => {\r\n  if (downloadUploadObj?.isFinished) {\r\n    clearInterval(intervalId.value);\r\n    successFileCount.value = totalFileCount.value;\r\n    downloadUploadStopWebSocket(false);\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n    await updateFileCounts();\r\n  }\r\n})\r\n\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  machineVersion.value = window.MACHINE_VERSION;\r\n})\r\n\r\nonMounted(async () => {\r\n  getApiUrl();\r\n  await nextTick();\r\n  testTypeCd.value = window.PROJECT_TYPE === 'bm' ? '02' : '01';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n  analysisVal.value = window.PROJECT_TYPE === 'bm' ? bmAnalysisList : AnalysisList;\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cellImageAnalyzed });\r\n\r\n  await cellImgGet();\r\n  await driveGet();\r\n});\r\n\r\nwatch([testTypeCd, diffCellAnalyzingCount, diffCellAnalyzingCount, wbcPositionMargin, rbcPositionMargin,\r\n  pltPositionMargin, pbsCellAnalyzingCount, edgeShotType, edgeShotCount, stitchCount, bfCellAnalyzingCount, iaRootPath, isNsNbIntegration, isAlarm, alarmCount, keepPage, lisUploadCheckAll], async () => {\r\n  const cellAfterSettingObj = {\r\n    id: cellimgId.value,\r\n    analysisType: testTypeCd.value,\r\n    diffCellAnalyzingCount: diffCellAnalyzingCount.value,\r\n    diffWbcPositionMargin: wbcPositionMargin.value,\r\n    diffRbcPositionMargin: rbcPositionMargin.value,\r\n    diffPltPositionMargin: pltPositionMargin.value,\r\n    pbsCellAnalyzingCount: pbsCellAnalyzingCount.value,\r\n    stitchCount: stitchCount.value,\r\n    edgeShotType: edgeShotType.value,\r\n    edgeShotLPCount: edgeShotCount.value.LP,\r\n    edgeShotHPCount: edgeShotCount.value.HP,\r\n    bfCellAnalyzingCount: bfCellAnalyzingCount.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    lisUploadCheckAll: lisUploadCheckAll.value,\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(cellAfterSettingObj)});\r\n  if (settingType.value !== settingName.cellImageAnalyzed) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cellImageAnalyzed });\r\n  }\r\n})\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst getApiUrl = () => {\r\n  const tmp = window.APP_API_BASE_URL.split(':');\r\n  apiUrl.value = `${tmp[0]}:${tmp[1]}`;\r\n}\r\n\r\nconst filterNumbersOnly = (event: Event) => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  alarmCount.value = filteredValue.trim();\r\n};\r\n\r\nconst driveGet = async () => {\r\n  try {\r\n    const result = await getDrivesApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n      } else {\r\n        const data = result.data;\r\n        const saveData = JSON.parse(JSON.stringify(data));\r\n        const backUpData = JSON.parse(JSON.stringify(data));\r\n\r\n        const savePlace = window.PROJECT_TYPE === 'bm' ? 'BMIA_proc' : 'PBIA_proc';\r\n        const backupPlace = window.PROJECT_TYPE === 'bm' ? 'UIMD_BM_backup' : 'UIMD_PB_backup';\r\n        for (const dataKey in data) {\r\n          saveData[dataKey] = saveData[dataKey] + `\\\\${savePlace}`;\r\n          backUpData[dataKey] = backUpData[dataKey] + `\\\\${backupPlace}`;\r\n        }\r\n        drive.value = saveData;\r\n        backupDrive.value = backUpData;\r\n      }\r\n\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n\r\n        const data = result.data;\r\n\r\n        cellimgId.value = String(data.id);\r\n        testTypeCd.value = data.analysisType;\r\n        diffCellAnalyzingCount.value = data.diffCellAnalyzingCount;\r\n        wbcPositionMargin.value = data.diffWbcPositionMargin;\r\n        rbcPositionMargin.value = data.diffRbcPositionMargin;\r\n        pltPositionMargin.value = data.diffPltPositionMargin;\r\n        pbsCellAnalyzingCount.value = data.pbsCellAnalyzingCount;\r\n        stitchCount.value = data.stitchCount;\r\n        bfCellAnalyzingCount.value = data.bfCellAnalyzingCount;\r\n        edgeShotType.value = String(data?.edgeShotType);\r\n        edgeShotCount.value.LP = String(data?.edgeShotLPCount);\r\n        edgeShotCount.value.HP = String(data?.edgeShotHPCount);\r\n        iaRootPath.value = data.iaRootPath;\r\n        downloadRootPath.value = data.backupPath || (window.PROJECT_TYPE === 'bm' ? 'D:\\\\UIMD_BM_backup' : 'D:\\\\UIMD_PB_backup');\r\n        isNsNbIntegration.value = data.isNsNbIntegration;\r\n        isAlarm.value = data.isAlarm;\r\n        alarmCount.value = data.alarmCount;\r\n        keepPage.value = data.keepPage;\r\n        lisUploadCheckAll.value = data.lisUploadCheckAll;\r\n        backupStartDate.value = moment(data.backupStartDate).local().toDate();\r\n        backupEndDate.value = moment(data.backupEndDate).local().toDate();\r\n        autoBackUpMonth.value = data?.autoBackUpMonth;\r\n\r\n        const cellBeforeSettingObj = {\r\n          id: cellimgId.value,\r\n          analysisType: data?.analysisType,\r\n          diffCellAnalyzingCount: data?.diffCellAnalyzingCount,\r\n          diffWbcPositionMargin: data?.diffWbcPositionMargin,\r\n          diffRbcPositionMargin: data?.diffRbcPositionMargin,\r\n          diffPltPositionMargin: data?.diffPltPositionMargin,\r\n          pbsCellAnalyzingCount: data?.pbsCellAnalyzingCount,\r\n          stitchCount: data?.stitchCount,\r\n          edgeShotType: data?.edgeShotType,\r\n          edgeShotLPCount: data?.edgeShotLPCount,\r\n          edgeShotHPCount: data?.edgeShotHPCount,\r\n          bfCellAnalyzingCount: data?.bfCellAnalyzingCount,\r\n          iaRootPath: data?.iaRootPath,\r\n          isNsNbIntegration: data?.isNsNbIntegration,\r\n          isAlarm: data?.isAlarm,\r\n          alarmCount: data?.alarmCount,\r\n          keepPage: data?.keepPage,\r\n          lisUploadCheckAll: data?.lisUploadCheckAll,\r\n        }\r\n\r\n        sessionStorage.setItem('isAlarm', String(data?.isAlarm));\r\n        await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(cellBeforeSettingObj) });\r\n        await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(cellBeforeSettingObj) });\r\n      }\r\n\r\n    }\r\n  } catch (e) {\r\n\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst cellImgSet = async () => {\r\n  const cellImgSet = {\r\n    analysisType: testTypeCd.value,\r\n    diffCellAnalyzingCount: diffCellAnalyzingCount.value,\r\n    diffWbcPositionMargin: wbcPositionMargin.value,\r\n    diffRbcPositionMargin: rbcPositionMargin.value,\r\n    diffPltPositionMargin: pltPositionMargin.value,\r\n    pbsCellAnalyzingCount: pbsCellAnalyzingCount.value,\r\n    edgeShotType: edgeShotType.value,\r\n    edgeShotLPCount: edgeShotCount.value.LP,\r\n    edgeShotHPCount: edgeShotCount.value.HP,\r\n    stitchCount: stitchCount.value,\r\n    bfCellAnalyzingCount: bfCellAnalyzingCount.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    lisUploadCheckAll: lisUploadCheckAll.value,\r\n    backupPath: downloadRootPath.value,\r\n    backupStartDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    backupEndDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    autoBackUpMonth: autoBackUpMonth.value,\r\n    autoBackUpStartDate: autoBackUpMonth.value !== 'Not selected' ? moment(new Date()).local().toDate().toISOString().split('T')[0]:null,\r\n  }\r\n\r\n  try {\r\n\r\n    let result: any = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCellImgApi(cellImgSet);\r\n    } else {\r\n      result = await putCellImgApi(cellImgSet, cellimgId.value);\r\n    }\r\n\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? MESSAGES.settingSaveSuccess : MESSAGES.UPDATE_SUCCESSFULLY;\r\n      showSuccessAlert(text);\r\n      scrollToTop();\r\n      const data = result?.data;\r\n      await store.dispatch('commonModule/setCommonInfo', { isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N' });\r\n      await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n      });\r\n      // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n      sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n      sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n      sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n      sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n      sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n      sessionStorage.setItem('edgeShotLPCount', String(data?.edgeShotLPCount));\r\n      sessionStorage.setItem('edgeShotHPCount', String(data?.edgeShotHPCount));\r\n      sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n      sessionStorage.setItem('isAlarm', String(data?.isAlarm));\r\n      const keepPageType = projectType.value === 'pb' ? 'keepPage': 'bmKeepPage'\r\n      sessionStorage.setItem(keepPageType, String(data?.keepPage));\r\n      await store.dispatch('commonModule/setCommonInfo', {resetAnalyzing: true});\r\n      await store.dispatch('commonModule/setCommonInfo', { showLISUploadAfterCheckingAll: data?.lisUploadCheckAll });\r\n    }\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst toggleNsNbIntegration = () => {\r\n  isNsNbIntegration.value = !isNsNbIntegration.value;\r\n};\r\n\r\nconst toggleAlarm = () => {\r\n  isAlarm.value = !isAlarm.value;\r\n};\r\n\r\nconst toggleKeepPage = () => {\r\n  keepPage.value = !keepPage.value;\r\n};\r\n\r\nconst toggleLisUploadCheckAll = () => {\r\n  lisUploadCheckAll.value = !lisUploadCheckAll.value;\r\n};\r\n\r\nconst informationFontHover = (type: 'edgeShotType' | 'positionMargin', hoverStatus: 'hover' | 'leave') => {\r\n  if (hoverStatus === 'leave') {\r\n    showTutorialImage.value.edgeShotType = false;\r\n    showTutorialImage.value.positionMargin = false;\r\n    return;\r\n  }\r\n  switch (type) {\r\n    case 'edgeShotType':\r\n      showTutorialImage.value.edgeShotType = true;\r\n      break;\r\n    case 'positionMargin':\r\n      showTutorialImage.value.positionMargin = true;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nconst uploadConfirm = async (uploadType: 'move' | 'copy') => {\r\n  showUploadModal.value = false;\r\n  totalFileCount.value = possibleUploadCount.value;\r\n  try {\r\n    isLoadingProgressBar.value = true;\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n\r\n    const uploadDto = {\r\n      fileName: selectedUploadFile.value,\r\n      destinationUploadPath: uploadRootPath.value,\r\n      originUploadPath: downloadRootPath.value,\r\n      dayQuery,\r\n      projectType: projectType.value,\r\n      uploadType,\r\n      apiUrl: apiUrl.value,\r\n    }\r\n    downloadUploadType.value = uploadType;\r\n\r\n    loadingState.value = uploadType === 'move' ? 'moved' : 'copied';\r\n\r\n    successFileCount.value = 0;\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n    downloadUploadStopWebSocket(true);\r\n    handlePolling();\r\n    const result = await uploadBackupApi(uploadDto);\r\n    if (typeof result.data === 'string') {\r\n      showErrorAlert(result.data);\r\n    } else {\r\n      showSuccessAlert('Upload completed successfully');\r\n      scrollToTop();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst uploadCancel = async () => {\r\n  showUploadModal.value = false;\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await cellImgSet();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleDownloadClose = () => {\r\n  showDownloadConfirm.value = false;\r\n}\r\n\r\nconst handlePolling = async () => {\r\n  const duration = String(totalFileCount.value).length // 1초\r\n  intervalId.value = setInterval(async () => {\r\n    successFileCount.value += 1;\r\n    if (successFileCount.value === totalFileCount.value - 1) {\r\n      clearInterval(intervalId.value);\r\n    }\r\n  }, duration * 3000);\r\n}\r\n\r\nconst downloadUploadStopWebSocket = (state: boolean) => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('isDownloadUploading', {\r\n    type: 'SEND_DATA',\r\n    payload: state\r\n  });\r\n}\r\n\r\nconst handleDownload = async (downloadType: 'move' | 'copy') => {\r\n  const downloadDto = downloadDtoObj(downloadType);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n  downloadUploadStopWebSocket(true);\r\n\r\n  if (downloadType === 'move') {\r\n    loadingState.value = 'moved';\r\n  } else {\r\n    loadingState.value = 'copied';\r\n  }\r\n\r\n  successFileCount.value = 0;\r\n\r\n  console.log('downloadDto', downloadDto);\r\n  try {\r\n    handlePolling();\r\n    await backUpDateApi(downloadDto);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst updateFileCounts = async () => {\r\n  successFileCount.value = totalFileCount.value;\r\n  setTimeout(async () => {\r\n    totalFileCount.value = 0;\r\n    successFileCount.value = 0;\r\n    isLoadingProgressBar.value = false;\r\n  }, 2000)\r\n  await showSuccessAlert('Success');\r\n}\r\n\r\nconst downloadDtoObj = (downloadType: 'move' | 'copy') => {\r\n  downloadUploadType.value = downloadType;\r\n  showDownloadConfirm.value = false;\r\n  const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n  const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n  const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n  const sendingDownloadStartDate = moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n  const sendingDownloadEndDate = moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n  const downloadDto = {\r\n    startDate: sendingDownloadStartDate, // 백업 시작일\r\n    endDate: sendingDownloadEndDate, // 백업 종료일\r\n    originDownloadPath: `${iaRootPath.value}`, //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n    destinationDownloadPath: downloadRootPath.value, // 백업 경로\r\n    projectType: projectType.value,\r\n    dayQuery,\r\n    downloadType,\r\n    apiUrl: apiUrl.value,\r\n  }\r\n  isLoadingProgressBar.value = true;\r\n\r\n  return downloadDto;\r\n}\r\n\r\nconst createBackup = async () => {\r\n  if (downloadRootPath.value === ''){\r\n    showErrorAlert('Please select a download save path');\r\n    return\r\n  }\r\n\r\n  const sendingDownloadStartDate = moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n  const sendingDownloadEndDate = moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n\r\n  if (!moment(sendingDownloadStartDate).isSameOrBefore(sendingDownloadEndDate)) {\r\n    showErrorAlert('Please check the date');\r\n    return\r\n  }\r\n\r\n  downloadDto.value = {\r\n    startDate: sendingDownloadStartDate, // 백업 시작일\r\n    endDate: sendingDownloadEndDate, // 백업 종료일\r\n    originDownloadPath: `${iaRootPath.value}`, //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n    destinationDownloadPath: downloadRootPath.value, // 백업 경로\r\n    projectType: projectType.value,\r\n  };\r\n  try {\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n    downloadUploadStopWebSocket(true);\r\n    const isPossibleToBackup = await downloadPossibleApi(downloadDto.value);\r\n    if (isPossibleToBackup.data.success) {\r\n      totalFileCount.value = Number(isPossibleToBackup.data.message.split(' ')[1]);\r\n      showDownloadConfirm.value = true;\r\n      downloadConfirmMessage.value = 'Would you like to copy files?';\r\n    } else {\r\n      showErrorAlert(isPossibleToBackup.data.message);\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  } finally {\r\n    downloadUploadStopWebSocket(false);\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n  }\r\n\r\n}\r\n\r\nconst handleSelectUploadFile = async () => {\r\n  const uploadDto = {\r\n    originUploadPath: downloadRootPath.value\r\n  };\r\n\r\n  try {\r\n    const result = await checkPossibleUploadFileApi(uploadDto);\r\n    if (result.success) {\r\n      possibleUploadFileNames.value = result.data;\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    possibleUploadFileNames.value = [];\r\n  } finally {\r\n    showUploadSelectModal.value = true;\r\n  }\r\n}\r\n\r\nconst openSourceDrive = async () => {\r\n  const downloadDto = {\r\n    originDownloadPath: downloadRootPath.value\r\n  };\r\n\r\n  try {\r\n    await openDriveApi(downloadDto);\r\n  } catch (e) {\r\n    deletableDownloadFiles.value = [];\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst handleUploadSelectFile = async () => {\r\n    try {\r\n    isRestoring.value = true;\r\n    const uploadDto = {\r\n      fileName: selectedUploadFile.value,\r\n      destinationUploadPath: uploadRootPath.value,\r\n      originUploadPath: downloadRootPath.value,\r\n      projectType: projectType.value,\r\n      apiUrl: apiUrl.value,\r\n    }\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n    downloadUploadStopWebSocket(true);\r\n\r\n    const result: any = await uploadPossibleApi(uploadDto);\r\n\r\n    if (typeof result.data === 'string') {\r\n      showErrorAlert(result.data);\r\n    } else {\r\n      totalFileCount.value = result.data.totalMove;\r\n      successFileCount.value = result.data.successMove;\r\n      showUploadModal.value = true;\r\n      uploadSlotIdObj.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  } finally {\r\n    downloadUploadStopWebSocket(false);\r\n      await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n    isRestoring.value = false;\r\n  }\r\n\r\n  showUploadSelectModal.value = false;\r\n}\r\n\r\nconst handleUploadSelectModalClose = () => {\r\n  showUploadSelectModal.value = false;\r\n  selectedUploadFile.value = '';\r\n}\r\n\r\nconst tooltipVisibleFunc = (type: keyof CellImageAnalyzedType, visible: boolean) => {\r\n  tooltipVisible.value[type] = visible;\r\n}\r\n\r\nconst pbsAnalysisValuesRowIndex = () => {\r\n  if (projectType.value !== 'pb') return 2;\r\n  if (machineVersion.value === '100a' && (edgeShotType.value === '2' || edgeShotType.value === '3')) return 4;\r\n  if (machineVersion.value === '100a') return 3;\r\n  if (machineVersion.value === '12a') return 3;\r\n  return 3;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"p\", _hoisted_3, _toDisplayString(((successFileCount.value / totalFileCount.value) * 100).toFixed(0)) + \"%\", 1),\n        _createElementVNode(\"div\", {\n          class: \"progressBar\",\n          style: _normalizeStyle({ width: (successFileCount.value / totalFileCount.value) * 100 + '%' })\n        }, null, 4)\n      ])\n    ], 512), [\n      [_vShow, isLoadingProgressBar.value]\n    ]),\n    (isRestoring.value || isDownloading.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[44] || (_cache[44] = [\n          _createElementVNode(\"div\", { class: \"loaderForLogin\" }, null, -1),\n          _createElementVNode(\"p\", { class: \"loadingTextLogin\" }, \"Loading...\", -1)\n        ])))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"table\", _hoisted_5, [\n      _createElementVNode(\"tbody\", null, [\n        (viewerCheck.value !== 'viewer')\n          ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_6, [\n              _cache[45] || (_cache[45] = _createElementVNode(\"th\", null, \"Analysis Type\", -1)),\n              _createElementVNode(\"td\", _hoisted_7, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((testTypeCd).value = $event))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(testTypeArr.value, (type) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: type.value,\n                      value: type.value\n                    }, _toDisplayString(type.text), 9, _hoisted_8))\n                  }), 128))\n                ], 512), [\n                  [_vModelSelect, testTypeCd.value]\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (viewerCheck.value !== 'viewer')\n          ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_9, [\n              (projectType.value === 'pb')\n                ? (_openBlock(), _createElementBlock(\"th\", _hoisted_10, \"WBC Diff Analysis Values\"))\n                : _createCommentVNode(\"\", true),\n              (projectType.value === 'bm')\n                ? (_openBlock(), _createElementBlock(\"th\", _hoisted_11, \"BM Diff Analysis Values\"))\n                : _createCommentVNode(\"\", true),\n              _cache[46] || (_cache[46] = _createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((diffCellAnalyzingCount).value = $event))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(analysisVal.value, (type) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: type.value,\n                      value: type.value\n                    }, _toDisplayString(type.text), 9, _hoisted_12))\n                  }), 128))\n                ], 512), [\n                  [_vModelSelect, diffCellAnalyzingCount.value]\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (projectType.value === 'pb' && viewerCheck.value !== 'viewer')\n          ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_13, [\n              _createElementVNode(\"th\", {\n                rowspan: pbsAnalysisValuesRowIndex()\n              }, \"PBS Analysis Values\", 8, _hoisted_14),\n              _cache[47] || (_cache[47] = _createElementVNode(\"th\", null, \" Cell Analyzing Count \", -1)),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((pbsCellAnalyzingCount).value = $event))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: type.value,\n                      value: type.value\n                    }, _toDisplayString(type.text), 9, _hoisted_15))\n                  }), 128))\n                ], 512), [\n                  [_vModelSelect, pbsCellAnalyzingCount.value]\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (viewerCheck.value !== 'viewer')\n          ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_16, [\n              (projectType.value === 'bm')\n                ? (_openBlock(), _createElementBlock(\"th\", _hoisted_17))\n                : _createCommentVNode(\"\", true),\n              _cache[48] || (_cache[48] = _createElementVNode(\"th\", null, \"Stitch Count\", -1)),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((stitchCount).value = $event))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stitchCountList), (type) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: type.value,\n                      value: type.value\n                    }, _toDisplayString(type.text), 9, _hoisted_18))\n                  }), 128))\n                ], 512), [\n                  [_vModelSelect, stitchCount.value]\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        _withDirectives(_createElementVNode(\"tr\", null, [\n          _createElementVNode(\"th\", _hoisted_19, [\n            _cache[49] || (_cache[49] = _createTextVNode(\" Edge Shot Type \")),\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'circle-info'],\n              onMouseenter: _cache[4] || (_cache[4] = () => informationFontHover('edgeShotType', 'hover')),\n              onMouseleave: _cache[5] || (_cache[5] = ($event: any) => (informationFontHover('edgeShotType', 'leave')))\n            }),\n            _createVNode(_Transition, null, {\n              default: _withCtx(() => [\n                (showTutorialImage.value.edgeShotType)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [\n                      _createElementVNode(\"img\", {\n                        src: _unref(smearTop),\n                        width: \"400\"\n                      }, null, 8, _hoisted_21)\n                    ]))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _createElementVNode(\"td\", null, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((edgeShotType).value = $event))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(edgeShotTypeList), (type) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: type.value,\n                  value: type.value\n                }, _toDisplayString(type.text), 9, _hoisted_22))\n              }), 128))\n            ], 512), [\n              [_vModelSelect, edgeShotType.value]\n            ])\n          ])\n        ], 512), [\n          [_vShow, projectType.value === 'pb' && viewerCheck.value !== 'viewer']\n        ]),\n        _withDirectives(_createElementVNode(\"tr\", null, [\n          _cache[50] || (_cache[50] = _createElementVNode(\"th\", { class: \"pos-relative\" }, \"Edge Shot Count\", -1)),\n          _withDirectives(_createElementVNode(\"td\", null, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((edgeShotCount.value.LP) = $event))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(EDGE_SHOT_COUNT_LIST_LP), (type) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: type.value,\n                  value: type.value\n                }, _toDisplayString(type.text), 9, _hoisted_23))\n              }), 128))\n            ], 512), [\n              [_vModelSelect, edgeShotCount.value.LP]\n            ])\n          ], 512), [\n            [_vShow, edgeShotType.value === '2']\n          ]),\n          _withDirectives(_createElementVNode(\"td\", null, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((edgeShotCount.value.HP) = $event))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(EDGE_SHOT_COUNT_LIST_HP), (type) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: type.value,\n                  value: type.value\n                }, _toDisplayString(type.text), 9, _hoisted_24))\n              }), 128))\n            ], 512), [\n              [_vModelSelect, edgeShotCount.value.HP]\n            ])\n          ], 512), [\n            [_vShow, edgeShotType.value === '3']\n          ])\n        ], 512), [\n          [_vShow, projectType.value === 'pb' && viewerCheck.value !== 'viewer' && machineVersion.value === '100a' && (edgeShotType.value === '2' || edgeShotType.value === '3')]\n        ]),\n        (projectType.value === 'pb' && viewerCheck.value !== 'viewer')\n          ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_25, [\n              _cache[51] || (_cache[51] = _createElementVNode(\"th\", null, \"BF Analysis Values\", -1)),\n              _cache[52] || (_cache[52] = _createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((bfCellAnalyzingCount).value = $event))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: type.value,\n                      value: type.value\n                    }, _toDisplayString(type.text), 9, _hoisted_26))\n                  }), 128))\n                ], 512), [\n                  [_vModelSelect, bfCellAnalyzingCount.value]\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (projectType.value === 'pb' && viewerCheck.value !== 'viewer')\n          ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_27, [\n              _createElementVNode(\"th\", _hoisted_28, [\n                _cache[53] || (_cache[53] = _createTextVNode(\" Common \")),\n                _createVNode(_component_font_awesome_icon, {\n                  icon: ['fas', 'circle-info'],\n                  onMouseenter: _cache[10] || (_cache[10] = () => informationFontHover('positionMargin', 'hover')),\n                  onMouseleave: _cache[11] || (_cache[11] = ($event: any) => (informationFontHover('positionMargin', 'leave')))\n                }),\n                _createVNode(_Transition, null, {\n                  default: _withCtx(() => [\n                    _withDirectives(_createElementVNode(\"div\", _hoisted_29, [\n                      _createElementVNode(\"img\", {\n                        src: _unref(commonPositionMargin),\n                        width: \"140\"\n                      }, null, 8, _hoisted_30)\n                    ], 512), [\n                      [_vShow, showTutorialImage.value.positionMargin]\n                    ])\n                  ]),\n                  _: 1\n                })\n              ]),\n              _cache[54] || (_cache[54] = _createElementVNode(\"th\", null, \"Wbc Position Margin\", -1)),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((wbcPositionMargin).value = $event))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(POSITION_MARGIN_LIST), (type) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: type.value,\n                      value: type.value\n                    }, _toDisplayString(type.text), 9, _hoisted_31))\n                  }), 128))\n                ], 512), [\n                  [_vModelSelect, wbcPositionMargin.value]\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (projectType.value === 'pb' && viewerCheck.value !== 'viewer')\n          ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_32, [\n              _cache[55] || (_cache[55] = _createElementVNode(\"th\", null, \"Rbc Position Margin\", -1)),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": _cache[13] || (_cache[13] = ($event: any) => ((rbcPositionMargin).value = $event))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(POSITION_MARGIN_LIST), (type) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: type.value,\n                      value: type.value\n                    }, _toDisplayString(type.text), 9, _hoisted_33))\n                  }), 128))\n                ], 512), [\n                  [_vModelSelect, rbcPositionMargin.value]\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (projectType.value === 'pb' && viewerCheck.value !== 'viewer')\n          ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_34, [\n              _cache[56] || (_cache[56] = _createElementVNode(\"th\", null, \"Edge Position Margin\", -1)),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((pltPositionMargin).value = $event))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(POSITION_MARGIN_LIST), (type) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: type.value,\n                      value: type.value\n                    }, _toDisplayString(type.text), 9, _hoisted_35))\n                  }), 128))\n                ], 512), [\n                  [_vModelSelect, pltPositionMargin.value]\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"tr\", null, [\n          _createElementVNode(\"th\", {\n            style: _normalizeStyle(viewerCheck.value === 'viewer' && 'width: 214px;'),\n            class: \"pos-relative\"\n          }, [\n            _cache[57] || (_cache[57] = _createTextVNode(\" IA Root Path \")),\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'circle-info'],\n              title: _unref(MESSAGES).SETTING_INFO_IA_ROOT_PATH_KO,\n              onMouseenter: _cache[15] || (_cache[15] = ($event: any) => (tooltipVisibleFunc('iaRootPath', true))),\n              onMouseleave: _cache[16] || (_cache[16] = ($event: any) => (tooltipVisibleFunc('iaRootPath', false)))\n            }, null, 8, [\"title\"]),\n            _createVNode(Tooltip, {\n              isVisible: tooltipVisible.value.iaRootPath,\n              className: \"mb08\",\n              position: \"top\",\n              type: \"\",\n              message: _unref(MSG).TOOLTIP.IA_ROOT_PATH\n            }, null, 8, [\"isVisible\", \"message\"])\n          ], 4),\n          _createElementVNode(\"td\", _hoisted_36, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[17] || (_cache[17] = ($event: any) => ((iaRootPath).value = $event))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(drive.value, (type) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: type,\n                  value: type\n                }, _toDisplayString(type), 9, _hoisted_37))\n              }), 128))\n            ], 512), [\n              [_vModelSelect, iaRootPath.value]\n            ])\n          ])\n        ]),\n        (viewerCheck.value !== 'viewer')\n          ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_38, [\n              _createElementVNode(\"th\", _hoisted_39, [\n                _cache[58] || (_cache[58] = _createTextVNode(\" NS/NB Integration \")),\n                _createVNode(_component_font_awesome_icon, {\n                  icon: ['fas', 'circle-info'],\n                  onMouseenter: _cache[18] || (_cache[18] = ($event: any) => (tooltipVisibleFunc('nsNbIntegration', true))),\n                  onMouseleave: _cache[19] || (_cache[19] = ($event: any) => (tooltipVisibleFunc('nsNbIntegration', false)))\n                }),\n                _createVNode(Tooltip, {\n                  isVisible: tooltipVisible.value.nsNbIntegration,\n                  className: \"mb08\",\n                  position: \"top\",\n                  type: \"\",\n                  message: _unref(MSG).TOOLTIP.NS_NB_INTEGRATION\n                }, null, 8, [\"isVisible\", \"message\"])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _createVNode(_component_font_awesome_icon, {\n                  icon: isNsNbIntegration.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                  class: \"iconSize\",\n                  onClick: toggleNsNbIntegration\n                }, null, 8, [\"icon\"])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (viewerCheck.value !== 'viewer')\n          ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_40, [\n              _createElementVNode(\"th\", _hoisted_41, [\n                _cache[59] || (_cache[59] = _createTextVNode(\" Alarm Timer (sec) \")),\n                _createVNode(_component_font_awesome_icon, {\n                  icon: ['fas', 'circle-info'],\n                  onMouseenter: _cache[20] || (_cache[20] = ($event: any) => (tooltipVisibleFunc('alarm', true))),\n                  onMouseleave: _cache[21] || (_cache[21] = ($event: any) => (tooltipVisibleFunc('alarm', false)))\n                }),\n                _createVNode(Tooltip, {\n                  isVisible: tooltipVisible.value.alarm,\n                  className: \"mb08\",\n                  position: \"top\",\n                  type: \"\",\n                  message: _unref(MSG).TOOLTIP.ALARM\n                }, null, 8, [\"isVisible\", \"message\"])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _createVNode(_component_font_awesome_icon, {\n                  icon: isAlarm.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                  class: \"iconSize\",\n                  onClick: toggleAlarm\n                }, null, 8, [\"icon\"])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[22] || (_cache[22] = ($event: any) => ((alarmCount).value = $event)),\n                  class: \"alarmInput\",\n                  onInput: _cache[23] || (_cache[23] = ($event: any) => (filterNumbersOnly($event)))\n                }, null, 544), [\n                  [_vModelText, alarmCount.value]\n                ])\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"tr\", null, [\n          _createElementVNode(\"th\", _hoisted_42, [\n            _cache[60] || (_cache[60] = _createTextVNode(\" Keep Page \")),\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'circle-info'],\n              onMouseenter: _cache[24] || (_cache[24] = ($event: any) => (tooltipVisibleFunc('keepPage', true))),\n              onMouseleave: _cache[25] || (_cache[25] = ($event: any) => (tooltipVisibleFunc('keepPage', false)))\n            }),\n            _createVNode(Tooltip, {\n              isVisible: tooltipVisible.value.keepPage,\n              className: \"mb08\",\n              position: \"top\",\n              type: \"\",\n              message: _unref(MSG).TOOLTIP.KEEP_PAGE\n            }, null, 8, [\"isVisible\", \"message\"])\n          ]),\n          _createElementVNode(\"td\", null, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: keepPage.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n              class: \"iconSize\",\n              onClick: toggleKeepPage\n            }, null, 8, [\"icon\"])\n          ])\n        ])\n      ])\n    ]),\n    _createElementVNode(\"table\", _hoisted_43, [\n      _cache[64] || (_cache[64] = _createElementVNode(\"colgroup\", null, [\n        _createElementVNode(\"col\", { width: \"70\" }),\n        _createElementVNode(\"col\", { width: \"30\" })\n      ], -1)),\n      _createElementVNode(\"tbody\", null, [\n        _createElementVNode(\"tr\", null, [\n          _createElementVNode(\"th\", _hoisted_44, [\n            _cache[61] || (_cache[61] = _createTextVNode(\" Download Save Path \")),\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'circle-info'],\n              onMouseenter: _cache[26] || (_cache[26] = ($event: any) => (tooltipVisibleFunc('downloadSavePath', true))),\n              onMouseleave: _cache[27] || (_cache[27] = ($event: any) => (tooltipVisibleFunc('downloadSavePath', false)))\n            }),\n            _createVNode(Tooltip, {\n              isVisible: tooltipVisible.value.downloadSavePath,\n              className: \"mb08\",\n              position: \"top\",\n              type: \"\",\n              message: _unref(MSG).TOOLTIP.DOWNLOAD_SAVE_PATH\n            }, null, 8, [\"isVisible\", \"message\"])\n          ]),\n          _createElementVNode(\"td\", null, [\n            _createElementVNode(\"div\", _hoisted_45, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[28] || (_cache[28] = ($event: any) => ((downloadRootPath).value = $event)),\n                class: \"downloadPath\"\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(backupDrive.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type,\n                    value: type\n                  }, _toDisplayString(type), 9, _hoisted_46))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, downloadRootPath.value]\n              ]),\n              _createElementVNode(\"div\", _hoisted_47, [\n                _createVNode(_component_font_awesome_icon, {\n                  icon: ['fas', 'folder-open'],\n                  onClick: openSourceDrive,\n                  class: \"openDriveIcon\",\n                  onMouseenter: _cache[29] || (_cache[29] = ($event: any) => (tooltipVisibleFunc('openDownloadSavePath', true))),\n                  onMouseleave: _cache[30] || (_cache[30] = ($event: any) => (tooltipVisibleFunc('openDownloadSavePath', false)))\n                }),\n                _createVNode(Tooltip, {\n                  isVisible: tooltipVisible.value.openDownloadSavePath,\n                  className: \"mb08\",\n                  position: \"top\",\n                  type: \"\",\n                  message: _unref(MSG).TOOLTIP.OPEN_DOWNLOAD_SAVE_PATH\n                }, null, 8, [\"isVisible\", \"message\"])\n              ])\n            ])\n          ])\n        ]),\n        _createElementVNode(\"tr\", null, [\n          _createElementVNode(\"th\", _hoisted_48, [\n            _cache[62] || (_cache[62] = _createTextVNode(\" Download \")),\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'circle-info'],\n              onMouseenter: _cache[31] || (_cache[31] = ($event: any) => (tooltipVisibleFunc('download', true))),\n              onMouseleave: _cache[32] || (_cache[32] = ($event: any) => (tooltipVisibleFunc('download', false)))\n            }),\n            _createVNode(Tooltip, {\n              isVisible: tooltipVisible.value.download,\n              className: \"mb08\",\n              position: \"top\",\n              type: \"\",\n              message: _unref(MSG).TOOLTIP.DOWNLOAD\n            }, null, 8, [\"isVisible\", \"message\"])\n          ]),\n          _createElementVNode(\"td\", null, [\n            _createElementVNode(\"div\", _hoisted_49, [\n              _createVNode(_unref(Datepicker), {\n                modelValue: backupStartDate.value,\n                \"onUpdate:modelValue\": _cache[33] || (_cache[33] = ($event: any) => ((backupStartDate).value = $event))\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_unref(Datepicker), {\n                modelValue: backupEndDate.value,\n                \"onUpdate:modelValue\": _cache[34] || (_cache[34] = ($event: any) => ((backupEndDate).value = $event))\n              }, null, 8, [\"modelValue\"]),\n              _createElementVNode(\"button\", {\n                class: \"backupBtn\",\n                onClick: createBackup\n              }, \"Download\")\n            ])\n          ])\n        ]),\n        _createElementVNode(\"tr\", null, [\n          _createElementVNode(\"th\", _hoisted_50, [\n            _cache[63] || (_cache[63] = _createTextVNode(\" Upload \")),\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'circle-info'],\n              title: _unref(MESSAGES).SETTING_INFO_UPLOAD_KO,\n              onMouseenter: _cache[35] || (_cache[35] = ($event: any) => (tooltipVisibleFunc('upload', true))),\n              onMouseleave: _cache[36] || (_cache[36] = ($event: any) => (tooltipVisibleFunc('upload', false)))\n            }, null, 8, [\"title\"]),\n            _createVNode(Tooltip, {\n              isVisible: tooltipVisible.value.upload,\n              className: \"mb08\",\n              position: \"top\",\n              type: \"\",\n              message: _unref(MSG).TOOLTIP.UPLOAD\n            }, null, 8, [\"isVisible\", \"message\"])\n          ]),\n          _createElementVNode(\"td\", _hoisted_51, [\n            _createElementVNode(\"div\", _hoisted_52, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[37] || (_cache[37] = ($event: any) => ((uploadRootPath).value = $event)),\n                class: \"uploadSavePath\"\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(drive.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type,\n                    value: type\n                  }, _toDisplayString(type), 9, _hoisted_53))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, uploadRootPath.value]\n              ]),\n              _createElementVNode(\"button\", {\n                class: \"uploadBtn\",\n                onClick: handleSelectUploadFile\n              }, \"Upload\")\n            ])\n          ])\n        ])\n      ])\n    ]),\n    _createElementVNode(\"button\", {\n      class: \"saveBtn mb20\",\n      type: \"button\",\n      onClick: _cache[38] || (_cache[38] = ($event: any) => (cellImgSet()))\n    }, \"Save\"),\n    (showUploadModal.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          class: _normalizeClass(impossibleUploadCount.value === 0 ? 'uploadModalSmall' : 'uploadModal')\n        }, [\n          (impossibleUploadCount.value === 0)\n            ? (_openBlock(), _createElementBlock(\"p\", _hoisted_54, \"Would you like to upload?\"))\n            : (impossibleUploadCount.value > 0)\n              ? (_openBlock(), _createElementBlock(\"pre\", _hoisted_55, _cache[65] || (_cache[65] = [\n                  _createTextVNode(\"      There are \"),\n                  _createElementVNode(\"span\", { style: {\"color\":\"red\"} }, \"duplicated\", -1),\n                  _createTextVNode(\" items\\n      Would you like to upload possible items?\\n    \")\n                ])))\n              : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass(impossibleUploadCount.value === 0 && 'uploadModalCountWrapperSmall')\n          }, [\n            _createElementVNode(\"p\", null, \"Movable Items Count: \" + _toDisplayString(possibleUploadCount.value), 1),\n            _createElementVNode(\"p\", null, \"Duplicated Count: \" + _toDisplayString(impossibleUploadCount.value), 1)\n          ], 2),\n          (impossibleUploadCount.value > 0)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_56, [\n                _cache[66] || (_cache[66] = _createElementVNode(\"p\", { style: {\"color\":\"black\"} }, \"Duplicated Barcode Numbers\", -1)),\n                _createElementVNode(\"ul\", _hoisted_57, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(uploadSlotIdObj.value?.duplicated, (barcodeNo) => {\n                    return (_openBlock(), _createElementBlock(\"li\", {\n                      class: \"userSelectText\",\n                      key: barcodeNo\n                    }, _toDisplayString(barcodeNo), 1))\n                  }), 128))\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_58, [\n            _withDirectives(_createElementVNode(\"button\", {\n              class: \"memoModalBtn\",\n              onClick: _cache[39] || (_cache[39] = ($event: any) => (uploadConfirm('copy')))\n            }, _toDisplayString(_unref(MESSAGES).COPY), 513), [\n              [_vShow, possibleUploadCount.value > 0]\n            ]),\n            _withDirectives(_createElementVNode(\"button\", {\n              class: \"memoModalBtn\",\n              onClick: _cache[40] || (_cache[40] = ($event: any) => (uploadConfirm('move')))\n            }, _toDisplayString(_unref(MESSAGES).MOVE), 513), [\n              [_vShow, possibleUploadCount.value > 0]\n            ]),\n            _createElementVNode(\"button\", {\n              class: \"memoModalBtn\",\n              onClick: uploadCancel\n            }, _toDisplayString(impossibleUploadCount.value === 0 ? _unref(MESSAGES).CANCEL : _unref(MESSAGES).CLOSE), 1)\n          ])\n        ], 2))\n      : _createCommentVNode(\"\", true),\n    _withDirectives(_createElementVNode(\"div\", {\n      class: _normalizeClass(possibleUploadFileNames.value.length === 0 ? 'downloadDeleteSmallModal' : 'downloadDeleteModal')\n    }, [\n      _cache[68] || (_cache[68] = _createElementVNode(\"p\", {\n        class: \"fs12\",\n        style: {\"top\":\"0\"}\n      }, \"Upload file list\", -1)),\n      _withDirectives(_createElementVNode(\"div\", _hoisted_59, [\n        _cache[67] || (_cache[67] = _createElementVNode(\"p\", { class: \"downloadDeleteSemiTitle\" }, \"Select upload file\", -1)),\n        _createElementVNode(\"ul\", _hoisted_60, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(possibleUploadFileNames.value, (folderName) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              class: \"userSelectText flex-justify-between\",\n              key: folderName\n            }, [\n              _createElementVNode(\"p\", _hoisted_61, _toDisplayString(folderName), 1),\n              _withDirectives(_createElementVNode(\"input\", {\n                style: {\"margin\":\"0\"},\n                \"onUpdate:modelValue\": _cache[41] || (_cache[41] = ($event: any) => ((selectedUploadFile).value = $event)),\n                type: \"radio\",\n                value: folderName\n              }, null, 8, _hoisted_62), [\n                [_vModelRadio, selectedUploadFile.value]\n              ])\n            ]))\n          }), 128))\n        ])\n      ], 512), [\n        [_vShow, possibleUploadFileNames.value.length > 0]\n      ]),\n      _withDirectives(_createElementVNode(\"p\", _hoisted_63, \"No files\", 512), [\n        [_vShow, possibleUploadFileNames.value.length === 0]\n      ]),\n      _createElementVNode(\"div\", _hoisted_64, [\n        (possibleUploadFileNames.value.length > 0)\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              _createElementVNode(\"button\", {\n                class: \"memoModalBtn\",\n                onClick: handleUploadSelectFile\n              }, _toDisplayString(_unref(MESSAGES).UPLOAD), 1),\n              _createElementVNode(\"button\", {\n                class: \"memoModalBtn\",\n                onClick: handleUploadSelectModalClose\n              }, _toDisplayString(_unref(MESSAGES).CANCEL), 1)\n            ], 64))\n          : (_openBlock(), _createElementBlock(\"button\", {\n              key: 1,\n              class: \"memoModalBtn\",\n              onClick: handleUploadSelectModalClose\n            }, _toDisplayString(_unref(MESSAGES).CLOSE), 1))\n      ])\n    ], 2), [\n      [_vShow, showUploadSelectModal.value]\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 2,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showDownloadConfirm.value)\n      ? (_openBlock(), _createBlock(ConfirmThreeBtn, {\n          key: 3,\n          \"is-visible\": showDownloadConfirm.value,\n          message: downloadConfirmMessage.value,\n          confirmFirstText: _unref(MESSAGES).MOVE,\n          confirmSecondText: _unref(MESSAGES).COPY,\n          closeText: _unref(MESSAGES).CLOSE,\n          onHide: handleDownloadClose,\n          onOkConfirm: _cache[42] || (_cache[42] = ($event: any) => (handleDownload('move'))),\n          onOkConfirm2: _cache[43] || (_cache[43] = ($event: any) => (handleDownload('copy')))\n        }, null, 8, [\"is-visible\", \"message\", \"confirmFirstText\", \"confirmSecondText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 4,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"loadingBackground\" v-show=\"isLoadingProgressBar\">\r\n    <div class=\"progressContainer\">\r\n      <p class=\"loadingProgressBarText\">{{ ((successFileCount / totalFileCount) * 100).toFixed(0) }}%</p>\r\n      <div\r\n          class=\"progressBar\"\r\n          :style=\"{ width: (successFileCount / totalFileCount) * 100 + '%' }\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"loadingBackground\" v-if=\"isRestoring || isDownloading\">\r\n    <div class=\"loaderForLogin\"></div>\r\n    <p class=\"loadingTextLogin\">Loading...</p>\r\n  </div>\r\n  <table class=\"settingTable\">\r\n    <tbody>\r\n    <tr v-if=\"viewerCheck !== 'viewer'\">\r\n      <th>Analysis Type</th>\r\n      <td colspan=\"2\">\r\n        <select v-model='testTypeCd'>\r\n          <option v-for=\"type in testTypeArr\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n        </select>\r\n      </td>\r\n    </tr>\r\n\r\n    <tr v-if=\"viewerCheck !== 'viewer'\">\r\n      <!-- WBC diff analysis values -->\r\n      <th rowspan=\"1\" v-if=\"projectType === 'pb'\">WBC Diff Analysis Values</th>\r\n\r\n      <!-- BM diff analysis values -->\r\n      <th v-if=\"projectType === 'bm'\">BM Diff Analysis Values</th>\r\n      <th>Cell Analyzing Count</th>\r\n      <td>\r\n\r\n        <select v-model='diffCellAnalyzingCount'>\r\n          <option v-for=\"type in analysisVal\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n        </select>\r\n      </td>\r\n    </tr>\r\n    <!--      PBS analysis values-->\r\n    <tr v-if=\"projectType === 'pb' && viewerCheck !== 'viewer'\">\r\n      <th :rowspan=\"pbsAnalysisValuesRowIndex()\">PBS Analysis Values</th>\r\n      <th>\r\n        Cell Analyzing Count\r\n      </th>\r\n      <td>\r\n        <select v-model='pbsCellAnalyzingCount'>\r\n          <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n        </select>\r\n      </td>\r\n    </tr>\r\n    <tr v-if=\"viewerCheck !== 'viewer'\">\r\n      <th v-if=\"projectType === 'bm'\"></th>\r\n      <th>Stitch Count</th>\r\n      <td>\r\n        <select v-model='stitchCount'>\r\n          <option v-for=\"type in stitchCountList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n        </select>\r\n      </td>\r\n    </tr>\r\n    <tr v-show=\"projectType === 'pb' && viewerCheck !== 'viewer'\">\r\n      <th class=\"pos-relative\">\r\n        Edge Shot Type\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-info']\"\r\n            @mouseenter=\"() => informationFontHover('edgeShotType', 'hover')\"\r\n            @mouseleave=\"informationFontHover('edgeShotType', 'leave')\"\r\n        />\r\n        <Transition>\r\n          <div v-if=\"showTutorialImage.edgeShotType\" class=\"tutorial-edgeShotType-container\">\r\n            <img :src=\"smearTop\" width=\"400\" />\r\n          </div>\r\n        </Transition>\r\n      </th>\r\n      <td>\r\n        <select v-model='edgeShotType'>\r\n          <option v-for=\"type in edgeShotTypeList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n        </select>\r\n      </td>\r\n    </tr>\r\n\r\n    <tr v-show=\"projectType === 'pb' && viewerCheck !== 'viewer' && machineVersion === '100a' && (edgeShotType === '2' || edgeShotType === '3')\">\r\n      <th class=\"pos-relative\">Edge Shot Count</th>\r\n      <td v-show=\"edgeShotType === '2'\">\r\n        <select v-model='edgeShotCount.LP'>\r\n          <option v-for=\"type in EDGE_SHOT_COUNT_LIST_LP\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n        </select>\r\n      </td>\r\n      <td v-show=\"edgeShotType === '3'\">\r\n        <select v-model='edgeShotCount.HP'>\r\n          <option v-for=\"type in EDGE_SHOT_COUNT_LIST_HP\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n        </select>\r\n      </td>\r\n    </tr>\r\n\r\n    <!--      BF analysis values-->\r\n    <tr v-if=\"projectType === 'pb' && viewerCheck !== 'viewer'\">\r\n      <th>BF Analysis Values</th>\r\n      <th>Cell Analyzing Count</th>\r\n      <td>\r\n        <select v-model='bfCellAnalyzingCount'>\r\n          <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n        </select>\r\n      </td>\r\n    </tr>\r\n\r\n    <tr v-if=\"projectType === 'pb' && viewerCheck !== 'viewer'\">\r\n      <th rowspan=\"3\" class=\"pos-relative\">\r\n        Common\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-info']\"\r\n            @mouseenter=\"() => informationFontHover('positionMargin', 'hover')\"\r\n            @mouseleave=\"informationFontHover('positionMargin', 'leave')\"\r\n        />\r\n        <Transition>\r\n          <div v-show=\"showTutorialImage.positionMargin\" class=\"tutorial-positionMargin-container\">\r\n            <img :src=\"commonPositionMargin\" width=\"140\" />\r\n          </div>\r\n        </Transition>\r\n      </th>\r\n      <th>Wbc Position Margin</th>\r\n      <td>\r\n        <select v-model='wbcPositionMargin'>\r\n          <option v-for=\"type in POSITION_MARGIN_LIST\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n        </select>\r\n      </td>\r\n    </tr>\r\n    <tr v-if=\"projectType === 'pb' && viewerCheck !== 'viewer'\">\r\n      <th>Rbc Position Margin</th>\r\n      <td>\r\n        <select v-model='rbcPositionMargin'>\r\n          <option v-for=\"type in POSITION_MARGIN_LIST\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n        </select>\r\n      </td>\r\n    </tr>\r\n    <tr v-if=\"projectType === 'pb' && viewerCheck !== 'viewer'\">\r\n      <th>Edge Position Margin</th>\r\n      <td>\r\n        <select v-model='pltPositionMargin'>\r\n          <option v-for=\"type in POSITION_MARGIN_LIST\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n        </select>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th :style=\"viewerCheck === 'viewer' && 'width: 214px;'\" class=\"pos-relative\">\r\n        IA Root Path\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-info']\"\r\n            :title=\"MESSAGES.SETTING_INFO_IA_ROOT_PATH_KO\"\r\n            @mouseenter=\"tooltipVisibleFunc('iaRootPath', true)\"\r\n            @mouseleave=\"tooltipVisibleFunc('iaRootPath', false)\"\r\n        />\r\n        <Tooltip :isVisible=\"tooltipVisible.iaRootPath\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.IA_ROOT_PATH\" />\r\n      </th>\r\n      <td colspan=\"2\">\r\n        <select v-model='iaRootPath'>\r\n          <option v-for=\"type in drive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n        </select>\r\n      </td>\r\n    </tr>\r\n    <tr v-if=\"viewerCheck !== 'viewer'\">\r\n      <th class=\"pos-relative\">\r\n        NS/NB Integration\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-info']\"\r\n            @mouseenter=\"tooltipVisibleFunc('nsNbIntegration', true)\"\r\n            @mouseleave=\"tooltipVisibleFunc('nsNbIntegration', false)\"\r\n        />\r\n        <Tooltip :isVisible=\"tooltipVisible.nsNbIntegration\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.NS_NB_INTEGRATION\" />\r\n      </th>\r\n      <td>\r\n        <font-awesome-icon\r\n            :icon=\"isNsNbIntegration ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n            class=\"iconSize\"\r\n            @click=\"toggleNsNbIntegration\"\r\n        />\r\n      </td>\r\n    </tr>\r\n    <tr v-if=\"viewerCheck !== 'viewer'\">\r\n      <th class=\"pos-relative\">\r\n        Alarm Timer (sec)\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-info']\"\r\n            @mouseenter=\"tooltipVisibleFunc('alarm', true)\"\r\n            @mouseleave=\"tooltipVisibleFunc('alarm', false)\"\r\n        />\r\n        <Tooltip :isVisible=\"tooltipVisible.alarm\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.ALARM\" />\r\n      </th>\r\n      <td>\r\n        <font-awesome-icon\r\n            :icon=\"isAlarm ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n            class=\"iconSize\"\r\n            @click=\"toggleAlarm\"\r\n        />\r\n      </td>\r\n      <td>\r\n        <input type=\"text\" v-model='alarmCount' class=\"alarmInput\" @input=\"filterNumbersOnly($event)\">\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th class=\"pos-relative\">\r\n        Keep Page\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-info']\"\r\n            @mouseenter=\"tooltipVisibleFunc('keepPage', true)\"\r\n            @mouseleave=\"tooltipVisibleFunc('keepPage', false)\"\r\n        />\r\n        <Tooltip :isVisible=\"tooltipVisible.keepPage\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.KEEP_PAGE\" />\r\n      </th>\r\n      <td>\r\n        <font-awesome-icon\r\n            :icon=\"keepPage ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n            class=\"iconSize\"\r\n            @click=\"toggleKeepPage\"\r\n        />\r\n      </td>\r\n    </tr>\r\n<!--    <tr>-->\r\n<!--      <th class=\"pos-relative\">-->\r\n<!--        LIS Upload Check-->\r\n<!--        <font-awesome-icon-->\r\n<!--            :icon=\"['fas', 'circle-info']\"-->\r\n<!--            @mouseenter=\"tooltipVisibleFunc('lisUploadCheckAll', true)\"-->\r\n<!--            @mouseleave=\"tooltipVisibleFunc('lisUploadCheckAll', false)\"-->\r\n<!--        />-->\r\n<!--        <Tooltip :isVisible=\"tooltipVisible.lisUploadCheckAll\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.LIS_UPLOAD_CHECK\" />-->\r\n<!--      </th>-->\r\n<!--      <td>-->\r\n<!--        <font-awesome-icon-->\r\n<!--            :icon=\"lisUploadCheckAll ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"-->\r\n<!--            class=\"iconSize\"-->\r\n<!--            @click=\"toggleLisUploadCheckAll\"-->\r\n<!--        />-->\r\n<!--      </td>-->\r\n<!--    </tr>-->\r\n    </tbody>\r\n</table>\r\n\r\n  <table class=\"settingTable auto\">\r\n    <colgroup>\r\n      <col width=\"70\">\r\n      <col width=\"30\">\r\n    </colgroup>\r\n    <tbody>\r\n    <tr>\r\n      <th class=\"pos-relative\">\r\n        Download Save Path\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-info']\"\r\n            @mouseenter=\"tooltipVisibleFunc('downloadSavePath', true)\"\r\n            @mouseleave=\"tooltipVisibleFunc('downloadSavePath', false)\"\r\n        />\r\n        <Tooltip :isVisible=\"tooltipVisible.downloadSavePath\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.DOWNLOAD_SAVE_PATH\" />\r\n      </th>\r\n\r\n      <td>\r\n        <div class=\"downloadSavePathContainer\">\r\n          <select v-model='downloadRootPath' class=\"downloadPath\">\r\n            <option v-for=\"type in backupDrive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n          </select>\r\n          <div class=\"pos-relative\">\r\n            <font-awesome-icon\r\n                :icon=\"['fas', 'folder-open']\"\r\n                @click=\"openSourceDrive\"\r\n                class=\"openDriveIcon\"\r\n                @mouseenter=\"tooltipVisibleFunc('openDownloadSavePath', true)\"\r\n                @mouseleave=\"tooltipVisibleFunc('openDownloadSavePath', false)\"\r\n            />\r\n            <Tooltip :isVisible=\"tooltipVisible.openDownloadSavePath\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.OPEN_DOWNLOAD_SAVE_PATH\" />\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th class=\"pos-relative\">\r\n        Download\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-info']\"\r\n            @mouseenter=\"tooltipVisibleFunc('download', true)\"\r\n            @mouseleave=\"tooltipVisibleFunc('download', false)\"\r\n        />\r\n        <Tooltip :isVisible=\"tooltipVisible.download\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.DOWNLOAD\" />\r\n      </th>\r\n      <td>\r\n        <div class=\"backupDatePickers\">\r\n          <Datepicker v-model=\"backupStartDate\"></Datepicker>\r\n          <Datepicker v-model=\"backupEndDate\"></Datepicker>\r\n          <button class=\"backupBtn\" @click=\"createBackup\">Download</button>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <th class=\"pos-relative\">\r\n        Upload\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-info']\"\r\n            :title=\"MESSAGES.SETTING_INFO_UPLOAD_KO\"\r\n            @mouseenter=\"tooltipVisibleFunc('upload', true)\"\r\n            @mouseleave=\"tooltipVisibleFunc('upload', false)\"\r\n        />\r\n        <Tooltip :isVisible=\"tooltipVisible.upload\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.UPLOAD\" />\r\n      </th>\r\n      <td colspan=\"2\">\r\n        <div class=\"settingUploadContainer\">\r\n          <select v-model='uploadRootPath' class=\"uploadSavePath\">\r\n            <option v-for=\"type in drive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n          </select>\r\n          <button class=\"uploadBtn\" @click=\"handleSelectUploadFile\">Upload</button>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n\r\n\r\n    <!--      나중에 기능 추가 할 부분 자동 백업-->\r\n    <!--      <tr>-->\r\n    <!--        <th>Auto Backup</th>-->\r\n    <!--        <td>-->\r\n    <!--          <div class=\"autoDateBox\">-->\r\n    <!--            <select v-model='autoBackUpMonth'>-->\r\n    <!--              <option v-for=\"month in autoDate\" :key=\"month.value\" :value=\"month.value\">-->\r\n    <!--                {{ month.value }}-->\r\n    <!--              </option>-->\r\n    <!--            </select>-->\r\n    <!--            <span>Month</span>-->\r\n    <!--          </div>-->\r\n    <!--        </td>-->\r\n    <!--      </tr>-->\r\n    </tbody>\r\n  </table>\r\n  <button class=\"saveBtn mb20\" type=\"button\" @click='cellImgSet()'>Save</button>\r\n\r\n\r\n  <!-- Upload 확인 모달 -->\r\n  <div v-if=\"showUploadModal\" :class=\"impossibleUploadCount === 0 ? 'uploadModalSmall' : 'uploadModal'\">\r\n    <p v-if=\"impossibleUploadCount === 0\" class=\"fs12\" style=\"top: 0;\">Would you like to upload?</p>\r\n    <pre v-else-if=\"impossibleUploadCount > 0\"\r\n        class=\"fs12\"\r\n    >\r\n      There are <span style=\"color: red;\">duplicated</span> items\r\n      Would you like to upload possible items?\r\n    </pre>\r\n    <div :class=\"impossibleUploadCount === 0 && 'uploadModalCountWrapperSmall'\">\r\n      <p>Movable Items Count: {{ possibleUploadCount }}</p>\r\n      <p>Duplicated Count: {{ impossibleUploadCount }}</p>\r\n    </div>\r\n    <div v-if=\"impossibleUploadCount > 0\" class=\"uploadDuplicatedSlotContainer\">\r\n      <p style=\"color: black;\">Duplicated Barcode Numbers</p>\r\n      <ul class=\"uploadDuplicatedSlotWrapper\">\r\n          <li class=\"userSelectText\" v-for=\"barcodeNo in uploadSlotIdObj?.duplicated\" :key=\"barcodeNo\">\r\n            {{ barcodeNo }}\r\n          </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"uploadModalBtnContainer\">\r\n      <button v-show=\"possibleUploadCount > 0\" class=\"memoModalBtn\" @click=\"uploadConfirm('copy')\">{{ MESSAGES.COPY }}</button>\r\n      <button v-show=\"possibleUploadCount > 0\" class=\"memoModalBtn\" @click=\"uploadConfirm('move')\">{{ MESSAGES.MOVE }}</button>\r\n      <button class=\"memoModalBtn\" @click=\"uploadCancel\">{{\r\n          impossibleUploadCount === 0 ? MESSAGES.CANCEL : MESSAGES.CLOSE\r\n        }}</button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Upload 선택 모달 -->\r\n  <div v-show=\"showUploadSelectModal\" :class=\"possibleUploadFileNames.length === 0 ? 'downloadDeleteSmallModal' : 'downloadDeleteModal'\">\r\n    <p class=\"fs12\" style=\"top: 0;\">Upload file list</p>\r\n    <div v-show=\"possibleUploadFileNames.length > 0\" class=\"downloadDeleteContainer\">\r\n      <p class=\"downloadDeleteSemiTitle\">Select upload file</p>\r\n      <ul class=\"downloadDeleteWrapper\">\r\n        <li class=\"userSelectText flex-justify-between\" v-for=\"folderName in possibleUploadFileNames\" :key=\"folderName\">\r\n          <p style=\"font-size: 0.8rem;\">{{ folderName }}</p>\r\n          <input style=\"margin: 0;\" v-model=\"selectedUploadFile\" type=\"radio\" :value=\"folderName\" />\r\n        </li>\r\n\r\n      </ul>\r\n    </div>\r\n    <p class=\"mt40\" v-show=\"possibleUploadFileNames.length === 0\">No files</p>\r\n    <div class=\"uploadModalBtnContainer\">\r\n      <template v-if=\"possibleUploadFileNames.length > 0\">\r\n        <button class=\"memoModalBtn\" @click=\"handleUploadSelectFile\">{{ MESSAGES.UPLOAD }}</button>\r\n        <button class=\"memoModalBtn\" @click=\"handleUploadSelectModalClose\">{{ MESSAGES.CANCEL }}</button>\r\n      </template>\r\n      <button v-else class=\"memoModalBtn\" @click=\"handleUploadSelectModalClose\">{{ MESSAGES.CLOSE }}</button>\r\n    </div>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <ConfirmThreeBtn\r\n      v-if=\"showDownloadConfirm\"\r\n      :is-visible=\"showDownloadConfirm\"\r\n      :message=\"downloadConfirmMessage\"\r\n      :confirmFirstText=\"MESSAGES.MOVE\"\r\n      :confirmSecondText=\"MESSAGES.COPY\"\r\n      :closeText=\"MESSAGES.CLOSE\"\r\n      @hide=\"handleDownloadClose\"\r\n      @okConfirm=\"handleDownload('move')\"\r\n      @okConfirm2=\"handleDownload('copy')\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { createCellImgApi, getCellImgApi, getDrivesApi, putCellImgApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Datepicker from 'vue3-datepicker';\r\nimport {computed, nextTick, onMounted, ref, watch, getCurrentInstance, reactive, onBeforeMount} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport moment from \"moment\";\r\nimport {\r\n  AnalysisList,\r\n  stitchCountList,\r\n  testTypeList,\r\n  testBmTypeList,\r\n  bmAnalysisList,\r\n  settingName,\r\n  edgeShotTypeList,\r\n  POSITION_MARGIN_LIST,\r\n  EDGE_SHOT_COUNT_LIST_LP, EDGE_SHOT_COUNT_LIST_HP\r\n} from \"@/common/defines/constants/settings\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {MESSAGES, MSG} from \"@/common/defines/constants/constantMessageText\";\r\nimport {\r\n  backUpDateApi,\r\n  downloadPossibleApi,\r\n  uploadPossibleApi,\r\n  uploadBackupApi,\r\n  openDriveApi,\r\n  checkPossibleUploadFileApi\r\n} from \"@/common/api/service/backup/wbcApi\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport ConfirmThreeBtn from \"@/components/commonUi/ConfirmThreeBtn.vue\";\r\nimport commonPositionMargin from \"@/assets/images/commonMargin.png\";\r\nimport smearTop from \"@/assets/images/smearTop.png\";\r\nimport Tooltip from \"@/components/commonUi/Tooltip.vue\";\r\nimport { CellImageAnalyzedType } from \"@/common/type/tooltipType\";\r\nimport {scrollToTop} from \"@/common/lib/utils/scroll\";\r\n\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst showUploadModal = ref(false);\r\nconst alertMessage = ref('');\r\nconst analysisVal = ref<any>([]);\r\nconst testTypeCd = ref('01');\r\nconst diffCellAnalyzingCount = ref('100');\r\nconst wbcPositionMargin = ref('0');\r\nconst rbcPositionMargin = ref('0');\r\nconst pltPositionMargin = ref('0');\r\nconst pbsCellAnalyzingCount = ref('100');\r\nconst stitchCount = ref('1');\r\nconst edgeShotType = ref('0');\r\nconst edgeShotCount = ref({\r\n  'LP': '1',\r\n  'HP': '3',\r\n})\r\nconst bfCellAnalyzingCount = ref('100');\r\nconst iaRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst downloadRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\UIMD_BM_backup' : 'D:\\\\UIMD_PB_backup');\r\nconst uploadRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst isNsNbIntegration = ref(false);\r\nconst isAlarm = ref(false);\r\nconst alarmCount = ref('5');\r\nconst keepPage = ref(false);\r\nconst lisUploadCheckAll = ref(false);\r\nconst backupStartDate = ref(moment().local().toDate());\r\nconst backupEndDate = ref(moment().local().toDate());\r\nconst autoDate = ref([\r\n  {value: 'Not selected'},\r\n  {value: 1},\r\n  {value: 2},\r\n  {value: 3},\r\n  {value: 4},\r\n  {value: 5},\r\n  {value: 6},\r\n  {value: 7},\r\n  {value: 8},\r\n  {value: 9},\r\n  {value: 10},\r\n  {value: 11},\r\n  {value: 12}\r\n]);\r\nconst autoBackUpMonth = ref('Not selected');\r\nconst saveHttpType = ref('');\r\nconst drive = ref<any>([]);\r\nconst backupDrive = ref<any>([]);\r\nconst cellimgId = ref('');\r\n\r\nconst projectType = ref('pb');\r\nconst testTypeArr = ref<any>([]);\r\nconst uploadSlotIdObj = ref({duplicated: [], nonDuplicated: []});\r\nconst possibleUploadCount = computed(() => uploadSlotIdObj.value?.nonDuplicated && uploadSlotIdObj.value?.nonDuplicated.length);\r\nconst impossibleUploadCount = computed(() => uploadSlotIdObj.value?.duplicated && uploadSlotIdObj.value?.duplicated.length);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst isRestoring = ref(false);\r\nconst isDownloading = ref(false);\r\nconst isLoadingProgressBar = ref(false);\r\nconst showDownloadConfirm = ref(false);\r\nconst downloadConfirmMessage = ref('');\r\nconst downloadDto = ref<any>({});\r\nconst totalFileCount = ref(1);\r\nconst successFileCount = ref(0);\r\nconst downloadUploadType = ref('copy');\r\nconst intervalId = ref<any>(null);\r\nconst deletableDownloadFiles = ref({});\r\nconst loadingState = ref('');\r\nconst showUploadSelectModal = ref(false);\r\nconst possibleUploadFileNames = ref([]);\r\nconst selectedUploadFile = ref('');\r\nconst showTutorialImage = ref({\r\n  edgeShotType: false,\r\n  positionMargin: false,\r\n})\r\nconst apiUrl = ref('');\r\nconst tooltipVisible = ref({\r\n  iaRootPath: false,\r\n  nsNbIntegration: false,\r\n  alarm: false,\r\n  keepPage: false,\r\n  lisUploadCheckAll: false,\r\n  downloadSavePath: false,\r\n  download: false,\r\n  upload: false,\r\n  openDownloadSavePath: false,\r\n})\r\nconst machineVersion = ref<'12a' | '100a'>('12a');\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('downloadUploadFinished', async (downloadUploadObj: { type: 'download' | 'upload'; isFinished: boolean}) => {\r\n  if (downloadUploadObj?.isFinished) {\r\n    clearInterval(intervalId.value);\r\n    successFileCount.value = totalFileCount.value;\r\n    downloadUploadStopWebSocket(false);\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n    await updateFileCounts();\r\n  }\r\n})\r\n\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  machineVersion.value = window.MACHINE_VERSION;\r\n})\r\n\r\nonMounted(async () => {\r\n  getApiUrl();\r\n  await nextTick();\r\n  testTypeCd.value = window.PROJECT_TYPE === 'bm' ? '02' : '01';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n  analysisVal.value = window.PROJECT_TYPE === 'bm' ? bmAnalysisList : AnalysisList;\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cellImageAnalyzed });\r\n\r\n  await cellImgGet();\r\n  await driveGet();\r\n});\r\n\r\nwatch([testTypeCd, diffCellAnalyzingCount, diffCellAnalyzingCount, wbcPositionMargin, rbcPositionMargin,\r\n  pltPositionMargin, pbsCellAnalyzingCount, edgeShotType, edgeShotCount, stitchCount, bfCellAnalyzingCount, iaRootPath, isNsNbIntegration, isAlarm, alarmCount, keepPage, lisUploadCheckAll], async () => {\r\n  const cellAfterSettingObj = {\r\n    id: cellimgId.value,\r\n    analysisType: testTypeCd.value,\r\n    diffCellAnalyzingCount: diffCellAnalyzingCount.value,\r\n    diffWbcPositionMargin: wbcPositionMargin.value,\r\n    diffRbcPositionMargin: rbcPositionMargin.value,\r\n    diffPltPositionMargin: pltPositionMargin.value,\r\n    pbsCellAnalyzingCount: pbsCellAnalyzingCount.value,\r\n    stitchCount: stitchCount.value,\r\n    edgeShotType: edgeShotType.value,\r\n    edgeShotLPCount: edgeShotCount.value.LP,\r\n    edgeShotHPCount: edgeShotCount.value.HP,\r\n    bfCellAnalyzingCount: bfCellAnalyzingCount.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    lisUploadCheckAll: lisUploadCheckAll.value,\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(cellAfterSettingObj)});\r\n  if (settingType.value !== settingName.cellImageAnalyzed) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cellImageAnalyzed });\r\n  }\r\n})\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst getApiUrl = () => {\r\n  const tmp = window.APP_API_BASE_URL.split(':');\r\n  apiUrl.value = `${tmp[0]}:${tmp[1]}`;\r\n}\r\n\r\nconst filterNumbersOnly = (event: Event) => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  alarmCount.value = filteredValue.trim();\r\n};\r\n\r\nconst driveGet = async () => {\r\n  try {\r\n    const result = await getDrivesApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n      } else {\r\n        const data = result.data;\r\n        const saveData = JSON.parse(JSON.stringify(data));\r\n        const backUpData = JSON.parse(JSON.stringify(data));\r\n\r\n        const savePlace = window.PROJECT_TYPE === 'bm' ? 'BMIA_proc' : 'PBIA_proc';\r\n        const backupPlace = window.PROJECT_TYPE === 'bm' ? 'UIMD_BM_backup' : 'UIMD_PB_backup';\r\n        for (const dataKey in data) {\r\n          saveData[dataKey] = saveData[dataKey] + `\\\\${savePlace}`;\r\n          backUpData[dataKey] = backUpData[dataKey] + `\\\\${backupPlace}`;\r\n        }\r\n        drive.value = saveData;\r\n        backupDrive.value = backUpData;\r\n      }\r\n\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n\r\n        const data = result.data;\r\n\r\n        cellimgId.value = String(data.id);\r\n        testTypeCd.value = data.analysisType;\r\n        diffCellAnalyzingCount.value = data.diffCellAnalyzingCount;\r\n        wbcPositionMargin.value = data.diffWbcPositionMargin;\r\n        rbcPositionMargin.value = data.diffRbcPositionMargin;\r\n        pltPositionMargin.value = data.diffPltPositionMargin;\r\n        pbsCellAnalyzingCount.value = data.pbsCellAnalyzingCount;\r\n        stitchCount.value = data.stitchCount;\r\n        bfCellAnalyzingCount.value = data.bfCellAnalyzingCount;\r\n        edgeShotType.value = String(data?.edgeShotType);\r\n        edgeShotCount.value.LP = String(data?.edgeShotLPCount);\r\n        edgeShotCount.value.HP = String(data?.edgeShotHPCount);\r\n        iaRootPath.value = data.iaRootPath;\r\n        downloadRootPath.value = data.backupPath || (window.PROJECT_TYPE === 'bm' ? 'D:\\\\UIMD_BM_backup' : 'D:\\\\UIMD_PB_backup');\r\n        isNsNbIntegration.value = data.isNsNbIntegration;\r\n        isAlarm.value = data.isAlarm;\r\n        alarmCount.value = data.alarmCount;\r\n        keepPage.value = data.keepPage;\r\n        lisUploadCheckAll.value = data.lisUploadCheckAll;\r\n        backupStartDate.value = moment(data.backupStartDate).local().toDate();\r\n        backupEndDate.value = moment(data.backupEndDate).local().toDate();\r\n        autoBackUpMonth.value = data?.autoBackUpMonth;\r\n\r\n        const cellBeforeSettingObj = {\r\n          id: cellimgId.value,\r\n          analysisType: data?.analysisType,\r\n          diffCellAnalyzingCount: data?.diffCellAnalyzingCount,\r\n          diffWbcPositionMargin: data?.diffWbcPositionMargin,\r\n          diffRbcPositionMargin: data?.diffRbcPositionMargin,\r\n          diffPltPositionMargin: data?.diffPltPositionMargin,\r\n          pbsCellAnalyzingCount: data?.pbsCellAnalyzingCount,\r\n          stitchCount: data?.stitchCount,\r\n          edgeShotType: data?.edgeShotType,\r\n          edgeShotLPCount: data?.edgeShotLPCount,\r\n          edgeShotHPCount: data?.edgeShotHPCount,\r\n          bfCellAnalyzingCount: data?.bfCellAnalyzingCount,\r\n          iaRootPath: data?.iaRootPath,\r\n          isNsNbIntegration: data?.isNsNbIntegration,\r\n          isAlarm: data?.isAlarm,\r\n          alarmCount: data?.alarmCount,\r\n          keepPage: data?.keepPage,\r\n          lisUploadCheckAll: data?.lisUploadCheckAll,\r\n        }\r\n\r\n        sessionStorage.setItem('isAlarm', String(data?.isAlarm));\r\n        await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(cellBeforeSettingObj) });\r\n        await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(cellBeforeSettingObj) });\r\n      }\r\n\r\n    }\r\n  } catch (e) {\r\n\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst cellImgSet = async () => {\r\n  const cellImgSet = {\r\n    analysisType: testTypeCd.value,\r\n    diffCellAnalyzingCount: diffCellAnalyzingCount.value,\r\n    diffWbcPositionMargin: wbcPositionMargin.value,\r\n    diffRbcPositionMargin: rbcPositionMargin.value,\r\n    diffPltPositionMargin: pltPositionMargin.value,\r\n    pbsCellAnalyzingCount: pbsCellAnalyzingCount.value,\r\n    edgeShotType: edgeShotType.value,\r\n    edgeShotLPCount: edgeShotCount.value.LP,\r\n    edgeShotHPCount: edgeShotCount.value.HP,\r\n    stitchCount: stitchCount.value,\r\n    bfCellAnalyzingCount: bfCellAnalyzingCount.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    lisUploadCheckAll: lisUploadCheckAll.value,\r\n    backupPath: downloadRootPath.value,\r\n    backupStartDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    backupEndDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    autoBackUpMonth: autoBackUpMonth.value,\r\n    autoBackUpStartDate: autoBackUpMonth.value !== 'Not selected' ? moment(new Date()).local().toDate().toISOString().split('T')[0]:null,\r\n  }\r\n\r\n  try {\r\n\r\n    let result: any = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCellImgApi(cellImgSet);\r\n    } else {\r\n      result = await putCellImgApi(cellImgSet, cellimgId.value);\r\n    }\r\n\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? MESSAGES.settingSaveSuccess : MESSAGES.UPDATE_SUCCESSFULLY;\r\n      showSuccessAlert(text);\r\n      scrollToTop();\r\n      const data = result?.data;\r\n      await store.dispatch('commonModule/setCommonInfo', { isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N' });\r\n      await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n      });\r\n      // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n      sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n      sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n      sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n      sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n      sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n      sessionStorage.setItem('edgeShotLPCount', String(data?.edgeShotLPCount));\r\n      sessionStorage.setItem('edgeShotHPCount', String(data?.edgeShotHPCount));\r\n      sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n      sessionStorage.setItem('isAlarm', String(data?.isAlarm));\r\n      const keepPageType = projectType.value === 'pb' ? 'keepPage': 'bmKeepPage'\r\n      sessionStorage.setItem(keepPageType, String(data?.keepPage));\r\n      await store.dispatch('commonModule/setCommonInfo', {resetAnalyzing: true});\r\n      await store.dispatch('commonModule/setCommonInfo', { showLISUploadAfterCheckingAll: data?.lisUploadCheckAll });\r\n    }\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst toggleNsNbIntegration = () => {\r\n  isNsNbIntegration.value = !isNsNbIntegration.value;\r\n};\r\n\r\nconst toggleAlarm = () => {\r\n  isAlarm.value = !isAlarm.value;\r\n};\r\n\r\nconst toggleKeepPage = () => {\r\n  keepPage.value = !keepPage.value;\r\n};\r\n\r\nconst toggleLisUploadCheckAll = () => {\r\n  lisUploadCheckAll.value = !lisUploadCheckAll.value;\r\n};\r\n\r\nconst informationFontHover = (type: 'edgeShotType' | 'positionMargin', hoverStatus: 'hover' | 'leave') => {\r\n  if (hoverStatus === 'leave') {\r\n    showTutorialImage.value.edgeShotType = false;\r\n    showTutorialImage.value.positionMargin = false;\r\n    return;\r\n  }\r\n  switch (type) {\r\n    case 'edgeShotType':\r\n      showTutorialImage.value.edgeShotType = true;\r\n      break;\r\n    case 'positionMargin':\r\n      showTutorialImage.value.positionMargin = true;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nconst uploadConfirm = async (uploadType: 'move' | 'copy') => {\r\n  showUploadModal.value = false;\r\n  totalFileCount.value = possibleUploadCount.value;\r\n  try {\r\n    isLoadingProgressBar.value = true;\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n\r\n    const uploadDto = {\r\n      fileName: selectedUploadFile.value,\r\n      destinationUploadPath: uploadRootPath.value,\r\n      originUploadPath: downloadRootPath.value,\r\n      dayQuery,\r\n      projectType: projectType.value,\r\n      uploadType,\r\n      apiUrl: apiUrl.value,\r\n    }\r\n    downloadUploadType.value = uploadType;\r\n\r\n    loadingState.value = uploadType === 'move' ? 'moved' : 'copied';\r\n\r\n    successFileCount.value = 0;\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n    downloadUploadStopWebSocket(true);\r\n    handlePolling();\r\n    const result = await uploadBackupApi(uploadDto);\r\n    if (typeof result.data === 'string') {\r\n      showErrorAlert(result.data);\r\n    } else {\r\n      showSuccessAlert('Upload completed successfully');\r\n      scrollToTop();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst uploadCancel = async () => {\r\n  showUploadModal.value = false;\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await cellImgSet();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleDownloadClose = () => {\r\n  showDownloadConfirm.value = false;\r\n}\r\n\r\nconst handlePolling = async () => {\r\n  const duration = String(totalFileCount.value).length // 1초\r\n  intervalId.value = setInterval(async () => {\r\n    successFileCount.value += 1;\r\n    if (successFileCount.value === totalFileCount.value - 1) {\r\n      clearInterval(intervalId.value);\r\n    }\r\n  }, duration * 3000);\r\n}\r\n\r\nconst downloadUploadStopWebSocket = (state: boolean) => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('isDownloadUploading', {\r\n    type: 'SEND_DATA',\r\n    payload: state\r\n  });\r\n}\r\n\r\nconst handleDownload = async (downloadType: 'move' | 'copy') => {\r\n  const downloadDto = downloadDtoObj(downloadType);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n  downloadUploadStopWebSocket(true);\r\n\r\n  if (downloadType === 'move') {\r\n    loadingState.value = 'moved';\r\n  } else {\r\n    loadingState.value = 'copied';\r\n  }\r\n\r\n  successFileCount.value = 0;\r\n\r\n  console.log('downloadDto', downloadDto);\r\n  try {\r\n    handlePolling();\r\n    await backUpDateApi(downloadDto);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst updateFileCounts = async () => {\r\n  successFileCount.value = totalFileCount.value;\r\n  setTimeout(async () => {\r\n    totalFileCount.value = 0;\r\n    successFileCount.value = 0;\r\n    isLoadingProgressBar.value = false;\r\n  }, 2000)\r\n  await showSuccessAlert('Success');\r\n}\r\n\r\nconst downloadDtoObj = (downloadType: 'move' | 'copy') => {\r\n  downloadUploadType.value = downloadType;\r\n  showDownloadConfirm.value = false;\r\n  const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n  const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n  const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n  const sendingDownloadStartDate = moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n  const sendingDownloadEndDate = moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n  const downloadDto = {\r\n    startDate: sendingDownloadStartDate, // 백업 시작일\r\n    endDate: sendingDownloadEndDate, // 백업 종료일\r\n    originDownloadPath: `${iaRootPath.value}`, //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n    destinationDownloadPath: downloadRootPath.value, // 백업 경로\r\n    projectType: projectType.value,\r\n    dayQuery,\r\n    downloadType,\r\n    apiUrl: apiUrl.value,\r\n  }\r\n  isLoadingProgressBar.value = true;\r\n\r\n  return downloadDto;\r\n}\r\n\r\nconst createBackup = async () => {\r\n  if (downloadRootPath.value === ''){\r\n    showErrorAlert('Please select a download save path');\r\n    return\r\n  }\r\n\r\n  const sendingDownloadStartDate = moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n  const sendingDownloadEndDate = moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n\r\n  if (!moment(sendingDownloadStartDate).isSameOrBefore(sendingDownloadEndDate)) {\r\n    showErrorAlert('Please check the date');\r\n    return\r\n  }\r\n\r\n  downloadDto.value = {\r\n    startDate: sendingDownloadStartDate, // 백업 시작일\r\n    endDate: sendingDownloadEndDate, // 백업 종료일\r\n    originDownloadPath: `${iaRootPath.value}`, //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n    destinationDownloadPath: downloadRootPath.value, // 백업 경로\r\n    projectType: projectType.value,\r\n  };\r\n  try {\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n    downloadUploadStopWebSocket(true);\r\n    const isPossibleToBackup = await downloadPossibleApi(downloadDto.value);\r\n    if (isPossibleToBackup.data.success) {\r\n      totalFileCount.value = Number(isPossibleToBackup.data.message.split(' ')[1]);\r\n      showDownloadConfirm.value = true;\r\n      downloadConfirmMessage.value = 'Would you like to copy files?';\r\n    } else {\r\n      showErrorAlert(isPossibleToBackup.data.message);\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  } finally {\r\n    downloadUploadStopWebSocket(false);\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n  }\r\n\r\n}\r\n\r\nconst handleSelectUploadFile = async () => {\r\n  const uploadDto = {\r\n    originUploadPath: downloadRootPath.value\r\n  };\r\n\r\n  try {\r\n    const result = await checkPossibleUploadFileApi(uploadDto);\r\n    if (result.success) {\r\n      possibleUploadFileNames.value = result.data;\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    possibleUploadFileNames.value = [];\r\n  } finally {\r\n    showUploadSelectModal.value = true;\r\n  }\r\n}\r\n\r\nconst openSourceDrive = async () => {\r\n  const downloadDto = {\r\n    originDownloadPath: downloadRootPath.value\r\n  };\r\n\r\n  try {\r\n    await openDriveApi(downloadDto);\r\n  } catch (e) {\r\n    deletableDownloadFiles.value = [];\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst handleUploadSelectFile = async () => {\r\n    try {\r\n    isRestoring.value = true;\r\n    const uploadDto = {\r\n      fileName: selectedUploadFile.value,\r\n      destinationUploadPath: uploadRootPath.value,\r\n      originUploadPath: downloadRootPath.value,\r\n      projectType: projectType.value,\r\n      apiUrl: apiUrl.value,\r\n    }\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n    downloadUploadStopWebSocket(true);\r\n\r\n    const result: any = await uploadPossibleApi(uploadDto);\r\n\r\n    if (typeof result.data === 'string') {\r\n      showErrorAlert(result.data);\r\n    } else {\r\n      totalFileCount.value = result.data.totalMove;\r\n      successFileCount.value = result.data.successMove;\r\n      showUploadModal.value = true;\r\n      uploadSlotIdObj.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  } finally {\r\n    downloadUploadStopWebSocket(false);\r\n      await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n    isRestoring.value = false;\r\n  }\r\n\r\n  showUploadSelectModal.value = false;\r\n}\r\n\r\nconst handleUploadSelectModalClose = () => {\r\n  showUploadSelectModal.value = false;\r\n  selectedUploadFile.value = '';\r\n}\r\n\r\nconst tooltipVisibleFunc = (type: keyof CellImageAnalyzedType, visible: boolean) => {\r\n  tooltipVisible.value[type] = visible;\r\n}\r\n\r\nconst pbsAnalysisValuesRowIndex = () => {\r\n  if (projectType.value !== 'pb') return 2;\r\n  if (machineVersion.value === '100a' && (edgeShotType.value === '2' || edgeShotType.value === '3')) return 4;\r\n  if (machineVersion.value === '100a') return 3;\r\n  if (machineVersion.value === '12a') return 3;\r\n  return 3;\r\n}\r\n\r\n</script>\r\n","import script from \"./cellImageAnalyzed.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cellImageAnalyzed.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"flex-column-center\" }\nconst _hoisted_2 = { class: \"flex-column mt22\" }\nconst _hoisted_3 = { class: \"fs12 mb14\" }\nconst _hoisted_4 = { class: \"flex-align-center-justify-between mb10\" }\nconst _hoisted_5 = {\n  style: {\"width\":\"240px\"},\n  class: \"flex-justify-between\"\n}\nconst _hoisted_6 = { class: \"fs10\" }\nconst _hoisted_7 = { class: \"degreeInput mt1 mb1 flex-justify-between\" }\nconst _hoisted_8 = [\"onUpdate:modelValue\"]\nconst _hoisted_9 = [\"onUpdate:modelValue\"]\nconst _hoisted_10 = [\"onUpdate:modelValue\"]\n\nimport {computed, onMounted, reactive, ref, watch} from 'vue';\r\nimport {rbcClassList, defaultRbcDegree, settingName} from '@/common/defines/constants/settings';\r\nimport {createRbcDegreeApi, getRbcDegreeApi, putRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport {scrollToTop} from \"@/common/lib/utils/scroll\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'rbcDegree',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\nconst saveHttpType = ref('post');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.rbcDegree });\r\n});\r\n\r\nwatch(() => rbcClassListArr.value, async (rbcClassListArrAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(rbcClassListArrAfterSettingObj) });\r\n  if (settingType.value !== settingName.rbcDegree) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.rbcDegree });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst combindDegree = async () => {\r\n  rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n    return {\r\n      ...category,\r\n      classInfo: category.classInfo.map((classItem: any) => {\r\n        const defaultDegree = defaultRbcDegree.find(\r\n            (defaultItem) =>\r\n                defaultItem.categoryId === category.categoryId &&\r\n                defaultItem.classId === classItem.classId\r\n        );\r\n\r\n        return {\r\n          ...classItem,\r\n          degree1: defaultDegree?.degree1 || 0,\r\n          degree2: defaultDegree?.degree2 || 0,\r\n          degree3: defaultDegree?.degree3 || 0,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n}\r\n\r\nconst onResetDegree = () => {\r\n  combindDegree();\r\n};\r\n\r\nconst createRbcDegreeData = async () => {\r\n  const rbcDegreeList: any = [];\r\n\r\n  rbcClassListArr.value.forEach((category: any) => {\r\n    category.classInfo.forEach((classItem: any) => {\r\n      rbcDegreeList.push({\r\n        categoryId: category.categoryId,\r\n        categoryNm: category.categoryNm,\r\n        classId: classItem.classId,\r\n        classNm: classItem.classNm,\r\n        degree1: classItem.degree1,\r\n        degree2: classItem.degree2,\r\n        degree3: classItem.degree3,\r\n      });\r\n    });\r\n  });\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRbcDegreeApi(rbcDegreeList);\r\n    } else {\r\n      result = await putRbcDegreeApi(rbcDegreeList);\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      scrollToTop();\r\n      saveHttpType.value = 'put';\r\n    }\r\n  } catch (e) {\r\n    showErrorAlert(MESSAGES.settingSaveFailure);\r\n    console.error(e);\r\n  } finally {\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  }\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    saveHttpType.value = 'put';\r\n    const data = result.data;\r\n    processData(data);\r\n  } catch (e) {\r\n    saveHttpType.value = 'post';\r\n    await combindDegree();\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(rbcClassListArr.value) });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(rbcClassListArr.value) });\r\n};\r\n\r\n\r\nconst processData = (data: any): void => {\r\n  const categoryMap = new Map();\r\n\r\n  data.forEach((item: any) => {\r\n    const categoryId = item.categoryId;\r\n    const classId = item.classId;\r\n\r\n    if (!categoryMap.has(categoryId)) {\r\n      const newCategory = {\r\n        categoryId: categoryId,\r\n        categoryNm: item.categoryNm,\r\n        classInfo: [{\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        }],\r\n      };\r\n      categoryMap.set(categoryId, newCategory);\r\n    } else {\r\n      const existingCategory = categoryMap.get(categoryId);\r\n      const existingClassIndex = existingCategory.classInfo.findIndex((ci: any) => ci.classId === classId);\r\n\r\n      if (existingClassIndex === -1) {\r\n        existingCategory.classInfo.push({\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        });\r\n      } else {\r\n        existingCategory.classInfo[existingClassIndex].degree = item.degree;\r\n      }\r\n    }\r\n  });\r\n\r\n  rbcClassListArr.value = Array.from(categoryMap.values());\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await createRbcDegreeData();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(rbcClassListArr.value, (category, index) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          style: {\"width\":\"480px\"},\n          class: \"mt2 mb4\",\n          key: 'rbc' + index\n        }, [\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createElementVNode(\"h2\", _hoisted_3, _toDisplayString(category?.categoryNm), 1),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.classInfo, (classItem, classIndex) => {\n              return (_openBlock(), _createElementBlock(\"div\", { key: classIndex }, [\n                _createElementVNode(\"div\", _hoisted_4, [\n                  (classItem.classNm !== 'Normal')\n                    ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                        _createElementVNode(\"div\", _hoisted_5, [\n                          _createElementVNode(\"h3\", _hoisted_6, _toDisplayString(classItem.classNm), 1),\n                          _createElementVNode(\"h3\", null, \"[\" + _toDisplayString(classItem.degree1) + \", \" + _toDisplayString(classItem.degree2) + \", \" + _toDisplayString(classItem.degree3) + \"]\", 1)\n                        ]),\n                        _createElementVNode(\"div\", _hoisted_7, [\n                          _withDirectives(_createElementVNode(\"input\", {\n                            class: \"number-small\",\n                            type: \"number\",\n                            \"onUpdate:modelValue\": ($event: any) => ((classItem.degree1) = $event)\n                          }, null, 8, _hoisted_8), [\n                            [_vModelText, classItem.degree1]\n                          ]),\n                          _withDirectives(_createElementVNode(\"input\", {\n                            class: \"number-small\",\n                            type: \"number\",\n                            \"onUpdate:modelValue\": ($event: any) => ((classItem.degree2) = $event)\n                          }, null, 8, _hoisted_9), [\n                            [_vModelText, classItem.degree2]\n                          ]),\n                          _withDirectives(_createElementVNode(\"input\", {\n                            class: \"number-small\",\n                            type: \"number\",\n                            \"onUpdate:modelValue\": ($event: any) => ((classItem.degree3) = $event)\n                          }, null, 8, _hoisted_10), [\n                            [_vModelText, classItem.degree3]\n                          ])\n                        ])\n                      ], 64))\n                    : _createCommentVNode(\"\", true)\n                ])\n              ]))\n            }), 128))\n          ])\n        ]))\n      }), 128)),\n      _createElementVNode(\"div\", { class: \"mt-2 degreeDiv\" }, [\n        _createElementVNode(\"button\", {\n          class: \"saveBtn mb20\",\n          onClick: onResetDegree\n        }, \"Reset\"),\n        _createElementVNode(\"button\", {\n          class: \"saveBtn mb20\",\n          type: \"button\",\n          onClick: createRbcDegreeData\n        }, \"Save\")\n      ])\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"flex-column-center\">\r\n    <div style=\"width: 480px;\" class=\"mt2 mb4\" v-for=\"(category, index) in rbcClassListArr.value\" :key=\"'rbc' + index\">\r\n      <div class=\"flex-column mt22\">\r\n        <h2 class=\"fs12 mb14\">{{ category?.categoryNm }}</h2>\r\n        <div v-for=\"(classItem, classIndex) in category.classInfo\" :key=\"classIndex\">\r\n          <div class=\"flex-align-center-justify-between mb10\">\r\n            <template v-if=\"classItem.classNm !== 'Normal'\">\r\n              <div style=\"width: 240px;\" class=\"flex-justify-between\">\r\n                <h3 class=\"fs10\">{{ classItem.classNm }}</h3>\r\n                <h3>[{{ classItem.degree1 }}, {{ classItem.degree2}}, {{ classItem.degree3 }}]</h3>\r\n              </div>\r\n              <div class='degreeInput mt1 mb1 flex-justify-between'>\r\n                <input class=\"number-small\" type=\"number\" v-model=\"classItem.degree1\"/>\r\n                <input class=\"number-small\" type=\"number\" v-model=\"classItem.degree2\"/>\r\n                <input class=\"number-small\" type=\"number\" v-model=\"classItem.degree3\"/>\r\n              </div>\r\n            </template>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n<!--      <div class=\"mt20 mb40 rbcClassListArr\" v-for=\"(category, index) in rbcClassListArr.value\" :key=\"'rbc' + index\">-->\r\n<!--        <div class=\"mb10 fs12\">-->\r\n<!--          {{ category?.categoryNm }}-->\r\n<!--        </div>-->\r\n\r\n<!--        <div v-for=\"(classItem, classIndex) in category.classInfo\" :key=\"classIndex\">-->\r\n<!--          <template v-if=\"classItem.classNm !== 'Normal'\">-->\r\n<!--            <span>-->\r\n<!--              {{ classItem.classNm }}-->\r\n<!--            </span>-->\r\n<!--            <div class=\"mb10\">-->\r\n<!--              [ {{ `${classItem.degree1} , ${classItem.degree2} , ${classItem.degree3}` }} ]-->\r\n<!--            </div>-->\r\n<!--            <div class=\"mt10\">-->\r\n<!--              <div class='degreeInput mb10'>-->\r\n<!--                <input type=\"number\" v-model=\"classItem.degree1\"/>-->\r\n<!--                <input type=\"number\" v-model=\"classItem.degree2\"/>-->\r\n<!--                <input type=\"number\" v-model=\"classItem.degree3\"/>-->\r\n<!--              </div>-->\r\n<!--            </div>-->\r\n<!--          </template>-->\r\n<!--        </div>-->\r\n\r\n<!--      </div>-->\r\n    </div>\r\n    <div class=\"mt-2 degreeDiv\" >\r\n      <button class=\"saveBtn mb20\" @click=\"onResetDegree\">Reset</button>\r\n      <button class=\"saveBtn mb20\" type=\"button\" @click=\"createRbcDegreeData\">Save</button>\r\n    </div>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, reactive, ref, watch} from 'vue';\r\nimport {rbcClassList, defaultRbcDegree, settingName} from '@/common/defines/constants/settings';\r\nimport {createRbcDegreeApi, getRbcDegreeApi, putRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport {scrollToTop} from \"@/common/lib/utils/scroll\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\nconst saveHttpType = ref('post');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.rbcDegree });\r\n});\r\n\r\nwatch(() => rbcClassListArr.value, async (rbcClassListArrAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(rbcClassListArrAfterSettingObj) });\r\n  if (settingType.value !== settingName.rbcDegree) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.rbcDegree });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst combindDegree = async () => {\r\n  rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n    return {\r\n      ...category,\r\n      classInfo: category.classInfo.map((classItem: any) => {\r\n        const defaultDegree = defaultRbcDegree.find(\r\n            (defaultItem) =>\r\n                defaultItem.categoryId === category.categoryId &&\r\n                defaultItem.classId === classItem.classId\r\n        );\r\n\r\n        return {\r\n          ...classItem,\r\n          degree1: defaultDegree?.degree1 || 0,\r\n          degree2: defaultDegree?.degree2 || 0,\r\n          degree3: defaultDegree?.degree3 || 0,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n}\r\n\r\nconst onResetDegree = () => {\r\n  combindDegree();\r\n};\r\n\r\nconst createRbcDegreeData = async () => {\r\n  const rbcDegreeList: any = [];\r\n\r\n  rbcClassListArr.value.forEach((category: any) => {\r\n    category.classInfo.forEach((classItem: any) => {\r\n      rbcDegreeList.push({\r\n        categoryId: category.categoryId,\r\n        categoryNm: category.categoryNm,\r\n        classId: classItem.classId,\r\n        classNm: classItem.classNm,\r\n        degree1: classItem.degree1,\r\n        degree2: classItem.degree2,\r\n        degree3: classItem.degree3,\r\n      });\r\n    });\r\n  });\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRbcDegreeApi(rbcDegreeList);\r\n    } else {\r\n      result = await putRbcDegreeApi(rbcDegreeList);\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      scrollToTop();\r\n      saveHttpType.value = 'put';\r\n    }\r\n  } catch (e) {\r\n    showErrorAlert(MESSAGES.settingSaveFailure);\r\n    console.error(e);\r\n  } finally {\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  }\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    saveHttpType.value = 'put';\r\n    const data = result.data;\r\n    processData(data);\r\n  } catch (e) {\r\n    saveHttpType.value = 'post';\r\n    await combindDegree();\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(rbcClassListArr.value) });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(rbcClassListArr.value) });\r\n};\r\n\r\n\r\nconst processData = (data: any): void => {\r\n  const categoryMap = new Map();\r\n\r\n  data.forEach((item: any) => {\r\n    const categoryId = item.categoryId;\r\n    const classId = item.classId;\r\n\r\n    if (!categoryMap.has(categoryId)) {\r\n      const newCategory = {\r\n        categoryId: categoryId,\r\n        categoryNm: item.categoryNm,\r\n        classInfo: [{\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        }],\r\n      };\r\n      categoryMap.set(categoryId, newCategory);\r\n    } else {\r\n      const existingCategory = categoryMap.get(categoryId);\r\n      const existingClassIndex = existingCategory.classInfo.findIndex((ci: any) => ci.classId === classId);\r\n\r\n      if (existingClassIndex === -1) {\r\n        existingCategory.classInfo.push({\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        });\r\n      } else {\r\n        existingCategory.classInfo[existingClassIndex].degree = item.degree;\r\n      }\r\n    }\r\n  });\r\n\r\n  rbcClassListArr.value = Array.from(categoryMap.values());\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await createRbcDegreeData();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./rbcDegree.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcDegree.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"customSettingContainer\" }\nconst _hoisted_2 = { class: \"mt20\" }\nconst _hoisted_3 = { class: \"mt22\" }\n\nimport {computed, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {onCameraResetWebSocket, onGripperOpenWebSocket} from \"@/common/helpers\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {tcpReq} from \"@/common/defines/constants/tcpRequest/tcpReq\";\r\nimport {remainingCount} from \"@/common/api/service/setting/settingApi\";\r\nimport {getDeviceInfoApi, putDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'deviceControls',\n  setup(__props) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\n\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst isRunningState = ref(false);\r\nconst isBlinkingGripper = ref(false);\r\nconst isBlinkCameraReset = ref(false);\r\nlet blinkTimeout: ReturnType<typeof setTimeout> | null = null;\r\nlet cameraResetTimeOut: ReturnType<typeof setTimeout> | null = null;\r\nconst autoStart = ref(false);\r\n\r\n\r\nonMounted(async () => {\r\n  const newUserId = JSON.parse(JSON.stringify(userModuleDataGet.value));\r\n  userId.value = newUserId.userId;\r\n  await getDeviceInfo();\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n\r\n})\r\n\r\nconst onScan = async () => {\r\n  await remainingCount();\r\n}\r\n\r\nconst onGripperOpen = () => {\r\n  if (blinkTimeout !== null) {\r\n    clearTimeout(blinkTimeout);\r\n  }\r\n\r\n  isBlinkingGripper.value = true;\r\n  tcpReq().embedStatus.gripperOpen.reqUserId = userId.value;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.gripperOpen);\r\n\r\n  blinkTimeout = setTimeout(() => {\r\n    isBlinkingGripper.value = false;\r\n    blinkTimeout = null;\r\n  }, 500);\r\n\r\n}\r\n\r\nconst onCameraReset = () => {\r\n  if (cameraResetTimeOut !== null) {\r\n    clearTimeout(cameraResetTimeOut);\r\n  }\r\n\r\n  isBlinkCameraReset.value = true;\r\n  tcpReq().embedStatus.gripperOpen.reqUserId = userId.value;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.cameraReset);\r\n\r\n  cameraResetTimeOut = setTimeout(() => {\r\n    isBlinkCameraReset.value = false;\r\n    cameraResetTimeOut = null;\r\n  }, 500);\r\n}\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const result = await getDeviceInfoApi()\r\n    autoStart.value = !!result.data[0]?.autoStart;\r\n  } catch (e) {\r\n    autoStart.value = true;\r\n  }\r\n  sessionStorage.setItem('autoStart', JSON.stringify(autoStart.value));\r\n}\r\n\r\nconst updateDeviceInfo = async () => {\r\n  try {\r\n    await putDeviceInfoApi({ autoStart: autoStart.value })\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst toggleAutoStart = async () => {\r\n  autoStart.value = !autoStart.value;\r\n  sessionStorage.setItem('autoStart', JSON.stringify(autoStart.value));\r\n  await updateDeviceInfo();\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        _createElementVNode(\"li\", null, [\n          _cache[0] || (_cache[0] = _createElementVNode(\"p\", { class: \"mb10\" }, \"Gripper Open\", -1)),\n          _createElementVNode(\"button\", {\n            onClick: onGripperOpen,\n            class: _normalizeClass({'defaultBtn': true, 'blinkGripper': isBlinkingGripper.value})\n          }, \"OK\", 2)\n        ]),\n        _createElementVNode(\"li\", _hoisted_2, [\n          _cache[1] || (_cache[1] = _createElementVNode(\"p\", { class: \"mb10\" }, \"Camera Reset\", -1)),\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            class: _normalizeClass([\"defaultBtn\", {'defaultBtn': true, 'blinkGripper': isBlinkCameraReset.value}]),\n            onClick: onCameraReset\n          }, \"OK \", 2)\n        ]),\n        _createElementVNode(\"li\", { class: \"mt20\" }, [\n          _cache[2] || (_cache[2] = _createElementVNode(\"p\", { class: \"mb10\" }, \"Charge Remaining Count\", -1)),\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            class: \"defaultBtn\",\n            onClick: onScan\n          }, \"Scan\")\n        ]),\n        _createElementVNode(\"li\", _hoisted_3, [\n          _cache[3] || (_cache[3] = _createElementVNode(\"p\", { class: \"mb10\" }, \"Auto Start\", -1)),\n          _createVNode(_component_font_awesome_icon, {\n            icon: autoStart.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n            class: \"iconSize\",\n            onClick: toggleAutoStart\n          }, null, 8, [\"icon\"])\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customSettingContainer\">\r\n      <li>\r\n        <p class=\"mb10\">Gripper Open</p>\r\n        <button @click=\"onGripperOpen\" :class=\"{'defaultBtn': true, 'blinkGripper': isBlinkingGripper}\">OK</button>\r\n      </li>\r\n      <li class=\"mt20\">\r\n        <p class=\"mb10\">Camera Reset</p>\r\n        <button type=\"button\" class=\"defaultBtn\" :class=\"{'defaultBtn': true, 'blinkGripper': isBlinkCameraReset}\"\r\n                @click=\"onCameraReset\">OK\r\n        </button>\r\n      </li>\r\n      <li class=\"mt20\">\r\n        <p class=\"mb10\">Charge Remaining Count</p>\r\n        <button type=\"button\" class=\"defaultBtn\" @click=\"onScan\">Scan</button>\r\n      </li>\r\n      <li class=\"mt22\">\r\n        <p class=\"mb10\">Auto Start</p>\r\n        <font-awesome-icon\r\n            :icon=\"autoStart ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n            class=\"iconSize\"\r\n            @click=\"toggleAutoStart\"\r\n        />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {onCameraResetWebSocket, onGripperOpenWebSocket} from \"@/common/helpers\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {tcpReq} from \"@/common/defines/constants/tcpRequest/tcpReq\";\r\nimport {remainingCount} from \"@/common/api/service/setting/settingApi\";\r\nimport {getDeviceInfoApi, putDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\n\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst isRunningState = ref(false);\r\nconst isBlinkingGripper = ref(false);\r\nconst isBlinkCameraReset = ref(false);\r\nlet blinkTimeout: ReturnType<typeof setTimeout> | null = null;\r\nlet cameraResetTimeOut: ReturnType<typeof setTimeout> | null = null;\r\nconst autoStart = ref(false);\r\n\r\n\r\nonMounted(async () => {\r\n  const newUserId = JSON.parse(JSON.stringify(userModuleDataGet.value));\r\n  userId.value = newUserId.userId;\r\n  await getDeviceInfo();\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n\r\n})\r\n\r\nconst onScan = async () => {\r\n  await remainingCount();\r\n}\r\n\r\nconst onGripperOpen = () => {\r\n  if (blinkTimeout !== null) {\r\n    clearTimeout(blinkTimeout);\r\n  }\r\n\r\n  isBlinkingGripper.value = true;\r\n  tcpReq().embedStatus.gripperOpen.reqUserId = userId.value;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.gripperOpen);\r\n\r\n  blinkTimeout = setTimeout(() => {\r\n    isBlinkingGripper.value = false;\r\n    blinkTimeout = null;\r\n  }, 500);\r\n\r\n}\r\n\r\nconst onCameraReset = () => {\r\n  if (cameraResetTimeOut !== null) {\r\n    clearTimeout(cameraResetTimeOut);\r\n  }\r\n\r\n  isBlinkCameraReset.value = true;\r\n  tcpReq().embedStatus.gripperOpen.reqUserId = userId.value;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.cameraReset);\r\n\r\n  cameraResetTimeOut = setTimeout(() => {\r\n    isBlinkCameraReset.value = false;\r\n    cameraResetTimeOut = null;\r\n  }, 500);\r\n}\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const result = await getDeviceInfoApi()\r\n    autoStart.value = !!result.data[0]?.autoStart;\r\n  } catch (e) {\r\n    autoStart.value = true;\r\n  }\r\n  sessionStorage.setItem('autoStart', JSON.stringify(autoStart.value));\r\n}\r\n\r\nconst updateDeviceInfo = async () => {\r\n  try {\r\n    await putDeviceInfoApi({ autoStart: autoStart.value })\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst toggleAutoStart = async () => {\r\n  autoStart.value = !autoStart.value;\r\n  sessionStorage.setItem('autoStart', JSON.stringify(autoStart.value));\r\n  await updateDeviceInfo();\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./deviceControls.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./deviceControls.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"customClass customSettingContainer\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onInput\"]\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"onInput\"]\n\nimport {ref, onMounted, onBeforeMount, computed, watch} from 'vue';\r\nimport {\r\n  createWbcCustomClassApi,\r\n  updateWbcCustomClassApi,\r\n  getWbcCustomClassApi, getOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport { basicWbcArr, basicBmClassList } from \"@/store/modules/analysis/wbcclassification\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {settingName, WBC_CUSTOM_CLASS} from \"@/common/defines/constants/settings\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'customClass',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst wbcCustomItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst wbcClassOrder = ref<any>([]);\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm'\r\n})\r\n\r\nonMounted(async () => {\r\n  await getWbcCustomClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcCustomClass });\r\n});\r\n\r\nwatch(() => wbcCustomItems.value, async (wbcCustomItemsAfterSettingObj) => {\r\n  if (settingType.value !== settingName.wbcCustomClass) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcCustomClass });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length > 0) {\r\n        wbcClassOrder.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n\r\n      const classOrderBeforeSettingObj = wbcClassOrder.value;\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(classOrderBeforeSettingObj)});\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(classOrderBeforeSettingObj)});\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  if (!validateCustomClass()) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n    } else {\r\n      const updateResult = await updateWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getWbcCustomClasses();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getWbcCustomClasses();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'abbreviation' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcCustomItems.value = WBC_CUSTOM_CLASS;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcCustomItems.value = result.data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcCustomItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcCustomItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst validateCustomClass = () => {\r\n  let existingClassFullNmArr, existingClassAbbreivationArr;\r\n\r\n  if (projectBm.value ) {\r\n    existingClassFullNmArr = basicBmClassList.map(item => item.fullNm);\r\n    existingClassAbbreivationArr = basicBmClassList.map(item => item.abbreviation)\r\n  } else {\r\n    existingClassFullNmArr = basicWbcArr.map(item => item.fullNm)\r\n    existingClassAbbreivationArr = basicWbcArr.map(item => item.abbreviation);\r\n  }\r\n\r\n  for (const wbcCustomItem of wbcCustomItems.value) {\r\n    if (wbcCustomItem.fullNm === '' && wbcCustomItem.abbreviation !== '') {\r\n      showErrorAlert(\"You should enter abbreviation\")\r\n      return false;\r\n    } else if (wbcCustomItem.fullNm !== '' && wbcCustomItem.abbreviation === '') {\r\n      showErrorAlert(\"You should enter class name\")\r\n      return false;\r\n    }\r\n\r\n    if (existingClassAbbreivationArr.includes(wbcCustomItem.abbreviation)) {\r\n      showErrorAlert(`${wbcCustomItem.abbreviation} is existing abbreviation`)\r\n      return false;\r\n    } else if (existingClassFullNmArr.includes(wbcCustomItem.fullNm)) {\r\n      showErrorAlert(`${wbcCustomItem.fullNm} is existing class name`)\r\n      return false;\r\n    } else if (wbcCustomItem.abbreviation === 'OT') {\r\n      showErrorAlert(\"Can't use OT abbreviation!\")\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveWbcCustomClass();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcCustomItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, \"ID: \" + _toDisplayString(item.customNum), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.abbreviation) = $event),\n                type: \"text\",\n                maxlength: \"3\",\n                placeholder: \"abbreviation\",\n                onInput: ($event: any) => (filterEnglishAndNumbers($event, item, 'abbreviation'))\n              }, null, 40, _hoisted_2), [\n                [_vModelText, item.abbreviation]\n              ])\n            ]),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.fullNm) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\",\n                onInput: ($event: any) => (filterEnglishAndNumbers($event, item, 'fullNm'))\n              }, null, 40, _hoisted_3), [\n                [_vModelText, item.fullNm]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: saveWbcCustomClass\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customClass customSettingContainer\">\r\n      <li v-for=\"item in wbcCustomItems\" :key=\"item.id\">\r\n        <span>ID: {{ item.customNum }}</span>\r\n        <span>\r\n          <input\r\n              v-model=\"item.abbreviation\"\r\n              type=\"text\"\r\n              maxlength=\"3\"\r\n              placeholder=\"abbreviation\"\r\n              @input=\"filterEnglishAndNumbers($event, item, 'abbreviation')\"\r\n          />\r\n        </span>\r\n        <span>\r\n          <input\r\n              v-model=\"item.fullNm\"\r\n              type=\"text\"\r\n              maxlength=\"25\"\r\n              placeholder=\"class name\"\r\n              @input=\"filterEnglishAndNumbers($event, item, 'fullNm')\"\r\n          />\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveWbcCustomClass\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeMount, computed, watch} from 'vue';\r\nimport {\r\n  createWbcCustomClassApi,\r\n  updateWbcCustomClassApi,\r\n  getWbcCustomClassApi, getOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport { basicWbcArr, basicBmClassList } from \"@/store/modules/analysis/wbcclassification\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {settingName, WBC_CUSTOM_CLASS} from \"@/common/defines/constants/settings\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst wbcCustomItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst wbcClassOrder = ref<any>([]);\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm'\r\n})\r\n\r\nonMounted(async () => {\r\n  await getWbcCustomClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcCustomClass });\r\n});\r\n\r\nwatch(() => wbcCustomItems.value, async (wbcCustomItemsAfterSettingObj) => {\r\n  if (settingType.value !== settingName.wbcCustomClass) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcCustomClass });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length > 0) {\r\n        wbcClassOrder.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n\r\n      const classOrderBeforeSettingObj = wbcClassOrder.value;\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(classOrderBeforeSettingObj)});\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(classOrderBeforeSettingObj)});\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  if (!validateCustomClass()) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n    } else {\r\n      const updateResult = await updateWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getWbcCustomClasses();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getWbcCustomClasses();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'abbreviation' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcCustomItems.value = WBC_CUSTOM_CLASS;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcCustomItems.value = result.data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcCustomItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcCustomItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst validateCustomClass = () => {\r\n  let existingClassFullNmArr, existingClassAbbreivationArr;\r\n\r\n  if (projectBm.value ) {\r\n    existingClassFullNmArr = basicBmClassList.map(item => item.fullNm);\r\n    existingClassAbbreivationArr = basicBmClassList.map(item => item.abbreviation)\r\n  } else {\r\n    existingClassFullNmArr = basicWbcArr.map(item => item.fullNm)\r\n    existingClassAbbreivationArr = basicWbcArr.map(item => item.abbreviation);\r\n  }\r\n\r\n  for (const wbcCustomItem of wbcCustomItems.value) {\r\n    if (wbcCustomItem.fullNm === '' && wbcCustomItem.abbreviation !== '') {\r\n      showErrorAlert(\"You should enter abbreviation\")\r\n      return false;\r\n    } else if (wbcCustomItem.fullNm !== '' && wbcCustomItem.abbreviation === '') {\r\n      showErrorAlert(\"You should enter class name\")\r\n      return false;\r\n    }\r\n\r\n    if (existingClassAbbreivationArr.includes(wbcCustomItem.abbreviation)) {\r\n      showErrorAlert(`${wbcCustomItem.abbreviation} is existing abbreviation`)\r\n      return false;\r\n    } else if (existingClassFullNmArr.includes(wbcCustomItem.fullNm)) {\r\n      showErrorAlert(`${wbcCustomItem.fullNm} is existing class name`)\r\n      return false;\r\n    } else if (wbcCustomItem.abbreviation === 'OT') {\r\n      showErrorAlert(\"Can't use OT abbreviation!\")\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveWbcCustomClass();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./customClass.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./customClass.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcHotKeysItems\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onInput\"]\n\nimport {ref, onMounted, computed, onBeforeMount, watch} from 'vue';\r\nimport {createWbcHotKeysApi, updateWbcHotKeysApi, getWbcHotKeysApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bmHotKeys, settingName, wbcHotKeys} from \"@/common/defines/constants/settings\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'wbcHotKeys',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref('pb');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\nonMounted(async () => {\r\n  await getWbcHotKeyClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcHotKeys });\r\n});\r\n\r\nwatch(() => wbcHotKeysItems.value, async (wbcHotKeysItemsAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcHotKeysItemsAfterSettingObj) });\r\n  if (settingType.value !== settingName.wbcHotKeys) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcHotKeys });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'key' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9!@#$%^&*()\\\\/*\\-+,.?\":\\[\\]`{}|<> ]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n    } else {\r\n      const updateResult = await updateWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getWbcHotKeyClasses();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getWbcHotKeyClasses();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcHotKeysItems.value = projectType.value === 'bm' ? bmHotKeys : wbcHotKeys;\r\n        // bmHotKeys\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcHotKeysItems.value = result.data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcHotKeysItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcHotKeysItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveWbcCustomClass();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcHotKeysItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.abbreviation), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.fullNm), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event),\n                type: \"text\",\n                maxlength: \"1\",\n                placeholder: \"hot key\",\n                onInput: ($event: any) => (filterEnglishAndNumbers($event, item, 'key'))\n              }, null, 40, _hoisted_2), [\n                [_vModelText, item.key]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveWbcCustomClass,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"wbcHotKeysItems\">\r\n      <li v-for=\"item in wbcHotKeysItems\" :key=\"item.id\">\r\n        <span>{{ item.abbreviation }}</span>\r\n        <span>{{ item.fullNm }}</span>\r\n        <span>\r\n          <input\r\n              v-model=\"item.key\"\r\n              type=\"text\"\r\n              maxlength=\"1\"\r\n              placeholder=\"hot key\"\r\n              @input=\"filterEnglishAndNumbers($event, item, 'key')\"\r\n          />\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveWbcCustomClass\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, onBeforeMount, watch} from 'vue';\r\nimport {createWbcHotKeysApi, updateWbcHotKeysApi, getWbcHotKeysApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bmHotKeys, settingName, wbcHotKeys} from \"@/common/defines/constants/settings\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref('pb');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\nonMounted(async () => {\r\n  await getWbcHotKeyClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcHotKeys });\r\n});\r\n\r\nwatch(() => wbcHotKeysItems.value, async (wbcHotKeysItemsAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcHotKeysItemsAfterSettingObj) });\r\n  if (settingType.value !== settingName.wbcHotKeys) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcHotKeys });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'key' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9!@#$%^&*()\\\\/*\\-+,.?\":\\[\\]`{}|<> ]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n    } else {\r\n      const updateResult = await updateWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getWbcHotKeyClasses();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getWbcHotKeyClasses();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcHotKeysItems.value = projectType.value === 'bm' ? bmHotKeys : wbcHotKeys;\r\n        // bmHotKeys\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcHotKeysItems.value = result.data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcHotKeysItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcHotKeysItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveWbcCustomClass();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./wbcHotKeys.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcHotKeys.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcHotKeysItems\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onInput\"]\n\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {\r\n  createBfHotKeysApi, updateBfHotKeysApi, getBfHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bfHotKeys, settingName} from \"@/common/defines/constants/settings\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'bfHotKeys',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getBfHotKeyClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.bfHotKeys });\r\n});\r\n\r\nwatch(() => bfHotKeysItems.value, async (bfHotKeysAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(bfHotKeysAfterSettingObj)});\r\n  if (settingType.value !== settingName.bfHotKeys) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.bfHotKeys });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'key' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst saveBfCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n    } else {\r\n      const updateResult = await updateBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getBfHotKeyClasses();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getBfHotKeyClasses();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        bfHotKeysItems.value = bfHotKeys;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        bfHotKeysItems.value = result.data;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(bfHotKeysItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(bfHotKeysItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveBfCustomClass();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(bfHotKeysItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item?.abbreviation), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item?.fullNm), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event),\n                type: \"text\",\n                maxlength: \"1\",\n                placeholder: \"hot key\",\n                onInput: ($event: any) => (filterEnglishAndNumbers($event, item, 'key'))\n              }, null, 40, _hoisted_2), [\n                [_vModelText, item.key]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveBfCustomClass,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n<!--        {{ bfHotKeysItems }}-->\r\n    <ul class=\"wbcHotKeysItems\">\r\n      <li v-for=\"item in bfHotKeysItems\" :key=\"item.id\">\r\n        <span>{{ item?.abbreviation }}</span>\r\n        <span>{{ item?.fullNm }}</span>\r\n        <span>\r\n          <input\r\n              v-model=\"item.key\"\r\n              type=\"text\"\r\n              maxlength=\"1\"\r\n              placeholder=\"hot key\"\r\n              @input=\"filterEnglishAndNumbers($event, item, 'key')\"\r\n          />\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveBfCustomClass\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {\r\n  createBfHotKeysApi, updateBfHotKeysApi, getBfHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bfHotKeys, settingName} from \"@/common/defines/constants/settings\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getBfHotKeyClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.bfHotKeys });\r\n});\r\n\r\nwatch(() => bfHotKeysItems.value, async (bfHotKeysAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(bfHotKeysAfterSettingObj)});\r\n  if (settingType.value !== settingName.bfHotKeys) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.bfHotKeys });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'key' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst saveBfCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n    } else {\r\n      const updateResult = await updateBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getBfHotKeyClasses();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getBfHotKeyClasses();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        bfHotKeysItems.value = bfHotKeys;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        bfHotKeysItems.value = result.data;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(bfHotKeysItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(bfHotKeysItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveBfCustomClass();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./bfHotKeys.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./bfHotKeys.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"flex-column-center\" }\nconst _hoisted_2 = { class: \"normalItems\" }\nconst _hoisted_3 = { class: \"text-left\" }\nconst _hoisted_4 = {\n  class: \"flex-justify-start-align-center gap14\",\n  style: {\"width\":\"250px\"}\n}\nconst _hoisted_5 = [\"onUpdate:modelValue\", \"onInput\"]\nconst _hoisted_6 = [\"onInput\", \"onUpdate:modelValue\"]\n\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {\r\n  createNormalRangeApi,\r\n  updateNormalRangeApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {normalRange, settingName} from \"@/common/defines/constants/settings\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'normalRange',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst normalItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getNormalRange();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.normalRange });\r\n});\r\n\r\nwatch(() => normalItems.value, async (normalItemsAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(normalItemsAfterSettingObj) });\r\n  if (settingType.value !== settingName.normalRange) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.normalRange });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst saveNormalRange = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createNormalRangeApi({normalRangeItems: normalItems.value});\r\n    } else {\r\n      const updateResult = await updateNormalRangeApi({normalRangeItems: normalItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getNormalRange();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getNormalRange();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst filterNumbersOnly = (event: Event, item: any, field: 'min' | 'max') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        normalItems.value = normalRange;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        normalItems.value = result.data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(normalItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(normalItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveNormalRange();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", _hoisted_2, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(normalItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id,\n            class: \"flex-justify-start-align-center normalItems-wrapper\"\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.abbreviation), 1),\n            _createElementVNode(\"span\", _hoisted_3, _toDisplayString(item?.fullNm), 1),\n            _createElementVNode(\"div\", _hoisted_4, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.min) = $event),\n                class: \"w50\",\n                type: \"number\",\n                maxlength: \"25\",\n                placeholder: \"class name\",\n                onInput: ($event: any) => (filterNumbersOnly($event, item, 'min'))\n              }, null, 40, _hoisted_5), [\n                [_vModelText, item.min]\n              ]),\n              _cache[0] || (_cache[0] = _createElementVNode(\"span\", null, \"-\", -1)),\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"w50\",\n                onInput: ($event: any) => (filterNumbersOnly($event, item, 'max')),\n                \"onUpdate:modelValue\": ($event: any) => ((item.max) = $event),\n                type: \"number\",\n                maxlength: \"25\",\n                placeholder: \"class name\"\n              }, null, 40, _hoisted_6), [\n                [_vModelText, item.max]\n              ]),\n              _createElementVNode(\"span\", null, _toDisplayString(item.unit), 1)\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveNormalRange,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"flex-column-center\">\r\n    <ul class=\"normalItems\">\r\n      <li v-for=\"item in normalItems\" :key=\"item.id\" class=\"flex-justify-start-align-center normalItems-wrapper\">\r\n        <span>{{ item.abbreviation }}</span>\r\n        <span class=\"text-left\">{{ item?.fullNm }}</span>\r\n        <div class=\"flex-justify-start-align-center gap14\" style=\"width: 250px;\">\r\n          <input v-model=\"item.min\"\r\n                 class=\"w50\"\r\n                 type=\"number\"\r\n                 maxlength=\"25\"\r\n                 placeholder=\"class name\"\r\n                 @input=\"filterNumbersOnly($event, item, 'min')\"\r\n          />\r\n          <span>-</span>\r\n          <input\r\n              class=\"w50\"\r\n              @input=\"filterNumbersOnly($event, item, 'max')\"\r\n              v-model=\"item.max\" type=\"number\" maxlength=\"25\" placeholder=\"class name\"\r\n          />\r\n          <span>{{ item.unit }}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveNormalRange\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {\r\n  createNormalRangeApi,\r\n  updateNormalRangeApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {normalRange, settingName} from \"@/common/defines/constants/settings\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst normalItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getNormalRange();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.normalRange });\r\n});\r\n\r\nwatch(() => normalItems.value, async (normalItemsAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(normalItemsAfterSettingObj) });\r\n  if (settingType.value !== settingName.normalRange) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.normalRange });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst saveNormalRange = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createNormalRangeApi({normalRangeItems: normalItems.value});\r\n    } else {\r\n      const updateResult = await updateNormalRangeApi({normalRangeItems: normalItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getNormalRange();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getNormalRange();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst filterNumbersOnly = (event: Event, item: any, field: 'min' | 'max') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        normalItems.value = normalRange;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        normalItems.value = result.data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(normalItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(normalItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveNormalRange();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./normalRange.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./normalRange.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcClassScroll\" }\nconst _hoisted_2 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_3 = { class: \"nth1ChildOrder\" }\n\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  createOrderClassApi,\r\n  getOrderClassApi, getWbcCustomClassApi, putOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from \"vue-router\";\r\nimport {settingName, WBC_CUSTOM_CLASS} from \"@/common/defines/constants/settings\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'classOrder',\n  setup(__props) {\n\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst wbcInfoChangeVal = ref<any>([]);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\nconst saveHttpType = ref('');\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst wbcCustomItems = ref<any>([]);\r\n\r\nonMounted(async () => {\r\n  wbcInfoChangeVal.value = window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.classOrder });\r\n  await getOrderClass();\r\n  await getWbcCustomClasses();\r\n})\r\n\r\nwatch(() => wbcInfoChangeVal.value, async (classOrderAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(classOrderAfterSettingObj)});\r\n  if (settingType.value !== settingName.classOrder) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.classOrder });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result: any = await getWbcCustomClassApi();\r\n    if (result?.data) {\r\n      wbcCustomItems.value = result.data.filter((item: any) => item.abbreviation && item.fullNm);\r\n\r\n      const wbcCustomItemClassIds = new Set(wbcCustomItems.value.map((item: any) => String(item.customNum)));\r\n      const wbcCustomClassDefaultIds = new Set(WBC_CUSTOM_CLASS.map(item => String(item.customNum)));\r\n\r\n      // ClassOrder에서 없는 Custom Class 제거\r\n      wbcInfoChangeVal.value = wbcInfoChangeVal.value.filter((wbcInfo: any) =>\r\n          !(wbcCustomClassDefaultIds.has(String(wbcInfo.classId)) && !wbcCustomItemClassIds.has(String(wbcInfo.classId)))\r\n      );\r\n\r\n      // Custom Class => Class Order 추가 또는 업데이트\r\n      const classIds = new Set(wbcInfoChangeVal.value.map((item: any) => item.classId));\r\n      let maxOrderIdx = Math.max(...wbcInfoChangeVal.value.map((item: any) => item.orderIdx), 0);\r\n\r\n\r\n      for (const wbcCustomItem of wbcCustomItems.value) {\r\n        if (!classIds.has(String(wbcCustomItem.customNum))) {\r\n          wbcInfoChangeVal.value.push({\r\n            abbreviation: wbcCustomItem.abbreviation,\r\n            classId: wbcCustomItem.customNum,\r\n            fullNm: wbcCustomItem.fullNm,\r\n            orderIdx: ++maxOrderIdx\r\n          });\r\n        } else {\r\n          wbcInfoChangeVal.value = wbcInfoChangeVal.value.map((obj: any) =>\r\n              String(obj.classId) === String(wbcCustomItem.customNum)\r\n                  ? { ...obj, fullNm: wbcCustomItem.fullNm, abbreviation: wbcCustomItem.abbreviation }\r\n                  : obj\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    wbcInfoChangeVal.value = wbcInfoChangeVal.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcInfoChangeVal.value)});\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcInfoChangeVal.value)});\r\n  } catch (e) {\r\n    console.error('Error fetching WBC custom classes:', e);\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcInfoChangeVal.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst saveOrderClassSave = async () => {\r\n  let orderList: any = wbcInfoChangeVal.value;\r\n  for (const index in orderList) {\r\n    orderList[index].orderIdx = index;\r\n  }\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createOrderClassApi(orderList);\r\n    }else {\r\n      result = await putOrderClassApi(orderList);\r\n    }\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? MESSAGES.settingSaveSuccess : MESSAGES.UPDATE_SUCCESSFULLY\r\n      showSuccessAlert(text);\r\n    }\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveOrderClassSave();\r\n  showConfirm.value = false;\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _cache[1] || (_cache[1] = _createElementVNode(\"h1\", { class: \"classTitle\" }, \"Class\", -1)),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoChangeVal.value, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"wbcClassDbDiv\",\n          draggable: \"true\",\n          onDragstart: ($event: any) => (startDrag(idx, $event)),\n          onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"])),\n          onDrop: ($event: any) => (drop(idx, $event))\n        }, [\n          _createElementVNode(\"ul\", _hoisted_3, [\n            _createElementVNode(\"li\", null, _toDisplayString(item?.fullNm), 1)\n          ])\n        ], 40, _hoisted_2))\n      }), 128))\n    ]),\n    _createElementVNode(\"button\", {\n      onClick: saveOrderClassSave,\n      class: \"saveBtn\",\n      type: \"button\"\n    }, \"Save\"),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"wbcClassScroll\">\r\n    <h1 class=\"classTitle\">Class</h1>\r\n    <div\r\n        v-for=\"(item, idx) in wbcInfoChangeVal\"\r\n        :key=\"item.id\"\r\n        class=\"wbcClassDbDiv\"\r\n        draggable=\"true\"\r\n        @dragstart=\"startDrag(idx, $event)\"\r\n        @dragover.prevent\r\n        @drop=\"drop(idx, $event)\"\r\n    >\r\n\r\n      <ul class=\"nth1ChildOrder\">\r\n        <li>{{ item?.fullNm }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <button @click=\"saveOrderClassSave\" class=\"saveBtn\" type=\"button\">Save</button>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  createOrderClassApi,\r\n  getOrderClassApi, getWbcCustomClassApi, putOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from \"vue-router\";\r\nimport {settingName, WBC_CUSTOM_CLASS} from \"@/common/defines/constants/settings\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst wbcInfoChangeVal = ref<any>([]);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\nconst saveHttpType = ref('');\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst wbcCustomItems = ref<any>([]);\r\n\r\nonMounted(async () => {\r\n  wbcInfoChangeVal.value = window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.classOrder });\r\n  await getOrderClass();\r\n  await getWbcCustomClasses();\r\n})\r\n\r\nwatch(() => wbcInfoChangeVal.value, async (classOrderAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(classOrderAfterSettingObj)});\r\n  if (settingType.value !== settingName.classOrder) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.classOrder });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result: any = await getWbcCustomClassApi();\r\n    if (result?.data) {\r\n      wbcCustomItems.value = result.data.filter((item: any) => item.abbreviation && item.fullNm);\r\n\r\n      const wbcCustomItemClassIds = new Set(wbcCustomItems.value.map((item: any) => String(item.customNum)));\r\n      const wbcCustomClassDefaultIds = new Set(WBC_CUSTOM_CLASS.map(item => String(item.customNum)));\r\n\r\n      // ClassOrder에서 없는 Custom Class 제거\r\n      wbcInfoChangeVal.value = wbcInfoChangeVal.value.filter((wbcInfo: any) =>\r\n          !(wbcCustomClassDefaultIds.has(String(wbcInfo.classId)) && !wbcCustomItemClassIds.has(String(wbcInfo.classId)))\r\n      );\r\n\r\n      // Custom Class => Class Order 추가 또는 업데이트\r\n      const classIds = new Set(wbcInfoChangeVal.value.map((item: any) => item.classId));\r\n      let maxOrderIdx = Math.max(...wbcInfoChangeVal.value.map((item: any) => item.orderIdx), 0);\r\n\r\n\r\n      for (const wbcCustomItem of wbcCustomItems.value) {\r\n        if (!classIds.has(String(wbcCustomItem.customNum))) {\r\n          wbcInfoChangeVal.value.push({\r\n            abbreviation: wbcCustomItem.abbreviation,\r\n            classId: wbcCustomItem.customNum,\r\n            fullNm: wbcCustomItem.fullNm,\r\n            orderIdx: ++maxOrderIdx\r\n          });\r\n        } else {\r\n          wbcInfoChangeVal.value = wbcInfoChangeVal.value.map((obj: any) =>\r\n              String(obj.classId) === String(wbcCustomItem.customNum)\r\n                  ? { ...obj, fullNm: wbcCustomItem.fullNm, abbreviation: wbcCustomItem.abbreviation }\r\n                  : obj\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    wbcInfoChangeVal.value = wbcInfoChangeVal.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcInfoChangeVal.value)});\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcInfoChangeVal.value)});\r\n  } catch (e) {\r\n    console.error('Error fetching WBC custom classes:', e);\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcInfoChangeVal.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst saveOrderClassSave = async () => {\r\n  let orderList: any = wbcInfoChangeVal.value;\r\n  for (const index in orderList) {\r\n    orderList[index].orderIdx = index;\r\n  }\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createOrderClassApi(orderList);\r\n    }else {\r\n      result = await putOrderClassApi(orderList);\r\n    }\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? MESSAGES.settingSaveSuccess : MESSAGES.UPDATE_SUCCESSFULLY\r\n      showSuccessAlert(text);\r\n    }\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveOrderClassSave();\r\n  showConfirm.value = false;\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n}\r\n\r\n</script>\r\n","import script from \"./classOrder.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classOrder.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = {\n  class: \"defaultTable\",\n  style: {\"margin\":\"auto\",\"width\":\"300px\"}\n}\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\nconst _hoisted_5 = [\"onUpdate:modelValue\"]\nconst _hoisted_6 = [\"value\"]\nconst _hoisted_7 = { class: \"mt10\" }\n\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport {AnalysisList2, settingName, wbcRunningCount} from \"@/common/defines/constants/settings\";\r\nimport {runCountItem} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport { createRunInfoWbcApi, getRunInfoApi, updateRunInfoApi } from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'wbcRunningCount',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst wbcRunInfoCountArr = ref<runCountItem[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getWbcRunningCountData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcRunningCount });\r\n});\r\n\r\nwatch(() => wbcRunInfoCountArr.value, async (wbcRunInfoCountArrAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcRunInfoCountArrAfterSettingObj) });\r\n  if (settingType.value !== settingName.wbcRunningCount) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcRunningCount });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst getWbcRunningCountData = async () => {\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runInfoData = runCountResult.data;\r\n\r\n      if (!runInfoData || (runInfoData instanceof Array && runInfoData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcRunInfoCountArr.value = wbcRunningCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcRunInfoCountArr.value = runInfoData;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcRunInfoCountArr.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcRunInfoCountArr.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst saveWbcRunningCount = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRunInfoWbcApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n    } else {\r\n      const updateResult = await updateRunInfoApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getWbcRunningCountData();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getWbcRunningCountData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveWbcRunningCount();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"table\", _hoisted_2, [\n        _cache[1] || (_cache[1] = _createElementVNode(\"colgroup\", null, [\n          _createElementVNode(\"col\", { width: \"35%\" }),\n          _createElementVNode(\"col\", { width: \"35%\" }),\n          _createElementVNode(\"col\", { width: \"30%\" })\n        ], -1)),\n        _cache[2] || (_cache[2] = _createElementVNode(\"thead\", null, [\n          _createElementVNode(\"tr\", null, [\n            _createElementVNode(\"th\", null, \"WBC min\"),\n            _createElementVNode(\"th\", null, \"WBC max\"),\n            _createElementVNode(\"th\", null, \"count\")\n          ])\n        ], -1)),\n        _createElementVNode(\"tbody\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcRunInfoCountArr.value, (wbcRunning) => {\n            return (_openBlock(), _createElementBlock(\"tr\", {\n              key: wbcRunning.id\n            }, [\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.min) = $event),\n                  class: \"form-control form-control-sm\"\n                }, null, 8, _hoisted_3), [\n                  [_vModelText, wbcRunning.min]\n                ])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.max) = $event),\n                  class: \"form-control form-control-sm\"\n                }, null, 8, _hoisted_4), [\n                  [_vModelText, wbcRunning.max]\n                ])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.wbcTargetCount) = $event),\n                  class: \"form-select form-select-sm\"\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList2), (option) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: option.value,\n                      value: +option.value\n                    }, _toDisplayString(option.text), 9, _hoisted_6))\n                  }), 128))\n                ], 8, _hoisted_5), [\n                  [_vModelSelect, wbcRunning.wbcTargetCount]\n                ])\n              ])\n            ]))\n          }), 128))\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_7, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (saveWbcRunningCount()))\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <table class=\"defaultTable\" style=\"margin: auto; width: 300px;\">\r\n      <colgroup>\r\n        <col width=\"35%\" />\r\n        <col width=\"35%\" />\r\n        <col width=\"30%\" />\r\n      </colgroup>\r\n      <thead>\r\n      <tr>\r\n        <th>WBC min</th>\r\n        <th>WBC max</th>\r\n        <th>count</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(wbcRunning) in wbcRunInfoCountArr\" :key=\"wbcRunning.id\">\r\n        <td><input type=\"number\" v-model=\"wbcRunning.min\" class=\"form-control form-control-sm\"></td>\r\n        <td><input type=\"number\" v-model=\"wbcRunning.max\" class=\"form-control form-control-sm\"></td>\r\n        <td>\r\n          <select v-model=\"wbcRunning.wbcTargetCount\" class=\"form-select form-select-sm\">\r\n            <option v-for=\"option in AnalysisList2\" :key=\"option.value\" :value=\"+option.value\">{{ option.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"mt10\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveWbcRunningCount()\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <!-- 모달 창 -->\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport {AnalysisList2, settingName, wbcRunningCount} from \"@/common/defines/constants/settings\";\r\nimport {runCountItem} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport { createRunInfoWbcApi, getRunInfoApi, updateRunInfoApi } from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst wbcRunInfoCountArr = ref<runCountItem[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getWbcRunningCountData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcRunningCount });\r\n});\r\n\r\nwatch(() => wbcRunInfoCountArr.value, async (wbcRunInfoCountArrAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcRunInfoCountArrAfterSettingObj) });\r\n  if (settingType.value !== settingName.wbcRunningCount) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcRunningCount });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst getWbcRunningCountData = async () => {\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runInfoData = runCountResult.data;\r\n\r\n      if (!runInfoData || (runInfoData instanceof Array && runInfoData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcRunInfoCountArr.value = wbcRunningCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcRunInfoCountArr.value = runInfoData;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcRunInfoCountArr.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcRunInfoCountArr.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst saveWbcRunningCount = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRunInfoWbcApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n    } else {\r\n      const updateResult = await updateRunInfoApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getWbcRunningCountData();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getWbcRunningCountData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveWbcRunningCount();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>","import script from \"./wbcRunningCount.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcRunningCount.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// userModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface UserState {\r\n    id: number;\r\n    userId: string;\r\n    password: string;\r\n    name: string;\r\n    employeeNo: string;\r\n    userType: string;\r\n    subscriptionDate: string;\r\n    latestDate: string;\r\n}\r\n\r\ninterface UserModule {\r\n    namespaced: true;\r\n    state: () => UserState;\r\n    mutations: {\r\n        setUserMutation: (state: UserState, user: UserState) => void;\r\n    };\r\n    actions: {\r\n        setUserAction: (context: { commit: Commit }, user: UserState) => void;\r\n    };\r\n}\r\n\r\nexport const userModule: UserModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        id: 0,\r\n        userId: '',\r\n        password: '',\r\n        name: '',\r\n        employeeNo: '',\r\n        userType: '',\r\n        subscriptionDate: '',\r\n        latestDate: '',\r\n    }),\r\n    mutations: {\r\n        setUserMutation(state: UserState, user: UserState): void {\r\n            Object.assign(state, user);\r\n        },\r\n    },\r\n    actions: {\r\n        setUserAction({ commit }: { commit: Commit }, user: UserState): void {\r\n            commit('setUserMutation', user);\r\n        },\r\n    },\r\n};\r\n","// executeModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ExecuteState {\r\n    analysisType: string;\r\n    wbcDiffVal: string;\r\n    stitchCount: string;\r\n}\r\n\r\ninterface ExecuteModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => ExecuteState;\r\n    mutations: {\r\n        analysisTypeSet: (state: ExecuteState, value: string) => void;\r\n        wbcDiffValSet: (state: ExecuteState, value: string) => void;\r\n        stitchCountSet: (state: ExecuteState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setAnalysisType: (context: { commit: Commit }, value: string) => void;\r\n        setWbcDiffValSet: (context: { commit: Commit }, value: string) => void;\r\n        setStitchCountSet: (context: { commit: Commit }, value: string) => void;\r\n    };\r\n}\r\n\r\nexport const executeModule: ExecuteModule = {\r\n    namespaced: true, // 네임스페이스 추가\r\n    state: () => ({\r\n        analysisType: '',\r\n        wbcDiffVal: '100',\r\n        stitchCount: '',\r\n    }),\r\n    mutations: {\r\n        analysisTypeSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        wbcDiffValSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        stitchCountSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setAnalysisType({ commit }: { commit: Commit }, value: string): void {\r\n            commit('analysisTypeSet', value);\r\n        },\r\n        setWbcDiffValSet({ commit }: { commit: Commit }, value: string): void {\r\n            commit('wbcDiffValSet', value);\r\n        },\r\n        setStitchCountSet({ commit }: { commit: Commit }, value: string): void {\r\n            commit('stitchCountSet', value);\r\n        },\r\n    },\r\n};\r\n","// workingViewModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface SlotItem {\r\n    slotNo: number;\r\n    slotState: string;\r\n}\r\n\r\ninterface SlotInfoArr {\r\n    input: SlotItem[];\r\n    output: SlotItem[];\r\n}\r\n\r\ninterface WorkingViewState {\r\n    equipmentStatusCode: string;\r\n    wbcCount: string;\r\n    slideTime: string;\r\n    time: string;\r\n    slotInfo: SlotInfoArr;\r\n}\r\n\r\ninterface WorkingViewModule {\r\n    namespaced: true;\r\n    state: () => WorkingViewState;\r\n    mutations: {\r\n        setEquipmentStatusCode: (state: WorkingViewState, value: string) => void;\r\n        setWbcCount: (state: WorkingViewState, value: string) => void;\r\n        setSlideTime: (state: WorkingViewState, value: string) => void;\r\n        setTime: (state: WorkingViewState, value: string) => void;\r\n        setSlotInfo: (state: WorkingViewState, value: SlotInfoArr) => void;\r\n    };\r\n    actions: {\r\n        setWorkingViewInfo: (context: { commit: Commit }, payload: WorkingViewState) => void;\r\n    };\r\n}\r\n\r\nexport const workingViewModule: WorkingViewModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        equipmentStatusCode: '',\r\n        wbcCount: '',\r\n        slideTime: '',\r\n        time: '',\r\n        slotInfo: {\r\n            input: [],\r\n            output: [],\r\n        },\r\n    }),\r\n    mutations: {\r\n        setEquipmentStatusCode(state: WorkingViewState, value: string): void {\r\n            state.equipmentStatusCode = value;\r\n        },\r\n        setWbcCount(state: WorkingViewState, value: string): void {\r\n            state.wbcCount = value;\r\n        },\r\n        setSlideTime(state: WorkingViewState, value: string): void {\r\n            state.slideTime = value;\r\n        },\r\n        setTime(state: WorkingViewState, value: string): void {\r\n            state.time = value;\r\n        },\r\n        setSlotInfo(state: WorkingViewState, value: SlotInfoArr): void {\r\n            state.slotInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setWorkingViewInfo({ commit }: { commit: Commit }, payload: WorkingViewState): void {\r\n            commit('setEquipmentStatusCode', payload.equipmentStatusCode);\r\n            commit('setWbcCount', payload.wbcCount);\r\n            commit('setSlideTime', payload.slideTime);\r\n            commit('setTime', payload.time);\r\n            commit('setSlotInfo', payload.slotInfo);\r\n        },\r\n    },\r\n};\r\n","// embeddedStatusModule.ts\r\n// sysInfo - 시스템 정보 확인\r\nimport {Commit} from 'vuex';\r\n\r\n// 시스템 정보 타입\r\nexport interface SystemInfo {\r\n    eqStatCd: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    jobCmd: string;\r\n    isDoorOpen: string;\r\n    oilCount: string;\r\n    storageSize: string;\r\n    currentCardCount: string;\r\n    currentCardName: string;\r\n    autoStartTimer: number;\r\n    autoStart: boolean;\r\n}\r\n\r\nexport interface EmbeddedStatusState {\r\n    embeddedStatusJobCmd: string;\r\n    userStop: boolean;\r\n    isRecoveryRun: boolean;\r\n    isPause: boolean,\r\n    sysInfo: SystemInfo,\r\n    isInit: string;\r\n}\r\n\r\ninterface EmbeddedStatusModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => EmbeddedStatusState;\r\n    mutations: {\r\n        setEmbeddedStatusJobCmd: (state: EmbeddedStatusState, value: string) => void;\r\n        setUserStop: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setIsRecoveryRun: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setIsPause: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setSysInfo: (state: EmbeddedStatusState, value: SystemInfo) => void;\r\n        setIsInit: (state: EmbeddedStatusState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setEmbeddedStatusInfo: (context: { commit: Commit }, payload: EmbeddedStatusState) => void;\r\n    };\r\n}\r\n\r\nexport const embeddedStatusModule: EmbeddedStatusModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        embeddedStatusJobCmd: '',\r\n        userStop: false,\r\n        isRecoveryRun: false,\r\n        isPause: false,\r\n        sysInfo: {\r\n            eqStatCd: '',\r\n            iCasStat: '',\r\n            oCasStat: '',\r\n            jobCmd: '',\r\n            isDoorOpen: '',\r\n            oilCount: '',\r\n            storageSize: '',\r\n            currentCardCount: '',\r\n            currentCardName: '',\r\n            autoStartTimer: 0,\r\n            autoStart: false,\r\n        },\r\n        isInit: '',\r\n    }),\r\n    mutations: {\r\n        setEmbeddedStatusJobCmd(state: EmbeddedStatusState, value: string): void {\r\n            state.embeddedStatusJobCmd = value;\r\n        },\r\n        setUserStop(state: EmbeddedStatusState, value: boolean): void {\r\n            state.userStop = value;\r\n        },\r\n        setIsRecoveryRun(state: EmbeddedStatusState, value: boolean): void {\r\n            state.isRecoveryRun = value;\r\n        },\r\n        setIsPause(state: EmbeddedStatusState, value: boolean): void {\r\n            state.isPause = value;\r\n        },\r\n        setSysInfo(state: EmbeddedStatusState, value: SystemInfo): void {\r\n            state.sysInfo = value;\r\n        },\r\n        setIsInit(state: EmbeddedStatusState, value: string): void {\r\n            state.isInit = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setEmbeddedStatusInfo({commit}: { commit: Commit }, payload: EmbeddedStatusState): void {\r\n            Object.keys(payload).forEach(key => {\r\n                if (key === 'embeddedStatusJobCmd') {\r\n                    commit('setEmbeddedStatusJobCmd', payload[key]);\r\n                } else if (key === 'userStop') {\r\n                    commit('setUserStop', payload[key]);\r\n                } else if (key === 'isRecoveryRun') {\r\n                    commit('setIsRecoveryRun', payload[key]);\r\n                } else if (key === 'isPause') {\r\n                    commit('setIsPause', payload[key]);\r\n                } else if (key === 'sysInfo') {\r\n                    commit('setSysInfo', payload[key]);\r\n                } else if (key === 'isInit') {\r\n                    commit('setIsInit', payload[key]);\r\n                }\r\n            });\r\n        },\r\n    },\r\n};\r\n","// slotInfoModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface SlotInfo {\r\n    barcodeNo: string;\r\n    patientNm: string;\r\n    orderDttm: string;\r\n    stateCd: string;\r\n}\r\n\r\ninterface OrderListState {\r\n    slotInfo: SlotInfo[];\r\n}\r\n\r\ninterface SlotInfoModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => OrderListState;\r\n    mutations: {\r\n        setSlotInfo: (state: OrderListState, value: SlotInfo[]) => void;\r\n    };\r\n    actions: {\r\n        setSlotInfo: (context: { commit: Commit }, value: SlotInfo[]) => void;\r\n    };\r\n}\r\n\r\nexport const orderListModule: SlotInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        slotInfo: [],\r\n    }),\r\n    mutations: {\r\n        setSlotInfo(state: OrderListState, value: SlotInfo[]): void {\r\n            state.slotInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setSlotInfo({ commit }: { commit: Commit }, value: SlotInfo[]): void {\r\n            commit('setSlotInfo', value);\r\n        },\r\n    },\r\n};\r\n","// runningInfoModule.ts\r\nimport {Commit, Dispatch} from 'vuex';\r\nexport interface ChangeSlideState {\r\n    changeSlide: string;\r\n}\r\n\r\nexport interface SlideBoolean {\r\n    slideIs: boolean;\r\n}\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\nexport interface WbcInfo {\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string;\r\n    images: Image[];\r\n}\r\n\r\ninterface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\nexport interface SlotInfo {\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    runningPath: string[];\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    malariaCount: string;\r\n    // pltCount: string;\r\n    // maxWbcCount: string;\r\n    // maxRbcCount: string;\r\n    stateCd: string;\r\n    isLowPowerScan: string;\r\n    tactTime: string;\r\n    lowPowerPath: string[];\r\n    isNsNbIntegration: string;\r\n    seqNo: string;\r\n    path: string;\r\n    isHighPowerScan: string;\r\n    wbcInfo: WbcInfo[];\r\n    rbcInfo: RbcInfo[];\r\n}\r\n\r\nexport interface RunningInfo {\r\n    changeSlide: string;\r\n    resultCode: string;\r\n    resultMsg: string;\r\n    errorLevel: { level: string; message: string };\r\n    jobCmd: string;\r\n    processingCode: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    cassetId: string;\r\n    isRunningState: boolean;\r\n    slotInfo: SlotInfo;\r\n}\r\n\r\ninterface RunningInfoState {\r\n    runningInfo: RunningInfo | null;\r\n    changeSlideState: ChangeSlideState | null;\r\n    slideBooleanState: SlideBoolean | null;\r\n}\r\n\r\ninterface RunningInfoModule {\r\n    namespaced: true;\r\n    state: () => RunningInfoState;\r\n    mutations: {\r\n        setRunningInfo: (state: RunningInfoState, value: RunningInfo) => void;\r\n        setChangeSlide: (state: RunningInfoState, value: string) => void;\r\n        setSlideBoolean: (state: RunningInfoState, value: boolean) => void;\r\n    };\r\n    actions: {\r\n        setRunningInfo: (context: { commit: Commit }, payload: RunningInfo) => void;\r\n        updateRunningInfo: (context: { commit: Commit }, payload: { key: keyof RunningInfo; value: string | number }) => void;\r\n        setChangeSlide: (context: { commit: Commit }, value: string) => void;\r\n        setSlideBoolean: (context: { commit: Commit }, value: boolean) => void;\r\n    };\r\n}\r\n\r\nexport const runningInfoModule: RunningInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        runningInfo: null,\r\n        changeSlideState: null,\r\n        slideBooleanState: null,\r\n    }),\r\n    mutations: {\r\n        setRunningInfo(state: RunningInfoState, value: RunningInfo): void {\r\n            // setRunningInfo에서 호출된 경우에만 값을 덮어쓰기\r\n            if (value) {\r\n                state.runningInfo = value;\r\n            }\r\n        },\r\n        setChangeSlide(state: RunningInfoState, value: string): void {\r\n            if (state.changeSlideState) {\r\n                state.changeSlideState.changeSlide = value;\r\n            } else {\r\n                state.changeSlideState = { changeSlide: value };\r\n            }\r\n        },\r\n        setSlideBoolean(state: RunningInfoState, value: boolean): void {\r\n            if (state.slideBooleanState) {\r\n                state.slideBooleanState.slideIs = value;\r\n            } else {\r\n                state.slideBooleanState = { slideIs: value };\r\n            }\r\n        }\r\n\r\n    },\r\n    actions: {\r\n        setRunningInfo({ commit }: { commit: Commit }, payload: RunningInfo): void {\r\n            commit('setRunningInfo', payload);\r\n        },\r\n        updateRunningInfo({ commit }: { commit: Commit }, payload: { key: keyof RunningInfo; value: string | number }): void {\r\n            if (payload && payload.key && payload.value !== undefined) {\r\n                commit(`set${payload.key.charAt(0).toUpperCase() + payload.key.slice(1)}`, payload.value);\r\n            }\r\n        },\r\n        setChangeSlide({ commit }: { commit: Commit }, value: string): void {\r\n            commit('setChangeSlide', value);\r\n        },\r\n        setSlideBoolean({ commit }: { commit: Commit }, value: boolean): void {\r\n            commit('setSlideBoolean', value);\r\n        },\r\n    },\r\n};\r\n","// commonModule.ts\r\nimport {Commit} from 'vuex';\r\n\r\nexport interface CommonState {\r\n    startEmbedded: boolean;\r\n    eqStatCd: number;\r\n    isRunningState: boolean;\r\n    totalCount: string;\r\n    embeddedNumber: string;\r\n    isCompleteAlarm: boolean;\r\n    isErrorAlarm: boolean;\r\n    bfSelectFiles: any[];\r\n    slideProceeding: string;\r\n    totalSlideTime: string;\r\n    iaRootPath: string;\r\n    runningSlotId: string;\r\n    isRequestInProgress: boolean;\r\n    startInfoBoolen: boolean;\r\n    runningInfoBoolen: boolean;\r\n    runningInfoStop: boolean;\r\n    reqArr: any[];\r\n    resFlag: boolean;\r\n    firstLoading: boolean;\r\n    slotIndex: number;\r\n    viewerCheck: string;\r\n    runningArr: any;\r\n    classArr: any[];\r\n    rbcArr: any[];\r\n    processInfo: any[];\r\n    orderList: any[];\r\n    loginSetData: string;\r\n    siteCd: string;\r\n    deviceSerialNm: string;\r\n    clonedWbcInfo: any[];\r\n    clonedRbcInfo: any[];\r\n    moveImgIsBool: boolean;\r\n    classInfoSort: any[];\r\n    chatRunningData: any[];\r\n    cbcLayer: boolean;\r\n    inhaTestCode: string;\r\n    rbcReData: boolean;\r\n    rbcReDataClass: boolean;\r\n    rbcInfoAfterData: any[];\r\n    resetRbcArr: boolean;\r\n    selectedSampleId: string;\r\n    classInfoArr: any[];\r\n    rbcReDataCheck: boolean;\r\n    appAlertOpen: boolean;\r\n    dataBasePageReset: boolean;\r\n    resetAnalyzing: boolean;\r\n    testType: string;\r\n    isNsNbIntegration: string;\r\n    analysisType: string;\r\n    beforeSettingFormattedString: string;\r\n    afterSettingFormattedString: string;\r\n    settingChangedChecker: boolean;\r\n    dbListDataFirstNum: number;\r\n    dbListDataLastNum: number;\r\n    isTcpConnected: boolean;\r\n    initValData: boolean;\r\n    enteringRouterPath: string;\r\n    settingType: string;\r\n    isDownloadOrUploading: boolean;\r\n    isRewindingBelt: boolean;\r\n    rbcImagePageNumber: number;\r\n    showLISUploadAfterCheckingAll: boolean;\r\n    slideDataReset: string;\r\n}\r\n\r\ninterface CommonModule {\r\n    namespaced: true;\r\n    state: () => CommonState;\r\n    mutations: {\r\n        setStartEmbedded: (state: CommonState, value: boolean) => void;\r\n        setEqStatCd: (state: CommonState, value: number) => void;\r\n        setIsRunningState: (state: CommonState, value: boolean) => void;\r\n        setTotalCount: (state: CommonState, value: string) => void;\r\n        setEmbeddedNumber: (state: CommonState, value: string) => void;\r\n        setIsCompleteAlarm: (state: CommonState, value: boolean) => void;\r\n        setIsErrorAlarm: (state: CommonState, value: boolean) => void;\r\n        setBfSelectFiles: (state: CommonState, value: []) => void;\r\n        setSlideProceeding: (state: CommonState, value: string) => void;\r\n        setTotalSlideTime: (state: CommonState, value: string) => void;\r\n        setIaRootPath: (state: CommonState, value: string) => void;\r\n        setRunningSlotId: (state: CommonState, value: string) => void;\r\n        setIsRequestInProgress: (state: CommonState, value: boolean) => void;\r\n        setStartInfoBoolen: (state: CommonState, value: boolean) => void;\r\n        setRunningInfoBoolen: (state: CommonState, value: boolean) => void;\r\n        setRunningInfoStop: (state: CommonState, value: boolean) => void;\r\n        setReqArr: (state: CommonState, value: string[]) => void;\r\n        shiftReqArr: (state: CommonState) => void;\r\n        setReqArrPaste: (state: CommonState, value: any[]) => void;\r\n        setResFlag: (state: CommonState, value: boolean) => void;\r\n        setFirstLoading: (state: CommonState, value: boolean) => void;\r\n        setSlotIndex: (state: CommonState, value: number) => void;\r\n        setViewerCheck: (state: CommonState, value: string) => void;\r\n        setRunningArr: (state: CommonState, value: any) => void;\r\n        setClassArr: (state: CommonState, value: any[]) => void;\r\n        setRbcArr: (state: CommonState, value: any[]) => void;\r\n        setProcessInfo: (state: CommonState, value: any[]) => void;\r\n        setOrderList: (state: CommonState, value: any[]) => void;\r\n        setLoginSetData: (state: CommonState, value: string) => void;\r\n        setSiteCd: (state: CommonState, value: string) => void;\r\n        setDeviceSerialNm: (state: CommonState, value: string) => void;\r\n        setClonedWbcInfo: (state: CommonState, value: any[]) => void;\r\n        setClonedRbcInfo: (state: CommonState, value: any[]) => void;\r\n        setMoveImgIsBool: (state: CommonState, value: boolean) => void;\r\n        setClassInfoSort: (state: CommonState, value: any[]) => void;\r\n        setChatRunningData: (state: CommonState, value: any[]) => void;\r\n        setCbcLayer: (state: CommonState, value: boolean) => void;\r\n        setInhaTestCode: (state: CommonState, value: string) => void;\r\n        setRbcReData: (state: CommonState, value: boolean) => void;\r\n        setRbcReDataClass: (state: CommonState, value: boolean) => void;\r\n        setRbcInfoAfterData: (state: CommonState, value: any[]) => void;\r\n        setResetRbcArr: (state: CommonState, value: boolean) => void;\r\n        setSelectedSampleId: (state: CommonState, value: string) => void;\r\n        setClassInfoArr: (state: CommonState, value: any[]) => void;\r\n        setRbcReDataCheck: (state: CommonState, value: boolean) => void;\r\n        setAppAlertOpen: (state: CommonState, value: boolean) => void;\r\n        setDataBasePageReset: (state: CommonState, value: boolean) => void;\r\n        setResetAnalyzing: (state: CommonState, value: boolean) => void;\r\n        setTestType: (state: CommonState, value: string) => void;\r\n        setIsNsNbIntegration: (state: CommonState, value: string) => void;\r\n        setAnalysisType: (state: CommonState, value: string) => void;\r\n        setBeforeSettingFormattedString: (state: CommonState, value: string) => void;\r\n        setAfterSettingFormattedString: (state: CommonState, value: string) => void;\r\n        setSettingChangedChecker: (state: CommonState, value: boolean) => void;\r\n        setDbListDataFirstNum: (state: CommonState, value: number) => void;\r\n        setDbListDataLastNum: (state: CommonState, value: number) => void;\r\n        setIsTcpConnected: (state: CommonState, value: boolean) => void;\r\n        setInitValData: (state: CommonState, value: boolean) => void;\r\n        setEnteringRouterPath: (state: CommonState, value: string) => void;\r\n        setSettingType: (state: CommonState, value: string) => void;\r\n        setIsDownloadOrUploading: (state: CommonState, value: boolean) => void;\r\n        setIsRewindingBelt: (state: CommonState, value: boolean) => void;\r\n        setRbcImagePageNumber: (state: CommonState, value: number) => void;\r\n        setShowLISUploadAfterCheckingAll: (state: CommonState, value: boolean) => void;\r\n        setSlideDataReset: (state: CommonState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setCommonInfo: (context: { commit: Commit }, payload: CommonState) => void;\r\n    };\r\n}\r\n\r\nexport const commonModule: CommonModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        startEmbedded: false,\r\n        eqStatCd: 0,\r\n        isRunningState: false,\r\n        totalCount: '',\r\n        embeddedNumber: '',\r\n        isCompleteAlarm: false,\r\n        isErrorAlarm: false,\r\n        bfSelectFiles: [],\r\n        slideProceeding: '',\r\n        totalSlideTime: '00:00:00',\r\n        iaRootPath: '',\r\n        runningSlotId: '',\r\n        isRequestInProgress: false,\r\n        startInfoBoolen: false,\r\n        runningInfoBoolen: false,\r\n        runningInfoStop: false,\r\n        reqArr: [],\r\n        resFlag: true,\r\n        firstLoading: false,\r\n        slotIndex: 0,\r\n        viewerCheck: '',\r\n        runningArr: [],\r\n        classArr: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        rbcArr: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        processInfo: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        orderList: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        loginSetData: '',\r\n        siteCd: '',\r\n        deviceSerialNm: '',\r\n        clonedWbcInfo: [],\r\n        clonedRbcInfo: [],\r\n        moveImgIsBool: false,\r\n        classInfoSort: [],\r\n        chatRunningData: [],\r\n        cbcLayer: false,\r\n        inhaTestCode: '',\r\n        rbcReData: false,\r\n        rbcReDataClass: false,\r\n        rbcInfoAfterData: [],\r\n        resetRbcArr: false,\r\n        selectedSampleId: '',\r\n        classInfoArr:[],\r\n        rbcReDataCheck: false,\r\n        appAlertOpen: false,\r\n        dataBasePageReset: false,\r\n        resetAnalyzing: false,\r\n        testType: '',\r\n        isNsNbIntegration: 'N',\r\n        analysisType: '',\r\n        beforeSettingFormattedString: '',\r\n        afterSettingFormattedString: '',\r\n        settingChangedChecker: false,\r\n        dbListDataFirstNum: 0,\r\n        dbListDataLastNum: 0,\r\n        isTcpConnected: false,\r\n        initValData: false,\r\n        enteringRouterPath: '',\r\n        settingType: '',\r\n        isDownloadOrUploading: false,\r\n        isRewindingBelt: false,\r\n        rbcImagePageNumber: 0,\r\n        showLISUploadAfterCheckingAll: false,\r\n        slideDataReset: '',\r\n    }),\r\n    mutations: {\r\n        setStartEmbedded(state: CommonState, value: boolean): void {\r\n            state.startEmbedded = value;\r\n        },\r\n        setEqStatCd(state: CommonState, value: number): void {\r\n            state.eqStatCd = value;\r\n        },\r\n        setIsRunningState(state: CommonState, value: boolean): void {\r\n            state.isRunningState = value;\r\n        },\r\n        setTotalCount(state: CommonState, value: string): void {\r\n            state.totalCount = value;\r\n        },\r\n        setEmbeddedNumber(state: CommonState, value: string): void {\r\n            state.embeddedNumber = value;\r\n        },\r\n        setIsCompleteAlarm(state: CommonState, value: boolean): void {\r\n            state.isCompleteAlarm = value;\r\n        },\r\n        setIsErrorAlarm(state: CommonState, value: boolean): void {\r\n            state.isErrorAlarm = value;\r\n        },\r\n        setBfSelectFiles(state: CommonState, value: any[]): void {\r\n            state.bfSelectFiles = value;\r\n        },\r\n        setSlideProceeding(state: CommonState, value: string): void {\r\n            state.slideProceeding = value;\r\n        },\r\n        setTotalSlideTime(state: CommonState, value: string): void {\r\n            state.totalSlideTime = value;\r\n        },\r\n        setIaRootPath(state: CommonState, value: string): void {\r\n            state.iaRootPath = value;\r\n        },\r\n        setRunningSlotId(state: CommonState, value: string): void {\r\n            state.runningSlotId = value;\r\n        },\r\n        setIsRequestInProgress(state: CommonState, value: boolean): void {\r\n            state.isRequestInProgress = value;\r\n        },\r\n        setStartInfoBoolen(state: CommonState, value: boolean): void {\r\n            state.startInfoBoolen = value;\r\n        },\r\n        setRunningInfoBoolen(state: CommonState, value: boolean): void {\r\n            state.runningInfoBoolen = value;\r\n        },\r\n        setRunningInfoStop(state: CommonState, value: boolean): void {\r\n            state.runningInfoStop = value;\r\n        },\r\n        setReqArr(state: CommonState, value: any[]): void {\r\n            if (!state.reqArr) {\r\n                state.reqArr = []; // 배열이 없으면 빈 배열로 초기화\r\n            }\r\n            state.reqArr.push(value);\r\n        },\r\n        shiftReqArr(state: CommonState): void {\r\n            state.reqArr.shift();\r\n        },\r\n        setReqArrPaste(state: CommonState, value: any[]): void {\r\n            state.reqArr = value;\r\n        },\r\n        setResFlag(state: CommonState, value: boolean): void {\r\n            state.resFlag = value;\r\n        },\r\n        setFirstLoading(state: CommonState, value: boolean): void {\r\n            state.firstLoading = value;\r\n        },\r\n        setSlotIndex(state: CommonState, value: number): void {\r\n            state.slotIndex = value;\r\n        },\r\n        setViewerCheck(state: CommonState, value: string): void {\r\n            state.viewerCheck = value;\r\n        },\r\n        setRunningArr(state: CommonState, value: any[]): void {\r\n            state.runningArr = value;\r\n        },\r\n        setClassArr(state: CommonState, value: any[]): void {\r\n            state.classArr = value;\r\n        },\r\n        setRbcArr(state: CommonState, value: any[]): void {\r\n            state.rbcArr = value;\r\n        },\r\n        setProcessInfo(state: CommonState, value: any[]): void {\r\n            state.processInfo = value;\r\n        },\r\n        setOrderList(state: CommonState, value: any[]): void {\r\n            state.orderList = value;\r\n        },\r\n        setLoginSetData(state: CommonState, value: string): void {\r\n            state.loginSetData = value;\r\n        },\r\n        setDeviceSerialNm(state: CommonState, value: string): void {\r\n            state.deviceSerialNm = value;\r\n        },\r\n        setSiteCd(state: CommonState, value: string): void {\r\n            state.siteCd = value;\r\n        },\r\n        setClonedWbcInfo(state: CommonState, value: any[]): void {\r\n            state.clonedWbcInfo = value;\r\n        },\r\n        setClonedRbcInfo(state: CommonState, value: any[]): void {\r\n            state.clonedRbcInfo = value;\r\n        },\r\n        setMoveImgIsBool(state: CommonState, value: boolean): void {\r\n            state.moveImgIsBool = value;\r\n        },\r\n        setClassInfoSort(state: CommonState, value: any[]): void {\r\n            state.classInfoSort = value;\r\n        },\r\n        setChatRunningData(state: CommonState, value: any[]): void {\r\n            state.chatRunningData = value;\r\n        },\r\n        setSelectedSampleId(state: CommonState, value: string): void {\r\n            state.selectedSampleId = value;\r\n        },\r\n        setCbcLayer(state: CommonState, value: boolean): void {\r\n            state.cbcLayer = value;\r\n        },\r\n        setInhaTestCode(state: CommonState, value: string): void {\r\n            state.inhaTestCode = value;\r\n        },\r\n        setRbcReData(state: CommonState, value: boolean): void {\r\n            state.rbcReData = value;\r\n        },\r\n        setRbcReDataClass(state: CommonState, value: boolean): void {\r\n            state.rbcReDataClass = value;\r\n        },\r\n        setResetRbcArr(state: CommonState, value: boolean): void {\r\n            state.resetRbcArr = value;\r\n        },\r\n        setRbcInfoAfterData(state: CommonState, value: any[]): void {\r\n            state.rbcInfoAfterData = value;\r\n        },\r\n        // classInfoArr\r\n        setClassInfoArr(state: CommonState, value: any[]): void {\r\n            state.classInfoArr = value;\r\n        },\r\n        setRbcReDataCheck(state: CommonState, value: boolean): void {\r\n            state.rbcReDataCheck = value;\r\n        },\r\n        setAppAlertOpen(state: CommonState, value: boolean): void {\r\n            state.appAlertOpen = value;\r\n        },\r\n        setDataBasePageReset(state: CommonState, value: boolean): void {\r\n            state.dataBasePageReset = value;\r\n        },\r\n        setResetAnalyzing(state: CommonState, value: boolean): void {\r\n            state.resetAnalyzing = value;\r\n        },\r\n        setTestType(state: CommonState, value: string): void {\r\n            state.testType = value;\r\n        },\r\n        setIsNsNbIntegration(state: CommonState, value: string): void {\r\n            state.isNsNbIntegration = value;\r\n        },\r\n        setAnalysisType(state: CommonState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        setBeforeSettingFormattedString(state: CommonState, value: string): void {\r\n            state.beforeSettingFormattedString = value;\r\n        },\r\n        setAfterSettingFormattedString(state: CommonState, value: string): void {\r\n            state.afterSettingFormattedString = value;\r\n        },\r\n        setSettingChangedChecker(state: CommonState, value: boolean): void {\r\n            state.settingChangedChecker = value;\r\n        },\r\n        setDbListDataFirstNum(state: CommonState, value: number): void {\r\n            state.dbListDataFirstNum = value;\r\n        },\r\n        setDbListDataLastNum(state: CommonState, value: number): void {\r\n            state.dbListDataLastNum = value;\r\n        },\r\n        setIsTcpConnected(state: CommonState, value: boolean): void {\r\n            state.isTcpConnected = value;\r\n        },\r\n        setInitValData(state: CommonState, value: boolean): void {\r\n            state.initValData = value;\r\n        },\r\n        setEnteringRouterPath(state: CommonState, value: string): void {\r\n            state.enteringRouterPath = value;\r\n        },\r\n        setSettingType(state: CommonState, value: string): void {\r\n            state.settingType = value;\r\n        },\r\n        setIsDownloadOrUploading(state: CommonState, value: boolean): void {\r\n            state.isDownloadOrUploading = value;\r\n        },\r\n        setIsRewindingBelt(state: CommonState, value: boolean): void {\r\n            state.isRewindingBelt = value;\r\n        },\r\n        setRbcImagePageNumber(state: CommonState, value: number): void {\r\n            state.rbcImagePageNumber = value;\r\n        },\r\n        setShowLISUploadAfterCheckingAll(state: CommonState, value: boolean): void {\r\n            state.showLISUploadAfterCheckingAll = value;\r\n        },\r\n        setSlideDataReset(state: CommonState, value: string): void{\r\n            state.slideDataReset = value;\r\n        }\r\n    },\r\n    actions: {\r\n        setCommonInfo({commit}: { commit: Commit }, payload: CommonState): void {\r\n            if (payload.hasOwnProperty('startEmbedded')) {\r\n                commit('setStartEmbedded', payload.startEmbedded);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('eqStatCd')) {\r\n                commit('setEqStatCd', payload.eqStatCd);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('isRunningState')) {\r\n                commit('setIsRunningState', payload.isRunningState);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('totalCount')) {\r\n                commit('setTotalCount', payload.totalCount);\r\n            }\r\n            if (payload.hasOwnProperty('embeddedNumber')) {\r\n                commit('setEmbeddedNumber', payload.embeddedNumber);\r\n            }\r\n            if (payload.hasOwnProperty('isCompleteAlarm')) {\r\n                commit('setIsCompleteAlarm', payload.isCompleteAlarm);\r\n            }\r\n            if (payload.hasOwnProperty('isErrorAlarm')) {\r\n                commit('setIsErrorAlarm', payload.isErrorAlarm);\r\n            }\r\n            if (payload.hasOwnProperty('bfSelectFiles')) {\r\n                commit('setBfSelectFiles', payload.bfSelectFiles);\r\n            }\r\n            if (payload.hasOwnProperty('slideProceeding')) {\r\n                commit('setSlideProceeding', payload.slideProceeding);\r\n            }\r\n            if (payload.hasOwnProperty('totalSlideTime')) {\r\n                commit('setTotalSlideTime', payload.totalSlideTime);\r\n            }\r\n            if (payload.hasOwnProperty('iaRootPath')) {\r\n                commit('setIaRootPath', payload.iaRootPath);\r\n            }\r\n            if (payload.hasOwnProperty('runningSlotId')) {\r\n                commit('setRunningSlotId', payload.runningSlotId);\r\n            }\r\n            if (payload.hasOwnProperty('isRequestInProgress')) {\r\n                commit('setIsRequestInProgress', payload.isRequestInProgress);\r\n            }\r\n            if (payload.hasOwnProperty('startInfoBoolen')) {\r\n                commit('setStartInfoBoolen', payload.startInfoBoolen);\r\n            }\r\n            if (payload.hasOwnProperty('runningInfoBoolen')) {\r\n                commit('setRunningInfoBoolen', payload.runningInfoBoolen);\r\n            }\r\n            if (payload.hasOwnProperty('runningInfoStop')) {\r\n                commit('setRunningInfoStop', payload.runningInfoStop);\r\n            }\r\n            if (payload.hasOwnProperty('reqArr')) {\r\n                commit('setReqArr', payload.reqArr);\r\n            }\r\n            if (payload.hasOwnProperty('shiftReqArr')) {\r\n                commit('shiftReqArr');\r\n            }\r\n            if (payload.hasOwnProperty('reqArrPaste')) {\r\n                commit('setReqArrPaste', payload.reqArr);\r\n            }\r\n            if (payload.hasOwnProperty('resFlag')) {\r\n                commit('setResFlag', payload.resFlag);\r\n            }\r\n            if (payload.hasOwnProperty('firstLoading')) {\r\n                commit('setFirstLoading', payload.firstLoading);\r\n            }\r\n            if (payload.hasOwnProperty('slotIndex')) {\r\n                commit('setSlotIndex', payload.slotIndex);\r\n            }\r\n            if (payload.hasOwnProperty('viewerCheck')) {\r\n                commit('setViewerCheck', payload.viewerCheck);\r\n            }\r\n            if (payload.hasOwnProperty('runningArr')) {\r\n                commit('setRunningArr', payload.runningArr);\r\n            }\r\n            if (payload.hasOwnProperty('classArr')) {\r\n                commit('setClassArr', payload.classArr);\r\n            }\r\n            if (payload.hasOwnProperty('rbcArr')) {\r\n                commit('setRbcArr', payload.rbcArr);\r\n            }\r\n            if (payload.hasOwnProperty('processInfo')) {\r\n                commit('setProcessInfo', payload.processInfo);\r\n            }\r\n            if (payload.hasOwnProperty('orderList')) {\r\n                commit('setOrderList', payload.orderList);\r\n            }\r\n            if (payload.hasOwnProperty('loginSetData')) {\r\n                commit('setLoginSetData', payload.loginSetData);\r\n            }\r\n            if (payload.hasOwnProperty('siteCd')) {\r\n                commit('setSiteCd', payload.siteCd);\r\n            }\r\n            if (payload.hasOwnProperty('deviceSerialNm')) {\r\n                commit('setDeviceSerialNm', payload.deviceSerialNm);\r\n            }\r\n            if (payload.hasOwnProperty('clonedWbcInfo')) {\r\n                commit('setClonedWbcInfo', payload.clonedWbcInfo);\r\n            }\r\n            if (payload.hasOwnProperty('clonedRbcInfo')) {\r\n                commit('setClonedRbcInfo', payload.clonedRbcInfo);\r\n            }\r\n            if (payload.hasOwnProperty('moveImgIsBool')) {\r\n                commit('setMoveImgIsBool', payload.moveImgIsBool)\r\n            }\r\n            if (payload.hasOwnProperty('classInfoSort')) {\r\n                commit('setClassInfoSort', payload.classInfoSort)\r\n            }\r\n            if (payload.hasOwnProperty('chatRunningData')) {\r\n                commit('setChatRunningData', payload.chatRunningData)\r\n            }\r\n            if (payload.hasOwnProperty('selectedSampleId')) {\r\n                commit('setSelectedSampleId', payload.selectedSampleId)\r\n            }\r\n            if (payload.hasOwnProperty('cbcLayer')) {\r\n                commit('setCbcLayer', payload.cbcLayer)\r\n            }\r\n            // setInhaTestCode\r\n            if (payload.hasOwnProperty('inhaTestCode')) {\r\n                commit('setInhaTestCode', payload.inhaTestCode)\r\n            }\r\n            if (payload.hasOwnProperty('rbcReData')) {\r\n                commit('setRbcReData', payload.rbcReData)\r\n            }\r\n            if(payload.hasOwnProperty('rbcReDataClass')){\r\n                commit('setRbcReDataClass', payload.rbcReDataClass)\r\n            }\r\n            if (payload.hasOwnProperty('rbcInfoAfterData')) {\r\n                commit('setRbcInfoAfterData', payload.rbcInfoAfterData)\r\n            }\r\n            if(payload.hasOwnProperty('resetRbcArr')) {\r\n                commit('setResetRbcArr', payload.resetRbcArr)\r\n            }\r\n            if(payload.hasOwnProperty('classInfoArr')) {\r\n                commit('setClassInfoArr', payload.classInfoArr)\r\n            }\r\n            if (payload.hasOwnProperty('rbcReDataCheck')){\r\n                commit('setRbcReDataCheck', payload.rbcReDataCheck)\r\n            }\r\n            if(payload.hasOwnProperty('appAlertOpen')){\r\n                commit('setAppAlertOpen', payload.appAlertOpen);\r\n            }\r\n            if (payload.hasOwnProperty('dataBasePageReset')){\r\n                commit('setDataBasePageReset', payload.dataBasePageReset);\r\n            }\r\n            if (payload.hasOwnProperty('resetAnalyzing')){\r\n                commit('setResetAnalyzing', payload.resetAnalyzing);\r\n            }\r\n            if (payload.hasOwnProperty('testType')){\r\n                commit('setTestType', payload.testType);\r\n            }\r\n            if (payload.hasOwnProperty('isNsNbIntegration')) {\r\n                commit('setIsNsNbIntegration', payload.isNsNbIntegration);\r\n            }\r\n            if (payload.hasOwnProperty('analysisType')) {\r\n                commit('setAnalysisType', payload.analysisType);\r\n            }\r\n            if (payload.hasOwnProperty('beforeSettingFormattedString')) {\r\n                commit('setBeforeSettingFormattedString', payload.beforeSettingFormattedString);\r\n            }\r\n            if (payload.hasOwnProperty('afterSettingFormattedString')) {\r\n                commit('setAfterSettingFormattedString', payload.afterSettingFormattedString);\r\n            }\r\n            if (payload.hasOwnProperty('settingChangedChecker')) {\r\n                commit('setSettingChangedChecker', payload.settingChangedChecker);\r\n            }\r\n            if (payload.hasOwnProperty('dbListDataFirstNum')) {\r\n                commit('setDbListDataFirstNum', payload.dbListDataFirstNum);\r\n            }\r\n            if (payload.hasOwnProperty('dbListDataLastNum')) {\r\n                commit('setDbListDataLastNum', payload.dbListDataLastNum);\r\n            }\r\n            if (payload.hasOwnProperty('isTcpConnected')) {\r\n                commit('setIsTcpConnected', payload.isTcpConnected);\r\n            }\r\n            if (payload.hasOwnProperty('initValData')) {\r\n                commit('setInitValData', payload.initValData);\r\n            }\r\n            if (payload.hasOwnProperty('enteringRouterPath')) {\r\n                commit('setEnteringRouterPath', payload.enteringRouterPath);\r\n            }\r\n            if (payload.hasOwnProperty('settingType')) {\r\n                commit('setSettingType', payload.settingType);\r\n            }\r\n            if (payload.hasOwnProperty('isDownloadOrUploading')) {\r\n                commit('setIsDownloadOrUploading', payload.isDownloadOrUploading);\r\n            }\r\n            if (payload.hasOwnProperty('isRewindingBelt')) {\r\n                commit('setIsRewindingBelt', payload.isRewindingBelt);\r\n            }\r\n            if (payload.hasOwnProperty('rbcImagePageNumber')) {\r\n                commit('setRbcImagePageNumber', payload.rbcImagePageNumber);\r\n            }\r\n            if (payload.hasOwnProperty('showLISUploadAfterCheckingAll')) {\r\n                commit('setShowLISUploadAfterCheckingAll', payload.showLISUploadAfterCheckingAll);\r\n            }\r\n            if(payload.hasOwnProperty('slideDataReset')){\r\n                commit('setSlideDataReset', payload.slideDataReset);\r\n            }\r\n        },\r\n    },\r\n};\r\n","// dataBaseSetDataModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\ninterface WbcInfo {\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string;\r\n    images: Image[];\r\n}\r\n\r\ninterface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\nexport interface SlotInfo {\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    runningPath: string[];\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    malariaCount: string;\r\n    // pltCount: string;\r\n    maxWbcCount: string;\r\n    maxRbcCount: string;\r\n    stateCd: string;\r\n    isLowPowerScan: string;\r\n    tactTime: string;\r\n    lowPowerPath: string[];\r\n    isNsNbIntegration: string;\r\n    seqNo: string;\r\n    path: string;\r\n    isHighPowerScan: string;\r\n    wbcInfo: WbcInfo[];\r\n    rbcInfo: RbcInfo[];\r\n}\r\n\r\nexport interface DataBaseSetData {\r\n    changeSlide: string;\r\n    resultCode: string;\r\n    resultMsg: string;\r\n    errorLevel: { level: string; message: string };\r\n    jobCmd: string;\r\n    processingCode: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    cassetId: string;\r\n    isRunningState: boolean;\r\n    slotInfo: SlotInfo[];\r\n}\r\n\r\ninterface DataBaseSetDataState {\r\n    dataBaseSetData: DataBaseSetData | null;\r\n}\r\n\r\ninterface DataBaseSetDataModule {\r\n    namespaced: true;\r\n    state: () => DataBaseSetDataState;\r\n    mutations: {\r\n        setDataBaseSetData: (state: DataBaseSetDataState, value: DataBaseSetData) => void;\r\n    };\r\n    actions: {\r\n        setDataBaseSetData: (context: { commit: Commit }, payload: DataBaseSetData) => void;\r\n    };\r\n}\r\n\r\nexport const dataBaseSetDataModule: DataBaseSetDataModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        dataBaseSetData: null,\r\n    }),\r\n    mutations: {\r\n        setDataBaseSetData(state: DataBaseSetDataState, value: DataBaseSetData): void {\r\n            // setDataBaseSetData에서 호출된 경우에만 값을 덮어쓰기\r\n            if (value) {\r\n                state.dataBaseSetData = {\r\n                    ...state.dataBaseSetData, // 기존 데이터 유지\r\n                    changeSlide: value.changeSlide ?? state.dataBaseSetData?.changeSlide,\r\n                    resultCode: value.resultCode ?? state.dataBaseSetData?.resultCode,\r\n                    resultMsg: value.resultMsg ?? state.dataBaseSetData?.resultMsg,\r\n                    errorLevel: value.errorLevel ?? state.dataBaseSetData?.errorLevel,\r\n                    jobCmd: value.jobCmd ?? state.dataBaseSetData?.jobCmd,\r\n                    processingCode: value.processingCode ?? state.dataBaseSetData?.processingCode,\r\n                    iCasStat: value.iCasStat ?? state.dataBaseSetData?.iCasStat,\r\n                    oCasStat: value.oCasStat ?? state.dataBaseSetData?.oCasStat,\r\n                    cassetId: value.cassetId ?? state.dataBaseSetData?.cassetId,\r\n                    isRunningState: value.isRunningState ?? state.dataBaseSetData?.isRunningState,\r\n                    slotInfo: value.slotInfo\r\n                        ? value.slotInfo.map((slot) => {\r\n                            const existingSlot = state.dataBaseSetData?.slotInfo?.find(\r\n                                (existing) => existing?.slotId === slot?.slotId\r\n                            );\r\n                            return existingSlot ? { ...existingSlot, ...slot } : slot!;\r\n                        })\r\n                        : state.dataBaseSetData?.slotInfo ?? [],\r\n                };\r\n            }\r\n        },\r\n    },\r\n    actions: {\r\n        setDataBaseSetData({ commit }: { commit: Commit }, payload: DataBaseSetData): void {\r\n            commit('setDataBaseSetData', payload);\r\n        },\r\n    },\r\n};\r\n","import {Commit} from 'vuex';\r\n\r\nexport interface TimeState {\r\n    totalSlideTime: string,\r\n    slideTime: string,\r\n}\r\n\r\ninterface TimeModule {\r\n    namespaced: true;\r\n    state: () => TimeState;\r\n    mutations: {\r\n        setTotalSlideTime: (state: TimeState, value: string) => void;\r\n        setSlideTime: (state: TimeState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setTimeInfo: (context: { commit: Commit }, payload: TimeState) => void;\r\n    };\r\n}\r\n\r\nexport const timeModule: TimeModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        totalSlideTime: '00:00:00',\r\n        slideTime: '00:00:00',\r\n    }),\r\n    mutations: {\r\n        setTotalSlideTime(state: TimeState, value: string): void {\r\n            state.totalSlideTime = value;\r\n        },\r\n        setSlideTime(state: TimeState, value: string): void {\r\n            state.slideTime = value;\r\n        }\r\n    },\r\n    actions: {\r\n        setTimeInfo({commit}: { commit: Commit }, payload: TimeState): void {\r\n            if (payload.hasOwnProperty('totalSlideTime')) {\r\n                commit('setTotalSlideTime', payload.totalSlideTime);\r\n            }\r\n            if (payload.hasOwnProperty('slideTime')) {\r\n                commit('setSlideTime', payload.slideTime);\r\n            }\r\n        },\r\n    },\r\n};\r\n","import { Commit } from 'vuex';\r\nexport const initialState: SlideDataState = {\r\n    id: undefined,\r\n    lock_status: undefined,\r\n    traySlot: undefined,\r\n    slotNo: '',\r\n    barcodeNo: '',\r\n    patientId: '',\r\n    patientNm: '',\r\n    gender: '',\r\n    birthDay: '',\r\n    wbcCount: '',\r\n    slotId: '',\r\n    orderDttm: '',\r\n    testType: '',\r\n    analyzedDttm: '',\r\n    tactTime: '',\r\n    maxWbcCount: '',\r\n    bf_lowPowerPath: [],\r\n    cassetId: '',\r\n    isNormal: '',\r\n    wbcInfo: {},\r\n    wbcInfoAfter: [],\r\n    rbcInfo: {},\r\n    rbcInfoAfter: [],\r\n    submitState: '',\r\n    submitOfDate: undefined,\r\n    submitUserId: '',\r\n    rbcInfoPosAfter: [],\r\n    isNsNbIntegration: '',\r\n    wbcMemo: '',\r\n    rbcMemo: '',\r\n    pcIp: '',\r\n    cbcPatientNo: '',\r\n    cbcPatientNm: '',\r\n    cbcSex: '',\r\n    cbcAge: '',\r\n    img_drive_root_path: '',\r\n    hosName: '',\r\n    abnormalClassInfo: {},\r\n};\r\n\r\n// RunningDataState 정의 (변경 없음)\r\nexport interface SlideDataState {\r\n    id?: number;\r\n    lock_status?: boolean;\r\n    traySlot?: string;\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    tactTime: string;\r\n    maxWbcCount: string;\r\n    bf_lowPowerPath?: string[];\r\n    cassetId?: string;\r\n    isNormal?: string;\r\n    wbcInfo: object;\r\n    wbcInfoAfter: object[];\r\n    rbcInfo?: object;\r\n    rbcInfoAfter?: object[];\r\n    submitState?: string;\r\n    submitOfDate?: Date;\r\n    submitUserId?: string;\r\n    rbcInfoPosAfter?: string[];\r\n    isNsNbIntegration?: string;\r\n    wbcMemo?: string;\r\n    rbcMemo?: string;\r\n    pcIp?: string;\r\n    cbcPatientNo?: string;\r\n    cbcPatientNm?: string;\r\n    cbcSex?: string;\r\n    cbcAge?: string;\r\n    img_drive_root_path?: string;\r\n    hosName?: string;\r\n    abnormalClassInfo?: object;\r\n}\r\n\r\n// RunningDataModule 정의\r\ninterface SlideDataModule {\r\n    namespaced: true;\r\n    state: () => SlideDataState;\r\n    mutations: {\r\n        setId(state: SlideDataState, id: number): void;\r\n        setLockStatus(state: SlideDataState, lockStatus: boolean): void;\r\n        setTraySlot(state: SlideDataState, traySlot: string): void;\r\n        setSlotNo(state: SlideDataState, slotNo: string): void;\r\n        setBarcodeNo(state: SlideDataState, barcodeNo: string): void;\r\n        setPatientId(state: SlideDataState, patientId: string): void;\r\n        setPatientNm(state: SlideDataState, patientNm: string): void;\r\n        setGender(state: SlideDataState, gender: string): void;\r\n        setBirthDay(state: SlideDataState, birthDay: string): void;\r\n        setWbcCount(state: SlideDataState, wbcCount: string): void;\r\n        setSlotId(state: SlideDataState, slotId: string): void;\r\n        setOrderDttm(state: SlideDataState, orderDttm: string): void;\r\n        setTestType(state: SlideDataState, testType: string): void;\r\n        setAnalyzedDttm(state: SlideDataState, analyzedDttm: string): void;\r\n        setTactTime(state: SlideDataState, tactTime: string): void;\r\n        setMaxWbcCount(state: SlideDataState, maxWbcCount: string): void;\r\n        setBfLowPowerPath(state: SlideDataState, bfLowPowerPath: string[]): void;\r\n        setCassetId(state: SlideDataState, cassetId: string): void;\r\n        setIsNormal(state: SlideDataState, isNormal: string): void;\r\n        setWbcInfo(state: SlideDataState, wbcInfo: object): void;\r\n        setWbcInfoAfter(state: SlideDataState, wbcInfoAfter: object[]): void;\r\n        setRbcInfo(state: SlideDataState, rbcInfo: object): void;\r\n        setRbcInfoAfter(state: SlideDataState, rbcInfoAfter: object[]): void;\r\n        setSubmitState(state: SlideDataState, submitState: string): void;\r\n        setSubmitOfDate(state: SlideDataState, submitOfDate: Date): void;\r\n        setSubmitUserId(state: SlideDataState, submitUserId: string): void;\r\n        setRbcInfoPosAfter(state: SlideDataState, rbcInfoPosAfter: string[]): void;\r\n        setIsNsNbIntegration(state: SlideDataState, isNsNbIntegration: string): void;\r\n        setWbcMemo(state: SlideDataState, wbcMemo: string): void;\r\n        setRbcMemo(state: SlideDataState, rbcMemo: string): void;\r\n        setPcIp(state: SlideDataState, pcIp: string): void;\r\n        setCbcPatientNo(state: SlideDataState, cbcPatientNo: string): void;\r\n        setCbcPatientNm(state: SlideDataState, cbcPatientNm: string): void;\r\n        setCbcSex(state: SlideDataState, cbcSex: string): void;\r\n        setCbcAge(state: SlideDataState, cbcAge: string): void;\r\n        setImgDriveRootPath(state: SlideDataState, imgDriveRootPath: string): void;\r\n        setHosName(state: SlideDataState, hosName: string): void;\r\n        setAbnormalClassInfo(state: SlideDataState, abnormalClassInfo: object): void;\r\n        resetState(state: SlideDataState): void; // 전체 초기화 메서드\r\n    };\r\n    actions: {\r\n        updateSlideData({ commit }: { commit: Commit }, payload: any): void;\r\n        resetSlideData({ commit }: { commit: Commit }): void; // 상태 초기화 액션 추가\r\n    };\r\n}\r\n\r\nexport const slideDataModule: SlideDataModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        id: undefined,\r\n        lock_status: undefined,\r\n        traySlot: undefined,\r\n        slotNo: '',\r\n        barcodeNo: '',\r\n        patientId: '',\r\n        patientNm: '',\r\n        gender: '',\r\n        birthDay: '',\r\n        wbcCount: '',\r\n        slotId: '',\r\n        orderDttm: '',\r\n        testType: '',\r\n        analyzedDttm: '',\r\n        tactTime: '',\r\n        maxWbcCount: '',\r\n        bf_lowPowerPath: [],\r\n        cassetId: '',\r\n        isNormal: '',\r\n        wbcInfo: {},\r\n        wbcInfoAfter: [],\r\n        rbcInfo: {},\r\n        rbcInfoAfter: [],\r\n        submitState: '',\r\n        submitOfDate: undefined,\r\n        submitUserId: '',\r\n        rbcInfoPosAfter: [],\r\n        isNsNbIntegration: '',\r\n        wbcMemo: '',\r\n        rbcMemo: '',\r\n        pcIp: '',\r\n        cbcPatientNo: '',\r\n        cbcPatientNm: '',\r\n        cbcSex: '',\r\n        cbcAge: '',\r\n        img_drive_root_path: '',\r\n        hosName: '',\r\n        abnormalClassInfo: {},\r\n    }),\r\n    mutations: {\r\n        setId(state, id) {\r\n            state.id = id;\r\n        },\r\n        setLockStatus(state, lockStatus) {\r\n            state.lock_status = lockStatus;\r\n        },\r\n        setTraySlot(state, traySlot) {\r\n            state.traySlot = traySlot;\r\n        },\r\n        setSlotNo(state, slotNo) {\r\n            state.slotNo = slotNo;\r\n        },\r\n        setBarcodeNo(state, barcodeNo) {\r\n            state.barcodeNo = barcodeNo;\r\n        },\r\n        setPatientId(state, patientId) {\r\n            state.patientId = patientId;\r\n        },\r\n        setPatientNm(state, patientNm) {\r\n            state.patientNm = patientNm;\r\n        },\r\n        setGender(state, gender) {\r\n            state.gender = gender;\r\n        },\r\n        setBirthDay(state, birthDay) {\r\n            state.birthDay = birthDay;\r\n        },\r\n        setWbcCount(state, wbcCount) {\r\n            state.wbcCount = wbcCount;\r\n        },\r\n        setSlotId(state, slotId) {\r\n            state.slotId = slotId;\r\n        },\r\n        setOrderDttm(state, orderDttm) {\r\n            state.orderDttm = orderDttm;\r\n        },\r\n        setTestType(state, testType) {\r\n            state.testType = testType;\r\n        },\r\n        setAnalyzedDttm(state, analyzedDttm) {\r\n            state.analyzedDttm = analyzedDttm;\r\n        },\r\n        setTactTime(state, tactTime) {\r\n            state.tactTime = tactTime;\r\n        },\r\n        setMaxWbcCount(state, maxWbcCount) {\r\n            state.maxWbcCount = maxWbcCount;\r\n        },\r\n        setBfLowPowerPath(state, bfLowPowerPath) {\r\n            state.bf_lowPowerPath = bfLowPowerPath;\r\n        },\r\n        setCassetId(state, cassetId) {\r\n            state.cassetId = cassetId;\r\n        },\r\n        setIsNormal(state, isNormal) {\r\n            state.isNormal = isNormal;\r\n        },\r\n        setWbcInfo(state, wbcInfo) {\r\n            state.wbcInfo = wbcInfo;\r\n        },\r\n        setWbcInfoAfter(state, wbcInfoAfter) {\r\n            state.wbcInfoAfter = wbcInfoAfter;\r\n        },\r\n        setRbcInfo(state, rbcInfo) {\r\n            state.rbcInfo = rbcInfo;\r\n        },\r\n        setRbcInfoAfter(state, rbcInfoAfter) {\r\n            state.rbcInfoAfter = rbcInfoAfter;\r\n        },\r\n        setSubmitState(state, submitState) {\r\n            state.submitState = submitState;\r\n        },\r\n        setSubmitOfDate(state, submitOfDate) {\r\n            state.submitOfDate = submitOfDate;\r\n        },\r\n        setSubmitUserId(state, submitUserId) {\r\n            state.submitUserId = submitUserId;\r\n        },\r\n        setRbcInfoPosAfter(state, rbcInfoPosAfter) {\r\n            state.rbcInfoPosAfter = rbcInfoPosAfter;\r\n        },\r\n        setIsNsNbIntegration(state, isNsNbIntegration) {\r\n            state.isNsNbIntegration = isNsNbIntegration;\r\n        },\r\n        setWbcMemo(state, wbcMemo) {\r\n            state.wbcMemo = wbcMemo;\r\n        },\r\n        setRbcMemo(state, rbcMemo) {\r\n            state.rbcMemo = rbcMemo;\r\n        },\r\n        setPcIp(state, pcIp) {\r\n            state.pcIp = pcIp;\r\n        },\r\n        setCbcPatientNo(state, cbcPatientNo) {\r\n            state.cbcPatientNo = cbcPatientNo;\r\n        },\r\n        setCbcPatientNm(state, cbcPatientNm) {\r\n            state.cbcPatientNm = cbcPatientNm;\r\n        },\r\n        setCbcSex(state, cbcSex) {\r\n            state.cbcSex = cbcSex;\r\n        },\r\n        setCbcAge(state, cbcAge) {\r\n            state.cbcAge = cbcAge;\r\n        },\r\n        setImgDriveRootPath(state, imgDriveRootPath) {\r\n            state.img_drive_root_path = imgDriveRootPath;\r\n        },\r\n        setHosName(state, hosName) {\r\n            state.hosName = hosName;\r\n        },\r\n        setAbnormalClassInfo(state, abnormalClassInfo) {\r\n            state.abnormalClassInfo = abnormalClassInfo;\r\n        },\r\n        resetState(state) {\r\n            Object.assign(state, { ...initialState });\r\n        },\r\n\r\n    },\r\n    actions: {\r\n        updateSlideData({ commit }, payload) {\r\n            // 각 필드별로 mutation을 호출하여 상태 업데이트\r\n            commit('setId', payload.id);\r\n            commit('setLockStatus', payload.lock_status);\r\n            commit('setTraySlot', payload.traySlot);\r\n            commit('setSlotNo', payload.slotNo);\r\n            commit('setBarcodeNo', payload.barcodeNo);\r\n            commit('setPatientId', payload.patientId);\r\n            commit('setPatientNm', payload.patientNm);\r\n            commit('setGender', payload.gender);\r\n            commit('setBirthDay', payload.birthDay);\r\n            commit('setWbcCount', payload.wbcCount);\r\n            commit('setSlotId', payload.slotId);\r\n            commit('setOrderDttm', payload.orderDttm);\r\n            commit('setTestType', payload.testType);\r\n            commit('setAnalyzedDttm', payload.analyzedDttm);\r\n            commit('setTactTime', payload.tactTime);\r\n            commit('setMaxWbcCount', payload.maxWbcCount);\r\n            commit('setBfLowPowerPath', payload.bf_lowPowerPath);\r\n            commit('setCassetId', payload.cassetId);\r\n            commit('setIsNormal', payload.isNormal);\r\n            commit('setWbcInfo', payload.wbcInfo);\r\n            commit('setWbcInfoAfter', payload.wbcInfoAfter);\r\n            commit('setRbcInfo', payload.rbcInfo);\r\n            commit('setRbcInfoAfter', payload.rbcInfoAfter);\r\n            commit('setSubmitState', payload.submitState);\r\n            commit('setSubmitOfDate', payload.submitOfDate);\r\n            commit('setSubmitUserId', payload.submitUserId);\r\n            commit('setRbcInfoPosAfter', payload.rbcInfoPosAfter);\r\n            commit('setIsNsNbIntegration', payload.isNsNbIntegration);\r\n            commit('setWbcMemo', payload.wbcMemo);\r\n            commit('setRbcMemo', payload.rbcMemo);\r\n            commit('setPcIp', payload.pcIp);\r\n            commit('setCbcPatientNo', payload.cbcPatientNo);\r\n            commit('setCbcPatientNm', payload.cbcPatientNm);\r\n            commit('setCbcSex', payload.cbcSex);\r\n            commit('setCbcAge', payload.cbcAge);\r\n            commit('setImgDriveRootPath', payload.img_drive_root_path);\r\n            commit('setHosName', payload.hosName);\r\n            commit('setAbnormalClassInfo', payload.abnormalClassInfo);\r\n        },\r\n        resetSlideData({ commit }) {\r\n            commit('resetState');\r\n        },\r\n\r\n    },\r\n};\r\n\r\nexport default slideDataModule;\r\n","// index.vue\r\nimport {createStore} from \"vuex\";\r\nimport {userModule} from \"@/store/modules/userModule\";\r\nimport {executeModule} from '@/store/modules/analysis/executeModule';\r\nimport {workingViewModule} from '@/store/modules/analysis/workingViewModule';\r\nimport {embeddedStatusModule} from '@/store/modules/embeddedStatusModule';\r\nimport {orderListModule} from '@/store/modules/analysis/orderListModule';\r\nimport {runningInfoModule} from '@/store/modules/testPageCommon/ruuningInfo';\r\nimport {commonModule} from \"@/store/modules/commonModule\";\r\nimport {dataBaseSetDataModule} from \"@/store/modules/dataBaseSetData/dataBaseSetDataModule\";\r\nimport {timeModule} from \"@/store/modules/timeModule\";\r\nimport slideDataModule from \"@/store/modules/runningDataModule\";\r\n\r\n\r\nconst store = createStore({\r\n    modules: {\r\n        userModule,\r\n        executeModule,\r\n        workingViewModule,\r\n        embeddedStatusModule,\r\n        orderListModule,\r\n        runningInfoModule,\r\n        commonModule,\r\n        dataBaseSetDataModule,\r\n        timeModule,\r\n        slideDataModule,\r\n    }\r\n\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n","import { settingName } from \"@/common/defines/constants/settings\";\r\nimport {\r\n    putCellImgApi,\r\n    putOrderClassApi,\r\n    putRbcDegreeApi,\r\n    updateBfHotKeysApi,\r\n    updateCbcCodeRbcApi,\r\n    updateFilePathSetApi,\r\n    updateImagePrintApi,\r\n    updateLisCodeRbcApi,\r\n    updateLisCodeWbcApi, updateMinCountApi,\r\n    updateNormalRangeApi,\r\n    updateRunInfoApi,\r\n    updateWbcCustomClassApi,\r\n    updateWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport store from \"@/store/index\";\r\n\r\nexport const settingUpdate = async (settingType: string, settingUpdatingData: any) => {\r\n    if (!settingType || !settingUpdatingData) return;\r\n\r\n    switch (settingType) {\r\n        case settingName.cellImageAnalyzed:\r\n            const cellImageObj = settingUpdatingData;\r\n            const cellImageId = cellImageObj.id;\r\n            if (cellImageObj?.id) {\r\n                delete cellImageObj.id;\r\n            }\r\n            try {\r\n                const result = await putCellImgApi(cellImageObj, cellImageId);\r\n                if (result) {\r\n                    const data: any = result?.data;\r\n                    await store.dispatch('commonModule/setCommonInfo', { isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N' });\r\n                    await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n                        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n                    });\r\n                    // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n                    sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n                    sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n                    sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n                    sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n                    sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n                    sessionStorage.setItem('edgeShotLPCount', String(data?.edgeShotLPCount));\r\n                    sessionStorage.setItem('edgeShotHPCount', String(data?.edgeShotHPCount));\r\n                    sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n                    sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n                    const keepPageType = window.PROJECT_TYPE === 'pb' ? 'keepPage': 'bmKeepPage';\r\n                    sessionStorage.setItem(keepPageType, String(data?.keepPage));\r\n                    await store.dispatch('commonModule/setCommonInfo', { showLISUploadAfterCheckingAll: data?.lisUploadCheckAll });\r\n                    await store.dispatch('commonModule/setCommonInfo', {resetAnalyzing: true});\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.rbcDegree:\r\n            try {\r\n                const rbcDegreeList: any = [];\r\n                settingUpdatingData.forEach((category: any) => {\r\n                    category.classInfo.forEach((classItem: any) => {\r\n                        rbcDegreeList.push({\r\n                            categoryId: category.categoryId,\r\n                            categoryNm: category.categoryNm,\r\n                            classId: classItem.classId,\r\n                            classNm: classItem.classNm,\r\n                            degree1: classItem.degree1,\r\n                            degree2: classItem.degree2,\r\n                            degree3: classItem.degree3,\r\n                        });\r\n                    });\r\n                });\r\n                await putRbcDegreeApi(rbcDegreeList);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.wbcRunningCount:\r\n            try {\r\n                await updateRunInfoApi({ wbcRunCountItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.wbcCustomClass:\r\n            try {\r\n                await updateWbcCustomClassApi({ classArr: settingUpdatingData });\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.wbcHotKeys:\r\n            try {\r\n                await updateWbcHotKeysApi({ wbcHotKeysItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.bfHotKeys:\r\n            try {\r\n                await updateBfHotKeysApi({ bfHotKeysItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.normalRange:\r\n            try {\r\n                await updateNormalRangeApi({ normalRangeItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.classOrder:\r\n            for (const index in settingUpdatingData) {\r\n                settingUpdatingData[index].orderIdx = index;\r\n            }\r\n            try {\r\n                await putOrderClassApi(settingUpdatingData);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.imagePrint:\r\n            try {\r\n                await updateImagePrintApi({ imagePrintItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.lisCode:\r\n            await updateLisCodeWbcApi({ lisCodeItems: settingUpdatingData.lisCodeWbcArr });\r\n            await updateLisCodeRbcApi({ lisCodeItems: settingUpdatingData.lisCodeRbcArr });\r\n            await updateMinCountApi({ minCountItems: settingUpdatingData.minCountArr });\r\n            break;\r\n\r\n        case settingName.cbcCode:\r\n            try {\r\n                await updateCbcCodeRbcApi({ cbcCodeItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.filePathSet:\r\n            try {\r\n                await updateFilePathSetApi({ filePathSetItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n    await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTabSubButtons\" }\nconst _hoisted_2 = { class: \"tab-content\" }\n\nimport {computed, onMounted, ref} from 'vue';\r\nimport CellImageAnalyzed from \"@/views/setting/analysisDatabase/component/cellImageAnalyzed.vue\";\r\nimport RbcDegree from \"@/views/setting/analysisDatabase/component/rbcDegree.vue\";\r\nimport DeviceControls from '@/views/setting/analysisDatabase/component/deviceControls.vue'\r\nimport WbcCustomClass from '@/views/setting/analysisDatabase/component/customClass.vue'\r\nimport WbcHotKey from \"@/views/setting/analysisDatabase/component/wbcHotKeys.vue\";\r\nimport BfHotKey from '@/views/setting/analysisDatabase/component/bfHotKeys.vue';\r\nimport NormalRange from \"@/views/setting/analysisDatabase/component/normalRange.vue\";\r\nimport WbcOrder from \"@/views/setting/analysisDatabase/component/classOrder.vue\";\r\nimport WbcRunningCount from \"@/views/setting/analysisDatabase/component/wbcRunningCount.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {settingUpdate} from \"@/common/lib/utils/settingSave\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst activeTab = ref('cellImageAnalyzed');\r\nconst projectType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\n\r\nconst movingTab = ref('');\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\nconst afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\nconst activateTab = (tabName: string) => {\r\n  if (activeTab.value === tabName) return;\r\n  movingTab.value = tabName;\r\n  if (beforeSettingFormattedString.value !== afterSettingFormattedString.value) {\r\n    showConfirm.value = true;\r\n    confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n  } else {\r\n    activeTab.value = movingTab.value;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst showErrorAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst activeTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'cellImageAnalyzed':\r\n      return CellImageAnalyzed;\r\n    case 'rbcDegree':\r\n      return RbcDegree;\r\n    case 'deviceControls':\r\n      return DeviceControls;\r\n    case 'wbcCustomClass':\r\n      return WbcCustomClass;\r\n    case 'wbcHotKeys':\r\n      return WbcHotKey;\r\n    case 'bfHotKeys':\r\n      return BfHotKey;\r\n    case 'normalRange':\r\n      return NormalRange;\r\n    case 'wbcOrder':\r\n      return WbcOrder;\r\n    case 'wbcRunningCount':\r\n      return WbcRunningCount;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  activeTab.value = movingTab.value;\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  try {\r\n    await settingUpdate(settingType.value, JSON.parse(afterSettingFormattedString.value));\r\n    await showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n  } catch (e) {\r\n    await showErrorAlert(MESSAGES.settingSaveFailure);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[0] || (_cache[0] = ($event: any) => (activateTab('cellImageAnalyzed'))),\n          class: _normalizeClass({ 'active': activeTab.value === 'cellImageAnalyzed' })\n        }, \"Cell Image Analyzed\", 2),\n        (viewerCheck.value !== 'viewer')\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              (projectType.value === 'pb')\n                ? (_openBlock(), _createElementBlock(\"button\", {\n                    key: 0,\n                    onClick: _cache[1] || (_cache[1] = ($event: any) => (activateTab('rbcDegree'))),\n                    class: _normalizeClass({ 'active': activeTab.value === 'rbcDegree' })\n                  }, \"RBC Degree\", 2))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"button\", {\n                onClick: _cache[2] || (_cache[2] = ($event: any) => (activateTab(\"deviceControls\"))),\n                class: _normalizeClass({ 'active': activeTab.value === 'deviceControls' })\n              }, \"Device Controls\", 2),\n              _createElementVNode(\"button\", {\n                onClick: _cache[3] || (_cache[3] = ($event: any) => (activateTab(\"wbcRunningCount\"))),\n                class: _normalizeClass({ 'active': activeTab.value === 'wbcRunningCount' })\n              }, \"WBC Running Count\", 2),\n              _createElementVNode(\"button\", {\n                onClick: _cache[4] || (_cache[4] = ($event: any) => (activateTab(\"wbcCustomClass\"))),\n                class: _normalizeClass({ 'active': activeTab.value === 'wbcCustomClass' })\n              }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Custom Class \", 3),\n              _createElementVNode(\"button\", {\n                onClick: _cache[5] || (_cache[5] = ($event: any) => (activateTab(\"wbcHotKeys\"))),\n                class: _normalizeClass({ 'active': activeTab.value === 'wbcHotKeys' })\n              }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Hot Keys \", 3),\n              (projectType.value === 'pb')\n                ? (_openBlock(), _createElementBlock(\"button\", {\n                    key: 1,\n                    onClick: _cache[6] || (_cache[6] = ($event: any) => (activateTab(\"bfHotKeys\"))),\n                    class: _normalizeClass({ 'active': activeTab.value === 'bfHotKeys' })\n                  }, \"BF Hot Keys\", 2))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"button\", {\n                onClick: _cache[7] || (_cache[7] = ($event: any) => (activateTab(\"normalRange\"))),\n                class: _normalizeClass({ 'active': activeTab.value === 'normalRange' })\n              }, \"Normal Range\", 2),\n              _createElementVNode(\"button\", {\n                onClick: _cache[8] || (_cache[8] = ($event: any) => (activateTab(\"wbcOrder\"))),\n                class: _normalizeClass({ 'active': activeTab.value === 'wbcOrder' })\n              }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Order \", 3)\n            ], 64))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (_openBlock(), _createBlock(_resolveDynamicComponent(activeTabComponent.value)))\n      ])\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"settingTabSubButtons\">\r\n      <button @click=\"activateTab('cellImageAnalyzed')\" :class=\"{ 'active': activeTab === 'cellImageAnalyzed' }\">Cell Image Analyzed</button>\r\n      <template v-if=\"viewerCheck !== 'viewer'\">\r\n        <button v-if=\"projectType === 'pb'\" @click=\"activateTab('rbcDegree')\" :class=\"{ 'active': activeTab === 'rbcDegree' }\">RBC Degree</button>\r\n        <button @click='activateTab(\"deviceControls\")' :class=\"{ 'active': activeTab === 'deviceControls' }\">Device Controls</button>\r\n        <button @click='activateTab(\"wbcRunningCount\")' :class=\"{ 'active': activeTab === 'wbcRunningCount' }\">WBC Running Count</button>\r\n        <button @click='activateTab(\"wbcCustomClass\")' :class=\"{ 'active': activeTab === 'wbcCustomClass' }\">\r\n          {{ projectType === 'pb' ? 'WBC' : 'BM' }} Custom Class\r\n        </button>\r\n        <button @click='activateTab(\"wbcHotKeys\")' :class=\"{ 'active': activeTab === 'wbcHotKeys' }\">\r\n          {{ projectType === 'pb' ? 'WBC' : 'BM' }} Hot Keys\r\n        </button>\r\n        <button v-if=\"projectType === 'pb'\" @click='activateTab(\"bfHotKeys\")' :class=\"{ 'active': activeTab === 'bfHotKeys' }\">BF Hot Keys</button>\r\n        <button @click='activateTab(\"normalRange\")' :class=\"{ 'active': activeTab === 'normalRange' }\">Normal Range</button>\r\n        <button @click='activateTab(\"wbcOrder\")' :class=\"{ 'active': activeTab === 'wbcOrder' }\">\r\n          {{ projectType === 'pb' ? 'WBC' : 'BM' }} Order\r\n        </button>\r\n      </template>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <component :is=\"activeTabComponent\" />\r\n    </div>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from 'vue';\r\nimport CellImageAnalyzed from \"@/views/setting/analysisDatabase/component/cellImageAnalyzed.vue\";\r\nimport RbcDegree from \"@/views/setting/analysisDatabase/component/rbcDegree.vue\";\r\nimport DeviceControls from '@/views/setting/analysisDatabase/component/deviceControls.vue'\r\nimport WbcCustomClass from '@/views/setting/analysisDatabase/component/customClass.vue'\r\nimport WbcHotKey from \"@/views/setting/analysisDatabase/component/wbcHotKeys.vue\";\r\nimport BfHotKey from '@/views/setting/analysisDatabase/component/bfHotKeys.vue';\r\nimport NormalRange from \"@/views/setting/analysisDatabase/component/normalRange.vue\";\r\nimport WbcOrder from \"@/views/setting/analysisDatabase/component/classOrder.vue\";\r\nimport WbcRunningCount from \"@/views/setting/analysisDatabase/component/wbcRunningCount.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {settingUpdate} from \"@/common/lib/utils/settingSave\";\r\n\r\nconst store = useStore();\r\nconst activeTab = ref('cellImageAnalyzed');\r\nconst projectType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\n\r\nconst movingTab = ref('');\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\nconst afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\nconst activateTab = (tabName: string) => {\r\n  if (activeTab.value === tabName) return;\r\n  movingTab.value = tabName;\r\n  if (beforeSettingFormattedString.value !== afterSettingFormattedString.value) {\r\n    showConfirm.value = true;\r\n    confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n  } else {\r\n    activeTab.value = movingTab.value;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst showErrorAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst activeTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'cellImageAnalyzed':\r\n      return CellImageAnalyzed;\r\n    case 'rbcDegree':\r\n      return RbcDegree;\r\n    case 'deviceControls':\r\n      return DeviceControls;\r\n    case 'wbcCustomClass':\r\n      return WbcCustomClass;\r\n    case 'wbcHotKeys':\r\n      return WbcHotKey;\r\n    case 'bfHotKeys':\r\n      return BfHotKey;\r\n    case 'normalRange':\r\n      return NormalRange;\r\n    case 'wbcOrder':\r\n      return WbcOrder;\r\n    case 'wbcRunningCount':\r\n      return WbcRunningCount;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  activeTab.value = movingTab.value;\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  try {\r\n    await settingUpdate(settingType.value, JSON.parse(afterSettingFormattedString.value));\r\n    await showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n  } catch (e) {\r\n    await showErrorAlert(MESSAGES.settingSaveFailure);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- 자식 모달 컴포넌트 -->\r\n<template>\r\n  <div class=\"layer\">\r\n    <div class=\"layer-content oil\" :style=\"width ? `width: ${width}px; max-width: none;` : ''\">\r\n      <div class=\"layer-header\">\r\n        <slot name=\"header\"></slot>\r\n        <button @click=\"closeLayer\" class=\"alertCloseButton\">Close</button>\r\n      </div>\r\n      <div class=\"layer-body\">\r\n        <slot name=\"content\"></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, defineProps, defineEmits } from 'vue';\r\n\r\nconst visible = ref(false);\r\nconst props = defineProps(['width'])\r\nconst emit = defineEmits(['update:closeLayer']);\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = () => {\r\n  visible.value = false;\r\n  emit('update:closeLayer', false);\r\n};\r\n\r\nonMounted(() => {\r\n  console.log(props.width);\r\n  emit('afterOpen'); // 모달이 열린 후에 이벤트를 부모 컴포넌트로 전달\r\n});\r\n</script>","import script from \"./modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./modal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const isMasterId = (userId: string) => 'UIMD' === userId.toUpperCase() || 'uimd' === userId.toLowerCase();\r\n\r\nexport const isUserAdminType = (userType: 'admin' | 'normal') => userType === 'admin';\r\n``\r\nexport const isObjectEmpty = <T extends object | undefined | null>(object: T) => {\r\n    if (object === null || object === undefined) return true;\r\n    return Object.keys(object).length === 0;\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText, resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingContainer\" }\nconst _hoisted_2 = { class: \"searchUserContainer\" }\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = { class: \"table defaultTable mt20\" }\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = { class: \"editModalContainer\" }\nconst _hoisted_8 = { class: \"userInputWrapper\" }\nconst _hoisted_9 = [\"disabled\"]\nconst _hoisted_10 = [\"value\"]\nconst _hoisted_11 = { class: \"userInputWrapper\" }\nconst _hoisted_12 = { class: \"userInputWrapper\" }\nconst _hoisted_13 = { class: \"userInputWrapper\" }\nconst _hoisted_14 = { class: \"userInputWrapper\" }\nconst _hoisted_15 = { class: \"userInputWrapper\" }\n\nimport {computed, onMounted, ref} from \"vue\";\r\nimport {deleteUserApi, getAllUsersApi, getUserApi, putUserDataApi} from \"@/common/api/service/user/userApi\";\r\nimport { User } from '@/common/api/service/user/dto/userDto'\r\nimport Modal from \"@/components/commonUi/modal.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport router from \"@/router\";\r\nimport { useStore } from \"vuex\";\r\nimport { isMasterId } from \"@/common/lib/utils/validators\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore()\r\nconst storedUser = computed(() => store.state.userModule)\r\nconst getStoredUser = storedUser.value;\r\nconst currentUserId = ref('');\r\nconst allUsers = ref<User[]>([]);\r\nconst date = (text: string) => {\r\n  return text.replace('T', ' ').replace('.000Z', '');\r\n}\r\nconst userSearchOption = ref('userId')\r\nconst userSearchOptions = ref([\r\n  { value: 'userId', text: 'User Id' },\r\n  { value: 'name', text: 'User Name' }\r\n])\r\nconst userTypeOptions = ref([\r\n  { value: 'normal', text: 'normal'},\r\n  { value: 'admin', text: 'admin'},\r\n])\r\n\r\nconst inputText = ref('');\r\nconst isModalVisible = ref(false);\r\nconst selectedUserData = ref<any>({});\r\nconst selectedUserId = ref('');\r\nconst formattedSubscriptionDate = computed(() => date(selectedUserData.value.subscriptionDate))\r\nconst formattedLatestDate = computed(() => date(selectedUserData.value.latestDate))\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  currentUserId.value = getStoredUser.userId;\r\n  await getAllUsers();\r\n});\r\n\r\nconst filterUsers = (users: any[], searchText: any, searchOption: string) => {\r\n  const searchQuery = searchText.toLowerCase();\r\n  return users.filter(item => {\r\n    const searchField = searchOption === 'userId' ? String(item.userId) : item.name;\r\n    return searchField.toLowerCase().includes(searchQuery);\r\n  });\r\n};\r\n\r\nconst onSearch = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value));\r\n\r\n    if (result && result.data) {\r\n      const users = result.data.users || [];\r\n      const filteredUsers = filterUsers(users, inputText.value, userSearchOption.value);\r\n      allUsers.value = filteredUsers;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n  }\r\n};\r\n\r\nconst putSelectedUserData = async () => {\r\n  try {\r\n    await putUserDataApi(selectedUserData.value, selectedUserId.value);\r\n    await getAllUsers();\r\n    isModalVisible.value = false;\r\n\r\n    const currentUserData: any = allUsers.value.find((user) => user.userId === currentUserId.value)\r\n    await store.dispatch('userModule/setUserAction', {\r\n      id: currentUserData.id,\r\n      userId: currentUserData.userId,\r\n      employeeNo: currentUserData.employeeNo,\r\n      latestDate: currentUserData.latestDate,\r\n      password: currentUserData.password,\r\n      subscriptionDate: currentUserData.subscriptionDate,\r\n      userType: currentUserData.userType,\r\n      name: currentUserData.name,\r\n    })\r\n    sessionStorage.setItem('user', JSON.stringify(allUsers.value.find((user) => user.userId === currentUserId.value)));\r\n    localStorage.setItem('user', JSON.stringify(allUsers.value.find((user) => user.userId === currentUserId.value)));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst getAllUsers = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value))\r\n\r\n    if (result && result?.data) {\r\n      allUsers.value = result.data.users || []\r\n    }\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst getSelectedUser = async (selectedUserIdParam: string) => {\r\n  selectedUserId.value = selectedUserIdParam;\r\n  try {\r\n    const result: any = await getUserApi(selectedUserIdParam)\r\n    selectedUserData.value = result.data.user;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst openLayer = async (selectedUserId: string) => {\r\n  await getSelectedUser(selectedUserId);\r\n  if (selectedUserId === '') return;\r\n  isModalVisible.value = true;\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  //\r\n}\r\n\r\nconst closeLayer = (isVisible: boolean) => {\r\n  isModalVisible.value = isVisible;\r\n  selectedUserData.value = {};\r\n  selectedUserId.value = '';\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n\r\n  try {\r\n    await deleteUserApi({ userId: selectedUserId.value })\r\n    await getAllUsers();\r\n\r\n    // 현재 User가 자기 자신을 삭제할 경우\r\n    if (selectedUserId.value === currentUserId.value) {\r\n      router.push('/user/login');\r\n      localStorage.removeItem('user');\r\n      sessionStorage.removeItem('user');\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst handleDeleteUser = (selectedUserIdParam: string) => {\r\n  showConfirm.value = true;\r\n  selectedUserId.value = selectedUserIdParam;\r\n  confirmMessage.value = `Do you wish to proceed with deleting user ID ${selectedUserIdParam}?`\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((userSearchOption).value = $event)),\n          class: \"searchSelect\"\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userSearchOptions.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_3))\n          }), 128))\n        ], 512), [\n          [_vModelSelect, userSearchOption.value]\n        ]),\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((inputText).value = $event)),\n          class: \"searchInputBox\"\n        }, null, 512), [\n          [_vModelText, inputText.value]\n        ]),\n        _createVNode(_component_font_awesome_icon, {\n          icon: ['fas', 'search'],\n          class: \"searchBtn\",\n          onClick: onSearch\n        })\n      ]),\n      _createElementVNode(\"table\", _hoisted_4, [\n        _createElementVNode(\"thead\", null, [\n          _createElementVNode(\"tr\", null, [\n            _cache[10] || (_cache[10] = _createElementVNode(\"th\", null, \"No.\", -1)),\n            _cache[11] || (_cache[11] = _createElementVNode(\"th\", null, \"User Type\", -1)),\n            _cache[12] || (_cache[12] = _createElementVNode(\"th\", null, \"User ID\", -1)),\n            _cache[13] || (_cache[13] = _createElementVNode(\"th\", null, \"Name\", -1)),\n            _cache[14] || (_cache[14] = _createElementVNode(\"th\", null, \"Employee\", -1)),\n            _cache[15] || (_cache[15] = _createElementVNode(\"th\", null, \"Subscription Date\", -1)),\n            _cache[16] || (_cache[16] = _createElementVNode(\"th\", null, \"Latest Date\", -1)),\n            (_unref(getStoredUser).userType.includes('admin'))\n              ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                  _cache[8] || (_cache[8] = _createElementVNode(\"th\", null, \"Edit\", -1)),\n                  _cache[9] || (_cache[9] = _createElementVNode(\"th\", null, \"Delete\", -1))\n                ], 64))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]),\n        _createElementVNode(\"tbody\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allUsers.value, (user) => {\n            return (_openBlock(), _createElementBlock(\"tr\", {\n              key: user.id\n            }, [\n              _createElementVNode(\"td\", null, _toDisplayString(user.id), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(user.userType), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(user.userId), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(user.name), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(user.employeeNo), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(date(user.subscriptionDate)), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(date(user.latestDate)), 1),\n              (_unref(getStoredUser).userType.includes('admin'))\n                ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                    _createElementVNode(\"td\", {\n                      class: \"cursorPointer hoverSizeAction\",\n                      onClick: ($event: any) => (openLayer(user.userId))\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'pen-to-square'] })\n                    ], 8, _hoisted_5),\n                    _createElementVNode(\"td\", {\n                      class: \"cursorPointer hoverSizeAction\",\n                      onClick: ($event: any) => (handleDeleteUser(user.userId))\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'trash'] })\n                    ], 8, _hoisted_6)\n                  ], 64))\n                : _createCommentVNode(\"\", true)\n            ]))\n          }), 128))\n        ])\n      ])\n    ]),\n    (isModalVisible.value)\n      ? (_openBlock(), _createBlock(Modal, {\n          key: 0,\n          \"onUpdate:closeLayer\": closeLayer,\n          onAfterOpen: onModalOpen\n        }, {\n          header: _withCtx(() => _cache[17] || (_cache[17] = [\n            _createElementVNode(\"h2\", null, \"Edit Account\", -1)\n          ])),\n          content: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_7, [\n              _createElementVNode(\"div\", _hoisted_8, [\n                _cache[18] || (_cache[18] = _createElementVNode(\"label\", {\n                  class: \"userLabel\",\n                  for: \"userType\",\n                  style: {\"line-height\":\"0\"}\n                }, \"User Type\", -1)),\n                _withDirectives(_createElementVNode(\"select\", {\n                  id: \"userType\",\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((selectedUserData.value.userType) = $event)),\n                  class: \"searchSelect inputMiddleWrapper\",\n                  style: {\"width\":\"132px !important\"},\n                  disabled: !_unref(isMasterId)(currentUserId.value)\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userTypeOptions.value, (option) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: option.value,\n                      value: option.value\n                    }, _toDisplayString(option.text), 9, _hoisted_10))\n                  }), 128))\n                ], 8, _hoisted_9), [\n                  [_vModelSelect, selectedUserData.value.userType]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_11, [\n                _cache[19] || (_cache[19] = _createElementVNode(\"label\", {\n                  class: \"userLabel\",\n                  for: \"userId\"\n                }, \"User ID\", -1)),\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"userId\",\n                  class: \"inputMiddleWrapper disabledInput\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((selectedUserData.value.userId) = $event)),\n                  disabled: \"\",\n                  readonly: \"\"\n                }, null, 512), [\n                  [_vModelText, selectedUserData.value.userId]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_12, [\n                _cache[20] || (_cache[20] = _createElementVNode(\"label\", {\n                  class: \"userLabel\",\n                  for: \"userName\"\n                }, \"Name\", -1)),\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"userName\",\n                  class: \"inputMiddleWrapper\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((selectedUserData.value.name) = $event))\n                }, null, 512), [\n                  [_vModelText, selectedUserData.value.name]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_13, [\n                _cache[21] || (_cache[21] = _createElementVNode(\"label\", {\n                  class: \"userLabel\",\n                  for: \"employeeNo\"\n                }, \"Employee\", -1)),\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"employeeNo\",\n                  class: \"inputMiddleWrapper\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((selectedUserData.value.employeeNo) = $event))\n                }, null, 512), [\n                  [_vModelText, selectedUserData.value.employeeNo]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_14, [\n                _cache[22] || (_cache[22] = _createElementVNode(\"label\", {\n                  class: \"userLabel\",\n                  for: \"subscriptionDate\"\n                }, \"Subscription Date\", -1)),\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"subscriptionDate\",\n                  class: \"inputMiddleWrapper disabledInput\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((formattedSubscriptionDate).value = $event)),\n                  disabled: \"\"\n                }, null, 512), [\n                  [_vModelText, formattedSubscriptionDate.value]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_15, [\n                _cache[23] || (_cache[23] = _createElementVNode(\"label\", {\n                  class: \"userLabel\",\n                  for: \"latestDate\"\n                }, \"Latest Date\", -1)),\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"latestDate\",\n                  class: \"inputMiddleWrapper disabledInput\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((formattedLatestDate).value = $event)),\n                  disabled: \"\"\n                }, null, 512), [\n                  [_vModelText, formattedLatestDate.value]\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", { class: \"modalBottom\" }, [\n              _createElementVNode(\"button\", {\n                type: \"button\",\n                class: \"alertButton\",\n                onClick: putSelectedUserData\n              }, \"Edit\")\n            ])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 1,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"settingContainer\">\r\n    <div class=\"searchUserContainer\">\r\n      <select v-model=\"userSearchOption\" class=\"searchSelect\">\r\n        <option v-for=\"option in userSearchOptions\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <input type=\"text\" v-model=\"inputText\" class=\"searchInputBox\">\r\n      <font-awesome-icon :icon=\"['fas', 'search']\" class=\"searchBtn\" @click=\"onSearch\"/>\r\n\r\n    </div>\r\n    <table class=\"table defaultTable mt20\">\r\n      <thead>\r\n        <tr>\r\n          <th>No.</th>\r\n          <th>User Type</th>\r\n          <th>User ID</th>\r\n          <th>Name</th>\r\n          <th>Employee</th>\r\n          <th>Subscription Date</th>\r\n          <th>Latest Date</th>\r\n          <template v-if=\"getStoredUser.userType.includes('admin')\">\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </template>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in allUsers\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.userType }}</td>\r\n          <td>{{ user.userId }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.employeeNo }}</td>\r\n          <td>{{ date(user.subscriptionDate) }}</td>\r\n          <td>{{ date(user.latestDate) }}</td>\r\n          <template v-if=\"getStoredUser.userType.includes('admin')\">\r\n            <td class=\"cursorPointer hoverSizeAction\" @click=\"openLayer(user.userId)\">\r\n              <font-awesome-icon :icon=\"['fas', 'pen-to-square']\" />\r\n            </td>\r\n            <td class=\"cursorPointer hoverSizeAction\" @click=\"handleDeleteUser(user.userId)\">\r\n              <font-awesome-icon :icon=\"['fas', 'trash']\" />\r\n            </td>\r\n          </template>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <Modal v-if=\"isModalVisible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <template #header>\r\n      <h2>Edit Account</h2>\r\n    </template>\r\n\r\n    <template #content>\r\n      <div class=\"editModalContainer\">\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"userType\" style=\"line-height: 0\">User Type</label>\r\n          <select id=\"userType\" v-model=\"selectedUserData.userType\" class=\"searchSelect inputMiddleWrapper\" style=\"width: 132px !important;\" :disabled=\"!isMasterId(currentUserId)\">\r\n            <option v-for=\"option in userTypeOptions\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"userId\">User ID</label>\r\n          <input id=\"userId\" class=\"inputMiddleWrapper disabledInput\" type=\"text\" v-model=\"selectedUserData.userId\" disabled readonly />\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"userName\">Name</label>\r\n          <input id=\"userName\" class=\"inputMiddleWrapper\" type=\"text\" v-model=\"selectedUserData.name\" />\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"employeeNo\">Employee</label>\r\n          <input id=\"employeeNo\" class=\"inputMiddleWrapper\" type=\"text\" v-model=\"selectedUserData.employeeNo\" />\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"subscriptionDate\">Subscription Date</label>\r\n          <input id=\"subscriptionDate\" class=\"inputMiddleWrapper disabledInput\" type=\"text\" v-model=\"formattedSubscriptionDate\" disabled />\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"latestDate\">Latest Date</label>\r\n          <input id=\"latestDate\" class=\"inputMiddleWrapper disabledInput\" type=\"text\" v-model=\"formattedLatestDate\" disabled />\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"modalBottom\">\r\n        <button type=\"button\" class=\"alertButton\" @click=\"putSelectedUserData\">Edit</button>\r\n      </div>\r\n    </template>\r\n  </Modal>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from \"vue\";\r\nimport {deleteUserApi, getAllUsersApi, getUserApi, putUserDataApi} from \"@/common/api/service/user/userApi\";\r\nimport { User } from '@/common/api/service/user/dto/userDto'\r\nimport Modal from \"@/components/commonUi/modal.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport router from \"@/router\";\r\nimport { useStore } from \"vuex\";\r\nimport { isMasterId } from \"@/common/lib/utils/validators\";\r\n\r\nconst store = useStore()\r\nconst storedUser = computed(() => store.state.userModule)\r\nconst getStoredUser = storedUser.value;\r\nconst currentUserId = ref('');\r\nconst allUsers = ref<User[]>([]);\r\nconst date = (text: string) => {\r\n  return text.replace('T', ' ').replace('.000Z', '');\r\n}\r\nconst userSearchOption = ref('userId')\r\nconst userSearchOptions = ref([\r\n  { value: 'userId', text: 'User Id' },\r\n  { value: 'name', text: 'User Name' }\r\n])\r\nconst userTypeOptions = ref([\r\n  { value: 'normal', text: 'normal'},\r\n  { value: 'admin', text: 'admin'},\r\n])\r\n\r\nconst inputText = ref('');\r\nconst isModalVisible = ref(false);\r\nconst selectedUserData = ref<any>({});\r\nconst selectedUserId = ref('');\r\nconst formattedSubscriptionDate = computed(() => date(selectedUserData.value.subscriptionDate))\r\nconst formattedLatestDate = computed(() => date(selectedUserData.value.latestDate))\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  currentUserId.value = getStoredUser.userId;\r\n  await getAllUsers();\r\n});\r\n\r\nconst filterUsers = (users: any[], searchText: any, searchOption: string) => {\r\n  const searchQuery = searchText.toLowerCase();\r\n  return users.filter(item => {\r\n    const searchField = searchOption === 'userId' ? String(item.userId) : item.name;\r\n    return searchField.toLowerCase().includes(searchQuery);\r\n  });\r\n};\r\n\r\nconst onSearch = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value));\r\n\r\n    if (result && result.data) {\r\n      const users = result.data.users || [];\r\n      const filteredUsers = filterUsers(users, inputText.value, userSearchOption.value);\r\n      allUsers.value = filteredUsers;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n  }\r\n};\r\n\r\nconst putSelectedUserData = async () => {\r\n  try {\r\n    await putUserDataApi(selectedUserData.value, selectedUserId.value);\r\n    await getAllUsers();\r\n    isModalVisible.value = false;\r\n\r\n    const currentUserData: any = allUsers.value.find((user) => user.userId === currentUserId.value)\r\n    await store.dispatch('userModule/setUserAction', {\r\n      id: currentUserData.id,\r\n      userId: currentUserData.userId,\r\n      employeeNo: currentUserData.employeeNo,\r\n      latestDate: currentUserData.latestDate,\r\n      password: currentUserData.password,\r\n      subscriptionDate: currentUserData.subscriptionDate,\r\n      userType: currentUserData.userType,\r\n      name: currentUserData.name,\r\n    })\r\n    sessionStorage.setItem('user', JSON.stringify(allUsers.value.find((user) => user.userId === currentUserId.value)));\r\n    localStorage.setItem('user', JSON.stringify(allUsers.value.find((user) => user.userId === currentUserId.value)));\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst getAllUsers = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value))\r\n\r\n    if (result && result?.data) {\r\n      allUsers.value = result.data.users || []\r\n    }\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst getSelectedUser = async (selectedUserIdParam: string) => {\r\n  selectedUserId.value = selectedUserIdParam;\r\n  try {\r\n    const result: any = await getUserApi(selectedUserIdParam)\r\n    selectedUserData.value = result.data.user;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst openLayer = async (selectedUserId: string) => {\r\n  await getSelectedUser(selectedUserId);\r\n  if (selectedUserId === '') return;\r\n  isModalVisible.value = true;\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  //\r\n}\r\n\r\nconst closeLayer = (isVisible: boolean) => {\r\n  isModalVisible.value = isVisible;\r\n  selectedUserData.value = {};\r\n  selectedUserId.value = '';\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n\r\n  try {\r\n    await deleteUserApi({ userId: selectedUserId.value })\r\n    await getAllUsers();\r\n\r\n    // 현재 User가 자기 자신을 삭제할 경우\r\n    if (selectedUserId.value === currentUserId.value) {\r\n      router.push('/user/login');\r\n      localStorage.removeItem('user');\r\n      sessionStorage.removeItem('user');\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst handleDeleteUser = (selectedUserIdParam: string) => {\r\n  showConfirm.value = true;\r\n  selectedUserId.value = selectedUserIdParam;\r\n  confirmMessage.value = `Do you wish to proceed with deleting user ID ${selectedUserIdParam}?`\r\n}\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingImagePrint\" }\nconst _hoisted_2 = [\"value\"]\nconst _hoisted_3 = { class: \"mt10\" }\n\nimport { ref, onMounted, computed, watch } from 'vue';\r\nimport { imagePrintAndBm, imagePrintAndWbc, settingName } from \"@/common/defines/constants/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createImagePrintApi,\r\n  getImagePrintApi,\r\n  updateImagePrintApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport { MESSAGES } from '@/common/defines/constants/constantMessageText';\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from \"vue-router\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ImagePrint',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst imagePrintAndWbcArr = ref<any[]>([]);\r\nconst selectedItems = ref<string[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst allChecked = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.imagePrint });\r\n});\r\n\r\nwatch(() => selectedItems.value, async (newItem) => {\r\n  imagePrintAndWbcArr.value.forEach((item) => {\r\n    item.checked = newItem.includes(item.classId);\r\n  });\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(imagePrintAndWbcArr.value) });\r\n  if (settingType.value !== settingName.imagePrint) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.imagePrint });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst saveImagePrint = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    imagePrintAndWbcArr.value.forEach((item) => {\r\n      item.checked = selectedItems.value.includes(item.classId);\r\n    });\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n    } else {\r\n      const updateResult = await updateImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        imagePrintAndWbcArr.value = window.PROJECT_TYPE ==='bm'? imagePrintAndBm : imagePrintAndWbc;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        imagePrintAndWbcArr.value = data;\r\n        selectedItems.value = data.filter((item) => item.checked).map((item) => item.classId);\r\n        allChecked.value = selectedItems.value.length === imagePrintAndWbcArr.value.length ? true : false;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst toggleAllChecks = () => {\r\n  allChecked.value = !allChecked.value;\r\n  if (allChecked.value) {\r\n    selectedItems.value = imagePrintAndWbcArr.value.map(item => item.classId);\r\n  } else {\r\n    selectedItems.value = [];\r\n  }\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveImagePrint();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        class: \"imagePrintBtn mb20\",\n        type: \"button\",\n        onClick: toggleAllChecks\n      }, _toDisplayString(allChecked.value ? 'Uncheck All' : 'Check All'), 1),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imagePrintAndWbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.id\n        }, [\n          _createElementVNode(\"div\", null, _toDisplayString(item.fullNm), 1),\n          _createElementVNode(\"div\", null, [\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"checkbox\",\n              value: item.classId,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedItems).value = $event))\n            }, null, 8, _hoisted_2), [\n              [_vModelCheckbox, selectedItems.value]\n            ])\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (saveImagePrint()))\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"settingImagePrint\">\r\n    <button class=\"imagePrintBtn mb20\" type=\"button\" @click=\"toggleAllChecks\">{{ allChecked ? 'Uncheck All' : 'Check All' }}</button>\r\n    <label v-for=\"item in imagePrintAndWbcArr\" :key=\"item.id\">\r\n      <div>{{ item.fullNm }}</div>\r\n      <div><input type=\"checkbox\" :value=\"item.classId\" v-model=\"selectedItems\" /></div>\r\n    </label>\r\n  </div>\r\n  <div class=\"mt10\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveImagePrint()\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, computed, watch } from 'vue';\r\nimport { imagePrintAndBm, imagePrintAndWbc, settingName } from \"@/common/defines/constants/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createImagePrintApi,\r\n  getImagePrintApi,\r\n  updateImagePrintApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport { MESSAGES } from '@/common/defines/constants/constantMessageText';\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from \"vue-router\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst imagePrintAndWbcArr = ref<any[]>([]);\r\nconst selectedItems = ref<string[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst allChecked = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.imagePrint });\r\n});\r\n\r\nwatch(() => selectedItems.value, async (newItem) => {\r\n  imagePrintAndWbcArr.value.forEach((item) => {\r\n    item.checked = newItem.includes(item.classId);\r\n  });\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(imagePrintAndWbcArr.value) });\r\n  if (settingType.value !== settingName.imagePrint) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.imagePrint });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst saveImagePrint = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    imagePrintAndWbcArr.value.forEach((item) => {\r\n      item.checked = selectedItems.value.includes(item.classId);\r\n    });\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n    } else {\r\n      const updateResult = await updateImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        imagePrintAndWbcArr.value = window.PROJECT_TYPE ==='bm'? imagePrintAndBm : imagePrintAndWbc;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        imagePrintAndWbcArr.value = data;\r\n        selectedItems.value = data.filter((item) => item.checked).map((item) => item.classId);\r\n        allChecked.value = selectedItems.value.length === imagePrintAndWbcArr.value.length ? true : false;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst toggleAllChecks = () => {\r\n  allChecked.value = !allChecked.value;\r\n  if (allChecked.value) {\r\n    selectedItems.value = imagePrintAndWbcArr.value.map(item => item.classId);\r\n  } else {\r\n    selectedItems.value = [];\r\n  }\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveImagePrint();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./ImagePrint.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ImagePrint.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = { class: \"mb10\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\nconst _hoisted_4 = { class: \"alignDiv\" }\nconst _hoisted_5 = { class: \"mb10\" }\nconst _hoisted_6 = [\"onUpdate:modelValue\"]\nconst _hoisted_7 = { class: \"alignDiv\" }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"minCountWrapper\"\n}\nconst _hoisted_9 = {\n  key: 1,\n  class: \"minCountWrapper\"\n}\nconst _hoisted_10 = { class: \"mt10\" }\n\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {\r\n  lisCodeWbcOption,\r\n  LIS_CODE_RBC_OPTION,\r\n  minRunCount,\r\n  settingName,\r\n  WBC_CUSTOM_CLASS\r\n} from \"@/common/defines/constants/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createLisCodeWbcApi, createLisCodeRbcApi, createMinCountApi,\r\n  getLisCodeWbcApi, getLisCodeRbcApi, getMinCountApi,\r\n  updateLisCodeWbcApi, updateLisCodeRbcApi, updateMinCountApi, getWbcCustomClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {LisCodeRbcItem, LisCodeWbcItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport {minCountItem} from \"@/common/api/service/setting/dto/minCountDto\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {classArr} from \"@/common/api/service/setting/dto/wbcCustomClassDto\";\r\nimport {scrollToTop} from \"@/common/lib/utils/scroll\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'lisCode',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst lisCodeWbcArr = ref<LisCodeWbcItem[] | any>([]);\r\nconst lisCodeRbcArr = ref<LisCodeRbcItem[] | any>([]);\r\nconst minCountArr = ref<minCountItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst wbcCustomItems = ref<any>([]);\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n  await getWbcCustomClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.lisCode });\r\n});\r\n\r\nwatch(() => [lisCodeWbcArr.value, lisCodeRbcArr.value, minCountArr.value], async () => {\r\n  const afterSetting = {\r\n    lisCodeWbcArr: lisCodeWbcArr.value,\r\n    lisCodeRbcArr: lisCodeRbcArr.value,\r\n    minCountArr: minCountArr.value\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(afterSetting) });\r\n  if (settingType.value !== settingName.lisCode) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.lisCode });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result: any = await getWbcCustomClassApi();\r\n    if (result?.data) {\r\n      wbcCustomItems.value = result.data.filter((item: any) => item.abbreviation && item.fullNm);\r\n      setLisCodeWbcByCustomClass();\r\n    }\r\n  } catch (e) {\r\n    console.error('Error fetching WBC custom classes:', e);\r\n  }\r\n}\r\n\r\nconst setLisCodeWbcByCustomClass = async () => {\r\n  const wbcCustomItemClassIds = new Set(wbcCustomItems.value.map((item: any) => item.customNum));\r\n  const lisCodeWbcClassIds = new Set(lisCodeWbcArr.value.map((item: any) => item.classId));\r\n  const wbcCustomClassDefaultIds = new Set(WBC_CUSTOM_CLASS.map(item => String(item.customNum)));\r\n\r\n  // lisCodeWbc에서 없는 Custom Class 삭제 및 Custom Class 추가\r\n  lisCodeWbcArr.value = lisCodeWbcArr.value.filter((wbcInfo: LisCodeWbcItem) =>\r\n      !(wbcCustomClassDefaultIds.has(wbcInfo.classId) && !wbcCustomItemClassIds.has(wbcInfo.classId))\r\n  );\r\n\r\n  const newItems = wbcCustomItems.value\r\n      .filter((item: any) => !lisCodeWbcClassIds.has(item.customNum))\r\n      .map((item: any) => ({\r\n        fullNm: item.fullNm,\r\n        classId: item.customNum,\r\n        key: '',\r\n      }));\r\n\r\n  lisCodeWbcArr.value = [...lisCodeWbcArr.value, ...newItems];\r\n\r\n  const settingObj = {\r\n    lisCodeWbcArr: lisCodeWbcArr.value,\r\n    lisCodeRbcArr: lisCodeRbcArr.value,\r\n    minCountArr: minCountArr.value\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: settingObj });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: settingObj });\r\n}\r\n\r\nconst saveLisCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    let rbcResult: ApiResponse<void>;\r\n    let minCountResult: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      rbcResult = await createLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      minCountResult = await createMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n    } else {\r\n      const updateResult = await updateLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      const updateRbcResult = await updateLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      const updateMinCountResult = await updateMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n      if (updateResult.data && updateRbcResult.data && updateMinCountResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        scrollToTop();\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result && rbcResult && minCountResult) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      scrollToTop();\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst filterNumbersOnly = (event: Event, is: boolean) => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  if (is){\r\n    minCountArr.value[0].minGPCount = Number(filteredValue.trim());\r\n  }else {\r\n    minCountArr.value[0].minPACount = Number(filteredValue.trim());\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeWbcApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    const minCountResult = await getMinCountApi();\r\n\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data && minCountResult && minCountResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n      const minCountData = minCountResult.data;\r\n\r\n      if (!wbcData || (wbcData instanceof Array && wbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeWbcArr.value = lisCodeWbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n\r\n      if (!rbcData || (rbcData instanceof Array && rbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeRbcArr.value = LIS_CODE_RBC_OPTION;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n\r\n      if (!minCountData || (minCountData instanceof  Array && minCountData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        minCountArr.value = minRunCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        minCountArr.value = minCountData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveLisCode();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _cache[5] || (_cache[5] = _createElementVNode(\"p\", { class: \"mb40\" }, \" [ WBC ] \", -1)),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lisCodeWbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.classId\n        }, [\n          _createElementVNode(\"p\", _hoisted_2, _toDisplayString(item.fullNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event)\n          }, null, 8, _hoisted_3), [\n            [_vModelText, item.key]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _cache[6] || (_cache[6] = _createElementVNode(\"p\", { class: \"mt20 mb40\" }, \" [ RBC ] \", -1)),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lisCodeRbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.fullNm\n        }, [\n          _createElementVNode(\"p\", _hoisted_5, _toDisplayString(item.categoryNm) + \" - \" + _toDisplayString(item.fullNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event)\n          }, null, 8, _hoisted_6), [\n            [_vModelText, item.key]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_7, [\n      _cache[9] || (_cache[9] = _createElementVNode(\"p\", { class: \"mb20\" }, \" [ Min Count ] \", -1)),\n      _createElementVNode(\"ul\", null, [\n        (minCountArr.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_8, [\n              _cache[7] || (_cache[7] = _createElementVNode(\"p\", { class: \"mb10 mt10\" }, \"Giant Platelet\", -1)),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((minCountArr.value[0].minGPCount) = $event)),\n                onInput: _cache[1] || (_cache[1] = ($event: any) => (filterNumbersOnly($event, true))),\n                class: \"form-control form-control-sm\"\n              }, null, 544), [\n                [_vModelText, minCountArr.value[0].minGPCount]\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (minCountArr.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_9, [\n              _cache[8] || (_cache[8] = _createElementVNode(\"p\", { class: \"mb10 mt10\" }, \"Platelet Aggregation\", -1)),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((minCountArr.value[0].minPACount) = $event)),\n                onInput: _cache[3] || (_cache[3] = ($event: any) => (filterNumbersOnly($event, false))),\n                class: \"form-control form-control-sm\"\n              }, null, 544), [\n                [_vModelText, minCountArr.value[0].minPACount]\n              ])\n            ]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_10, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[4] || (_cache[4] = ($event: any) => (saveLisCode()))\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mb40\"> [ WBC ] </p>\r\n    <label v-for=\"item in lisCodeWbcArr\" :key=\"item.classId\">\r\n      <p class=\"mb10\">{{ item.fullNm }}</p>\r\n      <input type=\"text\" v-model=\"item.key\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mt20 mb40\"> [ RBC ] </p>\r\n    <label v-for=\"item in lisCodeRbcArr\" :key=\"item.fullNm\">\r\n      <p class=\"mb10\">{{ item.categoryNm }} - {{ item.fullNm }}</p>\r\n      <input type=\"text\" v-model=\"item.key\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mb20\"> [ Min Count ] </p>\r\n    <ul>\r\n      <li class=\"minCountWrapper\" v-if=\"minCountArr.length > 0\">\r\n        <p class=\"mb10 mt10\">Giant Platelet</p>\r\n        <input type=\"text\" v-model=\"minCountArr[0].minGPCount\" @input=\"filterNumbersOnly($event, true)\" class=\"form-control form-control-sm\">\r\n      </li>\r\n      <li class=\"minCountWrapper\" v-if=\"minCountArr.length > 0\">\r\n        <p class=\"mb10 mt10\">Platelet Aggregation</p>\r\n        <input type=\"text\" v-model=\"minCountArr[0].minPACount\" @input=\"filterNumbersOnly($event, false)\" class=\"form-control form-control-sm\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"mt10\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveLisCode()\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {\r\n  lisCodeWbcOption,\r\n  LIS_CODE_RBC_OPTION,\r\n  minRunCount,\r\n  settingName,\r\n  WBC_CUSTOM_CLASS\r\n} from \"@/common/defines/constants/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createLisCodeWbcApi, createLisCodeRbcApi, createMinCountApi,\r\n  getLisCodeWbcApi, getLisCodeRbcApi, getMinCountApi,\r\n  updateLisCodeWbcApi, updateLisCodeRbcApi, updateMinCountApi, getWbcCustomClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {LisCodeRbcItem, LisCodeWbcItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport {minCountItem} from \"@/common/api/service/setting/dto/minCountDto\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {classArr} from \"@/common/api/service/setting/dto/wbcCustomClassDto\";\r\nimport {scrollToTop} from \"@/common/lib/utils/scroll\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst lisCodeWbcArr = ref<LisCodeWbcItem[] | any>([]);\r\nconst lisCodeRbcArr = ref<LisCodeRbcItem[] | any>([]);\r\nconst minCountArr = ref<minCountItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst wbcCustomItems = ref<any>([]);\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n  await getWbcCustomClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.lisCode });\r\n});\r\n\r\nwatch(() => [lisCodeWbcArr.value, lisCodeRbcArr.value, minCountArr.value], async () => {\r\n  const afterSetting = {\r\n    lisCodeWbcArr: lisCodeWbcArr.value,\r\n    lisCodeRbcArr: lisCodeRbcArr.value,\r\n    minCountArr: minCountArr.value\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(afterSetting) });\r\n  if (settingType.value !== settingName.lisCode) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.lisCode });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result: any = await getWbcCustomClassApi();\r\n    if (result?.data) {\r\n      wbcCustomItems.value = result.data.filter((item: any) => item.abbreviation && item.fullNm);\r\n      setLisCodeWbcByCustomClass();\r\n    }\r\n  } catch (e) {\r\n    console.error('Error fetching WBC custom classes:', e);\r\n  }\r\n}\r\n\r\nconst setLisCodeWbcByCustomClass = async () => {\r\n  const wbcCustomItemClassIds = new Set(wbcCustomItems.value.map((item: any) => item.customNum));\r\n  const lisCodeWbcClassIds = new Set(lisCodeWbcArr.value.map((item: any) => item.classId));\r\n  const wbcCustomClassDefaultIds = new Set(WBC_CUSTOM_CLASS.map(item => String(item.customNum)));\r\n\r\n  // lisCodeWbc에서 없는 Custom Class 삭제 및 Custom Class 추가\r\n  lisCodeWbcArr.value = lisCodeWbcArr.value.filter((wbcInfo: LisCodeWbcItem) =>\r\n      !(wbcCustomClassDefaultIds.has(wbcInfo.classId) && !wbcCustomItemClassIds.has(wbcInfo.classId))\r\n  );\r\n\r\n  const newItems = wbcCustomItems.value\r\n      .filter((item: any) => !lisCodeWbcClassIds.has(item.customNum))\r\n      .map((item: any) => ({\r\n        fullNm: item.fullNm,\r\n        classId: item.customNum,\r\n        key: '',\r\n      }));\r\n\r\n  lisCodeWbcArr.value = [...lisCodeWbcArr.value, ...newItems];\r\n\r\n  const settingObj = {\r\n    lisCodeWbcArr: lisCodeWbcArr.value,\r\n    lisCodeRbcArr: lisCodeRbcArr.value,\r\n    minCountArr: minCountArr.value\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: settingObj });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: settingObj });\r\n}\r\n\r\nconst saveLisCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    let rbcResult: ApiResponse<void>;\r\n    let minCountResult: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      rbcResult = await createLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      minCountResult = await createMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n    } else {\r\n      const updateResult = await updateLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      const updateRbcResult = await updateLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      const updateMinCountResult = await updateMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n      if (updateResult.data && updateRbcResult.data && updateMinCountResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        scrollToTop();\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result && rbcResult && minCountResult) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      scrollToTop();\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst filterNumbersOnly = (event: Event, is: boolean) => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  if (is){\r\n    minCountArr.value[0].minGPCount = Number(filteredValue.trim());\r\n  }else {\r\n    minCountArr.value[0].minPACount = Number(filteredValue.trim());\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeWbcApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    const minCountResult = await getMinCountApi();\r\n\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data && minCountResult && minCountResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n      const minCountData = minCountResult.data;\r\n\r\n      if (!wbcData || (wbcData instanceof Array && wbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeWbcArr.value = lisCodeWbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n\r\n      if (!rbcData || (rbcData instanceof Array && rbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeRbcArr.value = LIS_CODE_RBC_OPTION;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n\r\n      if (!minCountData || (minCountData instanceof  Array && minCountData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        minCountArr.value = minRunCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        minCountArr.value = minCountData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveLisCode();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n\r\n","import script from \"./lisCode.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./lisCode.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, createElementVNode as _createElementVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"alignDiv\",\n  style: {\"width\":\"660px\"}\n}\nconst _hoisted_2 = {\n  key: 0,\n  class: \"pt5\"\n}\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\nconst _hoisted_4 = { class: \"pos-relative w220 flex-align-center\" }\nconst _hoisted_5 = [\"onUpdate:modelValue\"]\nconst _hoisted_6 = { class: \"mt10\" }\n\nimport {ref, onMounted, computed, watch, onBeforeUnmount} from 'vue';\r\nimport {defaultCbcList, defaultCbcList_0011, settingName} from \"@/common/defines/constants/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport { createCbcCodeRbcApi, getCbcCodeRbcApi, updateCbcCodeRbcApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {cbcCodeItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport {getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport { HOSPITAL_SITE_CD_BY_NAME } from \"@/common/defines/constants/siteCd\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'cbcCode',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst cbcCodeArr = ref<cbcCodeItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst siteCd = ref('');\r\nconst editingCBCCd = ref('00');\r\n\r\nonMounted(async () => {\r\n  await getDeviceInfo();\r\n  await getImagePrintData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cbcCode });\r\n});\r\n\r\nwatch(() => cbcCodeArr.value, async (cbcCodeArrAfterSetting) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(cbcCodeArrAfterSetting) });\r\n  if (settingType.value !== settingName.cbcCode) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cbcCode });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst saveCbcCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n    } else {\r\n      const updateResult = await updateCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n\r\n        if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n          cbcCodeArr.value = defaultCbcList_0011;\r\n        } else {\r\n          cbcCodeArr.value = defaultCbcList;\r\n        }\r\n\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        cbcCodeArr.value = data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(cbcCodeArr.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(cbcCodeArr.value) });\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const deviceData = await getDeviceInfoApi();\r\n    siteCd.value = deviceData.data.siteCd;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst addCBCCode = () => {\r\n  let maxCBCCode = Math.max(...cbcCodeArr.value.map(item => Number(item.cd))) + 1;\r\n  const cbcCodeCd = maxCBCCode.toString().padStart(2, '0');\r\n  const defaultCBCCode = { cd: cbcCodeCd, classCd: '', fullNm: 'Edit CBC Code', isSelected: true };\r\n  cbcCodeArr.value.push(defaultCBCCode);\r\n}\r\n\r\nconst deleteCBCCode = (cbcCd: string) => {\r\n  cbcCodeArr.value = cbcCodeArr.value.filter(item => Number(item.cd) !== Number(cbcCd));\r\n}\r\n\r\nconst editCBC = (CBCCd: string) => editingCBCCd.value = CBCCd;\r\n\r\nconst clearEditing = () => {\r\n  editingCBCCd.value = '00';\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveCbcCode();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcCodeArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          class: \"pos-relative\",\n          key: item.cd\n        }, [\n          (editingCBCCd.value !== item.cd)\n            ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString(item.fullNm), 1))\n            : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n                key: 1,\n                type: \"text\",\n                \"onUpdate:modelValue\": ($event: any) => ((item.fullNm) = $event)\n              }, null, 8, _hoisted_3)), [\n                [_vModelText, item.fullNm]\n              ]),\n          _createElementVNode(\"div\", _hoisted_4, [\n            _withDirectives(_createVNode(_component_font_awesome_icon, {\n              onClick: ($event: any) => (editCBC(item.cd)),\n              class: \"cursorPointer hoverSizeAction cbc-setting-icon\",\n              icon: ['fas', 'pen-to-square']\n            }, null, 8, [\"onClick\"]), [\n              [_vShow, editingCBCCd.value !== item.cd]\n            ]),\n            _withDirectives(_createVNode(_component_font_awesome_icon, {\n              onClick: clearEditing,\n              class: \"cursorPointer hoverSizeAction cbc-setting-icon\",\n              icon: ['fas', 'square-check']\n            }, null, 512), [\n              [_vShow, editingCBCCd.value === item.cd]\n            ]),\n            _createVNode(_component_font_awesome_icon, {\n              onClick: ($event: any) => (deleteCBCCode(item.cd)),\n              class: \"cursorPointer hoverSizeAction\",\n              style: {\"margin-right\":\"4px\"},\n              icon: ['fas', 'trash']\n            }, null, 8, [\"onClick\"]),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"text\",\n              \"onUpdate:modelValue\": ($event: any) => ((item.classCd) = $event)\n            }, null, 8, _hoisted_5), [\n              [_vModelText, item.classCd]\n            ])\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"button\", {\n      class: \"cursorPointer\",\n      onClick: addCBCCode\n    }, [\n      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'plus'] })\n    ]),\n    _createElementVNode(\"div\", _hoisted_6, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (saveCbcCode()))\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\" style=\"width: 660px;\">\r\n    <label class=\"pos-relative\" v-for=\"item in cbcCodeArr\" :key=\"item.cd\">\r\n      <p v-if=\"editingCBCCd !== item.cd\" class=\"pt5\">{{ item.fullNm }}</p>\r\n      <input v-else type=\"text\" v-model=\"item.fullNm\" />\r\n      <div class=\"pos-relative w220 flex-align-center\">\r\n        <font-awesome-icon\r\n            v-show=\"editingCBCCd !== item.cd\"\r\n            @click=\"editCBC(item.cd)\"\r\n            class=\"cursorPointer hoverSizeAction cbc-setting-icon\"\r\n            :icon=\"['fas', 'pen-to-square']\"\r\n        />\r\n        <font-awesome-icon\r\n            v-show=\"editingCBCCd === item.cd\"\r\n            @click=\"clearEditing\"\r\n            class=\"cursorPointer hoverSizeAction cbc-setting-icon\"\r\n            :icon=\"['fas', 'square-check']\" />\r\n        <font-awesome-icon\r\n            @click=\"deleteCBCCode(item.cd)\"\r\n            class=\"cursorPointer hoverSizeAction\"\r\n            style=\"margin-right: 4px;\"\r\n            :icon=\"['fas', 'trash']\" />\r\n        <input type=\"text\" v-model=\"item.classCd\" />\r\n      </div>\r\n    </label>\r\n  </div>\r\n\r\n  <button class=\"cursorPointer\" @click=\"addCBCCode\"><font-awesome-icon :icon=\"['fas', 'plus']\" /></button>\r\n  <div class=\"mt10\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveCbcCode()\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, watch, onBeforeUnmount} from 'vue';\r\nimport {defaultCbcList, defaultCbcList_0011, settingName} from \"@/common/defines/constants/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport { createCbcCodeRbcApi, getCbcCodeRbcApi, updateCbcCodeRbcApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {cbcCodeItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport {getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport { HOSPITAL_SITE_CD_BY_NAME } from \"@/common/defines/constants/siteCd\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst cbcCodeArr = ref<cbcCodeItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst siteCd = ref('');\r\nconst editingCBCCd = ref('00');\r\n\r\nonMounted(async () => {\r\n  await getDeviceInfo();\r\n  await getImagePrintData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cbcCode });\r\n});\r\n\r\nwatch(() => cbcCodeArr.value, async (cbcCodeArrAfterSetting) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(cbcCodeArrAfterSetting) });\r\n  if (settingType.value !== settingName.cbcCode) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cbcCode });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\n\r\nconst saveCbcCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n    } else {\r\n      const updateResult = await updateCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n\r\n        if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n          cbcCodeArr.value = defaultCbcList_0011;\r\n        } else {\r\n          cbcCodeArr.value = defaultCbcList;\r\n        }\r\n\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        cbcCodeArr.value = data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(cbcCodeArr.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(cbcCodeArr.value) });\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const deviceData = await getDeviceInfoApi();\r\n    siteCd.value = deviceData.data.siteCd;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst addCBCCode = () => {\r\n  let maxCBCCode = Math.max(...cbcCodeArr.value.map(item => Number(item.cd))) + 1;\r\n  const cbcCodeCd = maxCBCCode.toString().padStart(2, '0');\r\n  const defaultCBCCode = { cd: cbcCodeCd, classCd: '', fullNm: 'Edit CBC Code', isSelected: true };\r\n  cbcCodeArr.value.push(defaultCBCCode);\r\n}\r\n\r\nconst deleteCBCCode = (cbcCd: string) => {\r\n  cbcCodeArr.value = cbcCodeArr.value.filter(item => Number(item.cd) !== Number(cbcCd));\r\n}\r\n\r\nconst editCBC = (CBCCd: string) => editingCBCCd.value = CBCCd;\r\n\r\nconst clearEditing = () => {\r\n  editingCBCCd.value = '00';\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveCbcCode();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n\r\n","import script from \"./cbcCode.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cbcCode.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, unref as _unref, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"crcDivTitle\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\"]\nconst _hoisted_3 = {\n  key: 1,\n  class: \"spanTitle\"\n}\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\nconst _hoisted_5 = { key: 1 }\nconst _hoisted_6 = { class: \"crcSel\" }\nconst _hoisted_7 = [\"onUpdate:modelValue\"]\nconst _hoisted_8 = [\"onUpdate:modelValue\", \"onChange\"]\nconst _hoisted_9 = [\"value\"]\nconst _hoisted_10 = [\"onChange\"]\nconst _hoisted_11 = [\"onInput\"]\nconst _hoisted_12 = [\"onUpdate:modelValue\", \"disabled\"]\nconst _hoisted_13 = [\"onUpdate:modelValue\", \"disabled\"]\nconst _hoisted_14 = [\"disabled\", \"onUpdate:modelValue\"]\nconst _hoisted_15 = [\"disabled\", \"onUpdate:modelValue\"]\nconst _hoisted_16 = [\"title\", \"onUpdate:modelValue\", \"onChange\"]\nconst _hoisted_17 = [\"title\", \"onUpdate:modelValue\", \"onChange\"]\nconst _hoisted_18 = {\n  key: 0,\n  class: \"smallBox\"\n}\nconst _hoisted_19 = [\"onUpdate:modelValue\"]\nconst _hoisted_20 = {\n  key: 1,\n  class: \"crcPercentText\"\n}\nconst _hoisted_21 = { key: 1 }\nconst _hoisted_22 = [\"onClick\"]\nconst _hoisted_23 = [\"onClick\"]\nconst _hoisted_24 = [\"onClick\"]\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {isMasterId} from \"@/common/lib/utils/validators\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'crcCompontent',\n  props: {\r\n  items: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n  moType: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  pageName: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  masterId: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  userType: {\r\n    type: String,\r\n    required: true,\r\n  }\r\n},\n  emits: ['updateCrc', 'deleteCrc', 'updateSelect', 'changeCrcData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\nconst emit = __emit;\r\nconst arrData = ref<any>([]);\r\nconst lisCodeMatchingInfo = ref('병원 lis code 매칭 시키는 부분 - 병원에서 사용하는 타이틀로 연동해서 LIS 전송하는 부분');\r\nconst lisValMatchingInfo = ref('병원 lis 받는 Value 매칭 시키는 부분 - 병원에서 Lis 받을 때 실제 보내야하는 값으로 치환시켜주는 부분 , 구분');\r\n\r\n// 로컬 상태\r\nconst editIndex = ref<number | null>(null);\r\n\r\nconst groupedData = computed(() => {\r\n  const rows: any[] = [];\r\n  for (let i = 0; i < arrData.value.length; i += 4) {\r\n    rows.push(arrData.value.slice(i, i + 4));\r\n  }\r\n  return rows;\r\n});\r\n\r\n\r\nonMounted(async () => {\r\n  arrData.value = props.items?.filter((item) => item?.morphologyType === props.moType);\r\n});\r\n\r\nwatch(props, (newArr) => {\r\n  arrData.value = newArr?.items.filter((item) => item?.morphologyType === props.moType);\r\n}, {deep: true});\r\n\r\nconst editCrcArr = (id: number) => {\r\n  editIndex.value = id;\r\n};\r\n\r\nconst changeEtc = (eve: any, item: any) => {\r\n  const nes = JSON.parse(JSON.stringify(item));\r\n  nes.val = eve.target.value;\r\n  emit('changeCrcData', nes);\r\n}\r\n\r\nconst updateCrcArr = (id: number) => {\r\n  const updatedItem = {...arrData.value.find(item => item.id === id)};\r\n  emit('updateCrc', {id, updatedItem});\r\n  editIndex.value = null;\r\n};\r\n\r\nconst delCrcArr = (idx: number, id: any) => {\r\n  emit('deleteCrc', {index: idx, id});\r\n};\r\n\r\nconst moTypeTextChange = (txt: string) => {\r\n  switch (txt) {\r\n    case 'RBC':\r\n      return 'RBC Morphology';\r\n    case 'WBC':\r\n      return 'WBC Morphology';\r\n    case 'PLT':\r\n      return 'Platelet Morphology';\r\n  }\r\n};\r\n\r\nconst contentArr = (content: any) => {\r\n  return content.split(',').map((item: any) => item.trim());\r\n}\r\n\r\nconst changeSelect = (eve: Event, id: string | number) => {\r\n  if (props.pageName === 'report') {\r\n    emit('updateSelect', {val: eve.target?.value, id});\r\n  }\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, _toDisplayString(moTypeTextChange(__props.moType)), 1),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass({ rbcCrcDiv: __props.moType === 'RBC' })\n    }, [\n      _createElementVNode(\"ul\", {\n        class: _normalizeClass({ 'rbcCrcGrid': __props.moType === 'RBC' })\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(arrData.value, (item, idx) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: idx,\n            class: \"grid-item crcItemDiv\"\n          }, [\n            _createElementVNode(\"p\", null, [\n              (editIndex.value === item.id)\n                ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n                    key: 0,\n                    class: \"smallBox\",\n                    type: \"text\",\n                    \"onUpdate:modelValue\": ($event: any) => ((item.crcTitle) = $event)\n                  }, null, 8, _hoisted_2)), [\n                    [_vModelText, item.crcTitle]\n                  ])\n                : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(item.crcTitle), 1))\n            ]),\n            _createElementVNode(\"div\", null, [\n              (editIndex.value === item.id)\n                ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n                    key: 0,\n                    \"onUpdate:modelValue\": ($event: any) => ((item.crcType) = $event),\n                    class: \"w120\"\n                  }, _cache[0] || (_cache[0] = [\n                    _createElementVNode(\"option\", { value: \"select\" }, \"select\", -1),\n                    _createElementVNode(\"option\", { value: \"text\" }, \"text\", -1),\n                    _createElementVNode(\"option\", { value: \"percent\" }, \"percent\", -1)\n                  ]), 8, _hoisted_4)), [\n                    [_vModelSelect, item.crcType]\n                  ])\n                : (__props.pageName === 'set' && _unref(isMasterId)(__props.masterId))\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString(item?.crcType), 1))\n                  : _createCommentVNode(\"\", true)\n            ]),\n            _createElementVNode(\"div\", _hoisted_6, [\n              (editIndex.value === item.id)\n                ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n                    key: 0,\n                    type: \"text\",\n                    \"onUpdate:modelValue\": ($event: any) => ((item.crcContent) = $event)\n                  }, null, 8, _hoisted_7)), [\n                    [_vModelText, item.crcContent]\n                  ])\n                : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                    (item?.crcType === 'select')\n                      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                          (__props.pageName === 'report')\n                            ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n                                key: 0,\n                                \"onUpdate:modelValue\": ($event: any) => ((item.val) = $event),\n                                onChange: ($event: any) => (changeSelect($event, item.id)),\n                                class: \"w120\"\n                              }, [\n                                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(contentArr(item?.crcContent), (opItem, idx) => {\n                                  return (_openBlock(), _createElementBlock(\"option\", {\n                                    key: idx,\n                                    value: opItem\n                                  }, _toDisplayString(opItem), 9, _hoisted_9))\n                                }), 128))\n                              ], 40, _hoisted_8)), [\n                                [_vModelSelect, item.val]\n                              ])\n                            : (_unref(isMasterId)(__props.masterId))\n                              ? (_openBlock(), _createElementBlock(\"select\", {\n                                  key: 1,\n                                  onChange: ($event: any) => (changeSelect($event, item.id)),\n                                  class: \"w108\"\n                                }, [\n                                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(contentArr(item?.crcContent), (opItem, idx) => {\n                                    return (_openBlock(), _createElementBlock(\"option\", { key: idx }, _toDisplayString(opItem), 1))\n                                  }), 128))\n                                ], 40, _hoisted_10))\n                              : _createCommentVNode(\"\", true),\n                          (item.val === 'Etc')\n                            ? (_openBlock(), _createElementBlock(\"input\", {\n                                key: 2,\n                                onInput: ($event: any) => (changeEtc($event, item)),\n                                type: \"text\",\n                                placeholder: \"Etc Text\",\n                                class: \"etcTextInput\"\n                              }, null, 40, _hoisted_11))\n                            : _createCommentVNode(\"\", true)\n                        ], 64))\n                      : (item?.crcType === 'text')\n                        ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                            (__props.pageName !== 'set')\n                              ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n                                  key: 0,\n                                  \"onUpdate:modelValue\": ($event: any) => ((item.crcContent) = $event),\n                                  disabled: __props.pageName !== 'report',\n                                  type: \"text\",\n                                  placeholder: \"Enter text\"\n                                }, null, 8, _hoisted_12)), [\n                                  [_vModelText, item.crcContent]\n                                ])\n                              : ( __props.pageName ==='set' && _unref(isMasterId)(__props.masterId))\n                                ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n                                    key: 1,\n                                    \"onUpdate:modelValue\": ($event: any) => ((item.crcContent) = $event),\n                                    disabled: __props.pageName === 'set',\n                                    type: \"text\",\n                                    placeholder: \"Enter text\"\n                                  }, null, 8, _hoisted_13)), [\n                                    [_vModelText, item.crcContent]\n                                  ])\n                                : _createCommentVNode(\"\", true)\n                          ], 64))\n                        : (_openBlock(), _createElementBlock(_Fragment, { key: 2 }, [\n                            (__props.pageName !== 'set')\n                              ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n                                  key: 0,\n                                  class: \"smallInput\",\n                                  disabled: __props.pageName !== 'report',\n                                  \"onUpdate:modelValue\": ($event: any) => ((item.crcContent) = $event),\n                                  type: \"text\",\n                                  placeholder: \"Enter percentage\"\n                                }, null, 8, _hoisted_14)), [\n                                  [_vModelText, item.crcContent]\n                                ])\n                              : ( __props.pageName ==='set' && _unref(isMasterId)(__props.masterId))\n                                ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n                                    key: 1,\n                                    class: \"smallInput\",\n                                    disabled: __props.pageName === 'set',\n                                    \"onUpdate:modelValue\": ($event: any) => ((item.crcContent) = $event),\n                                    type: \"text\",\n                                    placeholder: \"Enter percentage\"\n                                  }, null, 8, _hoisted_15)), [\n                                    [_vModelText, item.crcContent]\n                                  ])\n                                : _createCommentVNode(\"\", true)\n                          ], 64))\n                  ], 64)),\n              (__props.pageName==='set')\n                ? (_openBlock(), _createElementBlock(_Fragment, { key: 2 }, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      class: \"smallInput\",\n                      type: \"text\",\n                      title: lisCodeMatchingInfo.value,\n                      placeholder: \"lisCodeMatching\",\n                      \"onUpdate:modelValue\": ($event: any) => ((item.crcCode) = $event),\n                      onChange: ($event: any) => (updateCrcArr(item.id))\n                    }, null, 40, _hoisted_16), [\n                      [_vModelText, item.crcCode]\n                    ]),\n                    _withDirectives(_createElementVNode(\"input\", {\n                      class: \"smallInput\",\n                      type: \"text\",\n                      placeholder: \"lisValMatching\",\n                      title: lisValMatchingInfo.value,\n                      \"onUpdate:modelValue\": ($event: any) => ((item.crcCodeMatching) = $event),\n                      onChange: ($event: any) => (updateCrcArr(item.id))\n                    }, null, 40, _hoisted_17), [\n                      [_vModelText, item.crcCodeMatching]\n                    ])\n                  ], 64))\n                : _createCommentVNode(\"\", true)\n            ]),\n            (item.crcType === 'percent')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                  (editIndex.value === item.id)\n                    ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n                        key: 0,\n                        type: \"text\",\n                        \"onUpdate:modelValue\": ($event: any) => ((item.crcPercentText) = $event),\n                        class: \"crcPercentInput\"\n                      }, null, 8, _hoisted_19)), [\n                        [_vModelText, item.crcPercentText]\n                      ])\n                    : (_openBlock(), _createElementBlock(\"span\", _hoisted_20, _toDisplayString(item?.crcPercentText), 1))\n                ]))\n              : _createCommentVNode(\"\", true),\n            (__props.pageName === 'set' && _unref(isMasterId)(__props.masterId))\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [\n                  (editIndex.value !== item.id)\n                    ? (_openBlock(), _createElementBlock(\"button\", {\n                        key: 0,\n                        type: \"button\",\n                        class: \"crcBtn\",\n                        style: {\"padding\":\"4px 0\"},\n                        onClick: ($event: any) => (editCrcArr(item.id))\n                      }, \"EDIT\", 8, _hoisted_22))\n                    : _createCommentVNode(\"\", true),\n                  (editIndex.value === item.id)\n                    ? (_openBlock(), _createElementBlock(\"button\", {\n                        key: 1,\n                        type: \"button\",\n                        class: \"crcBtn\",\n                        style: {\"padding\":\"4px 0\"},\n                        onClick: ($event: any) => (updateCrcArr(item.id))\n                      }, \"OK\", 8, _hoisted_23))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"button\", {\n                    type: \"button\",\n                    class: \"crcBtn\",\n                    style: {\"padding\":\"4px 0\"},\n                    onClick: ($event: any) => (delCrcArr(idx, item.id))\n                  }, \"DEL\", 8, _hoisted_24)\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]))\n        }), 128))\n      ], 2)\n    ], 2)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"crcDivTitle\">\r\n    {{ moTypeTextChange(moType) }}\r\n  </div>\r\n  <div :class=\"{ rbcCrcDiv: moType === 'RBC' }\">\r\n    <ul :class=\"{ 'rbcCrcGrid': moType === 'RBC' }\">\r\n      <div v-for=\"(item, idx) in arrData\" :key=\"idx\" class=\"grid-item crcItemDiv\">\r\n        <p>\r\n          <input\r\n              class=\"smallBox\"\r\n              type=\"text\"\r\n              v-model=\"item.crcTitle\"\r\n              v-if=\"editIndex === item.id\"\r\n          />\r\n          <span class=\"spanTitle\" v-else>{{ item.crcTitle }}</span>\r\n        </p>\r\n        <div>\r\n          <select v-model=\"item.crcType\" v-if=\"editIndex === item.id\" class=\"w120\">\r\n            <option value=\"select\">select</option>\r\n            <option value=\"text\">text</option>\r\n            <option value=\"percent\">percent</option>\r\n          </select>\r\n          <div v-else-if=\"pageName === 'set' && isMasterId(masterId)\">{{ item?.crcType }}</div>\r\n        </div>\r\n        <div class=\"crcSel\">\r\n          <input type=\"text\" v-model=\"item.crcContent\" v-if=\"editIndex === item.id\">\r\n          <template v-else>\r\n            <template v-if=\"item?.crcType === 'select'\">\r\n              <select v-if=\"pageName === 'report'\" v-model=\"item.val\" @change=\"changeSelect($event, item.id)\" class=\"w120\">\r\n                <option v-for=\"(opItem, idx) in contentArr(item?.crcContent)\" :key=\"idx\" :value=\"opItem\">\r\n                  {{ opItem }}\r\n                </option>\r\n              </select>\r\n              <template v-else-if=\"isMasterId(masterId)\">\r\n                <select @change=\"changeSelect($event, item.id)\" class=\"w108\">\r\n                  <option v-for=\"(opItem, idx) in contentArr(item?.crcContent)\" :key=\"idx\">{{ opItem }}</option>\r\n                </select>\r\n              </template>\r\n              <input v-if=\"item.val === 'Etc'\" @input=\"changeEtc($event, item)\" type=\"text\"\r\n                     placeholder=\"Etc Text\" class=\"etcTextInput\"/>\r\n            </template>\r\n            <template v-else-if=\"item?.crcType === 'text'\">\r\n              <input v-model=\"item.crcContent\" :disabled=\"pageName !== 'report'\" type=\"text\"\r\n                     placeholder=\"Enter text\" v-if=\"pageName !== 'set'\"/>\r\n              <input v-model=\"item.crcContent\" :disabled=\"pageName === 'set'\"\r\n                     v-else-if=\" pageName ==='set' && isMasterId(masterId)\"\r\n                     type=\"text\"\r\n                     placeholder=\"Enter text\"/>\r\n            </template>\r\n            <template v-else>\r\n              <input class=\"smallInput\" :disabled=\"pageName !== 'report'\" v-model=\"item.crcContent\" type=\"text\"\r\n                     placeholder=\"Enter percentage\" v-if=\"pageName !== 'set'\"/>\r\n              <input class=\"smallInput\" :disabled=\"pageName === 'set'\"\r\n                     v-else-if=\" pageName ==='set' && isMasterId(masterId)\"\r\n                     v-model=\"item.crcContent\" type=\"text\"\r\n                     placeholder=\"Enter percentage\"/>\r\n            </template>\r\n          </template>\r\n          <template v-if=\"pageName==='set'\">\r\n            <input class=\"smallInput\" type=\"text\" :title=\"lisCodeMatchingInfo\" placeholder=\"lisCodeMatching\" v-model=\"item.crcCode\" @change=\"updateCrcArr(item.id)\"/>\r\n            <input class=\"smallInput\" type=\"text\" placeholder=\"lisValMatching\" :title=\"lisValMatchingInfo\" v-model=\"item.crcCodeMatching\" @change=\"updateCrcArr(item.id)\"/>\r\n          </template>\r\n        </div>\r\n        <div v-if=\"item.crcType === 'percent'\" class=\"smallBox\">\r\n          <input\r\n              type=\"text\"\r\n              v-model=\"item.crcPercentText\"\r\n              v-if=\"editIndex === item.id\"\r\n              class=\"crcPercentInput\"\r\n          />\r\n          <span v-else class=\"crcPercentText\">\r\n              {{ item?.crcPercentText }}\r\n            </span>\r\n        </div>\r\n\r\n        <div v-if=\"pageName === 'set' && isMasterId(masterId)\">\r\n          <button type=\"button\" class=\"crcBtn\" style=\"padding: 4px 0;\" v-if=\"editIndex !== item.id\" @click=\"editCrcArr(item.id)\">EDIT</button>\r\n          <button type=\"button\" class=\"crcBtn\" style=\"padding: 4px 0;\" v-if=\"editIndex === item.id\" @click=\"updateCrcArr(item.id)\">OK</button>\r\n          <button type=\"button\" class=\"crcBtn\" style=\"padding: 4px 0;\" @click=\"delCrcArr(idx, item.id)\">DEL</button>\r\n        </div>\r\n      </div>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {isMasterId} from \"@/common/lib/utils/validators\";\r\n\r\nconst props = defineProps({\r\n  items: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n  moType: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  pageName: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  masterId: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  userType: {\r\n    type: String,\r\n    required: true,\r\n  }\r\n});\r\n\r\nconst emit = defineEmits(['updateCrc', 'deleteCrc', 'updateSelect', 'changeCrcData']);\r\nconst arrData = ref<any>([]);\r\nconst lisCodeMatchingInfo = ref('병원 lis code 매칭 시키는 부분 - 병원에서 사용하는 타이틀로 연동해서 LIS 전송하는 부분');\r\nconst lisValMatchingInfo = ref('병원 lis 받는 Value 매칭 시키는 부분 - 병원에서 Lis 받을 때 실제 보내야하는 값으로 치환시켜주는 부분 , 구분');\r\n\r\n// 로컬 상태\r\nconst editIndex = ref<number | null>(null);\r\n\r\nconst groupedData = computed(() => {\r\n  const rows: any[] = [];\r\n  for (let i = 0; i < arrData.value.length; i += 4) {\r\n    rows.push(arrData.value.slice(i, i + 4));\r\n  }\r\n  return rows;\r\n});\r\n\r\n\r\nonMounted(async () => {\r\n  arrData.value = props.items?.filter((item) => item?.morphologyType === props.moType);\r\n});\r\n\r\nwatch(props, (newArr) => {\r\n  arrData.value = newArr?.items.filter((item) => item?.morphologyType === props.moType);\r\n}, {deep: true});\r\n\r\nconst editCrcArr = (id: number) => {\r\n  editIndex.value = id;\r\n};\r\n\r\nconst changeEtc = (eve: any, item: any) => {\r\n  const nes = JSON.parse(JSON.stringify(item));\r\n  nes.val = eve.target.value;\r\n  emit('changeCrcData', nes);\r\n}\r\n\r\nconst updateCrcArr = (id: number) => {\r\n  const updatedItem = {...arrData.value.find(item => item.id === id)};\r\n  emit('updateCrc', {id, updatedItem});\r\n  editIndex.value = null;\r\n};\r\n\r\nconst delCrcArr = (idx: number, id: any) => {\r\n  emit('deleteCrc', {index: idx, id});\r\n};\r\n\r\nconst moTypeTextChange = (txt: string) => {\r\n  switch (txt) {\r\n    case 'RBC':\r\n      return 'RBC Morphology';\r\n    case 'WBC':\r\n      return 'WBC Morphology';\r\n    case 'PLT':\r\n      return 'Platelet Morphology';\r\n  }\r\n};\r\n\r\nconst contentArr = (content: any) => {\r\n  return content.split(',').map((item: any) => item.trim());\r\n}\r\n\r\nconst changeSelect = (eve: Event, id: string | number) => {\r\n  if (props.pageName === 'report') {\r\n    emit('updateSelect', {val: eve.target?.value, id});\r\n  }\r\n}\r\n</script>\r\n","import script from \"./crcCompontent.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./crcCompontent.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelSelect as _vModelSelect, createBlock as _createBlock, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = { class: \"crcWrap flex-column-align-center\" }\nconst _hoisted_3 = { class: \"w30p\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"flex-align-center-justify-between mb10\"\n}\nconst _hoisted_5 = {\n  key: 0,\n  class: \"w30p\"\n}\nconst _hoisted_6 = { class: \"flex-align-center-justify-between mb20\" }\nconst _hoisted_7 = { class: \"flex-align-center-justify-between mb20\" }\nconst _hoisted_8 = { class: \"flex-align-center-justify-between mb20\" }\nconst _hoisted_9 = { class: \"flex-column-align-center mt10\" }\nconst _hoisted_10 = {\n  class: \"flex-center mt10\",\n  style: {\"gap\":\"14px\"}\n}\nconst _hoisted_11 = [\"checked\"]\nconst _hoisted_12 = [\"checked\"]\nconst _hoisted_13 = [\"checked\"]\nconst _hoisted_14 = {\n  key: 1,\n  class: \"mt30\"\n}\nconst _hoisted_15 = { key: 0 }\nconst _hoisted_16 = { class: \"moDivBox mt20\" }\n\nimport {ref, onMounted, computed, nextTick} from \"vue\";\r\nimport {\r\n  crcGet, crcOptionGet,\r\n  createCrcApi,\r\n  createCrcOptionApi,\r\n  deleteCrcApi,\r\n  updateCrcApi, updateCrcOptionApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport CrcCompontent from \"@/components/commonUi/crcCompontent.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {MASTER_ID} from \"@/common/defines/constants/settings\";\r\nimport {isAdmin, isMasterId, isUserAdminType} from \"@/common/lib/utils/validators\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'crc',\n  setup(__props) {\n\r\nconst isToggle = ref(false);\r\nconst crcTitle = ref('');\r\nconst crcType = ref('');\r\nconst crcPercentText = ref('');\r\nconst crcContent = ref('');\r\nconst crcArr = ref<any>([]);\r\nconst morphologyType = ref('');\r\nconst crcData = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst crcDefaultMode = ref(false);\r\nconst lisTwoMode = ref(false);\r\nconst crcConnect = ref(false);\r\nconst crcOptionPutWhether = ref(false);\r\nconst crcOptionId = ref(0);\r\nconst crcRemarkCountArr = ref<any[]>([{\"checked\": false, \"name\": \"remark\"}, {\r\n  \"checked\": false,\r\n  \"name\": \"Comment\"\r\n}, {\"checked\": false, \"name\": \"Recommendation\"}]);\r\nconst crcPassWord = ref('');\r\nconst store = useStore();\r\nconst masterId = computed(() => store.state.userModule.userId);\r\nconst userType = computed(() => store.state.userModule.userType);\r\n\r\nonMounted(async () => {\r\n  await nextTick()\r\n  crcData.value = await crcGet();\r\n  const crcOptionApi = await crcOptionGet();\r\n\r\n  if (crcOptionApi.data.length !== 0) {\r\n    crcDefaultMode.value = crcOptionApi.data[0].crcMode;\r\n    lisTwoMode.value = crcOptionApi.data[0]?.lisTwoMode;\r\n    crcConnect.value = crcOptionApi.data[0].crcConnect;\r\n    crcOptionId.value = crcOptionApi.data[0].id;\r\n    crcRemarkCountArr.value = crcOptionApi.data[0].crcRemarkCount;\r\n    crcPassWord.value = crcOptionApi.data[0].crcPassWord;\r\n    crcOptionPutWhether.value = true;\r\n  } else {\r\n    crcRemarkCountArr.value = [{\"checked\": false, \"name\": \"remark\"}, {\r\n      \"checked\": false,\r\n      \"name\": \"Comment\"\r\n    }, {\"checked\": false, \"name\": \"Recommendation\"}]\r\n  }\r\n\r\n  isToggle.value = true;\r\n  if (isToggle.value) {\r\n    crcArr.value = [];\r\n    crcArr.value = JSON.parse(JSON.stringify(crcData.value.data));\r\n\r\n  }\r\n});\r\nconst nameChange = (name: string) => {\r\n  switch (name) {\r\n    case '0' :\r\n      return 'remark';\r\n    case '1':\r\n      return 'Comment';\r\n    case '2':\r\n      return 'Recommendation';\r\n  }\r\n}\r\n\r\nconst changeCrcRemarkCount = (eve: Event) => {\r\n  const countId = crcRemarkCountArr.value.findIndex((item) => {\r\n    return item.name === nameChange(eve.target?.value)\r\n  })\r\n  crcRemarkCountArr.value[countId].checked = eve.target?.checked;\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\nconst addCrcArr = () => {\r\n  if (crcTitle.value === '' || crcType.value === '') {\r\n    return;\r\n  }\r\n  crcArr.value.push({\r\n    crcTitle: crcTitle.value,\r\n    crcType: crcType.value,\r\n    crcPercentText: crcPercentText.value,\r\n    morphologyType: morphologyType.value,\r\n    crcContent: crcContent.value,\r\n  });\r\n};\r\n\r\n// 업데이트 이벤트 처리 함수\r\nconst onUpdateCrc = async ({index, updatedItem}: { index: number, updatedItem: any }) => {\r\n  crcArr.value[index] = updatedItem;\r\n  await updateCrcApi(crcArr.value); // 서버로 업데이트 요청\r\n};\r\n\r\n// 삭제 이벤트 처리 함수\r\nconst onDeleteCrc = async ({index, id}: { index: number, id: any }) => {\r\n  const findId = crcArr.value.findIndex((item: any) => item.id === id);\r\n  crcArr.value.splice(findId, 1); // 배열에서 제거\r\n  await deleteCrcApi({id}); // 서버에 삭제 요청\r\n};\r\n\r\n// 데이터 저장 함수\r\nconst saveCrcData = async () => {\r\n  const crcOptionApi = await crcOptionGet();\r\n\r\n  if (isMasterId(masterId.value)) {\r\n    if (crcOptionPutWhether.value && crcOptionApi.data.length !== 0) {\r\n      await updateCrcOptionApi({\r\n        id: crcOptionId.value,\r\n        crcMode: crcDefaultMode.value,\r\n        crcConnect: crcConnect.value,\r\n        crcRemarkCount: crcRemarkCountArr.value,\r\n        crcPassWord: crcPassWord.value,\r\n        lisTwoMode: lisTwoMode.value\r\n      });\r\n    } else {\r\n      await createCrcOptionApi({\r\n        crcMode: crcDefaultMode.value,\r\n        crcConnect: crcConnect.value,\r\n        crcRemarkCount: crcRemarkCountArr.value,\r\n        crcPassWord: crcPassWord.value,\r\n        lisTwoMode: lisTwoMode.value\r\n      });\r\n    }\r\n    if (crcOptionPutWhether.value && crcData.value.data.length !== 0) {\r\n      await updateCrcApi(crcArr.value);\r\n    } else {\r\n      await createCrcApi(crcArr.value);\r\n    }\r\n  } else {\r\n    if (crcOptionPutWhether.value && crcData.value.data.length !== 0) {\r\n      await updateCrcApi(crcArr.value);\r\n      await updateCrcOptionApi({\r\n        id: crcOptionId.value,\r\n        crcPassWord: crcPassWord.value,\r\n      });\r\n    }\r\n  }\r\n\r\n  await showSuccessAlert('Success');\r\n};\r\n\r\nconst crcDefaultModeOn = () => {\r\n  crcDefaultMode.value = !crcDefaultMode.value;\r\n}\r\nconst lisTwoModeOn = () => {\r\n  lisTwoMode.value = !lisTwoMode.value;\r\n}\r\n\r\nconst crcConnectOn = () => {\r\n  crcConnect.value = !crcConnect.value;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      (isToggle.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n            _createElementVNode(\"div\", _hoisted_2, [\n              _createElementVNode(\"div\", _hoisted_3, [\n                (_unref(isUserAdminType)(userType.value))\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                      _cache[6] || (_cache[6] = _createElementVNode(\"span\", null, \"CRC Password\", -1)),\n                      _withDirectives(_createElementVNode(\"input\", {\n                        style: {\"width\":\"100px\"},\n                        type: \"text\",\n                        placeholder: \"password\",\n                        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((crcPassWord).value = $event))\n                      }, null, 512), [\n                        [_vModelText, crcPassWord.value]\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              (_unref(isMasterId)(masterId.value))\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                    _createElementVNode(\"div\", _hoisted_6, [\n                      _cache[7] || (_cache[7] = _createElementVNode(\"span\", null, \"CRC Default Mode\", -1)),\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: crcDefaultMode.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                        class: \"iconSize\",\n                        onClick: crcDefaultModeOn\n                      }, null, 8, [\"icon\"])\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_7, [\n                      _cache[8] || (_cache[8] = _createElementVNode(\"span\", null, \"CRC LIS Two Mode\", -1)),\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: lisTwoMode.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                        class: \"iconSize\",\n                        onClick: lisTwoModeOn\n                      }, null, 8, [\"icon\"])\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_8, [\n                      _cache[9] || (_cache[9] = _createElementVNode(\"span\", null, \"CRC Connect\", -1)),\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: crcConnect.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                        class: \"iconSize\",\n                        onClick: crcConnectOn\n                      }, null, 8, [\"icon\"])\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_9, [\n                      _cache[13] || (_cache[13] = _createElementVNode(\"span\", null, \"CRC Remark Select Count\", -1)),\n                      _createElementVNode(\"div\", _hoisted_10, [\n                        _cache[10] || (_cache[10] = _createElementVNode(\"label\", { for: \"crc-remark\" }, \"Remark\", -1)),\n                        _createElementVNode(\"input\", {\n                          id: \"crc-remark\",\n                          type: \"checkbox\",\n                          onChange: changeCrcRemarkCount,\n                          value: \"0\",\n                          checked: crcRemarkCountArr.value[0].checked\n                        }, null, 40, _hoisted_11),\n                        _cache[11] || (_cache[11] = _createElementVNode(\"label\", { for: \"crc-comment\" }, \"Comment\", -1)),\n                        _createElementVNode(\"input\", {\n                          id: \"crc-comment\",\n                          type: \"checkbox\",\n                          onChange: changeCrcRemarkCount,\n                          value: \"1\",\n                          checked: crcRemarkCountArr.value[1].checked\n                        }, null, 40, _hoisted_12),\n                        _cache[12] || (_cache[12] = _createElementVNode(\"label\", { for: \"crc-recommendation\" }, \"Recommendation\", -1)),\n                        _createElementVNode(\"input\", {\n                          id: \"crc-recommendation\",\n                          type: \"checkbox\",\n                          onChange: changeCrcRemarkCount,\n                          value: \"2\",\n                          checked: crcRemarkCountArr.value[2].checked\n                        }, null, 40, _hoisted_13)\n                      ])\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true),\n              (_unref(isMasterId)(masterId.value))\n                ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_14, [\n                    _createElementVNode(\"li\", null, [\n                      _cache[14] || (_cache[14] = _createElementVNode(\"p\", null, \"crcTitle\", -1)),\n                      _createElementVNode(\"span\", null, [\n                        _withDirectives(_createElementVNode(\"input\", {\n                          type: \"text\",\n                          placeholder: \"crcTitle\",\n                          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((crcTitle).value = $event))\n                        }, null, 512), [\n                          [_vModelText, crcTitle.value]\n                        ])\n                      ])\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      _cache[16] || (_cache[16] = _createElementVNode(\"p\", null, \"crcType\", -1)),\n                      _createElementVNode(\"span\", null, [\n                        _withDirectives(_createElementVNode(\"select\", {\n                          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((crcType).value = $event))\n                        }, _cache[15] || (_cache[15] = [\n                          _createElementVNode(\"option\", { value: \"select\" }, \"select\", -1),\n                          _createElementVNode(\"option\", { value: \"text\" }, \"text\", -1),\n                          _createElementVNode(\"option\", { value: \"percent\" }, \"percent\", -1)\n                        ]), 512), [\n                          [_vModelSelect, crcType.value]\n                        ])\n                      ])\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      _cache[17] || (_cache[17] = _createElementVNode(\"p\", null, \"CRC Content\", -1)),\n                      _createElementVNode(\"span\", null, [\n                        _withDirectives(_createElementVNode(\"input\", {\n                          type: \"text\",\n                          placeholder: \"crcContent\",\n                          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((crcContent).value = $event))\n                        }, null, 512), [\n                          [_vModelText, crcContent.value]\n                        ])\n                      ])\n                    ]),\n                    (crcType.value === 'percent')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_15, [\n                          _cache[18] || (_cache[18] = _createElementVNode(\"p\", null, \"CRC PercentText\", -1)),\n                          _createElementVNode(\"span\", null, [\n                            _withDirectives(_createElementVNode(\"input\", {\n                              type: \"text\",\n                              placeholder: \"crcPercentText\",\n                              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((crcPercentText).value = $event))\n                            }, null, 512), [\n                              [_vModelText, crcPercentText.value]\n                            ])\n                          ])\n                        ]))\n                      : _createCommentVNode(\"\", true),\n                    _createElementVNode(\"li\", null, [\n                      _cache[20] || (_cache[20] = _createElementVNode(\"p\", null, \"Morphology Type\", -1)),\n                      _createElementVNode(\"span\", null, [\n                        _withDirectives(_createElementVNode(\"select\", {\n                          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((morphologyType).value = $event))\n                        }, _cache[19] || (_cache[19] = [\n                          _createElementVNode(\"option\", { value: \"RBC\" }, \"RBC\", -1),\n                          _createElementVNode(\"option\", { value: \"WBC\" }, \"WBC\", -1),\n                          _createElementVNode(\"option\", { value: \"PLT\" }, \"PLT\", -1)\n                        ]), 512), [\n                          [_vModelSelect, morphologyType.value]\n                        ])\n                      ])\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      _createElementVNode(\"button\", {\n                        class: \"crcWrapBtn\",\n                        onClick: addCrcArr\n                      }, \"Add\")\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ]),\n            _createVNode(CrcCompontent, {\n              items: crcArr.value,\n              onUpdateCrc: onUpdateCrc,\n              onDeleteCrc: onDeleteCrc,\n              moType: \"RBC\",\n              pageName: \"set\",\n              masterId: masterId.value,\n              userType: userType.value\n            }, null, 8, [\"items\", \"masterId\", \"userType\"]),\n            _createElementVNode(\"div\", _hoisted_16, [\n              _createElementVNode(\"div\", null, [\n                _createVNode(CrcCompontent, {\n                  items: crcArr.value,\n                  onUpdateCrc: onUpdateCrc,\n                  onDeleteCrc: onDeleteCrc,\n                  moType: \"WBC\",\n                  pageName: \"set\",\n                  masterId: masterId.value,\n                  userType: userType.value\n                }, null, 8, [\"items\", \"masterId\", \"userType\"])\n              ]),\n              _createElementVNode(\"div\", null, [\n                _createVNode(CrcCompontent, {\n                  items: crcArr.value,\n                  onUpdateCrc: onUpdateCrc,\n                  onDeleteCrc: onDeleteCrc,\n                  moType: \"PLT\",\n                  pageName: \"set\",\n                  masterId: masterId.value,\n                  userType: userType.value\n                }, null, 8, [\"items\", \"masterId\", \"userType\"])\n              ])\n            ])\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", { class: \"mt10\" }, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: saveCrcData\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div v-if=\"isToggle\">\r\n      <div class=\"crcWrap flex-column-align-center\">\r\n        <div class=\"w30p\">\r\n          <div v-if=\"isUserAdminType(userType)\" class=\"flex-align-center-justify-between mb10\">\r\n            <span>CRC Password</span>\r\n            <input style=\"width: 100px;\" type=\"text\" placeholder=\"password\" v-model=\"crcPassWord\"/>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"isMasterId(masterId)\" class=\"w30p\">\r\n          <div class=\"flex-align-center-justify-between mb20\">\r\n            <span>CRC Default Mode</span>\r\n            <font-awesome-icon :icon=\"crcDefaultMode ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\" class=\"iconSize\"\r\n                               @click=\"crcDefaultModeOn\"/>\r\n          </div>\r\n\r\n          <div class=\"flex-align-center-justify-between mb20\">\r\n            <span>CRC LIS Two Mode</span>\r\n            <font-awesome-icon :icon=\"lisTwoMode ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\" class=\"iconSize\"\r\n                               @click=\"lisTwoModeOn\"/>\r\n          </div>\r\n\r\n          <div class=\"flex-align-center-justify-between mb20\">\r\n            <span>CRC Connect</span>\r\n            <font-awesome-icon :icon=\"crcConnect ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\" class=\"iconSize\"\r\n                               @click=\"crcConnectOn\"/>\r\n          </div>\r\n\r\n          <div class=\"flex-column-align-center mt10\">\r\n            <span>CRC Remark Select Count</span>\r\n            <div class=\"flex-center mt10\" style=\"gap: 14px;\">\r\n              <label for=\"crc-remark\">Remark</label>\r\n              <input id=\"crc-remark\" type=\"checkbox\" @change=\"changeCrcRemarkCount\" value=\"0\"\r\n                     :checked=\"crcRemarkCountArr[0].checked\"/>\r\n\r\n              <label for=\"crc-comment\">Comment</label>\r\n              <input id=\"crc-comment\" type=\"checkbox\" @change=\"changeCrcRemarkCount\" value=\"1\"\r\n                     :checked=\"crcRemarkCountArr[1].checked\"/>\r\n\r\n              <label for=\"crc-recommendation\">Recommendation</label>\r\n              <input id=\"crc-recommendation\" type=\"checkbox\" @change=\"changeCrcRemarkCount\" value=\"2\"\r\n                     :checked=\"crcRemarkCountArr[2].checked\"/>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <ul class=\"mt30\" v-if=\"isMasterId(masterId)\">\r\n          <li>\r\n            <p>crcTitle</p>\r\n            <span><input type=\"text\" placeholder=\"crcTitle\" v-model=\"crcTitle\"></span>\r\n          </li>\r\n          <li>\r\n            <p>crcType</p>\r\n            <span>\r\n              <select v-model=\"crcType\">\r\n                <option value=\"select\">select</option>\r\n                <option value=\"text\">text</option>\r\n                <option value=\"percent\">percent</option>\r\n              </select>\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <p>CRC Content</p>\r\n            <span><input type=\"text\" placeholder=\"crcContent\" v-model=\"crcContent\"></span>\r\n          </li>\r\n          <li v-if=\"crcType === 'percent'\">\r\n            <p>CRC PercentText</p>\r\n            <span><input type=\"text\" placeholder=\"crcPercentText\" v-model=\"crcPercentText\"></span>\r\n          </li>\r\n          <li>\r\n            <p>Morphology Type</p>\r\n            <span>\r\n              <select v-model=\"morphologyType\">\r\n                <option value=\"RBC\">RBC</option>\r\n                <option value=\"WBC\">WBC</option>\r\n                <option value=\"PLT\">PLT</option>\r\n              </select>\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <button class=\"crcWrapBtn\" @click=\"addCrcArr\">Add</button>\r\n          </li>\r\n        </ul>\r\n\r\n      </div>\r\n\r\n\r\n      <crc-compontent\r\n          :items=\"crcArr\"\r\n          @updateCrc=\"onUpdateCrc\"\r\n          @deleteCrc=\"onDeleteCrc\"\r\n          moType=\"RBC\"\r\n          pageName=\"set\"\r\n          :masterId=\"masterId\"\r\n          :userType=\"userType\"\r\n      ></crc-compontent>\r\n\r\n      <div class=\"moDivBox mt20\">\r\n        <div>\r\n          <crc-compontent\r\n              :items=\"crcArr\"\r\n              @updateCrc=\"onUpdateCrc\"\r\n              @deleteCrc=\"onDeleteCrc\"\r\n              moType=\"WBC\"\r\n              pageName=\"set\"\r\n              :masterId=\"masterId\"\r\n              :userType=\"userType\"\r\n          ></crc-compontent>\r\n        </div>\r\n\r\n        <div>\r\n          <crc-compontent\r\n              :items=\"crcArr\"\r\n              @updateCrc=\"onUpdateCrc\"\r\n              @deleteCrc=\"onDeleteCrc\"\r\n              moType=\"PLT\"\r\n              pageName=\"set\"\r\n              :masterId=\"masterId\"\r\n              :userType=\"userType\"\r\n          ></crc-compontent>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"mt10\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveCrcData\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, nextTick} from \"vue\";\r\nimport {\r\n  crcGet, crcOptionGet,\r\n  createCrcApi,\r\n  createCrcOptionApi,\r\n  deleteCrcApi,\r\n  updateCrcApi, updateCrcOptionApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport CrcCompontent from \"@/components/commonUi/crcCompontent.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {MASTER_ID} from \"@/common/defines/constants/settings\";\r\nimport {isAdmin, isMasterId, isUserAdminType} from \"@/common/lib/utils/validators\";\r\n\r\nconst isToggle = ref(false);\r\nconst crcTitle = ref('');\r\nconst crcType = ref('');\r\nconst crcPercentText = ref('');\r\nconst crcContent = ref('');\r\nconst crcArr = ref<any>([]);\r\nconst morphologyType = ref('');\r\nconst crcData = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst crcDefaultMode = ref(false);\r\nconst lisTwoMode = ref(false);\r\nconst crcConnect = ref(false);\r\nconst crcOptionPutWhether = ref(false);\r\nconst crcOptionId = ref(0);\r\nconst crcRemarkCountArr = ref<any[]>([{\"checked\": false, \"name\": \"remark\"}, {\r\n  \"checked\": false,\r\n  \"name\": \"Comment\"\r\n}, {\"checked\": false, \"name\": \"Recommendation\"}]);\r\nconst crcPassWord = ref('');\r\nconst store = useStore();\r\nconst masterId = computed(() => store.state.userModule.userId);\r\nconst userType = computed(() => store.state.userModule.userType);\r\n\r\nonMounted(async () => {\r\n  await nextTick()\r\n  crcData.value = await crcGet();\r\n  const crcOptionApi = await crcOptionGet();\r\n\r\n  if (crcOptionApi.data.length !== 0) {\r\n    crcDefaultMode.value = crcOptionApi.data[0].crcMode;\r\n    lisTwoMode.value = crcOptionApi.data[0]?.lisTwoMode;\r\n    crcConnect.value = crcOptionApi.data[0].crcConnect;\r\n    crcOptionId.value = crcOptionApi.data[0].id;\r\n    crcRemarkCountArr.value = crcOptionApi.data[0].crcRemarkCount;\r\n    crcPassWord.value = crcOptionApi.data[0].crcPassWord;\r\n    crcOptionPutWhether.value = true;\r\n  } else {\r\n    crcRemarkCountArr.value = [{\"checked\": false, \"name\": \"remark\"}, {\r\n      \"checked\": false,\r\n      \"name\": \"Comment\"\r\n    }, {\"checked\": false, \"name\": \"Recommendation\"}]\r\n  }\r\n\r\n  isToggle.value = true;\r\n  if (isToggle.value) {\r\n    crcArr.value = [];\r\n    crcArr.value = JSON.parse(JSON.stringify(crcData.value.data));\r\n\r\n  }\r\n});\r\nconst nameChange = (name: string) => {\r\n  switch (name) {\r\n    case '0' :\r\n      return 'remark';\r\n    case '1':\r\n      return 'Comment';\r\n    case '2':\r\n      return 'Recommendation';\r\n  }\r\n}\r\n\r\nconst changeCrcRemarkCount = (eve: Event) => {\r\n  const countId = crcRemarkCountArr.value.findIndex((item) => {\r\n    return item.name === nameChange(eve.target?.value)\r\n  })\r\n  crcRemarkCountArr.value[countId].checked = eve.target?.checked;\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\nconst addCrcArr = () => {\r\n  if (crcTitle.value === '' || crcType.value === '') {\r\n    return;\r\n  }\r\n  crcArr.value.push({\r\n    crcTitle: crcTitle.value,\r\n    crcType: crcType.value,\r\n    crcPercentText: crcPercentText.value,\r\n    morphologyType: morphologyType.value,\r\n    crcContent: crcContent.value,\r\n  });\r\n};\r\n\r\n// 업데이트 이벤트 처리 함수\r\nconst onUpdateCrc = async ({index, updatedItem}: { index: number, updatedItem: any }) => {\r\n  crcArr.value[index] = updatedItem;\r\n  await updateCrcApi(crcArr.value); // 서버로 업데이트 요청\r\n};\r\n\r\n// 삭제 이벤트 처리 함수\r\nconst onDeleteCrc = async ({index, id}: { index: number, id: any }) => {\r\n  const findId = crcArr.value.findIndex((item: any) => item.id === id);\r\n  crcArr.value.splice(findId, 1); // 배열에서 제거\r\n  await deleteCrcApi({id}); // 서버에 삭제 요청\r\n};\r\n\r\n// 데이터 저장 함수\r\nconst saveCrcData = async () => {\r\n  const crcOptionApi = await crcOptionGet();\r\n\r\n  if (isMasterId(masterId.value)) {\r\n    if (crcOptionPutWhether.value && crcOptionApi.data.length !== 0) {\r\n      await updateCrcOptionApi({\r\n        id: crcOptionId.value,\r\n        crcMode: crcDefaultMode.value,\r\n        crcConnect: crcConnect.value,\r\n        crcRemarkCount: crcRemarkCountArr.value,\r\n        crcPassWord: crcPassWord.value,\r\n        lisTwoMode: lisTwoMode.value\r\n      });\r\n    } else {\r\n      await createCrcOptionApi({\r\n        crcMode: crcDefaultMode.value,\r\n        crcConnect: crcConnect.value,\r\n        crcRemarkCount: crcRemarkCountArr.value,\r\n        crcPassWord: crcPassWord.value,\r\n        lisTwoMode: lisTwoMode.value\r\n      });\r\n    }\r\n    if (crcOptionPutWhether.value && crcData.value.data.length !== 0) {\r\n      await updateCrcApi(crcArr.value);\r\n    } else {\r\n      await createCrcApi(crcArr.value);\r\n    }\r\n  } else {\r\n    if (crcOptionPutWhether.value && crcData.value.data.length !== 0) {\r\n      await updateCrcApi(crcArr.value);\r\n      await updateCrcOptionApi({\r\n        id: crcOptionId.value,\r\n        crcPassWord: crcPassWord.value,\r\n      });\r\n    }\r\n  }\r\n\r\n  await showSuccessAlert('Success');\r\n};\r\n\r\nconst crcDefaultModeOn = () => {\r\n  crcDefaultMode.value = !crcDefaultMode.value;\r\n}\r\nconst lisTwoModeOn = () => {\r\n  lisTwoMode.value = !lisTwoMode.value;\r\n}\r\n\r\nconst crcConnectOn = () => {\r\n  crcConnect.value = !crcConnect.value;\r\n}\r\n</script>\r\n","import script from \"./crc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./crc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div></div>\r\n</template>\r\n<script setup lang=\"ts\">\r\n\r\n</script>","import { render } from \"./arl.vue?vue&type=template&id=454f291d\"\nconst script = {}\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"alignDiv\",\n  style: {\"text-align\":\"center\"}\n}\nconst _hoisted_2 = [\"value\"]\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = { class: \"mt10\" }\n\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {lisHotKeyAndLisFilePathAndUrl, settingName} from \"@/common/defines/constants/settings\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createFilePathSetApi, getFilePathSetApi, updateFilePathSetApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {FilePathItem} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'filePathSet',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst filePathSetArr = ref<FilePathItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getFilePathSetData();\r\n  await store.dispatch('commonModule/setCommonInfo', {settingType: settingName.filePathSet});\r\n});\r\n\r\nwatch(() => filePathSetArr.value, async (filePathSetArr) => {\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(filePathSetArr)});\r\n  if (settingType.value !== settingName.filePathSet) {\r\n    await store.dispatch('commonModule/setCommonInfo', {settingType: settingName.filePathSet});\r\n  }\r\n}, {deep: true});\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\nconst handleKeyDown = (event: KeyboardEvent, index: number) => {\r\n  const allowedKeys = /^[a-zA-Z0-9]$|F[1-9]|F1[0-2]/; // 알파벳 대소문자, 숫자 및 F1~F12 키 패턴\r\n\r\n  // 특수 키(F1~F12)와 알파벳, 숫자만 허용\r\n  if (!allowedKeys.test(event.key) && !isSpecialKey(event.key)) {\r\n    event.preventDefault(); // 기본 동작 방지\r\n  }\r\n\r\n  // 1글자 이상 입력 시 지우기\r\n  const currentValue = filePathSetArr.value[index].lisHotKey;\r\n  if (currentValue.length >= 1 && !isSpecialKey(event.key)) {\r\n    filePathSetArr.value[index].lisHotKey = '';\r\n  }\r\n\r\n  // 특수 키를 눌렀을 때\r\n  if (isSpecialKey(event.key)) {\r\n    event.preventDefault(); // 기본 동작 방지\r\n    filePathSetArr.value[index].lisHotKey = event.key; // lisHotKey에 저장\r\n  }\r\n};\r\n\r\nconst isSpecialKey = (key: string) => {\r\n  return ['F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12'].includes(key);\r\n};\r\n\r\nconst saveFilePathSet = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createFilePathSetApi({filePathSetItems: filePathSetArr.value});\r\n    } else {\r\n      const updateResult = await updateFilePathSetApi({filePathSetItems: filePathSetArr.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getFilePathSetData();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n      await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getFilePathSetData();\r\n      await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n      await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getFilePathSetData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        filePathSetArr.value = lisHotKeyAndLisFilePathAndUrl;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        filePathSetArr.value = data;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: JSON.stringify(filePathSetArr.value)});\r\n      await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(filePathSetArr.value)});\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateHotKey = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisHotKey = event.target.value;\r\n};\r\n\r\nconst updateFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisFilePath = event.target.value;\r\n};\r\n\r\nconst updateCbcFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].cbcFilePath = event.target.value;\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveFilePathSet();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", null, [\n        _createElementVNode(\"li\", null, [\n          _cache[5] || (_cache[5] = _createElementVNode(\"p\", { class: \"mb20\" }, \"LIS Hot Key\", -1)),\n          _createElementVNode(\"input\", {\n            onKeydown: _cache[0] || (_cache[0] = ($event: any) => (handleKeyDown($event, 0))),\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].lisHotKey : '',\n            onInput: _cache[1] || (_cache[1] = ($event: any) => (updateHotKey($event, 0)))\n          }, null, 40, _hoisted_2)\n        ]),\n        _createElementVNode(\"li\", null, [\n          _cache[6] || (_cache[6] = _createElementVNode(\"p\", { class: \"mb20 mt20\" }, \"LIS File Path\", -1)),\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].lisFilePath : '',\n            onInput: _cache[2] || (_cache[2] = ($event: any) => (updateFilePath($event, 0)))\n          }, null, 40, _hoisted_3)\n        ]),\n        _createElementVNode(\"li\", null, [\n          _cache[7] || (_cache[7] = _createElementVNode(\"p\", { class: \"mb20 mt20\" }, \"CBC File Path\", -1)),\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].cbcFilePath : '',\n            onInput: _cache[3] || (_cache[3] = ($event: any) => (updateCbcFilePath($event, 0)))\n          }, null, 40, _hoisted_4)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[4] || (_cache[4] = ($event: any) => (saveFilePathSet()))\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\" style=\"text-align: center\">\r\n    <ul>\r\n      <li>\r\n        <p class=\"mb20\">LIS Hot Key</p>\r\n        <input\r\n            @keydown=\"handleKeyDown($event, 0)\"\r\n            type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].lisHotKey : ''\"\r\n            @input=\"updateHotKey($event, 0)\">\r\n      </li>\r\n      <li>\r\n        <p class=\"mb20 mt20\">LIS File Path</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].lisFilePath : ''\"\r\n               @input=\"updateFilePath($event, 0)\">\r\n      </li>\r\n      <li>\r\n        <p class=\"mb20 mt20\">CBC File Path</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].cbcFilePath : ''\"\r\n               @input=\"updateCbcFilePath($event, 0)\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"mt10\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveFilePathSet()\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {lisHotKeyAndLisFilePathAndUrl, settingName} from \"@/common/defines/constants/settings\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createFilePathSetApi, getFilePathSetApi, updateFilePathSetApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {FilePathItem} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst filePathSetArr = ref<FilePathItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getFilePathSetData();\r\n  await store.dispatch('commonModule/setCommonInfo', {settingType: settingName.filePathSet});\r\n});\r\n\r\nwatch(() => filePathSetArr.value, async (filePathSetArr) => {\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(filePathSetArr)});\r\n  if (settingType.value !== settingName.filePathSet) {\r\n    await store.dispatch('commonModule/setCommonInfo', {settingType: settingName.filePathSet});\r\n  }\r\n}, {deep: true});\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n}\r\nconst handleKeyDown = (event: KeyboardEvent, index: number) => {\r\n  const allowedKeys = /^[a-zA-Z0-9]$|F[1-9]|F1[0-2]/; // 알파벳 대소문자, 숫자 및 F1~F12 키 패턴\r\n\r\n  // 특수 키(F1~F12)와 알파벳, 숫자만 허용\r\n  if (!allowedKeys.test(event.key) && !isSpecialKey(event.key)) {\r\n    event.preventDefault(); // 기본 동작 방지\r\n  }\r\n\r\n  // 1글자 이상 입력 시 지우기\r\n  const currentValue = filePathSetArr.value[index].lisHotKey;\r\n  if (currentValue.length >= 1 && !isSpecialKey(event.key)) {\r\n    filePathSetArr.value[index].lisHotKey = '';\r\n  }\r\n\r\n  // 특수 키를 눌렀을 때\r\n  if (isSpecialKey(event.key)) {\r\n    event.preventDefault(); // 기본 동작 방지\r\n    filePathSetArr.value[index].lisHotKey = event.key; // lisHotKey에 저장\r\n  }\r\n};\r\n\r\nconst isSpecialKey = (key: string) => {\r\n  return ['F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12'].includes(key);\r\n};\r\n\r\nconst saveFilePathSet = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createFilePathSetApi({filePathSetItems: filePathSetArr.value});\r\n    } else {\r\n      const updateResult = await updateFilePathSetApi({filePathSetItems: filePathSetArr.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(MESSAGES.UPDATE_SUCCESSFULLY);\r\n        await getFilePathSetData();\r\n      } else {\r\n        showErrorAlert(MESSAGES.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n      await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getFilePathSetData();\r\n      await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n      await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getFilePathSetData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        filePathSetArr.value = lisHotKeyAndLisFilePathAndUrl;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        filePathSetArr.value = data;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: JSON.stringify(filePathSetArr.value)});\r\n      await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(filePathSetArr.value)});\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateHotKey = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisHotKey = event.target.value;\r\n};\r\n\r\nconst updateFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisFilePath = event.target.value;\r\n};\r\n\r\nconst updateCbcFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].cbcFilePath = event.target.value;\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveFilePathSet();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n\r\n","import script from \"./filePathSet.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./filePathSet.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTabSubButtons\" }\nconst _hoisted_2 = { key: 0 }\n\nimport ImagePrint from \"@/views/setting/report/component/ImagePrint.vue\";\r\nimport LisCode from \"@/views/setting/report/component/lisCode.vue\";\r\nimport cbcCode from \"@/views/setting/report/component/cbcCode.vue\";\r\nimport CRC from \"@/views/setting/report/component/crc.vue\";\r\nimport ARL from '@/views/setting/report/component/arl.vue';\r\nimport FilePathSet from '@/views/setting/report/component/filePathSet.vue';\r\nimport { computed, ref, onBeforeMount } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {settingUpdate} from \"@/common/lib/utils/settingSave\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst projectBm = ref(false);\r\nlet activeTab = ref('ImagePrint');\r\nconst movingTab = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\nconst afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\nconst selectTab = (tabName: string) => {\r\n  if (activeTab.value === tabName) return;\r\n  movingTab.value = tabName;\r\n  if (beforeSettingFormattedString.value !== afterSettingFormattedString.value) {\r\n    showConfirm.value = true;\r\n    confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n  } else {\r\n    activeTab.value = movingTab.value;\r\n  }\r\n};\r\n\r\nconst selectedTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'ImagePrint':\r\n      return ImagePrint;\r\n    case 'LisCode':\r\n      return LisCode;\r\n    case 'CbcCode':\r\n      return cbcCode;\r\n    case 'filePathSet':\r\n      return FilePathSet;\r\n    case 'CRC':\r\n      return CRC;\r\n    case 'ARL':\r\n      return ARL;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  activeTab.value = movingTab.value;\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  try {\r\n    await settingUpdate(settingType.value, JSON.parse(afterSettingFormattedString.value));\r\n    await showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n  } catch (e) {\r\n    await showErrorAlert(MESSAGES.settingSaveFailure);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[0] || (_cache[0] = ($event: any) => (selectTab('ImagePrint'))),\n          class: _normalizeClass({ 'active': _unref(activeTab) === 'ImagePrint' })\n        }, \"Image Print\", 2),\n        (!projectBm.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              _createElementVNode(\"button\", {\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (selectTab('LisCode'))),\n                class: _normalizeClass({ 'active': _unref(activeTab) === 'LisCode' })\n              }, \"LIS Code\", 2),\n              _createElementVNode(\"button\", {\n                onClick: _cache[2] || (_cache[2] = ($event: any) => (selectTab('CbcCode'))),\n                class: _normalizeClass({ 'active': _unref(activeTab) === 'CbcCode' })\n              }, \"CBC Code\", 2),\n              _createElementVNode(\"button\", {\n                onClick: _cache[3] || (_cache[3] = ($event: any) => (selectTab('filePathSet'))),\n                class: _normalizeClass({ 'active': _unref(activeTab) === 'filePathSet' })\n              }, \"LIS(CBC) Hot Key & File Path\", 2),\n              _createElementVNode(\"button\", {\n                onClick: _cache[4] || (_cache[4] = ($event: any) => (selectTab('CRC'))),\n                class: _normalizeClass({ 'active': _unref(activeTab) === 'CRC' })\n              }, \"Report CRC\", 2),\n              _createElementVNode(\"button\", {\n                onClick: _cache[5] || (_cache[5] = ($event: any) => (selectTab('ARL'))),\n                class: _normalizeClass({ 'active': _unref(activeTab) === 'ARL' })\n              }, \"Auto Result Link\", 2)\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass({'tab-content crc':_unref(activeTab) === 'CRC', 'tab-content':_unref(activeTab) !== 'CRC'})\n      }, [\n        (_openBlock(), _createBlock(_resolveDynamicComponent(selectedTabComponent.value)))\n      ], 2)\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"settingTabSubButtons\">\r\n      <button @click=\"selectTab('ImagePrint')\" :class=\"{ 'active': activeTab === 'ImagePrint' }\">Image Print</button>\r\n      <div v-if=\"!projectBm\">\r\n        <button @click=\"selectTab('LisCode')\" :class=\"{ 'active': activeTab === 'LisCode' }\">LIS Code</button>\r\n        <button @click=\"selectTab('CbcCode')\" :class=\"{ 'active': activeTab === 'CbcCode' }\">CBC Code</button>\r\n        <button @click=\"selectTab('filePathSet')\" :class=\"{ 'active': activeTab === 'filePathSet' }\">LIS(CBC) Hot Key & File Path</button>\r\n        <button @click=\"selectTab('CRC')\" :class=\"{ 'active': activeTab === 'CRC' }\">Report CRC</button>\r\n        <button @click=\"selectTab('ARL')\" :class=\"{ 'active': activeTab === 'ARL' }\">Auto Result Link</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div :class=\"{'tab-content crc':activeTab === 'CRC', 'tab-content':activeTab !== 'CRC'}\">\r\n      <component :is=\"selectedTabComponent\"/>\r\n    </div>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport ImagePrint from \"@/views/setting/report/component/ImagePrint.vue\";\r\nimport LisCode from \"@/views/setting/report/component/lisCode.vue\";\r\nimport cbcCode from \"@/views/setting/report/component/cbcCode.vue\";\r\nimport CRC from \"@/views/setting/report/component/crc.vue\";\r\nimport ARL from '@/views/setting/report/component/arl.vue';\r\nimport FilePathSet from '@/views/setting/report/component/filePathSet.vue';\r\nimport { computed, ref, onBeforeMount } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {settingUpdate} from \"@/common/lib/utils/settingSave\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\n\r\nconst store = useStore();\r\nconst projectBm = ref(false);\r\nlet activeTab = ref('ImagePrint');\r\nconst movingTab = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\nconst afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\nconst selectTab = (tabName: string) => {\r\n  if (activeTab.value === tabName) return;\r\n  movingTab.value = tabName;\r\n  if (beforeSettingFormattedString.value !== afterSettingFormattedString.value) {\r\n    showConfirm.value = true;\r\n    confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n  } else {\r\n    activeTab.value = movingTab.value;\r\n  }\r\n};\r\n\r\nconst selectedTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'ImagePrint':\r\n      return ImagePrint;\r\n    case 'LisCode':\r\n      return LisCode;\r\n    case 'CbcCode':\r\n      return cbcCode;\r\n    case 'filePathSet':\r\n      return FilePathSet;\r\n    case 'CRC':\r\n      return CRC;\r\n    case 'ARL':\r\n      return ARL;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  activeTab.value = movingTab.value;\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  try {\r\n    await settingUpdate(settingType.value, JSON.parse(afterSettingFormattedString.value));\r\n    await showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n  } catch (e) {\r\n    await showErrorAlert(MESSAGES.settingSaveFailure);\r\n  }\r\n}\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport {qualityCheck} from \"@/common/api/service/setting/settingApi\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\n\r\nconst qualityCheckOpen = async () => {\r\n  await qualityCheck();\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"ul\", { class: \"customSettingContainer\" }, [\n      _createElementVNode(\"li\", { class: \"mt20\" }, [\n        _cache[0] || (_cache[0] = _createElementVNode(\"p\", { class: \"mb10\" }, \"QualityCheck\", -1)),\n        _createElementVNode(\"button\", {\n          type: \"button\",\n          class: \"defaultBtn\",\n          onClick: qualityCheckOpen\n        }, \"Ok\")\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customSettingContainer\">\r\n      <li class=\"mt20\">\r\n        <p class=\"mb10\">QualityCheck</p>\r\n        <button type=\"button\" class=\"defaultBtn\" @click=\"qualityCheckOpen\">Ok</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {qualityCheck} from \"@/common/api/service/setting/settingApi\";\r\n\r\nconst qualityCheckOpen = async () => {\r\n  await qualityCheck();\r\n}\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"versionContainer\" }\nconst _hoisted_2 = { class: \"versionContainer\" }\n\nimport {ref, onMounted, onBeforeMount} from \"vue\";\r\nimport {readFileTxt} from \"@/common/api/service/fileReader/fileReaderApi\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst isProjectBm = ref(false);\r\nconst projectVersionArr = ref<{key: string, name: string}[]>();\r\nconst engineVersionArr = ref<{key: string, name: string}[]>();\r\nconst swVersion = ref({\r\n  core: '',\r\n  deepNet: '',\r\n})\r\nconst bmEngineVersion = ref({\r\n  seg: '',\r\n  cell: '',\r\n})\r\nconst pbEngineVersion = ref({\r\n  seg: '',\r\n  wbc: '',\r\n  rbcClassify: '',\r\n  rbcPltCrop: '',\r\n  singleSeg: ''\r\n})\r\n\r\nonBeforeMount(() => {\r\n  isProjectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\nonMounted(async () => {\r\n  await setVersions();\r\n  getEngineVersion();\r\n})\r\n\r\nconst getEngineVersion = () => {\r\n  // Project Versions\r\n  projectVersionArr.value = [\r\n    { key: 'Core Version', name: swVersion.value.core },\r\n    { key: 'DeepNet Version', name: swVersion.value.deepNet },\r\n    { key: 'Web Version', name: window.PROJECT_VERSION },\r\n  ];\r\n\r\n  // Engine Versions\r\n  if (isProjectBm.value) {\r\n\r\n    engineVersionArr.value = [\r\n      { key: 'BM SEG Version', name: bmEngineVersion.value.seg },\r\n      { key: 'BM CELL Version', name: bmEngineVersion.value.cell },\r\n    ]\r\n  } else {\r\n    engineVersionArr.value = [\r\n      { key: 'PB SEG Version', name: pbEngineVersion.value.seg },\r\n      { key: 'PB WBC Version', name: pbEngineVersion.value.wbc },\r\n      { key: 'PB RBC CLASSIFY Version', name: pbEngineVersion.value.rbcClassify },\r\n      { key: 'PB RBC PLT CROP Version', name: pbEngineVersion.value.rbcPltCrop },\r\n      { key: 'PB SINGLE SEG Version', name: pbEngineVersion.value.singleSeg },\r\n    ]\r\n  }\r\n}\r\n\r\nconst setVersions = async () => {\r\n  const filePath = 'D:\\\\UIMD_Data\\\\Backend_INI'\r\n  const fileName = 'SW_Config'\r\n  try {\r\n    const result: any = await readFileTxt(`path=${filePath}&filename=${fileName}`);\r\n    const iniFileData = result.data.data;\r\n    const tcpVersionPattern = /TCP_VERSION\\s*=\\s*(.+)/;\r\n    const coreVersionPattern = /BACKEND\\s*=\\s*(.+)/;\r\n    const bmSegPattern = /BM_SEG_ENGINE\\s*=\\s*(.+)/;\r\n    const bmCellPattern = /BM_CELL_ENGINE\\s*=\\s*(.+)/;\r\n    const pbSegPattern = /PB_SEG_ENGINE\\s*=\\s*(.+)/;\r\n    const pbWbcPattern = /PB_WBC_ENGINE\\s*=\\s*(.+)/;\r\n    const pbRbcPattern = /PB_RBC_CLASSIFY\\s*=\\s*(.+)/;\r\n    const pbRbcPltCropPattern = /PB_RBC_PLT_CROP\\s*=\\s*(.+)/;\r\n    const pbSingleSegPattern = /PB_RBC_SINGLE_SEG\\s*=\\s*(.+)/;\r\n\r\n\r\n    swVersion.value.deepNet = iniFileData.match(tcpVersionPattern)[1] || '';\r\n    swVersion.value.core = iniFileData.match(coreVersionPattern)[1] || '';\r\n    bmEngineVersion.value.seg = iniFileData.match(bmSegPattern)[1] || '';\r\n    bmEngineVersion.value.cell = iniFileData.match(bmCellPattern)[1] || '';\r\n    pbEngineVersion.value.seg = iniFileData.match(pbSegPattern)[1] || '';\r\n    pbEngineVersion.value.wbc = iniFileData.match(pbWbcPattern)[1] || '';\r\n    pbEngineVersion.value.rbcClassify = iniFileData.match(pbRbcPattern)[1] || '';\r\n    pbEngineVersion.value.rbcPltCrop = iniFileData.match(pbRbcPltCropPattern)[1] || '';\r\n    pbEngineVersion.value.singleSeg = iniFileData.match(pbSingleSegPattern)[1] || '';\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _cache[0] || (_cache[0] = _createElementVNode(\"h3\", { class: \"fs12 mb10\" }, \"SW\", -1)),\n      _createElementVNode(\"ul\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(projectVersionArr.value, (item, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.key), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.name), 1)\n          ]))\n        }), 128))\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[1] || (_cache[1] = _createElementVNode(\"h3\", { class: \"fs12 mb10\" }, \"Engine\", -1)),\n      _createElementVNode(\"ul\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(engineVersionArr.value, (item, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.key), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.name), 1)\n          ]))\n        }), 128))\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"versionContainer\">\r\n    <h3 class=\"fs12 mb10\">SW</h3>\r\n    <ul>\r\n      <li v-for=\"(item, index) in projectVersionArr\" :key=\"index\">\r\n        <span>{{ item.key }}</span>\r\n        <span>{{ item.name }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"versionContainer\">\r\n    <h3 class=\"fs12 mb10\">Engine</h3>\r\n    <ul>\r\n      <li v-for=\"(item, index) in engineVersionArr\" :key=\"index\">\r\n        <span>{{ item.key }}</span>\r\n        <span>{{ item.name }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeMount} from \"vue\";\r\nimport {readFileTxt} from \"@/common/api/service/fileReader/fileReaderApi\";\r\n\r\nconst isProjectBm = ref(false);\r\nconst projectVersionArr = ref<{key: string, name: string}[]>();\r\nconst engineVersionArr = ref<{key: string, name: string}[]>();\r\nconst swVersion = ref({\r\n  core: '',\r\n  deepNet: '',\r\n})\r\nconst bmEngineVersion = ref({\r\n  seg: '',\r\n  cell: '',\r\n})\r\nconst pbEngineVersion = ref({\r\n  seg: '',\r\n  wbc: '',\r\n  rbcClassify: '',\r\n  rbcPltCrop: '',\r\n  singleSeg: ''\r\n})\r\n\r\nonBeforeMount(() => {\r\n  isProjectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\nonMounted(async () => {\r\n  await setVersions();\r\n  getEngineVersion();\r\n})\r\n\r\nconst getEngineVersion = () => {\r\n  // Project Versions\r\n  projectVersionArr.value = [\r\n    { key: 'Core Version', name: swVersion.value.core },\r\n    { key: 'DeepNet Version', name: swVersion.value.deepNet },\r\n    { key: 'Web Version', name: window.PROJECT_VERSION },\r\n  ];\r\n\r\n  // Engine Versions\r\n  if (isProjectBm.value) {\r\n\r\n    engineVersionArr.value = [\r\n      { key: 'BM SEG Version', name: bmEngineVersion.value.seg },\r\n      { key: 'BM CELL Version', name: bmEngineVersion.value.cell },\r\n    ]\r\n  } else {\r\n    engineVersionArr.value = [\r\n      { key: 'PB SEG Version', name: pbEngineVersion.value.seg },\r\n      { key: 'PB WBC Version', name: pbEngineVersion.value.wbc },\r\n      { key: 'PB RBC CLASSIFY Version', name: pbEngineVersion.value.rbcClassify },\r\n      { key: 'PB RBC PLT CROP Version', name: pbEngineVersion.value.rbcPltCrop },\r\n      { key: 'PB SINGLE SEG Version', name: pbEngineVersion.value.singleSeg },\r\n    ]\r\n  }\r\n}\r\n\r\nconst setVersions = async () => {\r\n  const filePath = 'D:\\\\UIMD_Data\\\\Backend_INI'\r\n  const fileName = 'SW_Config'\r\n  try {\r\n    const result: any = await readFileTxt(`path=${filePath}&filename=${fileName}`);\r\n    const iniFileData = result.data.data;\r\n    const tcpVersionPattern = /TCP_VERSION\\s*=\\s*(.+)/;\r\n    const coreVersionPattern = /BACKEND\\s*=\\s*(.+)/;\r\n    const bmSegPattern = /BM_SEG_ENGINE\\s*=\\s*(.+)/;\r\n    const bmCellPattern = /BM_CELL_ENGINE\\s*=\\s*(.+)/;\r\n    const pbSegPattern = /PB_SEG_ENGINE\\s*=\\s*(.+)/;\r\n    const pbWbcPattern = /PB_WBC_ENGINE\\s*=\\s*(.+)/;\r\n    const pbRbcPattern = /PB_RBC_CLASSIFY\\s*=\\s*(.+)/;\r\n    const pbRbcPltCropPattern = /PB_RBC_PLT_CROP\\s*=\\s*(.+)/;\r\n    const pbSingleSegPattern = /PB_RBC_SINGLE_SEG\\s*=\\s*(.+)/;\r\n\r\n\r\n    swVersion.value.deepNet = iniFileData.match(tcpVersionPattern)[1] || '';\r\n    swVersion.value.core = iniFileData.match(coreVersionPattern)[1] || '';\r\n    bmEngineVersion.value.seg = iniFileData.match(bmSegPattern)[1] || '';\r\n    bmEngineVersion.value.cell = iniFileData.match(bmCellPattern)[1] || '';\r\n    pbEngineVersion.value.seg = iniFileData.match(pbSegPattern)[1] || '';\r\n    pbEngineVersion.value.wbc = iniFileData.match(pbWbcPattern)[1] || '';\r\n    pbEngineVersion.value.rbcClassify = iniFileData.match(pbRbcPattern)[1] || '';\r\n    pbEngineVersion.value.rbcPltCrop = iniFileData.match(pbRbcPltCropPattern)[1] || '';\r\n    pbEngineVersion.value.singleSeg = iniFileData.match(pbSingleSegPattern)[1] || '';\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingWrapDiv\" }\nconst _hoisted_2 = { class: \"settingTabBtn\" }\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = [\"onClick\"]\n\nimport {ref, computed} from 'vue';\r\nimport AnalysisDatabase from \"@/views/setting/analysisDatabase/index.vue\";\r\nimport LoginAccount from \"@/views/setting/lognAccount/index.vue\";\r\nimport Report from \"@/views/setting/report/index.vue\";\r\nimport QualityCheck from \"@/views/setting/qualityCheck/index.vue\";\r\nimport Version from \"@/views/setting/version/index.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {settingUpdate} from \"@/common/lib/utils/settingSave\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst tabs = ['Login/Account', 'Analysis/Database', 'Report', 'Quality Check', 'Version'] as const;\r\nconst viewerTabs = ['Login/Account', 'Analysis/Database', 'Version'] as const;\r\nconst currentTab = ref<typeof tabs[number]>(tabs[0]);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\nconst afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst movingTab = ref<typeof tabs[number]>(tabs[0]);\r\n\r\nconst changeTab = (tab: typeof tabs[number]) => {\r\n  if (currentTab.value === tab) return;\r\n\r\n  movingTab.value = tab;\r\n  if (beforeSettingFormattedString.value !== afterSettingFormattedString.value) {\r\n    showConfirm.value = true;\r\n    confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n  } else {\r\n    currentTab.value = movingTab.value;\r\n    sessionStorage.setItem('selectedTab', movingTab.value);\r\n  }\r\n};\r\n\r\nconst components = { 'Login/Account': LoginAccount, 'Analysis/Database': AnalysisDatabase, 'Report': Report, 'Quality Check': QualityCheck, 'Version': Version };\r\nconst viewerComponents: any = { 'Login/Account': LoginAccount, 'Version': Version, 'Analysis/Database': AnalysisDatabase };\r\n\r\nconst storedTab = sessionStorage.getItem('selectedTab');\r\nif (storedTab && tabs.includes(storedTab as typeof tabs[number])) {\r\n  currentTab.value = storedTab as typeof tabs[number];\r\n}\r\n\r\nconst currentTabComponent = computed(() => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    return viewerComponents[currentTab.value];\r\n  }\r\n  return components[currentTab.value];\r\n});\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  currentTab.value = movingTab.value;\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  try {\r\n    await settingUpdate(settingType.value, JSON.parse(afterSettingFormattedString.value));\r\n    await showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n  } catch (e) {\r\n    await showErrorAlert(MESSAGES.settingSaveFailure);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", _hoisted_2, [\n        (viewerCheck.value === 'viewer')\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, _renderList(viewerTabs, (tab) => {\n              return _createElementVNode(\"li\", {\n                key: tab,\n                class: _normalizeClass({ activeTab: currentTab.value === tab }),\n                onClick: ($event: any) => (changeTab(tab))\n              }, _toDisplayString(tab), 11, _hoisted_3)\n            }), 64))\n          : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, _renderList(tabs, (tab) => {\n              return _createElementVNode(\"li\", {\n                key: tab,\n                class: _normalizeClass({ activeTab: currentTab.value === tab }),\n                onClick: ($event: any) => (changeTab(tab))\n              }, _toDisplayString(tab), 11, _hoisted_4)\n            }), 64))\n      ]),\n      (_openBlock(), _createBlock(_resolveDynamicComponent(currentTabComponent.value), { class: \"settingWrap\" }))\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          type: \"setting\",\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"settingWrapDiv\">\r\n    <ul class=\"settingTabBtn\">\r\n      <template v-if=\"viewerCheck === 'viewer'\">\r\n        <li v-for=\"tab in viewerTabs\" :key=\"tab\" :class=\"{ activeTab: currentTab === tab }\" @click=\"changeTab(tab)\">{{ tab }}</li>\r\n      </template>\r\n      <template v-else>\r\n        <li v-for=\"tab in tabs\" :key=\"tab\" :class=\"{ activeTab: currentTab === tab }\" @click=\"changeTab(tab)\">{{ tab }}</li>\r\n      </template>\r\n    </ul>\r\n    <component class=\"settingWrap\" :is=\"currentTabComponent\" />\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"setting\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed} from 'vue';\r\nimport AnalysisDatabase from \"@/views/setting/analysisDatabase/index.vue\";\r\nimport LoginAccount from \"@/views/setting/lognAccount/index.vue\";\r\nimport Report from \"@/views/setting/report/index.vue\";\r\nimport QualityCheck from \"@/views/setting/qualityCheck/index.vue\";\r\nimport Version from \"@/views/setting/version/index.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {settingUpdate} from \"@/common/lib/utils/settingSave\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\n\r\nconst store = useStore();\r\nconst tabs = ['Login/Account', 'Analysis/Database', 'Report', 'Quality Check', 'Version'] as const;\r\nconst viewerTabs = ['Login/Account', 'Analysis/Database', 'Version'] as const;\r\nconst currentTab = ref<typeof tabs[number]>(tabs[0]);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\nconst afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst movingTab = ref<typeof tabs[number]>(tabs[0]);\r\n\r\nconst changeTab = (tab: typeof tabs[number]) => {\r\n  if (currentTab.value === tab) return;\r\n\r\n  movingTab.value = tab;\r\n  if (beforeSettingFormattedString.value !== afterSettingFormattedString.value) {\r\n    showConfirm.value = true;\r\n    confirmMessage.value = `${settingType.value} ${MESSAGES.settingNotSaved}`;\r\n  } else {\r\n    currentTab.value = movingTab.value;\r\n    sessionStorage.setItem('selectedTab', movingTab.value);\r\n  }\r\n};\r\n\r\nconst components = { 'Login/Account': LoginAccount, 'Analysis/Database': AnalysisDatabase, 'Report': Report, 'Quality Check': QualityCheck, 'Version': Version };\r\nconst viewerComponents: any = { 'Login/Account': LoginAccount, 'Version': Version, 'Analysis/Database': AnalysisDatabase };\r\n\r\nconst storedTab = sessionStorage.getItem('selectedTab');\r\nif (storedTab && tabs.includes(storedTab as typeof tabs[number])) {\r\n  currentTab.value = storedTab as typeof tabs[number];\r\n}\r\n\r\nconst currentTabComponent = computed(() => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    return viewerComponents[currentTab.value];\r\n  }\r\n  return components[currentTab.value];\r\n});\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  currentTab.value = movingTab.value;\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  try {\r\n    await settingUpdate(settingType.value, JSON.parse(afterSettingFormattedString.value));\r\n    await showSuccessAlert(MESSAGES.settingSaveSuccess);\r\n  } catch (e) {\r\n    await showErrorAlert(MESSAGES.settingSaveFailure);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {apiConstants} from \"@/common/api/apiConstants\";\r\nimport {useHttpClient, ApiResponse} from '@/common/api/httpClient';\r\nimport { RuningInfoApiRequest } from \"@/common/api/service/runningInfo/dto/runningInfoDto\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createRunningApi = async (request: { userId: number; runingInfoDtoItems: any }): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.runningInfo.create, request);\r\n};\r\n\r\nexport const updateRunningApi = async (request: { userId: number; runingInfoDtoItems: any, dayQuery: any }): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.settings.runningInfo.update, request, '',true);\r\n};\r\n\r\nexport const jsonCreatePost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.jsonReader.jsonCreate, request, '', true);\r\n};\r\n\r\nexport const getRunningApi = async (req: RuningInfoApiRequest): Promise<ApiResponse<any | undefined>> => {\r\n    const queryString = Object.entries(req)\r\n        .filter(([key, value]) => value !== undefined)  // undefined 값은 제외\r\n        .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`)\r\n        .join('&');\r\n\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.get,`${queryString}`, true);\r\n};\r\n\r\nexport const deleteRunningApi = async (req: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.settings.runningInfo.delete, req, true);\r\n};\r\n\r\nexport const detailRunningApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.detail, `${request}`, false);\r\n};\r\n\r\nexport const classInfoDetailApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.classInfoDetail, `${request}`, false);\r\n};\r\n\r\nexport const classInfoDetailSelectQueryApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.classInfoDetailSelectQuery, `${request}`, false);\r\n};\r\n\r\nexport const classInfoMenuDetailSelectQueryApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.classInfoMenuDetailSelectQuery, `${request}`, false);\r\n};\r\n\r\nexport const pageUpDownRunnIngApi = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.pageUpDown, `${req}`, true)\r\n}\r\n\r\nexport const updatePcIpStateApi = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.updatePcIpState, `${req}`, true);\r\n}\r\n\r\nexport const clearPcIpState = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.clearPcIpState, `${req}`, true)\r\n}\r\n\r\nexport const removePageAllDataApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.removePageAllData, ``, true)\r\n}","\r\n\r\nexport const calculateWbcPercentages = (\r\n    classList: any[],\r\n    siteCd: any\r\n) => {\r\n    const includesStr = siteCd === '0006' ? [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\"]:[\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\"];\r\n    const total = classList\r\n        .filter(\r\n            (category) =>\r\n                !includesStr.includes(category.title)\r\n        )\r\n        .reduce((acc, category) => {\r\n            const matchingWbcItem = classList.find(\r\n                (wbcItem) => category.id === wbcItem.id\r\n            );\r\n\r\n            if (matchingWbcItem) {\r\n                category.count = matchingWbcItem.count;\r\n                return acc + Number(matchingWbcItem.count);\r\n            }\r\n\r\n            return acc;\r\n        }, 0);\r\n\r\n    return total;\r\n};\r\n\r\nexport const percentWithNoError = (percent: number) => {\r\n    if (isNaN(percent)) {\r\n        return 0;\r\n    }\r\n    return percent;\r\n}\r\n\r\n// 인하대\r\nexport const inhaPercentChange = (runningInfoData: any, wbcInfo: any) => {\r\n    const excludedTitles = ['NR', 'AR', 'GP', 'PA', 'MC', 'MA'];\r\n\r\n    // wbcTotal 계산\r\n    let wbcTotal = 0;\r\n    wbcInfo.forEach((wbcItem: any) => {\r\n        if (Number(wbcItem.count) > 0 && !excludedTitles.includes(wbcItem.title)) {\r\n            wbcTotal += Number(wbcItem.count);\r\n        }\r\n    });\r\n    // console.log('wbcTotal : ' + wbcTotal);\r\n\r\n    let maxItem: any = null;\r\n    let percentTotal = 0;\r\n\r\n    // 퍼센트 계산 및 maxItem 결정\r\n    wbcInfo.forEach((wbcItem: any, index: any) => {\r\n        let percent = Number(((Number(wbcItem.count) / wbcTotal) * 100).toFixed(0));\r\n        const percentN2 = Number(((Number(wbcItem.count) / wbcTotal) * 100).toFixed(2));\r\n\r\n        // console.log(percentN2);\r\n\r\n        // 특정 조건에 따라 퍼센트 조정\r\n        if ((wbcItem.title === 'BL' || ['LA', 'IM', 'MB', 'AM'].includes(wbcItem.title)) &&\r\n            Number(wbcItem.count) > 0 &&\r\n            percentN2 >= 0 &&\r\n            percentN2 <= 1)\r\n        {\r\n            percent = 1;\r\n        }\r\n\r\n        wbcItem.percent = percent;\r\n        // console.log(wbcItem.title + ':' + wbcItem.percent);\r\n\r\n        // 제외할 타이틀이 아닌 경우 percentTotal 및 maxItem 갱신\r\n        if (!excludedTitles.includes(wbcItem.title)) {\r\n            percentTotal += Number(wbcItem.percent);\r\n            if (maxItem === null || Number(maxItem.count) < Number(wbcItem.count)) {\r\n                maxItem = wbcItem;\r\n            }\r\n        }\r\n\r\n        // console.log('maxItem : ' + (maxItem ? maxItem.title : 'null'));\r\n        // console.log(percentTotal);\r\n\r\n        // 마지막 항목일 때 백분율 오차 보정\r\n        if (maxItem !== null && (index + 1) === wbcInfo.length) {\r\n            // console.log(Number(maxItem.percent));\r\n            // console.log(100 - percentTotal);\r\n            maxItem.percent = Number(maxItem.percent) + (100 - percentTotal);\r\n            // console.log(maxItem.percent);\r\n        }\r\n    });\r\n\r\n    return wbcInfo;\r\n}\r\n\r\n// 서울성모\r\nexport const seoulStMaryPercentChange = (originWbcInfo: any, changingWbcInfo: any) => {\r\n    // Neutrophil 빼고 totalCount 계산\r\n    const totalPercent = originWbcInfo.filter((item: any) => item.name !== \"Neutrophil\")\r\n        .map((item: any) => Math.round(parseFloat(item.percent)) || 0)\r\n        .reduce((sum: any, percent: any) => sum + Number(percent), 0);\r\n\r\n    return changingWbcInfo.map((item: any) => item.name === \"Neutrophil\"\r\n            ? {...item, percent: 100 - totalPercent}\r\n            : {...item, percent: Math.round(parseFloat(item.percent))}\r\n    );\r\n}\r\n\r\n/** 인천성모병원\r\n * BM에서 정수값은 .0 붙여서 보여주기\r\n * ex. 8% => 8.0% */\r\nexport const incheonStMaryPercentChange = (projectType: string, wbcInfo: any) => {\r\n    if (projectType === 'bm') {\r\n        return wbcInfo.map((item: any) => {\r\n            if (0 < parseFloat(item.percent) && parseFloat(item.percent) < 100 && parseFloat(item.percent) % 1 === 0) {\r\n                return {...item, percent: Number(item.percent).toFixed(1) };\r\n            }\r\n            return item;\r\n        })\r\n    }\r\n    return wbcInfo;\r\n}\r\n\r\nexport const incheonGilPercentChange = (wbcInfo: any, maxWbcCount: string) => {\r\n    const nonWbcTitles = ['NR', 'GP', 'PA', 'MA', 'AR', 'SM'];\r\n\r\n    // 전체 Class\r\n    const addPercentWbcInfo = wbcInfo.map((item: any) => {\r\n        let itemPercent = 0;\r\n        if (Number(item.count) && item.title === 'NR') itemPercent = Math.ceil((Number(item.count) / Number(maxWbcCount)) * 100);\r\n        else if (nonWbcTitles.includes(item.title) && Number(item.count)) itemPercent = Math.round((Number(item.count) / Number(maxWbcCount)) * 100);\r\n        else itemPercent = Number(item.percent) || 0;\r\n        return {\r\n            ...item,\r\n            percent: itemPercent\r\n        };\r\n    })\r\n\r\n    // nonWbc 제외 Class\r\n    const wbcInfoPercentArr = addPercentWbcInfo.filter((item: any) => !nonWbcTitles.includes(item.title));\r\n\r\n    const adjustedItems = adjustPercentages(wbcInfoPercentArr);\r\n\r\n    return wbcInfo.map((item: any) => {\r\n        const adjustedItem = adjustedItems.find(adjusted => adjusted.title === item.title);\r\n        return adjustedItem ? { ...item, percent: adjustedItem.percent } : addPercentWbcInfo.find((wbcItem: any) => item.title === wbcItem.title);\r\n    });\r\n};\r\n\r\nconst adjustPercentages = (items: any[]) => {\r\n    // Step 1: 초기 반올림\r\n    const rounded = items.map(item => Math.round(item.percent)); // 반올림하여 정수 변환\r\n    const total = rounded.reduce((sum, p) => sum + p, 0); // 합계 계산\r\n\r\n    // Step 2: 오차 계산\r\n    const difference = 100 - total; // 남은 오차 계산\r\n\r\n    // Step 3: 소수점 크기 기준으로 정렬 및 오차 분배\r\n    if (difference !== 0) {\r\n        const decimalParts = items.map((item, i) => ({\r\n            index: i,\r\n            decimal: item.percent - Math.floor(item.percent) // 소수점 부분 계산\r\n        }));\r\n\r\n        // 소수점 부분이 큰 순서로 정렬\r\n        decimalParts.sort((a, b) => b.decimal - a.decimal);\r\n\r\n        // Step 4: 오차 분배\r\n        for (let i = 0; i < Math.abs(difference); i++) {\r\n            const adjustIndex = decimalParts[i % decimalParts.length].index; // 인덱스가 범위를 넘지 않도록 조정\r\n            rounded[adjustIndex] += difference > 0 ? 1 : -1; // 오차 조정\r\n        }\r\n    }\r\n\r\n    // Step 5: 원래 아이템의 percent 값을 수정\r\n    for (let i = 0; i < items.length; i++) {\r\n        items[i].percent = rounded[i];\r\n    }\r\n\r\n    return items;\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"moveImgIsBool\" }\nconst _hoisted_2 = { style: {\"font-size\":\"0.8rem\",\"width\":\"900px\",\"height\":\"90%\",\"overflow-y\":\"auto\",\"background\":\"#fff\",\"color\":\"#000\",\"position\":\"absolute\",\"top\":\"10%\",\"left\":\"33%\",\"box-sizing\":\"border-box\",\"padding\":\"3rem 7rem\",\"border\":\"2px solid #ccc\",\"border-radius\":\"10px\",\"z-index\":\"9999\"} }\nconst _hoisted_3 = { style: {\"margin\":\"10px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }\nconst _hoisted_4 = { style: {\"display\":\"flex\",\"flex-direction\":\"column\",\"justify-content\":\"space-between\"} }\nconst _hoisted_5 = { style: {\"width\":\"100%\",\"font-size\":\"0.8rem\"} }\nconst _hoisted_6 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_7 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_8 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_9 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_10 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_11 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_12 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_13 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_14 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_15 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_16 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_17 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_18 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_19 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_20 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_21 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_22 = {\n  key: 0,\n  style: {\"margin-top\":\"20px\",\"border-top\":\"2px dotted #696969\"}\n}\nconst _hoisted_23 = {\n  key: 1,\n  style: {\"margin-top\":\"20px\"}\n}\nconst _hoisted_24 = { style: {\"width\":\"100%\",\"font-size\":\"0.8rem\"} }\nconst _hoisted_25 = [\"rowspan\"]\nconst _hoisted_26 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_27 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_28 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_29 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_30 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_31 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_32 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_33 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_34 = { key: 0 }\nconst _hoisted_35 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_36 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_37 = { key: 1 }\nconst _hoisted_38 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_39 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_40 = { key: 0 }\nconst _hoisted_41 = { style: {\"text-align\":\"left\",\"font-weight\":\"bold\"} }\nconst _hoisted_42 = { style: {\"text-align\":\"left\",\"font-weight\":\"bold\"} }\nconst _hoisted_43 = { key: 1 }\nconst _hoisted_44 = { style: {\"text-align\":\"left\",\"font-weight\":\"bold\"} }\nconst _hoisted_45 = { style: {\"text-align\":\"left\",\"font-weight\":\"bold\"} }\nconst _hoisted_46 = {\n  style: {\"text-align\":\"left\",\"padding\":\"15px 0\"},\n  colspan: \"2\"\n}\nconst _hoisted_47 = {\n  style: {\"text-align\":\"left\",\"padding-top\":\"15px\"},\n  colspan: \"4\"\n}\nconst _hoisted_48 = { style: {\"text-align\":\"left\",\"outline\":\"1px solid #252629\",\"padding\":\"4px\"} }\nconst _hoisted_49 = { style: {\"margin-top\":\"150px\",\"margin-bottom\":\"50px\",\"border-top\":\"2px dotted #696969\"} }\nconst _hoisted_50 = { style: {\"margin\":\"10px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }\nconst _hoisted_51 = { style: {\"width\":\"100%\",\"font-size\":\"0.8rem\"} }\nconst _hoisted_52 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_53 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_54 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_55 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_56 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_57 = {\n  key: 0,\n  style: {\"text-align\":\"left\",\"padding-top\":\"30px\",\"font-weight\":\"bold\"}\n}\nconst _hoisted_58 = {\n  key: 0,\n  style: {\"padding-top\":\"5px\",\"padding-bottom\":\"15px\"}\n}\nconst _hoisted_59 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\",\"width\":\"30%\"} }\nconst _hoisted_60 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\",\"width\":\"45%\"} }\nconst _hoisted_61 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_62 = {\n  colspan: \"2\",\n  style: {\"text-align\":\"left\",\"padding\":\"5px 0\"}\n}\nconst _hoisted_63 = { style: {\"text-align\":\"left\",\"outline\":\"1px solid #252629\",\"padding\":\"4px\"} }\nconst _hoisted_64 = {\n  class: \"print\",\n  style: {\"list-style\":\"none\",\"padding-left\":\"0\",\"margin-top\":\"20px\",\"text-align\":\"center\",\"display\":\"flex\",\"flex-direction\":\"column\",\"align-items\":\"center\",\"justify-content\":\"center\"}\n}\nconst _hoisted_65 = { style: {\"font-weight\":\"bold\",\"font-size\":\"18px\",\"margin\":\"10px auto 20px\"} }\nconst _hoisted_66 = { style: {\"position\":\"relative\",\"text-align\":\"left\"} }\nconst _hoisted_67 = [\"src\", \"width\", \"height\", \"onError\"]\n\nimport { computed, onMounted, ref } from \"vue\";\r\nimport {getTestTypeText, getBmTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getImagePrintApi, getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {disableScroll, enableScroll} from \"@/common/lib/utils/scroll\";\r\nimport {\r\n  incheonGilPercentChange,\r\n  incheonStMaryPercentChange,\r\n  inhaPercentChange,\r\n  seoulStMaryPercentChange\r\n} from \"@/common/helpers/common/classPercent\";\r\nimport { HOSPITAL_SITE_CD_BY_NAME } from \"@/common/defines/constants/siteCd\";\r\nimport {RBC_CODE_CLASS_ID, SHOWING_RBC_SHAPE_CLASS_IDS} from \"@/common/defines/constants/dataBase\";\r\nimport {DIR_NAME} from \"@/common/defines/constants/settings\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'print',\n  emits: ['printClose'],\n  setup(__props, { emit: __emit }) {\n\r\nconst projectType = window.PROJECT_TYPE;\r\nconst store = useStore();\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst printContent = ref(null);\r\nconst wbcInfo = ref([]);\r\n\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nconst selectItems = ref<any>(null);\r\nconst orderClass = ref<any>({});\r\n\r\nconst imagePrintAndWbcArr = ref<string[]>([]);\r\nconst emit = __emit;\r\nconst nonWbcIdList = ['12', '13', '14', '15', '16'];\r\n\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\n\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst shapeOthersCount = ref(0);\r\n\r\nconst printReady = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getDetailRunningInfo();\r\n  await getOrderClass();\r\n  await getImagePrintData();\r\n  if (projectType !== 'bm') {\r\n    await rbcTotalAndReCount();\r\n    await calcShapeOthersCount();\r\n  }\r\n  await printPage();\r\n});\r\n\r\nconst calcShapeOthersCount = async () => {\r\n  const shapeOthers: any = await getShapeOthers();\r\n  shapeOthersCount.value = shapeOthers?.artifact + shapeOthers?.doubleNormal;\r\n}\r\n\r\nconst getShapeOthers = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  const rbcInfoPathAfter = response_old.data[0].rbcClassList;\r\n  const otherCount = {artifact: 0, doubleNormal: 0};\r\n  if (!rbcInfoPathAfter) {\r\n    return;\r\n  }\r\n  rbcInfoPathAfter.forEach((item: any) => {\r\n    if (item.categoryId === '03') {\r\n      for (const classItem of item.classInfo) {\r\n        if (classItem.classNm === 'Artifact') {\r\n          otherCount.artifact += 1\r\n        } else if (classItem.classNm === 'DoubleNormal') {\r\n          otherCount.doubleNormal += 1\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  return otherCount;\r\n}\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItems.value?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeBodyTotalVal = 0;\r\n  let shapeBodyTotalVal2 = 0;\r\n  shapeOthersCount.value = 0;\r\n\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    const lastIndex = el.classInfo.length > 0 ? el.classInfo[el.classInfo.length - 1].index.replace(/[^\\d]/g, '') : '';\r\n\r\n    switch (el.categoryId) {\r\n      case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n        total = lastIndex;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n        chromiaTotalval = lastIndex;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n        shapeBodyTotalVal = lastIndex;\r\n\r\n        for (const classItem of el.classInfo) {\r\n          if (!SHOWING_RBC_SHAPE_CLASS_IDS.includes(classItem.classId)) {\r\n            shapeOthersCount.value += 1;\r\n          }\r\n        }\r\n        break;\r\n      case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n        shapeBodyTotalVal2 = lastIndex;\r\n        break;\r\n      default:\r\n        // Handle unexpected categoryId if needed\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total) + 1;\r\n  sizeChromiaTotal.value = Number(total) + 1;\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeBodyTotalVal) + Number(shapeBodyTotalVal2) + 2;\r\n\r\n  // selectItems의 originalDegree 초기화\r\n  selectItems.value.rbcInfoAfter.forEach((category: any) => {\r\n    category.classInfo.forEach((item: any) => {\r\n      item.originalDegree = 0;\r\n    });\r\n  });\r\n\r\n  // rbcInfoPathAfter에서 아이템들 classId와 categoryId를 비교하여 originalDegree 증가시키기\r\n  rbcInfoPathAfter.value.forEach(pathCategory => {\r\n    const category = selectItems.value.rbcInfoAfter.find((cat: any) => cat.categoryId === pathCategory.categoryId);\r\n    if (category) {\r\n      pathCategory.classInfo.forEach((pathClass: any) => {\r\n        const classInfo = category.classInfo.find((item: any) => item.classId === pathClass.classId);\r\n        if (classInfo) {\r\n          classInfo.originalDegree++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  await countReAdd();\r\n}\r\nconst hiddenImages = ref<Record<string, boolean>>({});\r\n\r\nconst handleImageError = (itemId: number, fileName: string) => {\r\n  hiddenImages.value[`${itemId}-${fileName}`] = true;\r\n};\r\n\r\nconst percentageChange = (count: any, categoryId: string): any => {\r\n  const percentage = ((Number(count) / calculateRbcTotalByCategoryId(categoryId)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst calculateRbcTotalByCategoryId = (categoryId: string) => {\r\n  switch (categoryId) {\r\n    case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n      return Number(rbcTotalVal.value);\r\n    case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n      return Number(chromiaTotalTwo.value);\r\n    case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n    case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n      return Number(shapeBodyTotal.value);\r\n    default:\r\n      return Number(rbcTotalVal.value);\r\n  }\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    selectItems.value = slideData.value;\r\n    wbcInfo.value = slideData.value.wbcInfoAfter;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst filteredWbcInfo = (wbcInfoArr: any, type: 'wbc' | 'nonWbc') => {\r\n  if (type === 'nonWbc') {\r\n    return wbcInfoArr.filter((item: any) => nonWbcIdList.includes(item.id) && item.count > 0);\r\n  }\r\n  return wbcInfoArr.filter((item: any) => !nonWbcIdList.includes(item.id) && item.count > 0);\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  const showImage = [...imagePrintAndWbcArr.value].find(item => item === String(id));\r\n  if (!showImage) {\r\n    return '';\r\n  }\r\n\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const path = selectItems.value.img_drive_root_path !== '' && selectItems.value.img_drive_root_path ? selectItems.value.img_drive_root_path : iaRootPath.value;\r\n  const slotId = selectItems.value.slotId || \"\";\r\n  const folderPath = projectType === 'bm' ? `${path}/${slotId}/04_BM_Classification/${id}_${title}` : `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/print?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nconst noImageList = (wbcArr: any) => {\r\n  return wbcArr.filter((item: any) => [...imagePrintAndWbcArr.value].includes(String(item.id)));\r\n}\r\n\r\n\r\nconst printPage = async () => {\r\n  printReady.value = true;\r\n  disableScroll();\r\n\r\n  percentChangeBySiteCd();\r\n  try {\r\n    // 프린트할 컨텐츠를 가져옴\r\n    const content = printContent.value;\r\n    if (!content) {\r\n      throw new Error(\"프린트할 내용을 찾을 수 없습니다.\");\r\n    }\r\n\r\n    // HTML 컨텐츠를 Gzip으로 압축\r\n    const compressedContent = pako.gzip(content.innerHTML, { level: 9 });\r\n\r\n    // HTML 컨텐츠를 PDF로 변환하는 요청을 보냄\r\n    const response = await fetch(`${apiBaseUrl}/pdf/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-Encoding': 'gzip',\r\n      },\r\n      body: compressedContent,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('HTML을 PDF로 변환하는데 실패했습니다.');\r\n    }\r\n\r\n    // 받은 PDF 파일을 blob으로 변환\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n\r\n    // Edge 브라우저에서 PDF 다운로드를 위한 처리\r\n    const isEdge = /Edg/.test(navigator.userAgent);\r\n    if (isEdge) {\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `${selectItems.value.barcodeNo}-report`; // 다운로드할 파일명 설정\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else {\r\n      // 다른 브라우저에서 새 창에 PDF 열기\r\n      window.open(url, '_blank', 'width=800,height=500,noopener,noreferrer');\r\n    }\r\n\r\n    window.URL.revokeObjectURL(url);\r\n    printReady.value = false;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    printReady.value = false;\r\n  } finally {\r\n    enableScroll();\r\n  }\r\n};\r\n\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      imagePrintAndWbcArr.value = data.filter((item) => item.checked).map(item => item.classId);\r\n\r\n      // count가 없는 경우 print에서 보여줄 wbcInfo에서 제거\r\n      wbcInfo.value = wbcInfo.value.filter((item: any) => item.count !== '0');\r\n\r\n      // wbcClassification Order 적용\r\n      const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      const sortArr = orderClass.value.length !== 0 ? oArr : projectType === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const sortedWbcInfoData = await sortWbcInfo(wbcInfo.value, sortArr);\r\n      wbcInfo.value = sortedWbcInfoData;\r\n      percentChangeBySiteCd();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  return wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\nconst percentChangeBySiteCd = async () => {\r\n  if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원']) {\r\n    wbcInfo.value = seoulStMaryPercentChange(wbcInfo.value, wbcInfo.value);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n    wbcInfo.value = await inhaPercentChange(selectItems.value, wbcInfo.value);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천성모병원']) {\r\n    wbcInfo.value = incheonStMaryPercentChange(projectType, wbcInfo.value);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n    wbcInfo.value = incheonGilPercentChange(wbcInfo.value, selectItems.value?.wbcInfo.totalCount);\r\n  }\r\n}\r\n\r\nconst closePrint = () => {\r\n  emit('printClose');\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Loading Print...\", 512), [\n      [_vShow, printReady.value]\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"button\", {\n        style: {\"position\":\"absolute\",\"right\":\"8px\",\"background\":\"none\",\"border\":\"1px solid #000\",\"border-radius\":\"5px\",\"padding\":\"7px 25px\",\"top\":\"5px\",\"cursor\":\"pointer\"},\n        onClick: closePrint\n      }, \"Close \"),\n      _createElementVNode(\"div\", {\n        ref_key: \"printContent\",\n        ref: printContent,\n        style: {\"margin-top\":\"20px\"}\n      }, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"h3\", _hoisted_3, \"Analysis Report from UIMD \" + _toDisplayString(_unref(projectType) === 'bm' ? 'BM' : 'PB') + \" system\", 1)\n        ]),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"table\", _hoisted_5, [\n            _cache[8] || (_cache[8] = _createElementVNode(\"colgroup\", null, [\n              _createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n              _createElementVNode(\"col\", { style: {\"width\":\"70%\"} })\n            ], -1)),\n            _createElementVNode(\"tbody\", null, [\n              _createElementVNode(\"tr\", _hoisted_6, [\n                _cache[0] || (_cache[0] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Slot ID\", -1)),\n                _createElementVNode(\"td\", _hoisted_7, _toDisplayString(selectItems.value?.slotId), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_8, [\n                _cache[1] || (_cache[1] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Ordered date\", -1)),\n                _createElementVNode(\"td\", _hoisted_9, _toDisplayString(_unref(formatDateString)(selectItems.value?.orderDttm)), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_10, [\n                _cache[2] || (_cache[2] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Signed by ID\", -1)),\n                _createElementVNode(\"td\", _hoisted_11, _toDisplayString(selectItems.value?.submitUserId), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_12, [\n                _cache[3] || (_cache[3] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Signed date\", -1)),\n                _createElementVNode(\"td\", _hoisted_13, _toDisplayString(selectItems.value?.submitOfDate), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_14, [\n                _cache[4] || (_cache[4] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Ordered Classification\", -1)),\n                _createElementVNode(\"td\", _hoisted_15, _toDisplayString(_unref(projectType) === 'pb' ? _unref(getTestTypeText)(selectItems.value?.testType) : _unref(getBmTestTypeText)(selectItems.value?.testType)), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_16, [\n                _cache[5] || (_cache[5] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Name\", -1)),\n                _createElementVNode(\"td\", _hoisted_17, _toDisplayString(selectItems.value?.patientName), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_18, [\n                _cache[6] || (_cache[6] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Birth\", -1)),\n                _createElementVNode(\"td\", _hoisted_19, _toDisplayString(selectItems.value?.birthDay), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_20, [\n                _cache[7] || (_cache[7] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Gender\", -1)),\n                _createElementVNode(\"td\", _hoisted_21, _toDisplayString(selectItems.value?.gender === '' ? '' : selectItems.value?.gender === '01' ? 'Male' : 'Female'), 1)\n              ])\n            ])\n          ]),\n          (selectItems.value?.testType === '04')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22))\n            : _createCommentVNode(\"\", true),\n          (selectItems.value?.testType === '04')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [\n                _cache[25] || (_cache[25] = _createElementVNode(\"h3\", { style: {\"margin\":\"10px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"RBC classification result\", -1)),\n                _createElementVNode(\"table\", _hoisted_24, [\n                  _cache[23] || (_cache[23] = _createElementVNode(\"colgroup\", null, [\n                    _createElementVNode(\"col\", { style: {\"width\":\"20%\"} }),\n                    _createElementVNode(\"col\", { style: {\"width\":\"25%\"} }),\n                    _createElementVNode(\"col\", { style: {\"width\":\"25%\"} }),\n                    _createElementVNode(\"col\", { style: {\"width\":\"15%\"} }),\n                    _createElementVNode(\"col\", { style: {\"width\":\"15%\"} })\n                  ], -1)),\n                  _cache[24] || (_cache[24] = _createElementVNode(\"thead\", null, [\n                    _createElementVNode(\"tr\", { style: {\"margin-bottom\":\"15px\",\"font-size\":\"18px\",\"font-weight\":\"normal\",\"padding-bottom\":\"100px\"} }, [\n                      _createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Category\"),\n                      _createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Class\"),\n                      _createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Degree\"),\n                      _createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Count\"),\n                      _createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Percent\")\n                    ])\n                  ], -1)),\n                  _createElementVNode(\"tbody\", null, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([selectItems.value.rbcInfoAfter], (classList, outerIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                          return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n                            _createElementVNode(\"tr\", null, [\n                              _createElementVNode(\"td\", {\n                                rowspan: category.classInfo.length + (category.categoryNm !== 'Shape' ? 1 : 0),\n                                style: {\"text-align\":\"left\",\"vertical-align\":\"top\"}\n                              }, _toDisplayString(category.categoryNm), 9, _hoisted_25),\n                              _createElementVNode(\"td\", _hoisted_26, _toDisplayString(category.classInfo[0]?.classNm), 1),\n                              _createElementVNode(\"td\", _hoisted_27, _toDisplayString(category.classInfo[0]?.degree), 1),\n                              _createElementVNode(\"td\", _hoisted_28, _toDisplayString(category.classInfo[0]?.originalDegree), 1),\n                              _createElementVNode(\"td\", _hoisted_29, _toDisplayString(percentageChange(category.classInfo[0]?.originalDegree, _unref(RBC_CODE_CLASS_ID).SIZE.CATEGORY_ID)), 1)\n                            ]),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.classInfo.slice(1), (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                _createElementVNode(\"tr\", null, [\n                                  _createElementVNode(\"td\", _hoisted_30, _toDisplayString(classInfo.classNm), 1),\n                                  _createElementVNode(\"td\", _hoisted_31, _toDisplayString(classInfo.degree), 1),\n                                  _createElementVNode(\"td\", _hoisted_32, _toDisplayString(classInfo.originalDegree), 1),\n                                  _createElementVNode(\"td\", _hoisted_33, _toDisplayString(percentageChange(classInfo.originalDegree, _unref(RBC_CODE_CLASS_ID).CHROMIA.CATEGORY_ID)), 1)\n                                ]),\n                                (category.categoryNm === 'Shape' && classIndex === category.classInfo.slice(1).length - 1)\n                                  ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_34, [\n                                      _cache[9] || (_cache[9] = _createElementVNode(\"td\", null, null, -1)),\n                                      _cache[10] || (_cache[10] = _createElementVNode(\"td\", { style: {\"text-align\":\"left\"} }, \"Others\", -1)),\n                                      _cache[11] || (_cache[11] = _createElementVNode(\"td\", { style: {\"text-align\":\"left\"} }, \"-\", -1)),\n                                      _createElementVNode(\"td\", _hoisted_35, _toDisplayString(shapeOthersCount.value), 1),\n                                      _createElementVNode(\"td\", _hoisted_36, _toDisplayString(percentageChange(shapeOthersCount.value, _unref(RBC_CODE_CLASS_ID).SHAPE.CATEGORY_ID)) + \" %\", 1)\n                                    ]))\n                                  : _createCommentVNode(\"\", true),\n                                (category.categoryNm === 'Inclusion Body' && classIndex === category.classInfo.slice(1).length - 1)\n                                  ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_37, [\n                                      _cache[12] || (_cache[12] = _createElementVNode(\"td\", { style: {\"text-align\":\"left\"} }, \"Malaria\", -1)),\n                                      _cache[13] || (_cache[13] = _createElementVNode(\"td\", { style: {\"text-align\":\"left\"} }, \"-\", -1)),\n                                      _createElementVNode(\"td\", _hoisted_38, _toDisplayString(malariaCount.value), 1),\n                                      _createElementVNode(\"td\", _hoisted_39, _toDisplayString(percentageChange(malariaCount.value, _unref(RBC_CODE_CLASS_ID).INCLUSION_BODY.CATEGORY_ID)), 1)\n                                    ]))\n                                  : _createCommentVNode(\"\", true)\n                              ], 64))\n                            }), 128)),\n                            (category.categoryNm !== 'Shape' && category.categoryNm !== 'Inclusion Body')\n                              ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_40, [\n                                  _cache[14] || (_cache[14] = _createElementVNode(\"td\", { style: {\"text-align\":\"left\"} }, null, -1)),\n                                  _cache[15] || (_cache[15] = _createElementVNode(\"td\", { style: {\"text-align\":\"left\",\"font-weight\":\"bold\"} }, \"Total\", -1)),\n                                  _createElementVNode(\"td\", _hoisted_41, _toDisplayString(sizeChromiaTotal.value), 1),\n                                  _createElementVNode(\"td\", _hoisted_42, _toDisplayString(percentageChange(sizeChromiaTotal.value, _unref(RBC_CODE_CLASS_ID).INCLUSION_BODY.CATEGORY_ID)) + \" %\", 1)\n                                ]))\n                              : _createCommentVNode(\"\", true),\n                            (category.categoryNm == 'Inclusion Body')\n                              ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_43, [\n                                  _cache[16] || (_cache[16] = _createElementVNode(\"td\", null, null, -1)),\n                                  _cache[17] || (_cache[17] = _createElementVNode(\"td\", null, null, -1)),\n                                  _cache[18] || (_cache[18] = _createElementVNode(\"td\", { style: {\"text-align\":\"left\",\"font-weight\":\"bold\"} }, \"Total\", -1)),\n                                  _createElementVNode(\"td\", _hoisted_44, _toDisplayString(shapeBodyTotal.value), 1),\n                                  _createElementVNode(\"td\", _hoisted_45, _toDisplayString(percentageChange(shapeBodyTotal.value, _unref(RBC_CODE_CLASS_ID).INCLUSION_BODY.CATEGORY_ID)) + \" %\", 1)\n                                ]))\n                              : _createCommentVNode(\"\", true)\n                          ], 64))\n                        }), 128))\n                      ], 64))\n                    }), 128)),\n                    _createElementVNode(\"tr\", null, [\n                      _cache[19] || (_cache[19] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"15px 0\"} }, \"Others\", -1)),\n                      _cache[20] || (_cache[20] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"15px 0\"} }, \"Platelets\", -1)),\n                      _cache[21] || (_cache[21] = _createElementVNode(\"th\", null, null, -1)),\n                      _createElementVNode(\"th\", _hoisted_46, _toDisplayString(pltCount.value) + \" PLT / 1000 RBC\", 1)\n                    ]),\n                    _createElementVNode(\"tr\", null, [\n                      _cache[22] || (_cache[22] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding-top\":\"15px\"} }, \"Comment\", -1)),\n                      _withDirectives(_createElementVNode(\"th\", _hoisted_47, [\n                        _createElementVNode(\"pre\", _hoisted_48, _toDisplayString(selectItems.value?.rbcMemo), 1)\n                      ], 512), [\n                        [_vShow, selectItems.value?.rbcMemo]\n                      ])\n                    ])\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_49, [\n            _createElementVNode(\"h3\", _hoisted_50, _toDisplayString(_unref(projectType) === 'pb' ? 'WBC' : 'BM') + \" classification result\", 1),\n            _createElementVNode(\"table\", _hoisted_51, [\n              _cache[30] || (_cache[30] = _createElementVNode(\"colgroup\", null, [\n                _createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n                _createElementVNode(\"col\", { style: {\"width\":\"45%\"} }),\n                _createElementVNode(\"col\", { style: {\"width\":\"25%\"} })\n              ], -1)),\n              _cache[31] || (_cache[31] = _createElementVNode(\"thead\", null, [\n                _createElementVNode(\"tr\", { style: {\"margin-bottom\":\"15px\",\"font-size\":\"18px\",\"font-weight\":\"normal\",\"padding-bottom\":\"100px\"} }, [\n                  _createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Class\"),\n                  _createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Count\"),\n                  _createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Percent\")\n                ])\n              ], -1)),\n              _createElementVNode(\"tbody\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredWbcInfo(wbcInfo.value, 'wbc'), (item) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", {\n                    key: item.id,\n                    style: {\"padding-bottom\":\"5px\"}\n                  }, [\n                    _createElementVNode(\"th\", _hoisted_52, _toDisplayString(item?.name), 1),\n                    _createElementVNode(\"td\", _hoisted_53, _toDisplayString(item?.count), 1),\n                    _createElementVNode(\"td\", _hoisted_54, _toDisplayString(item?.percent) + \" %\", 1)\n                  ]))\n                }), 128)),\n                _createElementVNode(\"tr\", _hoisted_55, [\n                  _cache[26] || (_cache[26] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"font-weight\":\"bold\",\"padding\":\"5px 0\"} }, \"Total\", -1)),\n                  _createElementVNode(\"td\", _hoisted_56, _toDisplayString(selectItems.value?.wbcInfo?.totalCount), 1),\n                  _cache[27] || (_cache[27] = _createElementVNode(\"td\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"100.00%\", -1))\n                ]),\n                (_unref(projectType) !== 'bm')\n                  ? (_openBlock(), _createElementBlock(\"th\", _hoisted_57, \"non-Wbc\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredWbcInfo(wbcInfo.value, 'nonWbc'), (item) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: item.id\n                  }, [\n                    (_unref(projectType) !== 'bm')\n                      ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_58, [\n                          _createElementVNode(\"td\", _hoisted_59, _toDisplayString(item.name), 1),\n                          _createElementVNode(\"td\", _hoisted_60, _toDisplayString(item.count), 1),\n                          _cache[28] || (_cache[28] = _createElementVNode(\"td\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\",\"width\":\"25%\"} }, \"-\", -1))\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128)),\n                _createElementVNode(\"tr\", _hoisted_61, [\n                  _cache[29] || (_cache[29] = _createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"15px 0\"} }, \"Comment\", -1)),\n                  _withDirectives(_createElementVNode(\"td\", _hoisted_62, [\n                    _createElementVNode(\"pre\", _hoisted_63, _toDisplayString(selectItems.value?.wbcMemo), 1)\n                  ], 512), [\n                    [_vShow, selectItems.value?.wbcMemo]\n                  ])\n                ])\n              ])\n            ]),\n            _createElementVNode(\"ul\", _hoisted_64, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(noImageList(wbcInfo.value), (item) => {\n                return (_openBlock(), _createElementBlock(\"li\", {\n                  key: item.id,\n                  style: {}\n                }, [\n                  _createElementVNode(\"div\", _hoisted_65, _toDisplayString(item?.title) + \" (\" + _toDisplayString(item?.count) + \") \", 1),\n                  _createElementVNode(\"ul\", {\n                    class: _normalizeClass('wbcImgWrap ' + item?.title),\n                    style: {\"list-style\":\"none\",\"padding-left\":\"0\",\"margin-top\":\"10px\",\"text-align\":\"left\"}\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image) => {\n                      return (_openBlock(), _createElementBlock(\"li\", {\n                        key: image.fileName,\n                        style: {\"display\":\"inline-block\",\"margin-right\":\"5px\",\"margin-top\":\"5px\",\"outline\":\"1px solid #2c2d2c\",\"cursor\":\"auto\"}\n                      }, [\n                        _createElementVNode(\"div\", _hoisted_66, [\n                          (!hiddenImages.value[`${item.id}-${image.fileName}`])\n                            ? (_openBlock(), _createElementBlock(\"img\", {\n                                key: 0,\n                                src: getImageUrl(image.fileName, item.id, item.title),\n                                width: image.width ? image.width : '150px',\n                                height: image.height ? image.height : '150px',\n                                onError: ($event: any) => (handleImageError(item.id, image.fileName)),\n                                style: _normalizeStyle({ filter: image.filter }),\n                                class: \"cellImg\",\n                                ref_for: true,\n                                ref: \"cellRef\"\n                              }, null, 44, _hoisted_67))\n                            : _createCommentVNode(\"\", true),\n                          _createElementVNode(\"div\", {\n                            class: \"center-point\",\n                            style: _normalizeStyle(image.coordinates)\n                          }, null, 4)\n                        ])\n                      ]))\n                    }), 128))\n                  ], 2)\n                ]))\n              }), 128))\n            ])\n          ])\n        ])\n      ], 512)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-show=\"printReady\" class=\"moveImgIsBool\"> Loading Print...</div>\r\n  <div\r\n      style=\"font-size: 0.8rem; width: 900px; height: 90%; overflow-y: auto; background: #fff; color: #000; position: absolute; top: 10%; left: 33%; box-sizing: border-box; padding: 3rem 7rem; border: 2px solid #ccc; border-radius: 10px; z-index:9999;\">\r\n    <button\r\n        style=\"position: absolute; right: 8px; background: none; border: 1px solid #000; border-radius: 5px; padding: 7px 25px; top: 5px; cursor: pointer\"\r\n        @click=\"closePrint\">Close\r\n    </button>\r\n    <div ref=\"printContent\" style=\"margin-top: 20px;\">\r\n      <div>\r\n        <h3 style=\"margin: 10px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">Analysis Report from UIMD\r\n          {{ projectType === 'bm' ? 'BM' : 'PB' }} system</h3>\r\n      </div>\r\n      <div style=\"display: flex; flex-direction: column; justify-content: space-between;\">\r\n        <table style=\"width: 100%; font-size: 0.8rem;\">\r\n          <colgroup>\r\n            <col style=\"width: 30%;\"/>\r\n            <col style=\"width: 70%;\"/>\r\n          </colgroup>\r\n          <tbody>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Slot ID</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.slotId }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Ordered date</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ formatDateString(selectItems?.orderDttm) }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Signed by ID</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.submitUserId }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Signed date</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.submitOfDate }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left;\">Ordered Classification</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{\r\n                projectType === 'pb' ? getTestTypeText(selectItems?.testType) : getBmTestTypeText(selectItems?.testType)\r\n              }}\r\n            </td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Name</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.patientName }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Birth</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.birthDay }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Gender</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.gender === '' ? '' : selectItems?.gender === '01' ? 'Male' : 'Female' }}</td>\r\n          </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n\r\n        <div v-if=\"selectItems?.testType === '04'\" style=\"margin-top: 20px; border-top: 2px dotted #696969\"></div>\r\n\r\n        <!-- RBC Classification -->\r\n        <div v-if=\"selectItems?.testType === '04'\" style=\"margin-top: 20px;\">\r\n          <h3 style=\"margin: 10px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">RBC classification result</h3>\r\n          <table style=\"width: 100%; font-size: 0.8rem;\">\r\n            <colgroup>\r\n              <col style=\"width: 20%;\"/>\r\n              <col style=\"width: 25%;\"/>\r\n              <col style=\"width: 25%;\"/>\r\n              <col style=\"width: 15%;\"/>\r\n              <col style=\"width: 15%;\"/>\r\n            </colgroup>\r\n            <thead>\r\n            <tr style=\"margin-bottom: 15px; font-size: 18px; font-weight: normal; padding-bottom: 100px;\">\r\n              <th style=\"text-align: left;\">Category</th>\r\n              <th style=\"text-align: left;\">Class</th>\r\n              <th style=\"text-align: left;\">Degree</th>\r\n              <th style=\"text-align: left;\">Count</th>\r\n              <th style=\"text-align: left;\">Percent</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <template v-for=\"(classList, outerIndex) in [selectItems.rbcInfoAfter]\" :key=\"outerIndex\">\r\n              <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n                <tr>\r\n                  <td :rowspan=\"category.classInfo.length + (category.categoryNm !== 'Shape' ? 1 : 0)\"\r\n                      style=\"text-align: left; vertical-align: top;\">{{ category.categoryNm }}\r\n                  </td>\r\n                  <td style=\"text-align: left;\">{{ category.classInfo[0]?.classNm }}</td>\r\n                  <td style=\"text-align: left;\">{{ category.classInfo[0]?.degree }}</td>\r\n                  <td style=\"text-align: left;\">{{ category.classInfo[0]?.originalDegree }}</td>\r\n                  <td style=\"text-align: left;\">{{ percentageChange(category.classInfo[0]?.originalDegree, RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID) }}</td>\r\n                </tr>\r\n\r\n                <template v-for=\"(classInfo, classIndex) in category.classInfo.slice(1)\" :key=\"classIndex\">\r\n                  <tr>\r\n                    <td style=\"text-align: left;\">{{ classInfo.classNm }}</td>\r\n                    <td style=\"text-align: left;\">{{ classInfo.degree }}</td>\r\n                    <td style=\"text-align: left;\">{{ classInfo.originalDegree }}</td>\r\n                    <td style=\"text-align: left;\">{{ percentageChange(classInfo.originalDegree, RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID) }}</td>\r\n                  </tr>\r\n\r\n                  <!-- Shape Others -->\r\n                  <tr v-if=\"category.categoryNm === 'Shape' && classIndex === category.classInfo.slice(1).length - 1\">\r\n                    <td></td>\r\n                    <td style=\"text-align: left;\">Others</td>\r\n                    <td style=\"text-align: left;\">-</td>\r\n                    <td style=\"text-align: left;\">{{ shapeOthersCount }}</td>\r\n                    <td style=\"text-align: left;\">{{ percentageChange(shapeOthersCount, RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID) }} %</td>\r\n                  </tr>\r\n\r\n                  <!-- Inclusion Body Malaria -->\r\n                  <tr v-if=\"category.categoryNm === 'Inclusion Body' && classIndex === category.classInfo.slice(1).length - 1\">\r\n                    <td style=\"text-align: left;\">Malaria</td>\r\n                    <td style=\"text-align: left;\">-</td>\r\n                    <td style=\"text-align: left;\">{{ malariaCount }}</td>\r\n                    <td style=\"text-align: left;\">{{ percentageChange(malariaCount, RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) }}</td>\r\n                  </tr>\r\n                </template>\r\n                <tr v-if=\"category.categoryNm !== 'Shape' && category.categoryNm !== 'Inclusion Body'\">\r\n                  <td style=\"text-align: left;\"></td>\r\n                  <td style=\"text-align: left; font-weight: bold;\">Total</td>\r\n                  <td style=\"text-align: left; font-weight: bold;\">{{ sizeChromiaTotal }}</td>\r\n                  <td style=\"text-align: left; font-weight: bold;\">{{ percentageChange(sizeChromiaTotal, RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) }} %</td>\r\n                </tr>\r\n\r\n                <tr v-if=\"category.categoryNm == 'Inclusion Body'\">\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td style=\"text-align: left; font-weight: bold;\">Total</td>\r\n                  <td style=\"text-align: left; font-weight: bold;\">{{ shapeBodyTotal }}</td>\r\n                  <td style=\"text-align: left; font-weight: bold;\">{{ percentageChange(shapeBodyTotal, RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) }} %</td>\r\n                </tr>\r\n              </template>\r\n            </template>\r\n            <tr>\r\n              <th style=\"text-align: left; padding: 15px 0;\">Others</th>\r\n              <th style=\"text-align: left; padding: 15px 0;\">Platelets</th>\r\n              <th></th>\r\n              <th style=\"text-align: left; padding: 15px 0;\" colspan=\"2\">{{ pltCount }} PLT / 1000 RBC</th>\r\n            </tr>\r\n            <tr>\r\n              <th style=\"text-align: left; padding-top: 15px;\">Comment</th>\r\n              <th v-show=\"selectItems?.rbcMemo\" style=\"text-align: left; padding-top: 15px;\" colspan=\"4\">\r\n                <pre style=\"text-align: left; outline: 1px solid #252629; padding: 4px;\">{{\r\n                    selectItems?.rbcMemo\r\n                  }}</pre>\r\n              </th>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <!-- WBC Classification -->\r\n        <div style=\"margin-top: 150px; margin-bottom: 50px; border-top: 2px dotted #696969\">\r\n          <h3 style=\"margin: 10px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">\r\n            {{ projectType === 'pb' ? 'WBC' : 'BM' }} classification result</h3>\r\n          <table style=\"width: 100%; font-size: 0.8rem;\">\r\n            <colgroup>\r\n              <col style=\"width: 30%;\"/>\r\n              <col style=\"width: 45%;\"/>\r\n              <col style=\"width: 25%;\"/>\r\n            </colgroup>\r\n            <thead>\r\n            <tr style=\"margin-bottom: 15px; font-size: 18px; font-weight: normal; padding-bottom: 100px;\">\r\n              <th style=\"text-align: left;\">Class</th>\r\n              <th style=\"text-align: left;\">Count</th>\r\n              <th style=\"text-align: left;\">Percent</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr v-for=\"item in filteredWbcInfo(wbcInfo, 'wbc')\" :key=\"item.id\" style=\"padding-bottom: 5px;\">\r\n              <th style=\"text-align: left; padding: 5px 0;\">{{ item?.name }}</th>\r\n              <td style=\"text-align: left; padding: 5px 0;\">{{ item?.count }}</td>\r\n              <td style=\"text-align: left; padding: 5px 0;\">{{ item?.percent }} %</td>\r\n            </tr>\r\n            <tr style=\"padding-bottom: 5px;\">\r\n              <th style=\"text-align: left; font-weight: bold; padding: 5px 0;\">Total</th>\r\n              <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.wbcInfo?.totalCount }}</td>\r\n              <td style=\"text-align: left; padding: 5px 0;\">100.00%</td>\r\n            </tr>\r\n\r\n\r\n            <th style=\"text-align: left; padding-top: 30px; font-weight: bold;\" v-if=\"projectType !== 'bm'\">non-Wbc</th>\r\n\r\n              <template v-for=\"item in filteredWbcInfo(wbcInfo, 'nonWbc')\" :key=\"item.id\">\r\n                <tr style=\"padding-top: 5px; padding-bottom: 15px;\" v-if=\"projectType !== 'bm'\">\r\n                  <td style=\"text-align: left; padding: 5px 0; width: 30%;\">{{ item.name }}</td>\r\n                  <td style=\"text-align: left; padding: 5px 0; width: 45%;\">{{ item.count }}</td>\r\n                  <td style=\"text-align: left; padding: 5px 0; width: 25%;\">-</td>\r\n                </tr>\r\n              </template>\r\n            <tr style=\"padding-bottom: 5px;\">\r\n              <th style=\"text-align: left; padding: 15px 0;\">Comment</th>\r\n              <td v-show=\"selectItems?.wbcMemo\" colspan=\"2\" style=\"text-align: left; padding: 5px 0;\">\r\n                <pre style=\"text-align: left; outline: 1px solid #252629; padding: 4px;\">{{\r\n                    selectItems?.wbcMemo\r\n                  }}</pre>\r\n              </td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <!-- Print List -->\r\n          <ul class=\"print\"\r\n              style=\"list-style: none; padding-left: 0; margin-top: 20px; text-align: center; display:flex; flex-direction: column; align-items: center; justify-content: center;\">\r\n            <li v-for=\"(item) in noImageList(wbcInfo)\" :key=\"item.id\" style=\"\">\r\n              <div style=\"font-weight: bold; font-size: 18px; margin: 10px auto 20px;\">{{ item?.title }} ({{\r\n                  item?.count\r\n                }})\r\n              </div>\r\n              <ul :class=\"'wbcImgWrap ' + item?.title\"\r\n                  style=\"list-style: none; padding-left: 0; margin-top: 10px;text-align: left;\">\r\n                <li v-for=\"(image) in item.images\" :key=\"image.fileName\"\r\n                    style=\"display: inline-block; margin-right: 5px; margin-top: 5px; outline: 1px solid #2c2d2c; cursor: auto;\">\r\n                  <div style=\"position: relative; text-align: left;\">\r\n                    <img\r\n                        :src=\"getImageUrl(image.fileName, item.id, item.title)\"\r\n                        v-if=\"!hiddenImages[`${item.id}-${image.fileName}`]\"\r\n                        :width=\"image.width ? image.width : '150px'\" :height=\"image.height ? image.height : '150px'\"\r\n                        @error=\"handleImageError(item.id, image.fileName)\"\r\n                        :style=\"{ filter: image.filter }\" class=\"cellImg\" ref=\"cellRef\"/>\r\n                    <div class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, defineEmits, onMounted, ref } from \"vue\";\r\nimport {getTestTypeText, getBmTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getImagePrintApi, getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {disableScroll, enableScroll} from \"@/common/lib/utils/scroll\";\r\nimport {\r\n  incheonGilPercentChange,\r\n  incheonStMaryPercentChange,\r\n  inhaPercentChange,\r\n  seoulStMaryPercentChange\r\n} from \"@/common/helpers/common/classPercent\";\r\nimport { HOSPITAL_SITE_CD_BY_NAME } from \"@/common/defines/constants/siteCd\";\r\nimport {RBC_CODE_CLASS_ID, SHOWING_RBC_SHAPE_CLASS_IDS} from \"@/common/defines/constants/dataBase\";\r\nimport {DIR_NAME} from \"@/common/defines/constants/settings\";\r\n\r\nconst projectType = window.PROJECT_TYPE;\r\nconst store = useStore();\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst printContent = ref(null);\r\nconst wbcInfo = ref([]);\r\n\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nconst selectItems = ref<any>(null);\r\nconst orderClass = ref<any>({});\r\n\r\nconst imagePrintAndWbcArr = ref<string[]>([]);\r\nconst emit = defineEmits(['printClose']);\r\nconst nonWbcIdList = ['12', '13', '14', '15', '16'];\r\n\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\n\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst shapeOthersCount = ref(0);\r\n\r\nconst printReady = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getDetailRunningInfo();\r\n  await getOrderClass();\r\n  await getImagePrintData();\r\n  if (projectType !== 'bm') {\r\n    await rbcTotalAndReCount();\r\n    await calcShapeOthersCount();\r\n  }\r\n  await printPage();\r\n});\r\n\r\nconst calcShapeOthersCount = async () => {\r\n  const shapeOthers: any = await getShapeOthers();\r\n  shapeOthersCount.value = shapeOthers?.artifact + shapeOthers?.doubleNormal;\r\n}\r\n\r\nconst getShapeOthers = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  const rbcInfoPathAfter = response_old.data[0].rbcClassList;\r\n  const otherCount = {artifact: 0, doubleNormal: 0};\r\n  if (!rbcInfoPathAfter) {\r\n    return;\r\n  }\r\n  rbcInfoPathAfter.forEach((item: any) => {\r\n    if (item.categoryId === '03') {\r\n      for (const classItem of item.classInfo) {\r\n        if (classItem.classNm === 'Artifact') {\r\n          otherCount.artifact += 1\r\n        } else if (classItem.classNm === 'DoubleNormal') {\r\n          otherCount.doubleNormal += 1\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  return otherCount;\r\n}\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItems.value?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeBodyTotalVal = 0;\r\n  let shapeBodyTotalVal2 = 0;\r\n  shapeOthersCount.value = 0;\r\n\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    const lastIndex = el.classInfo.length > 0 ? el.classInfo[el.classInfo.length - 1].index.replace(/[^\\d]/g, '') : '';\r\n\r\n    switch (el.categoryId) {\r\n      case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n        total = lastIndex;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n        chromiaTotalval = lastIndex;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n        shapeBodyTotalVal = lastIndex;\r\n\r\n        for (const classItem of el.classInfo) {\r\n          if (!SHOWING_RBC_SHAPE_CLASS_IDS.includes(classItem.classId)) {\r\n            shapeOthersCount.value += 1;\r\n          }\r\n        }\r\n        break;\r\n      case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n        shapeBodyTotalVal2 = lastIndex;\r\n        break;\r\n      default:\r\n        // Handle unexpected categoryId if needed\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total) + 1;\r\n  sizeChromiaTotal.value = Number(total) + 1;\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeBodyTotalVal) + Number(shapeBodyTotalVal2) + 2;\r\n\r\n  // selectItems의 originalDegree 초기화\r\n  selectItems.value.rbcInfoAfter.forEach((category: any) => {\r\n    category.classInfo.forEach((item: any) => {\r\n      item.originalDegree = 0;\r\n    });\r\n  });\r\n\r\n  // rbcInfoPathAfter에서 아이템들 classId와 categoryId를 비교하여 originalDegree 증가시키기\r\n  rbcInfoPathAfter.value.forEach(pathCategory => {\r\n    const category = selectItems.value.rbcInfoAfter.find((cat: any) => cat.categoryId === pathCategory.categoryId);\r\n    if (category) {\r\n      pathCategory.classInfo.forEach((pathClass: any) => {\r\n        const classInfo = category.classInfo.find((item: any) => item.classId === pathClass.classId);\r\n        if (classInfo) {\r\n          classInfo.originalDegree++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  await countReAdd();\r\n}\r\nconst hiddenImages = ref<Record<string, boolean>>({});\r\n\r\nconst handleImageError = (itemId: number, fileName: string) => {\r\n  hiddenImages.value[`${itemId}-${fileName}`] = true;\r\n};\r\n\r\nconst percentageChange = (count: any, categoryId: string): any => {\r\n  const percentage = ((Number(count) / calculateRbcTotalByCategoryId(categoryId)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst calculateRbcTotalByCategoryId = (categoryId: string) => {\r\n  switch (categoryId) {\r\n    case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n      return Number(rbcTotalVal.value);\r\n    case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n      return Number(chromiaTotalTwo.value);\r\n    case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n    case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n      return Number(shapeBodyTotal.value);\r\n    default:\r\n      return Number(rbcTotalVal.value);\r\n  }\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    selectItems.value = slideData.value;\r\n    wbcInfo.value = slideData.value.wbcInfoAfter;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst filteredWbcInfo = (wbcInfoArr: any, type: 'wbc' | 'nonWbc') => {\r\n  if (type === 'nonWbc') {\r\n    return wbcInfoArr.filter((item: any) => nonWbcIdList.includes(item.id) && item.count > 0);\r\n  }\r\n  return wbcInfoArr.filter((item: any) => !nonWbcIdList.includes(item.id) && item.count > 0);\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  const showImage = [...imagePrintAndWbcArr.value].find(item => item === String(id));\r\n  if (!showImage) {\r\n    return '';\r\n  }\r\n\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const path = selectItems.value.img_drive_root_path !== '' && selectItems.value.img_drive_root_path ? selectItems.value.img_drive_root_path : iaRootPath.value;\r\n  const slotId = selectItems.value.slotId || \"\";\r\n  const folderPath = projectType === 'bm' ? `${path}/${slotId}/04_BM_Classification/${id}_${title}` : `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/print?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nconst noImageList = (wbcArr: any) => {\r\n  return wbcArr.filter((item: any) => [...imagePrintAndWbcArr.value].includes(String(item.id)));\r\n}\r\n\r\n\r\nconst printPage = async () => {\r\n  printReady.value = true;\r\n  disableScroll();\r\n\r\n  percentChangeBySiteCd();\r\n  try {\r\n    // 프린트할 컨텐츠를 가져옴\r\n    const content = printContent.value;\r\n    if (!content) {\r\n      throw new Error(\"프린트할 내용을 찾을 수 없습니다.\");\r\n    }\r\n\r\n    // HTML 컨텐츠를 Gzip으로 압축\r\n    const compressedContent = pako.gzip(content.innerHTML, { level: 9 });\r\n\r\n    // HTML 컨텐츠를 PDF로 변환하는 요청을 보냄\r\n    const response = await fetch(`${apiBaseUrl}/pdf/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-Encoding': 'gzip',\r\n      },\r\n      body: compressedContent,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('HTML을 PDF로 변환하는데 실패했습니다.');\r\n    }\r\n\r\n    // 받은 PDF 파일을 blob으로 변환\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n\r\n    // Edge 브라우저에서 PDF 다운로드를 위한 처리\r\n    const isEdge = /Edg/.test(navigator.userAgent);\r\n    if (isEdge) {\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `${selectItems.value.barcodeNo}-report`; // 다운로드할 파일명 설정\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else {\r\n      // 다른 브라우저에서 새 창에 PDF 열기\r\n      window.open(url, '_blank', 'width=800,height=500,noopener,noreferrer');\r\n    }\r\n\r\n    window.URL.revokeObjectURL(url);\r\n    printReady.value = false;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    printReady.value = false;\r\n  } finally {\r\n    enableScroll();\r\n  }\r\n};\r\n\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      imagePrintAndWbcArr.value = data.filter((item) => item.checked).map(item => item.classId);\r\n\r\n      // count가 없는 경우 print에서 보여줄 wbcInfo에서 제거\r\n      wbcInfo.value = wbcInfo.value.filter((item: any) => item.count !== '0');\r\n\r\n      // wbcClassification Order 적용\r\n      const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      const sortArr = orderClass.value.length !== 0 ? oArr : projectType === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const sortedWbcInfoData = await sortWbcInfo(wbcInfo.value, sortArr);\r\n      wbcInfo.value = sortedWbcInfoData;\r\n      percentChangeBySiteCd();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  return wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\nconst percentChangeBySiteCd = async () => {\r\n  if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원']) {\r\n    wbcInfo.value = seoulStMaryPercentChange(wbcInfo.value, wbcInfo.value);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n    wbcInfo.value = await inhaPercentChange(selectItems.value, wbcInfo.value);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천성모병원']) {\r\n    wbcInfo.value = incheonStMaryPercentChange(projectType, wbcInfo.value);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n    wbcInfo.value = incheonGilPercentChange(wbcInfo.value, selectItems.value?.wbcInfo.totalCount);\r\n  }\r\n}\r\n\r\nconst closePrint = () => {\r\n  emit('printClose');\r\n}\r\n\r\n</script>\r\n","import script from \"./print.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./print.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {gql} from \"graphql-tag\";\r\nimport * as VueCompositionApi from \"vue\";\r\nimport * as VueApolloComposable from \"@vue/apollo-composable\";\r\nimport {GetRunningInfoByIdQuery, GetRunningInfoByIdQueryVariables, ReactiveFunction} from \"@/gql/index\";\r\n\r\nexport const GetRunningInfoByIdDocument = gql`\r\n    query GetRunningInfoById($id: Int!) {\r\n        getRunningInfoByIdGQL(id: $id) {\r\n            id\r\n            lock_status\r\n            traySlot\r\n            slotNo\r\n            barcodeNo\r\n            patientId\r\n            patientNm\r\n            gender\r\n            birthDay\r\n            wbcCount\r\n            slotId\r\n            orderDttm\r\n            testType\r\n            analyzedDttm\r\n            tactTime\r\n            maxWbcCount\r\n            cassetId\r\n            isNormal\r\n            wbcInfo {\r\n                wbcInfo {\r\n                    id\r\n                    name\r\n                    count\r\n                    title\r\n                    images {\r\n                        coordinates {\r\n                            display\r\n                        }\r\n                        fileName\r\n                        title\r\n                        filter\r\n                        height\r\n                        width\r\n                    }\r\n                    percent\r\n                }\r\n                totalCount\r\n                maxWbcCount\r\n            }\r\n            wbcInfoAfter {\r\n                id\r\n                name\r\n                count\r\n                title\r\n                images {\r\n                    coordinates {\r\n                        display\r\n                    }\r\n                    fileName\r\n                    title\r\n                    filter\r\n                    height\r\n                    width\r\n                }\r\n                percent\r\n            }\r\n            rbcInfo {\r\n                rbcClass {\r\n                    classInfo {\r\n                        classId\r\n                        classNm\r\n                        degree\r\n                        originalDegree\r\n                    }\r\n                    categoryId\r\n                    categoryNm\r\n                }\r\n                malariaCount\r\n                maxRbcCount\r\n                pltCount\r\n            }\r\n            rbcInfoAfter {\r\n                classInfo {\r\n                    classId\r\n                    classNm\r\n                    degree\r\n                    originalDegree\r\n                    percent\r\n                }\r\n                categoryId\r\n                categoryNm\r\n            }\r\n            submitState\r\n            submitOfDate\r\n            submitUserId\r\n            isNsNbIntegration\r\n            wbcMemo\r\n            rbcMemo\r\n            pcIp\r\n            cbcPatientNo\r\n            cbcPatientNm\r\n            cbcSex\r\n            cbcAge\r\n            img_drive_root_path\r\n            hosName\r\n            abnormalClassInfo {\r\n                classNm\r\n                val\r\n            }\r\n            isAllClassesChecked\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport function useGetRunningInfoByIdQuery(variables: GetRunningInfoByIdQueryVariables | VueCompositionApi.Ref<GetRunningInfoByIdQueryVariables> | ReactiveFunction<GetRunningInfoByIdQueryVariables>, options: VueApolloComposable.UseQueryOptions<GetRunningInfoByIdQuery, GetRunningInfoByIdQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<GetRunningInfoByIdQuery, GetRunningInfoByIdQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<GetRunningInfoByIdQuery, GetRunningInfoByIdQueryVariables>> = {}) {\r\n    return VueApolloComposable.useQuery<GetRunningInfoByIdQuery, GetRunningInfoByIdQueryVariables>(GetRunningInfoByIdDocument, variables, options);\r\n}\r\n\r\nexport function useClassInfoMenuInfoByIdQuery(variables: GetRunningInfoByIdQueryVariables | VueCompositionApi.Ref<GetRunningInfoByIdQueryVariables> | ReactiveFunction<GetRunningInfoByIdQueryVariables>, options: VueApolloComposable.UseQueryOptions<GetRunningInfoByIdQuery, GetRunningInfoByIdQueryVariables> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<GetRunningInfoByIdQuery, GetRunningInfoByIdQueryVariables>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<GetRunningInfoByIdQuery, GetRunningInfoByIdQueryVariables>> = {}) {\r\n    return VueApolloComposable.useQuery<GetRunningInfoByIdQuery, GetRunningInfoByIdQueryVariables>(GetRunningInfoByIdDocument, variables, options);\r\n}\r\n\r\n","import * as VueApolloComposable from \"@vue/apollo-composable\";\r\nimport { ref, reactive } from \"vue\";\r\nimport { GetRunningInfoByIdDocument } from \"./queries\"; // 쿼리 파일 가져오기\r\nimport { GetRunningInfoByIdQueryVariables, GetRunningInfoByIdQuery } from \"@/gql\"; // 타입 가져오기\r\n\r\n// 쿼리 함수에 변수와 옵션 타입 지정\r\nexport function useGetRunningInfoByIdQuery(\r\n    variables: GetRunningInfoByIdQueryVariables, // 변수 타입 지정\r\n    options: VueApolloComposable.UseQueryOptions<GetRunningInfoByIdQuery, GetRunningInfoByIdQueryVariables> = {} // 옵션 타입 지정\r\n) {\r\n    // variables와 options를 ref로 감싸서 반응형으로 처리\r\n    const reactiveVariables = ref(variables);\r\n    const reactiveOptions = reactive(options);\r\n\r\n    return VueApolloComposable.useQuery(\r\n        GetRunningInfoByIdDocument,  // GraphQL 쿼리\r\n        reactiveVariables,          // 반응형 변수\r\n        reactiveOptions            // 반응형 옵션\r\n    );\r\n}\r\n","<template>\r\n  <div class=\"loaderBackground\" v-if=\"loadingDelay\">\r\n    <div class=\"loader\"></div>\r\n    <p class=\"loadingText\">Loading...</p>\r\n  </div>\r\n  <table class='defaultTable mt20 dbDataTable' ref=\"scrollableDiv\">\r\n    <colgroup>\r\n      <col width=\"7%\"/>\r\n      <col width=\"2%\"/>\r\n      <col width=\"7%\"/>\r\n      <col width=\"4%\"/>\r\n      <col width=\"6%\"/>\r\n      <col width=\"8%\"/>\r\n      <col width=\"8%\"/>\r\n      <col width=\"8%\"/>\r\n      <col width=\"12%\"/>\r\n      <col width=\"10%\"/>\r\n      <col width=\"6%\"/>\r\n      <col width=\"12%\"/>\r\n      <col width=\"4%\"/>\r\n    </colgroup>\r\n    <thead>\r\n    <tr style=\"position: sticky; top: 0;\">\r\n      <th>NO</th>\r\n      <th>\r\n        <input type=\"checkbox\" v-model=\"selectAllCheckbox\" @change=\"selectAllItems\"/>\r\n      </th>\r\n      <th>Type</th>\r\n      <th>State</th>\r\n      <th>Tray Slot</th>\r\n      <th>Barcode NO</th>\r\n      <th>Patient ID</th>\r\n      <th>Patient Name</th>\r\n      <th>Analyzed Date</th>\r\n      <th>Tact Time(sec)</th>\r\n      <th>Submit</th>\r\n      <th>Submit Date</th>\r\n      <th>Edit</th>\r\n    </tr>\r\n    </thead>\r\n\r\n    <tbody v-if=\"dbData.length !== 0\">\r\n    <template v-for=\"(item, idx) in dbData\"\r\n              :key=\"item.id\">\r\n      <tr\r\n          :class=\"{\r\n            selectedTr: selectedItemId === item.id,\r\n            submittedTr: item.submitState === 'Submit',\r\n            lisTr: item.submitState === 'lisCbc',\r\n            rock: item.lock_status && item.pcIp !== myIp,\r\n            checkFirst: item.submitState === 'checkFirst',\r\n          }\"\r\n          @click=\"selectItem(item)\"\r\n          @dblclick='rowDbClick(item)'\r\n          ref=\"firstRow\"\r\n          style=\"height: 49px\"\r\n          v-bind:data-row-id=\"item.id\"\r\n          @contextmenu.prevent=\"rowRightClick(item, $event)\"\r\n          title=\"Double click the row\"\r\n      >\r\n        <td style=\"position: relative;\"\r\n            @mouseenter=\"abnormalClassInfoOpen(true, item.id)\"\r\n            @mouseleave=\"abnormalClassInfoOpen(false, item.id)\"\r\n        >\r\n          <font-awesome-icon class=\"red isNotNormalIcon\" :icon=\"['fas', 'triangle-exclamation']\"\r\n                             v-if=\"item.isNormal === 'N'\"\r\n          />\r\n          {{ idx + 1 }}\r\n          <!-- 현재 itemId와 popupItemId가 일치하면 팝업 표시 -->\r\n          <div v-if=\"popupItemId === item.id && item.isNormal === 'N' && !isObjectEmpty(item.abnormalClassInfo)\">\r\n            <div class=\"abnormalClassInfoPopup\">\r\n              <div v-for=\"(abItem, idx) in item.abnormalClassInfo\" :key=\"idx\">\r\n                <span>{{ abItem.classNm }} : {{ abItem.val }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td @click=\"handleCheckboxChange(item)\">\r\n          <input type=\"checkbox\" v-model=\"item.checked\" :checked=\"item.checked\"/>\r\n        </td>\r\n        <td> {{ projectType !== 'bm' ? getTestTypeText(item?.testType) : getBmTestTypeText(item?.testType) }}</td>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"['fas', `${!item?.lock_status ? 'lock-open' : 'lock' }`]\"\r\n          />\r\n        </td>\r\n        <td> {{ item?.traySlot }}</td>\r\n        <td> {{ item?.barcodeNo }}</td>\r\n        <td> {{ item?.patientId }}</td>\r\n        <td> {{ item?.patientNm }}</td>\r\n        <td> {{ item?.analyzedDttm === '' ? '' : formatDateString(item?.analyzedDttm) }}</td>\r\n        <td> {{ item?.tactTime }}</td>\r\n        <td> {{ submitStateChangeText(item?.submitState, item?.submitUserId) }}</td>\r\n        <td> {{ item?.submitOfDate === '' || !item?.submitOfDate ? '' : formatDateString(item?.submitOfDate) }}</td>\r\n        <td>\r\n          <font-awesome-icon\r\n              v-if=\"(item?.submitState === 'checkFirst' || item?.submitState === '' || !item?.submitState) && !item.lock_status\"\r\n              :icon=\"['fas', 'pen-to-square']\"\r\n              @click=\"editData(item)\"/>\r\n        </td>\r\n      </tr>\r\n    </template>\r\n    <tr>\r\n      <div ref=\"loadMoreRef\" style=\"height: 30px;\"></div>\r\n    </tr>\r\n    </tbody>\r\n    <tbody v-else>\r\n    <tr class=\"text-center\">\r\n      <td colspan=\"13\">\r\n        <p class=\"nodataimg\">\r\n          <font-awesome-icon :icon=\"['fas', 'circle-exclamation']\"/>\r\n        </p>\r\n        NO Data\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  <div v-if=\"contextMenu.visible\" :style=\"{ top: (contextMenu.y - 100) + 'px', left: contextMenu.x + 'px' }\"\r\n       class=\"context-menu\">\r\n    <ul>\r\n      <li @click=\"printStart\">Print</li>\r\n      <li @click=\"classificationRowDbClick\">Classification</li>\r\n      <li @click=\"editOrderData\">Edit order data</li>\r\n      <li @click=\"showDeleteConfirm\">Delete</li>\r\n    </ul>\r\n  </div>\r\n\r\n  <Modal v-if=\"visible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\" width=\"400\">\r\n    <!-- 헤더 슬롯에 들어갈 내용 -->\r\n    <template #header>\r\n      <h2>Edit order data</h2>\r\n    </template>\r\n\r\n    <!-- 컨텐츠 슬롯에 들어갈 내용 -->\r\n    <template #content>\r\n      <div>\r\n        <ul class=\"editOrder\">\r\n          <li class=\"flex-column mr12\">\r\n            <label for=\"testType\">PB/BF</label>\r\n            <input id=\"testType\" class=\"inputDisabled\" type=\"text\" v-model=\"itemObj.testType\" readonly disabled/>\r\n          </li>\r\n          <li class=\"flex-column mr12\">\r\n            <label for=\"traySlot\">Tray Slot</label>\r\n            <input id=\"traySlot\" class=\"inputDisabled\" type=\"text\" v-model=\"itemObj.traySlot\" readonly disabled/>\r\n          </li>\r\n          <li class=\"flex-column mr12\">\r\n            <label for=\"barcode\">BARCODE ID</label>\r\n            <input id=\"barcode\" type=\"text\" v-model=\"itemObj.barcodeNo\" placeholder=\"BARCODE ID\"/>\r\n          </li>\r\n          <li class=\"flex-column mr12\">\r\n            <label for=\"patientId\">PATIENT ID</label>\r\n            <input id=\"patientId\" type=\"text\" v-model=\"itemObj.patientId\" placeholder=\"PATIENT ID\"/>\r\n          </li>\r\n          <li class=\"flex-column mr12\">\r\n            <label for=\"patientName\">PATIENT NAME</label>\r\n            <input id=\"patientName\" type=\"text\" v-model=\"itemObj.patientNm\" placeholder=\"PATIENT NAME\"/>\r\n          </li>\r\n          <li class=\"flex-column mr12\">\r\n            <label for=\"analyzedDate\">Analyzed date</label>\r\n            <input id=\"analyzedDate\" class=\"inputDisabled\" type=\"text\" v-model=\"itemObj.analyzedDttm\" readonly\r\n                   disabled/>\r\n          </li>\r\n          <li class=\"flex-column mr12\">\r\n            <label for=\"signedState\">Signed state</label>\r\n            <input id=\"signedState\" class=\"inputDisabled\" type=\"text\" v-model=\"itemObj.submitState\" readonly disabled/>\r\n          </li>\r\n          <li v-if=\"!barCodeImageShowError\">\r\n            <p>Barcode Image</p>\r\n            <img class=\"mt10 w-full br-04\" :src=\"barcodeImg\" @error=\"onImageError\"/>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"modalBottom\">\r\n        <button class=\"alertButton\" @click=\"dbDataEditSet\">Save</button>\r\n      </div>\r\n    </template>\r\n  </Modal>\r\n  <Print v-if=\"printOnOff\" :selectItems=\"rightClickItem\" ref=\"printContent\" :printOnOff=\"printOnOff\"\r\n         :selectItemWbc=\"selectItemWbc\" @printClose=\"printClose\"/>\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      type=\"delete\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup>\r\nimport {getBarcodeDetailImageUrl, getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  ref,\r\n  onMounted,\r\n  watchEffect,\r\n  defineProps,\r\n  defineEmits,\r\n  computed,\r\n  nextTick,\r\n  onUnmounted,\r\n  getCurrentInstance, watch, onBeforeMount\r\n} from 'vue';\r\nimport router from \"@/router\";\r\nimport Modal from \"@/components/commonUi/modal.vue\";\r\nimport {deleteRunningApi, updatePcIpStateApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport moment from \"moment\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {DIR_NAME} from \"@/common/defines/constants/settings\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {isObjectEmpty} from \"@/common/lib/utils/validators\";\r\nimport {useGetRunningInfoByIdQuery} from \"@/gql/useQueries\";\r\n\r\nconst props = defineProps(['dbData', 'selectedItemIdFalse', 'notStartLoading', 'loadingDelayParents']);\r\nconst loadMoreRef = ref(null);\r\nconst emits = defineEmits();\r\nconst selectedItemId = ref('');\r\nconst visible = ref(false);\r\nconst itemObj = ref({});\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst myIp = ref('');\r\nconst loadingDelay = ref(false);\r\nconst abnormalClassInfoPopup = ref(false);\r\nconst formatDateString = (dateString) => {\r\n  const momentObj = moment(dateString, 'YYYYMMDDHHmmss');\r\n  return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\n\r\n\r\nconst contextMenu = ref({\r\n  visible: false,\r\n  x: 0,\r\n  y: 0\r\n});\r\nconst rbcDegreeStandard = ref([]);\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst userId = ref('');\r\nconst rightClickItem = ref({});\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst selectItemWbc = ref([]);\r\nconst selectAllCheckbox = ref(false);\r\nconst instance = getCurrentInstance();\r\nconst barcodeImg = ref('');\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst dataBasePageReset = computed(() => store.state.commonModule);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst isShiftKeyPressed = ref(false);\r\nconst firstShiftKeyStr = ref('');\r\nconst lastShiftKeyStr = ref('');\r\nlet socketTimeoutId = undefined; // 타이머 ID 저장\r\nconst scrollableDiv = ref(null);\r\nconst barCodeImageShowError = ref(false);\r\nconst selectedItemsUsedInDelete = ref([]);\r\nconst dbDataFindByIdUsedInDelete = ref([]);\r\nconst popupItemId = ref('');\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n})\r\n\r\nonMounted(async () => {\r\n  myIp.value = JSON.parse(sessionStorage.getItem('pcIp'));\r\n  try {\r\n\r\n    userId.value = getStoredUser.id;\r\n    await getRbcDegreeData();\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  document.addEventListener('click', handleOutsideClick);\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n})\r\nconst abnormalClassInfoOpen = (isOpen, itemId) => {\r\n  popupItemId.value = isOpen ? itemId : null;\r\n}\r\n\r\nasync function handleKeyDown(event) {\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n}\r\n\r\n\r\nfunction handleKeyUp(event) {\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n}\r\n\r\n\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleOutsideClick);\r\n});\r\n\r\nwatch(\r\n    () => props.loadingDelayParents,\r\n    (newVal) => {\r\n      loadingDelay.value = newVal;\r\n    }\r\n);\r\n\r\n\r\nwatchEffect(async () => {\r\n  try {\r\n    if (props.dbData.length > 0) {\r\n      await nextTick();\r\n      loadingDelay.value = false;\r\n      const filteredItems = props.dbData.filter(item => item.id === Number(selectedSampleId.value || 0));\r\n\r\n      // IntersectionObserver 설정\r\n      const observer = new IntersectionObserver(handleIntersection, {\r\n        root: null,\r\n        rootMargin: '0px',\r\n        threshold: 0.5,\r\n      });\r\n      if (loadMoreRef.value) {\r\n        observer.observe(loadMoreRef.value);\r\n      }\r\n\r\n      if (selectedItemId.value === '0' || !selectedItemId.value) {\r\n        loadingDelay.value = false;\r\n      }\r\n\r\n      // 데이터베이스 페이지 리셋 상태 확인\r\n      if (dataBasePageReset.value.dataBasePageReset === true && filteredItems.length !== 0) {\r\n        // loadingDelay.value = true;\r\n        await selectItem(filteredItems[0]);\r\n        await store.dispatch('commonModule/setCommonInfo', {dataBasePageReset: false});\r\n        await removeCheckBox();\r\n        return;\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Error during watchEffect execution:', error);\r\n    loadingDelay.value = false;  // 예외 발생 시에도 loadingDelay를 false로 설정\r\n  }\r\n});\r\n\r\n\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\n\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n  resetContextMenu();\r\n}\r\nconst editOrderData = () => {\r\n  editData(rightClickItem.value);\r\n  resetContextMenu();\r\n};\r\n\r\nconst classificationRowDbClick = () => {\r\n  rowDbClick(rightClickItem.value);\r\n  resetContextMenu();\r\n}\r\nconst selectAllItems = () => {\r\n  props.dbData.forEach(item => {\r\n    item.checked = selectAllCheckbox.value;\r\n  });\r\n  emits('checkListItem', props.dbData.filter(dbDataItem => dbDataItem.checked));\r\n};\r\n\r\nconst removeCheckBox = () => {\r\n  props.dbData.forEach(item => {\r\n    item.checked = false;\r\n  });\r\n  emits('checkListItem', props.dbData.filter(dbDataItem => dbDataItem.checked));\r\n};\r\n\r\n\r\nconst resetContextMenu = () => {\r\n  contextMenu.value.x = 0;\r\n  contextMenu.value.y = 0;\r\n  contextMenu.value.visible = false;\r\n}\r\n\r\nconst handleOutsideClick = (event) => {\r\n  const contextMenuElement = document.querySelector('.context-menu');\r\n  if (contextMenuElement && !contextMenuElement.contains(event.target)) {\r\n    resetContextMenu();\r\n  }\r\n};\r\n\r\n\r\nconst rowRightClick = async (item, event) => {\r\n  if (props.dbData.filter(data => data.id === item.id).lock_status === false) {\r\n    showSuccessAlert(MESSAGES.IDS_ERROR_SELECT_A_TARGET_ITEM);\r\n    return;\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: item.id});\r\n  rightClickItem.value = item;\r\n  if (Object.keys(item?.wbcInfo).length !== 0) {\r\n    const wbcInfoData = item?.wbcInfo?.wbcInfo[0];\r\n    const sortedArray = wbcInfoData.sort((a, b) => a.id - b.id);\r\n    selectItemWbc.value = sortedArray;\r\n  }\r\n  if (event) {\r\n    contextMenu.value.x = event.clientX;\r\n    contextMenu.value.y = event.clientY;\r\n    contextMenu.value.visible = true;\r\n  }\r\n};\r\n\r\nconst handleShiftSelection = () => {\r\n  const startId = Math.min(Number(firstShiftKeyStr.value), Number(lastShiftKeyStr.value));\r\n  const endId = Math.max(Number(firstShiftKeyStr.value), Number(lastShiftKeyStr.value));\r\n\r\n  const items = props.dbData;\r\n\r\n  items.forEach((item) => {\r\n    const itemId = Number(item.id);\r\n    if (itemId >= startId && itemId <= endId) {\r\n      item.checked = !item.checked;\r\n    }\r\n  });\r\n\r\n  emits('checkListItem', props.dbData.filter(dbDataItem => dbDataItem.checked));\r\n};\r\n\r\nconst handleCheckboxChange = (item) => {\r\n  if (!item) return;\r\n  item.checked = !item.checked;\r\n  emits('checkListItem', props.dbData.filter(dbDataItem => dbDataItem.checked));\r\n};\r\n\r\n\r\nconst handleIntersection = (entries, observer) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting && entry.intersectionRatio !== 1) {\r\n      emits('loadMoreData');\r\n    }\r\n  });\r\n};\r\n\r\nconst showSuccessAlert = (message) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst selectItem = async (item) => {\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstShiftKeyStr.value) {\r\n      lastShiftKeyStr.value = item.id;\r\n      handleShiftSelection();\r\n    }\r\n  } else {\r\n    lastShiftKeyStr.value = '';\r\n  }\r\n  if (isCtrlKeyPressed.value) {\r\n    handleCheckboxChange(item);\r\n  }\r\n  // 부모로 전달\r\n  if (!item) {\r\n    return;\r\n  }\r\n\r\n  firstShiftKeyStr.value = item.id;\r\n\r\n  emits('selectItem', item);\r\n  selectedItemId.value = item.id;\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(item.id)});\r\n};\r\n\r\nconst getIpAddress = async (item) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    const ipAddress = result.data;\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const req = `oldPcIp=${ipAddress}&newEntityId=${item.id}&newPcIp=${ipAddress}&dayQuery=${dayQuery}`\r\n\r\n    await updatePcIpStateApi(req).then(response => {\r\n      delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n    }).catch(error => {\r\n      console.error(error)\r\n    });\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst delayedEmit = (type, payload, delay) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\nconst rowDbClick = async (item) => {\r\n  if (item.lock_status && item?.pcIp !== myIp.value) {\r\n    return;\r\n  }\r\n\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: item.id});\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedRbcInfo: item.rbcInfo.rbcClass});\r\n  await getIpAddress(item);\r\n  const { result, loading, error } = useGetRunningInfoByIdQuery(\r\n      { id: Number(item.id) },\r\n      { fetchPolicy: 'no-cache' }\r\n  );\r\n\r\n// result를 watch하여 변경될 때마다 반응하도록 처리\r\n  watch(result, async (newValue) => {\r\n    if (newValue) {\r\n      // 쿼리에서 새로운 데이터가 있으면 상태 업데이트\r\n      await store.dispatch('slideDataModule/updateSlideData', newValue?.getRunningInfoByIdGQL);\r\n\r\n      // 페이지 이동\r\n      await router.push('/databaseDetail');\r\n    } else {\r\n      console.log('No result');\r\n    }\r\n  });\r\n\r\n}\r\n\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst closeLayer = (val) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onModalOpen = () => {\r\n  //\r\n};\r\n\r\nconst dbDataEditSet = async () => {\r\n  try {\r\n    const updatedRuningInfo = {\r\n      id: itemObj.value.id,\r\n      barcodeNo: itemObj.value.barcodeNo,\r\n      patientId: itemObj.value.patientId,\r\n      patientNm: itemObj.value.patientNm,\r\n    };\r\n\r\n    const localDbData = [...props.dbData];\r\n\r\n    const indexToUpdate = localDbData.findIndex(item => item.id === itemObj.value.id);\r\n\r\n    if (indexToUpdate !== -1) {\r\n      localDbData[indexToUpdate] = {...localDbData[indexToUpdate], ...updatedRuningInfo};\r\n    }\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [localDbData[indexToUpdate]],\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (response) {\r\n      showSuccessAlert('Success');\r\n      emits('initData');\r\n      closeLayer();\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst editData = async (item) => {\r\n  openLayer();\r\n  itemObj.value = JSON.parse(JSON.stringify(item));\r\n  itemObj.value.submitState = ['', 'Ready', 'checkFirst'].includes(itemObj.value.submitState) ? '' : itemObj.value.submitState;\r\n  itemObj.value.testType = projectType.value !== 'bm' ? getTestTypeText(item?.testType) : getBmTestTypeText(item?.testType);\r\n  const path = item?.img_drive_root_path !== '' && item?.img_drive_root_path ? item?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, item.slotId, DIR_NAME.BARCODE);\r\n\r\n}\r\n\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst deleteRow = async (selectedItems) => {\r\n  console.log('selectedItems', selectedItems);\r\n  try {\r\n    if (selectedItemId.value === '') {\r\n      showErrorAlert(MESSAGES.IDS_ERROR_SELECT_A_TARGET_ITEM);\r\n    } else {\r\n      if (selectedItems.lock_status) {\r\n        showErrorAlert(MESSAGES.lockRow);\r\n        return;\r\n      }\r\n      const idsToDeleteArr = selectedItems.map((item) => item.id);\r\n      const rootPaths = selectedItems.map((item) => {\r\n        const path = item?.img_drive_root_path !== '' && item?.img_drive_root_path ? item?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n        return `${path}/${item.slotId}`;\r\n      })\r\n      const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n      const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n      const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n\r\n      const apiUrlTmp = window.APP_API_BASE_URL.split(':');\r\n      const apiUrl = `${apiUrlTmp[0]}:${apiUrlTmp[1]}`;\r\n\r\n      const req = {\r\n        ids: idsToDeleteArr,\r\n        img_drive_root_path: rootPaths,\r\n        dayQuery: dayQuery,\r\n        apiUrl: apiUrl\r\n      }\r\n      loadingDelay.value = true;\r\n\r\n      const response = await deleteRunningApi(req);\r\n\r\n      if (response.success) {\r\n        showSuccessAlert('Items deleted successfully');\r\n        emits('refresh'); // 데이터 다시 불러오기\r\n\r\n      } else {\r\n        console.error('Failed to delete items');\r\n      }\r\n\r\n      loadingDelay.value = false;\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n\r\n  loadingDelay.value = false;\r\n}\r\n\r\nconst submitStateChangeText = (text, submitUserId) => {\r\n  switch (text) {\r\n    case 'Ready':\r\n      return 'Ready';\r\n    case 'Submit':\r\n      return `Submit (${submitUserId})`;\r\n    case 'lisCbc':\r\n      return `LIS (${submitUserId})`;\r\n    default:\r\n      return 'Ready';\r\n  }\r\n}\r\n\r\nconst onImageError = () => {\r\n  barCodeImageShowError.value = true;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  await deleteRow(selectedItemsUsedInDelete.value);\r\n}\r\n\r\nconst showDeleteConfirm = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = 'Would you want delete?';\r\n  selectedItemsUsedInDelete.value = props.dbData.filter(item => item.checked);\r\n  dbDataFindByIdUsedInDelete.value = props.dbData.find(item => item.id === selectedItemId.value);\r\n  if (isObjectEmpty(selectedItemsUsedInDelete.value)) selectedItemsUsedInDelete.value = [dbDataFindByIdUsedInDelete.value];\r\n  resetContextMenu();\r\n  emits('disableSelectItem');\r\n}\r\n\r\n</script>\r\n\r\n","import script from \"./listTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./listTable.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- ListInfo.vue -->\r\n<template>\r\n  <div v-if=\"Object.keys(selectedItem).length !== 0\">\r\n    <div>\r\n      <h3 class=\"orderTitle hh3title\">Order Information</h3>\r\n      <div class=\"orderListWrapper\" style=\"padding: 0;\">\r\n        <ul class=\"orderListUi\">\r\n          <li>\r\n            <span class=\"mb10\">Order ID:</span>\r\n            <span class=\"mb20\">{{ selectedItem?.slotId }}</span>\r\n          </li>\r\n          <li>NS, NB Integration: {{integrationFindNe(selectedItem.wbcInfoAfter)}}</li>\r\n        </ul>\r\n        <div>\r\n          <img v-show=\"!barCodeImageShowError && siteCd !== HOSPITAL_SITE_CD_BY_NAME['고대구로병원']\" @error=\"onImageError\" :src=\"pilePath\"\r\n               style=\"width: 200px; height: 120px; float:right;\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"resultInformationContainer\" style=\"padding-top: 0;\">\r\n      <h3 class=\"mt20 mb10 hh3title\">Result Information</h3>\r\n      <ul class=\"resInfoTopContainer\">\r\n        <li v-if=\"selectedItem?.testType === '01' || selectedItem?.testType === '04' || projectType === 'bm'\">\r\n          <div class=\"resInfoContainer\">\r\n            <li class=\"resInfoWrapper mb10\">\r\n              <p>Class</p>\r\n              <p>Count</p>\r\n              <p>Percent</p>\r\n            </li>\r\n            <template v-for=\"result in wbcInfoAfter\" :key=\"result.title\">\r\n              <li v-if=\"showClassificationResults(result.title) && result.count > 0\"\r\n                  class=\"resInfoWrapper resInfoWrapperLine\">\r\n                <p>{{ result.title }}</p>\r\n                <p>{{ result.count }}</p>\r\n                <p>{{ percentWithNoError(result.percent) + '%' }}</p>\r\n              </li>\r\n            </template>\r\n            <li class=\"resInfoWrapper mt10 mb20\">\r\n              <p>Total</p>\r\n              <p>{{ wbcTotal }}</p>\r\n              <p>100%</p>\r\n            </li>\r\n\r\n            <template v-for=\"result in wbcInfoAfter\" :key=\"result.title\">\r\n              <li v-if=\"showClassificationNonWbcResults(result.title) && result.count > 0\"\r\n                  class=\"resInfoWrapper resInfoWrapperLine\">\r\n                <p>{{ result.title }}</p>\r\n                <p>{{ result.count }}</p>\r\n                <p>-</p>\r\n              </li>\r\n            </template>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref, defineProps, onMounted, watch, computed, onBeforeMount} from 'vue';\r\nimport { DIR_NAME } from \"@/common/defines/constants/settings\";\r\nimport moment from \"moment/moment\";\r\nimport {useStore} from \"vuex\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  incheonGilPercentChange,\r\n  incheonStMaryPercentChange,\r\n  inhaPercentChange,\r\n  percentWithNoError,\r\n  seoulStMaryPercentChange\r\n} from \"@/common/helpers/common/classPercent\";\r\nimport { HOSPITAL_SITE_CD_BY_NAME } from \"@/common/defines/constants/siteCd\";\r\n\r\nconst store = useStore();\r\nconst props = defineProps(['selectedItem']);\r\nconst iaRootPath = ref(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\nconst pilePath = ref('');\r\nconst barCodeImageShowError = ref(false);\r\nconst wbcTotal = ref(0);\r\nconst nonWbcTitles = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM', 'OT'];\r\nconst projectType = ref('');\r\nconst orderClass = ref({});\r\nconst wbcInfoAfter = ref({});\r\n\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n})\r\n\r\nonMounted(async () => {\r\n  await getClassOrder();\r\n  barCodeImageShowError.value = false;\r\n  // iaRootPath가 존재하면 getImageUrl 함수 호출\r\n  if (iaRootPath.value) {\r\n    pilePath.value = getImageUrl('barcode_image.jpg');\r\n  }\r\n});\r\n\r\nwatch(() => props.selectedItem, (newSelectedItem) => {\r\n  if (Object.keys(newSelectedItem).length === 0) return;\r\n  barCodeImageShowError.value = false;\r\n  setWbcTotalAndPercent();\r\n  sortClassOrder();\r\n\r\n  if (iaRootPath.value) {\r\n    pilePath.value = getImageUrl('barcode_image.jpg', newSelectedItem);\r\n  }\r\n});\r\n\r\nconst integrationFindNe = (wbcInfoAfter) => {\r\n  let returnText = '';\r\n  const neFindItem = wbcInfoAfter.find((el) => {\r\n    return el.title === 'NE'\r\n  });\r\n\r\n  if(neFindItem){\r\n    returnText = 'Y' ;\r\n  }else{\r\n    returnText = 'N';\r\n  }\r\n  return returnText;\r\n}\r\n\r\nconst sortClassOrder = async () => {\r\n  if (!orderClass.value || orderClass.value.length === 0 || !Array.isArray(orderClass.value)) {\r\n    wbcInfoAfter.value = props.selectedItem.wbcInfoAfter;\r\n    return;\r\n  }\r\n\r\n  const oArr = orderClass.value.sort((a, b) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : projectType.value === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfoData = sortWbcInfo(props.selectedItem.wbcInfoAfter, sortArr);\r\n  wbcInfoAfter.value = sortedWbcInfoData;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo, basicWbcArr) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  return newSortArr.sort((a, b) => {\r\n    const nameA = basicWbcArr.findIndex((item) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n};\r\n\r\nconst getClassOrder = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a, b) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst setWbcTotalAndPercent = async () => {\r\n  wbcTotal.value = props.selectedItem.wbcInfoAfter.reduce((acc, item) => {\r\n    if (!nonWbcTitles.includes(item.title)) return acc + Number(item.count)\r\n    return acc\r\n  }, 0)\r\n\r\n  for (const item of props.selectedItem.wbcInfoAfter) {\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(wbcTotal.value)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, props.selectedItem?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        item.percent = calculatePercentage(item.count, wbcTotal.value);\r\n      }\r\n\r\n      if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원']) {\r\n        wbcInfoAfter.value = await seoulStMaryPercentChange(props.selectedItem.wbcInfoAfter, props.selectedItem.wbcInfoAfter);\r\n      } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n        wbcInfoAfter.value = await inhaPercentChange(props.selectedItem, props.selectedItem.wbcInfoAfter);\r\n      } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천성모병원']) {\r\n        wbcInfoAfter.value = await incheonStMaryPercentChange(projectType.value, props.selectedItem.wbcInfoAfter);\r\n      } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n        wbcInfoAfter.value = await incheonGilPercentChange(props.selectedItem.wbcInfoAfter, props.selectedItem.wbcInfo.totalCount);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst calculatePercentage = (count, total) => {\r\n  const percentage = ((Number(count) / Number(total)) * 100).toFixed(1);\r\n  return Number(percentage) === Math.floor(Number(percentage)) ? Math.floor(Number(percentage)).toString() : percentage;\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd, testType) => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst formatDateString = (dateString) => {\r\n  const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n  return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\nconst showClassificationResults = (classificationResult) => {\r\n  return (\r\n      classificationResult &&\r\n      classificationResult.length > 0 &&\r\n      !nonWbcTitles.includes(classificationResult)\r\n  );\r\n};\r\n\r\nconst showClassificationNonWbcResults = (classificationResult) => {\r\n  return (classificationResult && classificationResult.length > 0 && nonWbcTitles.includes(classificationResult))\r\n}\r\n\r\n\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nfunction getImageUrl(imageName) {\r\n  const path = props.selectedItem?.img_drive_root_path !== '' && props.selectedItem?.img_drive_root_path ? props.selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  return `${apiBaseUrl}/images?folder=${path + '/' + props.selectedItem.slotId + '/' + DIR_NAME.BARCODE + '/'}&imageName=${imageName}`;\r\n}\r\n\r\nconst onImageError = () => {\r\n  barCodeImageShowError.value = true;\r\n}\r\n\r\n</script>\r\n","import script from \"./listInfo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./listInfo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, normalizeClass as _normalizeClass, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"listTableImageContainer\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"dbPBImageContainer\"\n}\nconst _hoisted_3 = [\"src\", \"onError\", \"onClick\"]\nconst _hoisted_4 = { key: 1 }\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from \"vuex\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'listWbcImg',\n  props: ['dbData', 'selectedItem'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst selectedImage = ref('');\r\n\r\nonMounted(() => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n},{deep: true});\r\n\r\n\r\nconst clickImage = (selectImageText: string) => {\r\n  if (selectedImage.value === selectImageText) {\r\n    selectedImage.value = '';\r\n  } else {\r\n    selectedImage.value = selectImageText\r\n  }\r\n}\r\n\r\nconst isSelectedImage = (selectImageText: string) => {\r\n  return selectedImage.value === selectImageText;\r\n}\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"h3\", { class: \"mb10 hh3title infoImageTitle mt10\" }, \"WBC Images\", -1)),\n    (allImages.value.length > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allImages.value, (imageSet) => {\n            return (_openBlock(), _createElementBlock(_Fragment, {\n              key: imageSet.id\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imageSet.images, (image) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                  key: image.fileName,\n                  class: _normalizeClass([\"dbRightImages\", ['dbRightImages', {'selected-image': isSelectedImage(`${imageSet.id}-${image.fileName}`)}]]),\n                  src: getImageUrl(image.fileName, imageSet.id, imageSet.title),\n                  onError: ($event: any) => (hideImage(imageSet.id, image.fileName)),\n                  onClick: ($event: any) => (clickImage(`${imageSet.id}-${image.fileName}`))\n                }, null, 42, _hoisted_3)), [\n                  [_vShow, !hiddenImages.value[`${imageSet.id}-${image.fileName}`]]\n                ])\n              }), 128))\n            ], 64))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"No images available\"))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"listTableImageContainer\">\r\n    <h3 class=\"mb10 hh3title infoImageTitle mt10\">WBC Images</h3>\r\n    <div v-if=\"allImages.length > 0\" class=\"dbPBImageContainer\">\r\n      <template v-for=\"imageSet in allImages\" :key=\"imageSet.id\">\r\n        <img\r\n            v-for=\"image in imageSet.images\"\r\n            :key=\"image.fileName\"\r\n            class=\"dbRightImages\"\r\n            :class=\"['dbRightImages', {'selected-image': isSelectedImage(`${imageSet.id}-${image.fileName}`)}]\"\r\n            :src=\"getImageUrl(image.fileName, imageSet.id, imageSet.title)\"\r\n            @error=\"hideImage(imageSet.id, image.fileName)\"\r\n            v-show=\"!hiddenImages[`${imageSet.id}-${image.fileName}`]\"\r\n            @click=\"clickImage(`${imageSet.id}-${image.fileName}`)\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div v-else>No images available</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from \"vuex\";\r\n\r\nconst props = defineProps(['dbData', 'selectedItem']);\r\nconst store = useStore();\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst selectedImage = ref('');\r\n\r\nonMounted(() => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n},{deep: true});\r\n\r\n\r\nconst clickImage = (selectImageText: string) => {\r\n  if (selectedImage.value === selectImageText) {\r\n    selectedImage.value = '';\r\n  } else {\r\n    selectedImage.value = selectImageText\r\n  }\r\n}\r\n\r\nconst isSelectedImage = (selectImageText: string) => {\r\n  return selectedImage.value === selectImageText;\r\n}\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n</script>\r\n","import script from \"./listWbcImg.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listWbcImg.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt30 listTableImageContainer\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"dbBMImageContainer\"\n}\nconst _hoisted_3 = [\"src\", \"onError\"]\nconst _hoisted_4 = { key: 1 }\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'listBmImg',\n  props: ['dbData', 'selectedItem'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\n\r\nonMounted(() => {\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  createAllImages();\r\n});\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/04_BM_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"h3\", { class: \"mb10 hh3title infoImageTitle mt10\" }, \"BM Images\", -1)),\n    (allImages.value.length > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allImages.value, (imageSet) => {\n            return (_openBlock(), _createElementBlock(_Fragment, {\n              key: imageSet.id\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imageSet.images, (image) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                  key: image.fileName,\n                  class: \"dbRightImages\",\n                  src: getImageUrl(image.fileName, imageSet.id, imageSet.title),\n                  onError: ($event: any) => (hideImage(imageSet.id, image.fileName))\n                }, null, 40, _hoisted_3)), [\n                  [_vShow, !hiddenImages.value[`${imageSet.id}-${image.fileName}`]]\n                ])\n              }), 128))\n            ], 64))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"No images available\"))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt30 listTableImageContainer\">\r\n    <h3 class=\"mb10 hh3title infoImageTitle mt10\">BM Images</h3>\r\n    <div v-if=\"allImages.length > 0\" class=\"dbBMImageContainer\">\r\n      <template v-for=\"imageSet in allImages\" :key=\"imageSet.id\">\r\n        <img\r\n            v-for=\"image in imageSet.images\"\r\n            :key=\"image.fileName\"\r\n            class=\"dbRightImages\"\r\n            :src=\"getImageUrl(image.fileName, imageSet.id, imageSet.title)\"\r\n            @error=\"hideImage(imageSet.id, image.fileName)\"\r\n            v-show=\"!hiddenImages[`${imageSet.id}-${image.fileName}`]\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div v-else>No images available</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\nconst props = defineProps(['dbData', 'selectedItem']);\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\n\r\nonMounted(() => {\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  createAllImages();\r\n});\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/04_BM_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n</script>\r\n","import script from \"./listBmImg.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listBmImg.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { ApiResponse, useHttpClient } from \"@/common/api/httpClient\";\r\nimport { apiConstants } from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const executeExcelCreate = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.excel.execute, request);\r\n}","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const fileSysPost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.post, request, '');\r\n};\r\n\r\nexport const fileSysCopy = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.copy, request, '');\r\n};\r\n\r\nexport const fileSysClean = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.cleanup, request, '');\r\n};\r\n\r\nexport const fileSysExistsFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.existsFile, request, '');\r\n};\r\nexport const  fileSearchApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.filesystem.fileSearch, `${request}`, true);\r\n};\r\nexport const deleteRunningApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.filesystem.delete, request, false);\r\n};\r\n\r\nexport const  createDirectory = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.filesystem.createDirectory, `${request}`, true);\r\n};\r\n\r\nexport const  fileReadJpg = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.filesystem.readGetJpg, `${request}`, true);\r\n};\r\n\r\nexport const createFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.fileCreate, request, '');\r\n};\r\n\r\nexport const createCbcFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.cbcSaveData, request, '');\r\n};\r\n\r\nexport const getFolders = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.folders.get, `${request}`, true);\r\n};\r\n\r\nexport const errLogsReadApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.filesystem.errLogsRead, `${request}`, true);\r\n};\r\n\r\n","import {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport {inhaCbcTestCode} from \"@/common/defines/constants/inhaCbcTestCode\";\r\nimport {createCbcFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {\r\n    getCbcCodeRbcApi,\r\n    getFilePathSetApi,\r\n    getLisCodeApi,\r\n    getLisCodeRbcApi, getMinCountApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport axios from \"axios\";\r\nimport {updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {readFileTxt} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {computed} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport moment from \"moment/moment\";\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nexport const inhaCbc = async (cbcFilePathSetArr: any, selectItems: any, cbcCodeList: any, funcType: string) => {\r\n    console.log('인하대 CBC 데이터 받기 - inhaCbc cbcFilePathSetArr', cbcFilePathSetArr);\r\n    let errMessage = '';\r\n    let loading = false;\r\n    let cbcWorkList: any = [];\r\n    let cbcPatientNo = '';\r\n    let cbcPatientNm = '';\r\n    let cbcSex = '';\r\n    let cbcAge = '';\r\n    let inhaTestCode = '';\r\n    let cbcDataArray = [];\r\n\r\n    if (cbcFilePathSetArr === '') {\r\n        errMessage = MESSAGES.UPLOAD_PLEASE_CBC;\r\n        return {cbcWorkList, errMessage, cbcPatientNo, cbcPatientNm, cbcSex, cbcAge, inhaTestCode, loading}\r\n    }\r\n\r\n    if (cbcFilePathSetArr.includes(\"http\")) { // url 설정인 경우\r\n        try {\r\n            const apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\n            const body = {\r\n                machine: 'ADUIMD',\r\n                episode: selectItems.barcodeNo,\r\n                baseUrl: `${cbcFilePathSetArr}/api/MifMain/Order`,\r\n                // baseUrl: `${apiBaseUrl}/cbc/executePostCurltest`,\r\n            };\r\n            const response: any = await axios.post(`${apiBaseUrl}/cbc/executePostCurl`, body);\r\n            // 상태 초기화\r\n            // 응답 데이터 가져오기\r\n            const correctedString = response.data.replace(/\\\\\"/g, '\"'); // 이스케이프된 따옴표 제거\r\n            const jsonObject = JSON.parse(correctedString); // JSON 객체로 변환\r\n\r\n            console.log(jsonObject[0]); // 파싱된 JSON 객체 출력\r\n            const res: any = jsonObject[0];\r\n            // const res: any = inhaCbcTestCode[0];\r\n            const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA`;\r\n            const readFileTxtRes: any = await readFileTxt(`path=${filePath}&filename=${selectItems?.barcodeNo}`);\r\n            if (readFileTxtRes?.data?.success && (res?.returnCode !== '0')) {\r\n                console.log(readFileTxtRes?.data?.data)\r\n                cbcDataArray = JSON.parse(readFileTxtRes?.data?.data?.toString());\r\n                const [{cbcPatientNo, cbcPatientNm, cbcSex, cbcAge, testCode}] = cbcDataArray;\r\n                await store.dispatch('commonModule/setCommonInfo', {inhaTestCode: testCode});\r\n                cbcWorkList = cbcDataArray;\r\n                return {cbcWorkList, errMessage, cbcPatientNo, cbcPatientNm, cbcSex, cbcAge, inhaTestCode, loading};\r\n            }\r\n            // 응답 코드가 '0'일 때만 처리\r\n            if (res?.returnCode === '0') {\r\n                // 환자 정보 설정\r\n                cbcPatientNo = res?.regNo;\r\n                cbcPatientNm = res?.name;\r\n                cbcSex = res?.sex;\r\n                cbcAge = res?.age;\r\n                inhaTestCode = res?.testCode;\r\n                // 공통 정보 설정\r\n                await store.dispatch('commonModule/setCommonInfo', {inhaTestCode: res?.testCode});\r\n\r\n                // 테스트 코드 리스트 처리\r\n                const testCodeList = res.testCode.split(',');\r\n                testCodeList.forEach((codes: any) => {\r\n                    const codeArray = codes.split('|');\r\n                    const code = codeArray[0];\r\n                    const value = codeArray[1];\r\n                    const unit = codeArray[2];\r\n\r\n                    // cbcCodeList에서 매칭되는 코드 찾기\r\n                    const cbcCode = cbcCodeList.find((cbcCode: any) => cbcCode.classCd === code);\r\n                    if (cbcCode) {\r\n                        // 작업 리스트에 추가\r\n                        const obj = {\r\n                            classNm: cbcCode.fullNm,\r\n                            count: value || 0,\r\n                            unit: unit || '', // unit이 없으면 빈 문자열로 설정\r\n                            cbcPatientNo: res?.regNo,\r\n                            cbcPatientNm: res?.name,\r\n                            cbcSex: res?.sex,\r\n                            cbcAge: res?.age,\r\n                            testCode: res.testCode\r\n                        };\r\n                        cbcWorkList.push(obj);\r\n                    }\r\n                });\r\n            } else {\r\n                errMessage = res?.returnCode;\r\n                loading = false;\r\n                return {cbcWorkList, errMessage, cbcPatientNo, cbcPatientNm, cbcSex, cbcAge, inhaTestCode, loading};\r\n            }\r\n\r\n            const parms = {\r\n                filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${selectItems?.barcodeNo}.txt`,\r\n                data: cbcWorkList,\r\n            };\r\n            await createCbcFile(parms);\r\n            loading = false;\r\n            // console.log('Response:', response.data);\r\n        } catch (error: any) {\r\n            console.error(error.message + ' : no CBC result');\r\n            loading = false;\r\n            errMessage = error.message;\r\n        }\r\n    }\r\n    return {cbcWorkList, errMessage, cbcPatientNo, cbcPatientNm, cbcSex, cbcAge, inhaTestCode, loading}\r\n}\r\n\r\nexport const inhaDataSend = async (wbcInfoAfter: any, rbcInfoAfter: any, barcodeNo: any, lisFilePathSetArr: any, inhaTestCode: any, lisCodeWbcArr: any, lisCodeRbcArr: any, selectItems: any, id: any) => {\r\n    console.log('Lis 업로드 로직 시작');\r\n    console.log('인하대 테스트 wbcInfoAfter', wbcInfoAfter)\r\n    console.log('인하대 테스트 rbcInfoAfter', rbcInfoAfter)\r\n    console.log('인하대 테스트 barcodeNo', barcodeNo)\r\n    let errMessage = '';\r\n    let lisBtnColor = false;\r\n    if (lisFilePathSetArr === '') {\r\n        errMessage = MESSAGES.UPLOAD_PLEASE_LIS;\r\n        return {errMessage};\r\n    }\r\n    let resultStr = '';\r\n    // `inhaTestCode.value`를 콤마로 분리하여 배열 생성 inhaTestCode는 인하대 lisCbc 업로드 하면 cbc 코드에서 받은 응답 값을 담는 부분\r\n    const testCodeList = inhaTestCode.split(',');\r\n    // 변환된 데이터를 저장할 리스트 초기화\r\n    const tmpList: string[] = [];\r\n    // `testCodeList` 배열을 순회하면서 각 코드에 대해 처리\r\n    testCodeList.forEach((codes: any) => {\r\n        if (codes.length > 0) {\r\n            const codeArray = codes.split('|')\r\n            const code = codeArray[0]\r\n            let value = codeArray[1]\r\n\r\n            let tmpStr = ''\r\n\r\n            if (code === 'L0210') {\r\n                value = value + '5'\r\n            }\r\n\r\n            if (code === 'H1151') {\r\n                tmpStr += 'H9511' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n                tmpList.push(tmpStr)\r\n            } else if (code === 'H1152') {\r\n                tmpStr += 'H9512' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n                tmpList.push(tmpStr)\r\n            } else if (code === 'H1153') {\r\n                tmpStr += 'H9513' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n                tmpList.push(tmpStr)\r\n            } else if (code === 'H1154') {\r\n                tmpStr += 'H9514' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n                tmpList.push(tmpStr)\r\n            } else if (code === 'H1155') {\r\n                tmpStr += 'H9515' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n                tmpList.push(tmpStr)\r\n            } else if (code === 'H1165') {\r\n                tmpStr += 'H9510' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n                tmpList.push(tmpStr)\r\n            } else if (code === 'H1162') {\r\n                tmpStr += 'H9570' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n                tmpList.push(tmpStr)\r\n            } else if (code === 'H1101' || code === 'H1102' || code === 'H1103' ||\r\n                code === 'H1104' || code === 'H1105' || code === 'H1106' ||\r\n                code === 'H1121' || code === 'H1122' || code === 'H1123') {\r\n                tmpStr += code + '|' + value + '|' //+ unit // + '\\\\' + type\r\n                tmpList.push(tmpStr)\r\n            }\r\n        }\r\n    });\r\n    // `inhaTestCode.value`를 빈 문자열로 초기화\r\n    let inhaTestSendCode = '';\r\n    tmpList.forEach(function (item) {\r\n        inhaTestSendCode += item + ','\r\n    })\r\n    // `resultStr`에 `inhaTestCode.value`를 추가\r\n    resultStr += inhaTestSendCode;\r\n    console.log('tmpList 가공 매칭 후', JSON.stringify(tmpList))\r\n    console.log('inhaTestSendCode.value cbc 값 얻어와서 매칭 시킨 후 변경된 배열', inhaTestSendCode)\r\n    console.log('inhaTestSendCode.value', inhaTestSendCode)\r\n    // WBC 항목을 처리하는 함수 정의\r\n    lisCodeWbcArr.forEach(function (lisCode: any, index: any) {\r\n        if (lisCode.LIS_CD !== '') {\r\n            wbcInfoAfter.forEach(function (wbcItem: any) {\r\n                if (Number(lisCode.IA_CD) === Number(wbcItem.id)) {\r\n                    if (lisCode.LIS_CD === 'H9600' || lisCode.LIS_CD === 'H9365' ||\r\n                        lisCode.LIS_CD === 'H9366') {\r\n                        if (Number(wbcItem.count > 0)) {\r\n                            resultStr += lisCode.LIS_CD + '|' + '1' + '|' + ','\r\n                        } else if (wbcItem.title !== 'NS' || wbcItem.title !== 'LY' || wbcItem.title !== 'EO' || wbcItem.title !== 'BA' || wbcItem.title !== 'MO') {\r\n                            resultStr += lisCode.LIS_CD + '|' + ' ' + '|' + ','\r\n                            // resultStr += lisCode.LIS_CD + '|' + '0' + '|' + ','\r\n                        } else {\r\n                            // resultStr += lisCode.LIS_CD + '|' + ' ' + '|' + ','\r\n                            resultStr += lisCode.LIS_CD + '|' + '0.0' + '|' + ','\r\n                        }\r\n                    } else {\r\n                        // GP, PA\r\n                        if (lisCode.IA_CD === '13' || lisCode.IA_CD === '14') {\r\n                            if (Number(wbcItem.count) > Number(lisCode.MIN_COUNT)) {\r\n                                resultStr += lisCode.LIS_CD + '|' + wbcItem.percent + '|' + ','\r\n                            } else {\r\n                                resultStr += lisCode.LIS_CD + '|' + ' ' + '|' + ','\r\n                                // resultStr += lisCode.LIS_CD + '|' + '0' + '|' + ','\r\n                            }\r\n                        } else {\r\n                            if (Number(wbcItem.percent) > 0) {\r\n                                resultStr += lisCode.LIS_CD + '|' + wbcItem.percent + '|' + ','\r\n                            } else if (wbcItem.title !== 'NS' || wbcItem.title !== 'LY' || wbcItem.title !== 'EO' || wbcItem.title !== 'BA' || wbcItem.title !== 'MO') {\r\n                                resultStr += lisCode.LIS_CD + '|' + ' ' + '|' + ','\r\n                            } else {\r\n                                // resultStr += lisCode.LIS_CD + '|' + ' ' + '|' + ','\r\n                                resultStr += lisCode.LIS_CD + '|' + '0.0' + '|' + ','\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    // RBC\r\n    let rbcTmp: any = ''\r\n    lisCodeRbcArr.forEach(function (lisCode: any) {\r\n        if (lisCode.LIS_CD !== '') {\r\n            rbcInfoAfter.forEach(function (rbcItem: any) {\r\n                if (lisCode.IA_CATEGORY_CD === rbcItem.categoryId &&\r\n                    lisCode.IA_CLASS_CD === rbcItem.classId) {\r\n                    if (lisCode.LIS_CD === 'H9531' || lisCode.LIS_CD === 'H9535' ||\r\n                        lisCode.LIS_CD === 'H9594' || lisCode.LIS_CD === 'H9571' ||\r\n                        lisCode.LIS_CD === 'H9574' || lisCode.LIS_CD === 'H9595') {\r\n                        if (Number(rbcItem.degree) === 0) {\r\n                            rbcItem.degree = ' '\r\n                        } else {\r\n                            rbcItem.degree = '0'\r\n                        }\r\n\r\n                        rbcTmp += lisCode.LIS_CD + '|' + rbcItem.degree + '|' + ','\r\n                        resultStr += lisCode.LIS_CD + '|' + rbcItem.degree + '|' + ','\r\n\r\n                    } else {\r\n                        if (Number(rbcItem.degree) === 0) {\r\n                            rbcItem.degree = ' '\r\n                        }\r\n                        rbcTmp += lisCode.LIS_CD + '|' + rbcItem.degree + '|' + ','\r\n                        resultStr += lisCode.LIS_CD + '|' + rbcItem.degree + '|' + ','\r\n\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    let rbcTmp2 = rbcTmp\r\n    rbcTmp2 = rbcTmp2.replace('H9531', 'H9571')\r\n    rbcTmp2 = rbcTmp2.replace('H9532', 'H9572')\r\n    rbcTmp2 = rbcTmp2.replace('H9533', 'H9573')\r\n    rbcTmp2 = rbcTmp2.replace('H9535', 'H9574')\r\n    rbcTmp2 = rbcTmp2.replace('H9536', 'H9575')\r\n    rbcTmp2 = rbcTmp2.replace('H9537', 'H9576')\r\n    rbcTmp2 = rbcTmp2.replace('H9534', 'H9577')\r\n    rbcTmp2 = rbcTmp2.replace('H9538', 'H9578')\r\n    rbcTmp2 = rbcTmp2.replace('H9542', 'H9518')\r\n    rbcTmp2 = rbcTmp2.replace('H9544', 'H9520')\r\n    rbcTmp2 = rbcTmp2.replace('H9546', 'H9517')\r\n    rbcTmp2 = rbcTmp2.replace('H9548', 'H9519')\r\n    rbcTmp2 = rbcTmp2.replace('H9550', 'H9522')\r\n    rbcTmp2 = rbcTmp2.replace('H9552', 'H9521')\r\n    rbcTmp2 = rbcTmp2.replace('H9554', 'H9525')\r\n    rbcTmp2 = rbcTmp2.replace('H9556', 'H9524')\r\n    rbcTmp2 = rbcTmp2.replace('H9558', 'H9526')\r\n    rbcTmp2 = rbcTmp2.replace('H9560', 'H9523')\r\n    rbcTmp2 = rbcTmp2.replace('H9562', 'H9528')\r\n    rbcTmp2 = rbcTmp2.replace('H9564', 'H9530')\r\n    rbcTmp2 = rbcTmp2.replace('H9594', 'H9595')\r\n\r\n    resultStr += rbcTmp\r\n    resultStr += rbcTmp2\r\n    console.log('rbc wbc 최종 resultStr 값', resultStr);\r\n    try {\r\n        const apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\n        const body = {\r\n            baseUrl: `${lisFilePathSetArr}/api/MifMain/File`,\r\n            machine: 'ADUIMD',\r\n            episode: barcodeNo,\r\n            result: resultStr,\r\n            // baseUrl: `${apiBaseUrl}/cbc/executePostCurltest`,\r\n        };\r\n\r\n        const response = await axios.post(`${apiBaseUrl}/cbc/executePostCurl`, body);\r\n        const correctedString = response.data.replace(/\\\\\"/g, '\"'); // 이스케이프된 따옴표 제거\r\n        const jsonObject = JSON.parse(correctedString); // JSON 객체로 변환\r\n        console.log(jsonObject[0]); // 파싱된 JSON 객체 출력\r\n        const res: any = jsonObject[0];\r\n        console.log('res 최종값', response)\r\n        if (res?.returnCode === '0') {\r\n            const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\LIS_IA\\\\${selectItems?.barcodeNo}.txt`;\r\n            const parmsLisCopy = {filePath, data: jsonObject};\r\n            const localTime = moment().local();\r\n\r\n            // LIS 파일 생성\r\n            await createCbcFile(parmsLisCopy);\r\n            if (selectItems?.id) {\r\n                const updatedItem = {\r\n                    submitState: 'lisCbc',\r\n                    submitOfDate: localTime.format(),\r\n                    submitUserId: userModuleDataGet.value.userId,\r\n\r\n                };\r\n                const updatedRuningInfo = {id: slideData.value.id, ...updatedItem}\r\n                await resRunningItem(updatedRuningInfo, true, id);\r\n            }\r\n\r\n            lisBtnColor = true;\r\n            errMessage = MESSAGES.IDS_MSG_SUCCESS;\r\n        } else {\r\n            errMessage = res?.message\r\n\r\n        }\r\n    } catch (error: any) {\r\n        // 오류 처리;\r\n        errMessage = error.message\r\n    }\r\n    return {errMessage, lisBtnColor}\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean, id?: any,) => {\r\n    let wbcMemo = '';\r\n    let message = '';\r\n    try {\r\n        const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n        const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n        const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n        const response: any = await updateRunningApi({\r\n            userId: Number(id),\r\n            runingInfoDtoItems: [updatedRuningInfo],\r\n            dayQuery: dayQuery,\r\n        })\r\n        if (response) {\r\n            if (!noAlert) {\r\n                message = 'success';\r\n            }\r\n            const filteredItems = updatedRuningInfo;\r\n            wbcMemo = filteredItems.wbcMemo;\r\n        } else {\r\n            console.error('백엔드가 디비에 저장 실패함');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n    }\r\n\r\n    return {wbcMemo, message}\r\n}\r\n\r\n\r\nexport const getLisWbcRbcData = async () => {\r\n    let lisCodeWbcArr: any = [];\r\n    let lisCodeRbcArr: any = [];\r\n    try {\r\n        const wbcResult = await getLisCodeApi();\r\n        const rbcResult = await getLisCodeRbcApi();\r\n        if (wbcResult && wbcResult.data && rbcResult && rbcResult.data) {\r\n            const wbcData = wbcResult.data;\r\n            const rbcData = rbcResult.data;\r\n            const minCountResult: any = await getMinCountApi();\r\n\r\n            if (wbcData) {\r\n                const newWbcDataArr = [];\r\n                for (const {classId, fullNm, id, key} of wbcData) {\r\n                    const minCount = (() => {\r\n                        switch (classId) {\r\n                            case '13':\r\n                                return minCountResult.data[0].minGPCount;\r\n                            case '14':\r\n                                return minCountResult.data[0].minPACount;\r\n                            default:\r\n                                return 0;\r\n                        }\r\n                    });\r\n\r\n                    newWbcDataArr.push({\r\n                        CD_NM: fullNm,\r\n                        IA_CD: classId,\r\n                        LIS_CD: key,\r\n                        MIN_COUNT: minCount,\r\n                    });\r\n                }\r\n                lisCodeWbcArr = newWbcDataArr;\r\n            }\r\n            if (rbcData) {\r\n                const newRbcDataArr = [];\r\n                for (const rbcDataItem of rbcData) {\r\n                    newRbcDataArr.push({\r\n                        CATEGORY_NM: rbcDataItem.categoryNm,\r\n                        CLASS_NM: rbcDataItem?.fullNm,\r\n                        IA_CATEGORY_CD: rbcDataItem?.categoryId,\r\n                        IA_CLASS_CD: rbcDataItem?.classId,\r\n                        LIS_CD: rbcDataItem?.key,\r\n                    })\r\n                }\r\n                lisCodeRbcArr = newRbcDataArr;\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n    return {lisCodeWbcArr, lisCodeRbcArr}\r\n};\r\n\r\nexport const getLisPathData = async () => {\r\n    let lisFilePathSetArr = '';\r\n    let lisHotKey = '';\r\n    try {\r\n        const result = await getFilePathSetApi();\r\n        if (result && result.data && result.data.length !== 0) {\r\n            lisFilePathSetArr = result.data[0].lisFilePath;\r\n            lisHotKey = result.data[0].lisHotKey;\r\n        }\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n\r\n    return {lisFilePathSetArr, lisHotKey};\r\n};\r\nexport const getCbcPathData = async () => {\r\n    let cbcFilePathSetArr = '';\r\n    try {\r\n        const result = await getFilePathSetApi();\r\n\r\n        if (result && result.data) {\r\n            const data = result?.data;\r\n            cbcFilePathSetArr = data[0]?.cbcFilePath;\r\n        }\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n    return cbcFilePathSetArr;\r\n};\r\n\r\nexport const getCbcCodeList = async () => {\r\n    let cbcCodeList: any = [];\r\n    try {\r\n        const result = await getCbcCodeRbcApi();\r\n        if (result && result.data) {\r\n            cbcCodeList = result.data;\r\n        }\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n    return cbcCodeList;\r\n};","export const sdCbcAutoMatiching = (data: any, sex: any, age: any) => {\r\n    const MCV = parseFloat(data.find((item: any) => item.classNm === 'MCV')?.count);\r\n    const MCHC = parseFloat(data.find((item: any) => item.classNm === 'MCHC')?.count);\r\n    const Hb = parseFloat(data.find((item: any) => item.classNm === 'HGB')?.count);\r\n    const WBC = parseFloat(data.find((item: any) => item.classNm === 'WBC')?.count);\r\n    const PLT = parseFloat(data.find((item: any) => item.classNm === 'PLT')?.count);\r\n    const EOSINO = parseFloat(data.find((item: any) => item.classNm === 'EO')?.count);\r\n    const NEUTRO = parseFloat(data.find((item: any) => item.classNm === 'NEUT')?.count);\r\n    const LYMPHO = parseFloat(data.find((item: any) => item.classNm === 'LYMPH')?.count);\r\n    const MONO = parseFloat(data.find((item: any) => item.classNm === 'MONO')?.count);\r\n    const RBC = parseFloat(data.find((item: any) => item.classNm === 'RBC')?.count);\r\n    const returnArr = [];\r\n\r\n    // Normocytic normochromic anemia\r\n    if ((sex === 'F' && Hb <= 10.9) || (sex === 'M' && Hb <= 12.4)) {\r\n        if (EOSINO >= 0.51) {\r\n            returnArr.push({code: \"NNA, Eosinophilia\"});\r\n        }\r\n        if (WBC >= 10.1) {\r\n            if (PLT <= 451) {\r\n                returnArr.push({code: \"NNA, WBC(H), PLT(H)\"});\r\n            } else {\r\n                returnArr.push({code: \"NNA, WBC(H)\"});\r\n            }\r\n        } else if (WBC <= 3.9) {\r\n            returnArr.push({code: \"NNA, WBC(L)\"});\r\n        } else if (PLT >= 451) {\r\n            returnArr.push({code: \"NNA, PLT(H)\"});\r\n        } else if (PLT <= 149) {\r\n            returnArr.push({code: \"NNA, PLT(L)\"});\r\n        } else {\r\n            returnArr.push({code: \"Normocytic normochromic anemia\"});\r\n        }\r\n    }else {\r\n        // WBC(L)\r\n        if (WBC < 3.9) {\r\n            returnArr.push({code: \"WBC(L)\"});\r\n        }\r\n\r\n        // WBC(L), PLT(L)\r\n        if (WBC < 3.9 && PLT < 149) {\r\n            returnArr.push({code: \"WBC(L), PLT(L)\"});\r\n        }\r\n\r\n        // PLT(L)\r\n        if (PLT < 149) {\r\n            returnArr.push({code: \"PLT(L)\"});\r\n        }\r\n\r\n        // PLT(H), mild\r\n        if (PLT > 451) {\r\n            returnArr.push({code: \"PLT(H), mild\"});\r\n        }\r\n        if (WBC >= 10.1) {\r\n            if (PLT <= 451) {\r\n                returnArr.push({code: \"WBC(H), PLT(H)\"});\r\n            } else {\r\n                returnArr.push({code: \"WBC(H)\"});\r\n            }\r\n        }\r\n    }\r\n\r\n    // Iron deficiency anemia\r\n    if ((sex === 'F' && Hb <= 10.9) || (sex === 'M' && Hb <= 12.4)) {\r\n        if (MCV <= 79.9 && MCHC <= 32.4) {\r\n            if (PLT <= 149 && WBC <= 3.9) {\r\n                returnArr.push({code: 'IDA, WBC(L), PLT(H)'});\r\n            }\r\n            if (WBC >= 10.1) {\r\n                returnArr.push({code: \"IDA, WBC(H)\"});\r\n            } else if (WBC <= 3.9) {\r\n                returnArr.push({code: \"IDA, WBC(L)\"});\r\n            } else if (PLT >= 451) {\r\n                returnArr.push({code: \"IDA, PLT(H)\"});\r\n            } else if (PLT <= 149) {\r\n                returnArr.push({code: \"IDA, PLT(L)\"});\r\n            } else {\r\n                returnArr.push({code: \"Iron deficiency anemia\"});\r\n            }\r\n        }\r\n    }\r\n\r\n    // Iron depleted state\r\n    if (MCV <= 79.9 && MCHC <= 32.4) {\r\n        returnArr.push({code: \"Iron depleted state\"});\r\n    }\r\n\r\n    // Macrocytic anemia\r\n    if (MCV >= 105.1) {\r\n        if (WBC > 10.1) {\r\n            returnArr.push({code: \"M.A, WBC(H)\"});\r\n        } else if (PLT < 149) {\r\n            returnArr.push({code: \"M.A, PLT(L)\"});\r\n        } else {\r\n            returnArr.push({code: \"Macrocytic anemia\"});\r\n        }\r\n    }\r\n\r\n    // RBC(H), Hb(H)\r\n    if ((sex === 'F' && RBC >= 5.21) || (sex === 'M' && RBC >= 5.81)) {\r\n        if ((sex === 'F' && Hb >= 16.1) || (sex === 'M' && Hb >= 16.6)) {\r\n            returnArr.push({code: \"RBC(H),Hb(H)\"});\r\n        }\r\n    }\r\n\r\n    // Neutrophilia\r\n    if (WBC > 10.1 && NEUTRO > 8.51) {\r\n        returnArr.push({code: \"Neutrophilia\"});\r\n    }\r\n\r\n    // Lymphocytosis\r\n    if ((Number(age) > 12 && LYMPHO > 4.01) || (Number(age) <= 12 && LYMPHO > 9.01)) {\r\n        returnArr.push({code: \"Lymphocytosis\"});\r\n    }\r\n\r\n    // Lymphocytopenia\r\n    if (LYMPHO < 1.49) {\r\n        returnArr.push({code: \"Lymphocytopenia\"});\r\n    }\r\n\r\n    // Eosinophilia\r\n    if (EOSINO > 0.51) {\r\n        returnArr.push({code: \"Eosinophilia\"});\r\n    }\r\n\r\n    // Monocytosis\r\n    if (MONO > 1.1) {\r\n        returnArr.push({code: \"Monocytosis\"});\r\n    }\r\n\r\n    // Pancytopenia\r\n    if ((sex === 'F' && Hb <= 10.9) || (sex === 'M' && Hb <= 12.4)) {\r\n        if (WBC < 3.9 && PLT < 149) {\r\n            returnArr.push({code: \"Pancytopenia, mild\"});\r\n        }\r\n    }\r\n\r\n    // Chronic inflammation\r\n    if (WBC > 10.1) {\r\n        returnArr.push({code: \"Chronic inflammation\"});\r\n    }\r\n\r\n    return returnArr;\r\n};\r\n","import {getFolders} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {readFileEUCKR, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getCbcPathData} from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\nimport {sdCbcAutoMatiching} from \"@/common/defines/constants/autoResultCodeMatching\";\r\n\r\ninterface CBCDataItem {\r\n    classNm: string;\r\n    count: string;  // count는 숫자로 변환 필요\r\n    unit: string;\r\n}\r\n\r\ninterface WBCInfoAfter {\r\n    id: string;\r\n    name: string;\r\n    count: string;  // count는 숫자로 변환 필요\r\n    title: string;\r\n    images: string[];\r\n    percent: string; // percent도 숫자로 변환 필요\r\n}\r\n\r\n\r\n\r\nexport const cbcFileNameExtract = async (barcodeNo: string) => {\r\n    const cbcFilePathSetArr = await getCbcPathData();\r\n\r\n    const foldersPath = `folderPath=${cbcFilePathSetArr}`;\r\n    const cbcDataArr = await getFolders(foldersPath);\r\n    let filterCbcDataArr: any = [];\r\n    if (Array.isArray(cbcDataArr)) {\r\n        filterCbcDataArr = cbcDataArr.filter((item) => {\r\n            return item.split('_')[0] === barcodeNo\r\n        });\r\n    }\r\n    if (filterCbcDataArr.length === 0) {\r\n        return;\r\n    }\r\n    const latestFile = filterCbcDataArr.reduce((latest: any, currentFile: any) => {\r\n        const currentDate: any = parseDateString(currentFile);\r\n        const latestDate: any = parseDateString(latest);\r\n        return currentDate > latestDate ? currentFile : latest;\r\n    });\r\n    return `${latestFile.split('.')[0]}`;\r\n}\r\n\r\nexport const parseDateString = (dateString: any) => {\r\n    // 날짜 문자열에서 날짜 부분 추출 (예: 20241024)\r\n    // 파일명에서 언더바 뒤에 오는 날짜 추출 (YYYY-MM-DD 또는 YYYYMMDD 형식)\r\n    const dateMatch = dateString.match(/_(\\d{4}-\\d{2}-\\d{2}|\\d{8})/);\r\n    if (!dateMatch) return null;\r\n\r\n    let rawDate = dateMatch[1];  // 매칭된 날짜 문자열\r\n\r\n    if (!rawDate.includes('-')) {\r\n        rawDate = `${rawDate.substring(0, 4)}-${rawDate.substring(4, 6)}-${rawDate.substring(6, 8)}`;\r\n    }\r\n\r\n    return new Date(rawDate);\r\n}\r\n\r\nexport function isAutoCBCMatching(cbcData: CBCDataItem[], cbcSex: string, cbcAge: string): any {\r\n    return sdCbcAutoMatiching(cbcData, cbcSex, cbcAge);\r\n}\r\n\r\nexport function isAdultNormalCBC(cbcData: CBCDataItem[], wbcInfoAfter: WBCInfoAfter[], rbcInfoAfter: any, cbcSex: string, cbcAge: string): any {\r\n    // console.log(cbcData)\r\n    const newRbcArr = [];\r\n    for (const result of rbcInfoAfter) {\r\n        newRbcArr.push(...result.classInfo);\r\n    }\r\n\r\n    const results: object[] = [];\r\n    const rbcNormalRanges: { [key: string]: [number, number] } = {\r\n        'Spherocyte': [0, 5.0],\r\n        'Ovalocyte': [0, 5.0],\r\n        'TearDropCell': [0, 5.0],\r\n        'Acanthocyte': [0, 5.0],\r\n        'Target Cell': [0, 5.0],\r\n        'Schistocyte': [0, 1],\r\n        'Howell-Jolly Body': [0, 2],\r\n    };\r\n\r\n    for (const item of newRbcArr) {\r\n        const value = parseFloat(item.percent);\r\n        const normalRange = rbcNormalRanges[item.classNm];\r\n\r\n        if (normalRange && (value < normalRange[0] || value > normalRange[1])) {\r\n            results.push({\r\n                classNm: item.classNm,\r\n                value: value,\r\n                normalRangeFirst: normalRange[0],\r\n                normalRangeLast: normalRange[1]\r\n            })\r\n        }\r\n    }\r\n\r\n    // CBC 데이터 검사\r\n    const cbcNormalRanges: { [key: string]: [number, number] } = {\r\n        'WBC': [4.0, 10.0],\r\n        'RBC': [3.7, 5.2], // Female\r\n        'HGB': [11.0, 16.0], // Female\r\n        'HCT': [32.0, 44.0], // Female\r\n        'MCV': [80.0, 105.0],\r\n        'MCHC': [32.5, 36.0],\r\n        'RDWCV': [0, 15.0], // Female\r\n        'PLT': [150, 450], // Female\r\n        'RET': [0, 5],\r\n    };\r\n\r\n    if (cbcSex === 'M') {\r\n        cbcNormalRanges['RBC'] = [4.0, 5.8];\r\n        cbcNormalRanges['HGB'] = [12.5, 16.5];\r\n        cbcNormalRanges['HCT'] = [40.0, 52.0];\r\n    }\r\n    for (const item of cbcData) {\r\n        const value = parseFloat(item.count);\r\n        const normalRange = cbcNormalRanges[item.classNm];\r\n\r\n        if (normalRange && (value < normalRange[0] || value > normalRange[1])) {\r\n            // results.push(`${item.classNm} 값이 비정상입니다: ${value} (정상 범위: ${normalRange[0]} - ${normalRange[1]})`);\r\n            results.push({\r\n                classNm: item.classNm,\r\n                value: value,\r\n                normalRangeFirst: normalRange[0],\r\n                normalRangeLast: normalRange[1]\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // WBC 정보 검사\r\n    const wbcNormalRanges: { [key: string]: [number, number] } = {\r\n        'NB': [0, 6],\r\n        'LR': [0, 10],\r\n    };\r\n\r\n    for (const info of wbcInfoAfter) {\r\n        const percent = parseFloat(info.percent);\r\n        const normalRange = wbcNormalRanges[info.title] || [0, 10]; // 기본값 설정\r\n\r\n        if (percent < normalRange[0] || percent > normalRange[1]) {\r\n            // results.push(`${info.title} 값이 비정상입니다: ${percent} (정상 범위: ${normalRange[0]} - ${normalRange[1]})`);\r\n            results.push({\r\n                classNm: info.title,\r\n                value: percent,\r\n                normalRangeFirst: normalRange[0],\r\n                normalRangeLast: normalRange[1]\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    return results;\r\n}\r\n\r\nexport const cbcDataGet = async (barcodeNo: string, cbcCodeList: any) => {\r\n    const fileNm = await cbcFileNameExtract(barcodeNo);\r\n    const path = await getCbcPathData();\r\n    const readFileTxtRes: any = await readFileEUCKR(`path=${path}&filename=${fileNm}`);\r\n    const cbcData: any = [];\r\n    let cbcSex = ''\r\n    let cbcAge = '';\r\n    if (readFileTxtRes.data.success) {\r\n\r\n        const msg: any = await readH7File(readFileTxtRes.data.data);\r\n        msg?.data?.segments?.forEach((cbcSegment: any) => {\r\n            const classCd = cbcSegment?.fields?.[2]?.value?.[0]?.[0]?.value?.[0];\r\n            const count = cbcSegment?.fields?.[4]?.value?.[0]?.[0]?.value?.[0] || \"0\";\r\n            const unit = cbcSegment?.fields?.[2]?.value?.[0]?.[0]?.value?.[0].match(/%/g)?.[0] || \"\";\r\n            const sanitizedClassCd = classCd ? classCd.replace(/[^\\w\\s]/gi, '') : '';\r\n\r\n            if (cbcSegment.name.trim() === 'OBX') {\r\n                const obj = {\r\n                    classNm: sanitizedClassCd,\r\n                    count: count,\r\n                    unit: unit\r\n                }\r\n                cbcData.push(obj)\r\n            } else if (cbcSegment.name.trim() === 'PID') {\r\n                cbcSex = cbcSegment?.fields[6].value[0][0].value[0]\r\n                cbcAge = cbcSegment?.fields[7].value[0][0].value[0];\r\n            }\r\n        })\r\n    }\r\n    return {cbcData: cbcData, cbcSex: cbcSex, cbcAge: cbcAge};\r\n}","import {getCbcPathData} from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\nimport {readCustomH7Message, readFileEUCKR, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\nimport axios from \"axios\";\r\nimport {cbcFileNameExtract} from \"@/common/helpers/lisCbc/index\";\r\n\r\nexport const lisSendSD = async (barcodeNo: string, nowCrcData: any, lisFilePathSetArr: string) => {\r\n    const fileNm = await cbcFileNameExtract(barcodeNo);\r\n    const path = await getCbcPathData();\r\n    const readFileTxtRes: any = await readFileEUCKR(`path=${path}&filename=${fileNm}`);\r\n    let patientId = '';\r\n    let patientName = '';\r\n    if (readFileTxtRes.data.success) {\r\n        const msg: any = await readH7File(readFileTxtRes.data.data);\r\n        msg?.data?.segments?.forEach((cbcSegment: any) => {\r\n            if (cbcSegment.name.trim() === 'PID') {\r\n                patientId = cbcSegment.fields[2].value[0][0].value[0]\r\n                patientName = cbcSegment.fields[4].value[0][0].value[0]\r\n            }\r\n        })\r\n    }\r\n    const data = {\r\n        sendingApp: 'PBIA',\r\n        sendingFacility: 'PBIA',\r\n        receivingApp: 'LIS',\r\n        receivingFacility: 'LIS',\r\n        dateTime: getDateTimeStr(),\r\n        security: '',\r\n        messageType: ['ADT', 'R02'],\r\n        messageControlId: barcodeNo,\r\n        processingId: 'P',\r\n        hl7VersionId: '2.5',\r\n        customData: nowCrcData,\r\n        pidData: {patientId: patientId, patientName: patientName},\r\n    };\r\n    const res = await readCustomH7Message(data);\r\n    if (res) {\r\n        return await lisHttpSendSD(res, barcodeNo, lisFilePathSetArr);\r\n    }\r\n}\r\n\r\nconst lisHttpSendSD = async (resultStr: any, barcodeNo: string, lisFilePathSetArr: string) => {\r\n    const body = {\r\n        apiKey: 'M0ZGODgyREY4NzUxMkY4RTM0MERDRkMyRkQ1MDM3OEU=',\r\n        interfaceId: '01',\r\n        dataText: resultStr.data,\r\n    };\r\n\r\n    const res = await axios.post(`${lisFilePathSetArr}`, body, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    if (res?.data.code === 200) {\r\n        return 'Success';\r\n    } else {\r\n        return 'Lis Send Fail';\r\n    }\r\n}\r\n\r\n\r\nexport const sdWorklistsAPI = async (date: any) => {\r\n    const body = {\r\n        apiKey: 'M0ZGODgyREY4NzUxMkY4RTM0MERDRkMyRkQ1MDM3OEU=',\r\n        interfaceId: '01',\r\n        workDate: date,\r\n    };\r\n\r\n    const res = await axios.post(`http://121.169.55.132:8081/api/interface/worklists`, body, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    if (res?.data.code === 200) {\r\n        return {data: res?.data, code: res?.data.code};\r\n    } else {\r\n        return {data: null, code: res?.data.code};\r\n    }\r\n}\r\n\r\nexport const sdPatientNameGetAPI = async (reqNoList: string[], workDateStart: string, workDateEnd: string) => {\r\n    const body = {\r\n        apiKey: 'M0ZGODgyREY4NzUxMkY4RTM0MERDRkMyRkQ1MDM3OEU=',\r\n        interfaceId: '01',\r\n        reqNoList: reqNoList ?? [],\r\n        workDateStart: workDateStart,\r\n        workDateEnd: workDateEnd,\r\n    }\r\n\r\n    const res = await axios.post(`http://121.169.55.132:8081/api/interface/patnames`, body, {\r\n        headers: { 'Content-Type': 'application/json' }\r\n    })\r\n    if (res?.data.code === 200) return { data: res?.data, code: res?.data.code };\r\n    return { data: null, code: res?.data.code };\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"popup-modal-overlay\"\n}\nconst _hoisted_2 = { class: \"popup-modal-content\" }\nconst _hoisted_3 = { class: \"popup-modal-header\" }\nconst _hoisted_4 = { class: \"popup-modal-body\" }\nconst _hoisted_5 = { class: \"popup-data-table\" }\n\nimport { ref, watch } from 'vue';\r\nimport Datepicker from 'vue3-datepicker';\r\n\r\nimport moment from \"moment/moment\";\r\nimport {sdWorklistsAPI} from \"@/common/helpers/lisCbc/sdCbcLis\";\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  workList: any[];\r\n}\r\n\r\ninterface Emits {\r\n  (e: 'update:isOpen', value: boolean): void;\r\n}\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'PopupTable',\n  props: {\n    isOpen: { type: Boolean },\n    workList: {}\n  },\n  emits: [\"update:isOpen\"],\n  setup(__props: any, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst emit = __emit;\r\nconst workListValue = ref<any>([]);\r\nconst workListShowValue = ref<any>([]);\r\nconst datepicker = ref(null);\r\nconst selectedDate = ref(new Date());\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\nwatch(() => props.workList, (newWorkList) => {\r\n  workListValue.value = newWorkList;\r\n})\r\n\r\nwatch(() => selectedDate.value, async (newVal: any, prevVal: any) => {\r\n  const formattedDate = moment(newVal).format('YYYY-MM-DD');\r\n  const { data, code } = await sdWorklistsAPI(formattedDate);\r\n\r\n  if (Number(code) === 200) {\r\n    workListValue.value = data;\r\n  } else {\r\n    await showSuccessAlert('불러오기에 실패했습니다');\r\n  }\r\n})\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n};\r\nconst dateFormat = (date: Date): string => {\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\nconst handleClose = () => {\r\n  emit('update:isOpen', false);\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_ctx.isOpen)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createVNode(_unref(Datepicker), {\n              modelValue: selectedDate.value,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedDate).value = $event)),\n              format: dateFormat,\n              class: \"date-picker\",\n              ref_key: \"datepicker\",\n              ref: datepicker\n            }, null, 8, [\"modelValue\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"table\", _hoisted_5, [\n              _cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [\n                _createElementVNode(\"tr\", { style: {\"position\":\"sticky\",\"top\":\"0\"} }, [\n                  _createElementVNode(\"th\", null, \"No.\"),\n                  _createElementVNode(\"th\", null, \"접수일자\"),\n                  _createElementVNode(\"th\", null, \"검사일자\"),\n                  _createElementVNode(\"th\", null, \"접수번호\"),\n                  _createElementVNode(\"th\", null, \"결과코드\"),\n                  _createElementVNode(\"th\", null, \"환자명\"),\n                  _createElementVNode(\"th\", null, \"검사여부\")\n                ])\n              ], -1)),\n              _createElementVNode(\"tbody\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(workListShowValue.value, (item, index) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                    _createElementVNode(\"td\", null, _toDisplayString(index + 1), 1),\n                    _createElementVNode(\"td\", null, _toDisplayString(item.reqDate), 1),\n                    _createElementVNode(\"td\", null, _toDisplayString(item.testDate), 1),\n                    _createElementVNode(\"td\", null, _toDisplayString(item.receiptNo), 1),\n                    _createElementVNode(\"td\", null, _toDisplayString(item.resultCode), 1),\n                    _createElementVNode(\"td\", null, _toDisplayString(item.patientName), 1),\n                    _createElementVNode(\"td\", null, _toDisplayString(item.testYn), 1)\n                  ]))\n                }), 128))\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", { class: \"popup-modal-footer\" }, [\n            _createElementVNode(\"button\", {\n              class: \"popup-btn-close\",\n              onClick: handleClose\n            }, \" CLOSE \")\n          ])\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\r\n  <div v-if=\"isOpen\" class=\"popup-modal-overlay\">\r\n    <div class=\"popup-modal-content\">\r\n      <div class=\"popup-modal-header\">\r\n        <Datepicker\r\n          v-model=\"selectedDate\"\r\n          :format=\"dateFormat\"\r\n          class=\"date-picker\"\r\n          ref=\"datepicker\"\r\n      />\r\n      </div>\r\n\r\n      <div class=\"popup-modal-body\">\r\n        <table class=\"popup-data-table\">\r\n          <thead>\r\n          <tr style=\"position: sticky; top:0;\">\r\n            <th>No.</th>\r\n            <th>접수일자</th>\r\n            <th>검사일자</th>\r\n            <th>접수번호</th>\r\n            <th>결과코드</th>\r\n            <th>환자명</th>\r\n            <th>검사여부</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr v-for=\"(item, index) in workListShowValue\" :key=\"index\">\r\n            <td>{{ index + 1 }}</td>\r\n            <td>{{ item.reqDate }}</td>\r\n            <td>{{ item.testDate }}</td>\r\n            <td>{{ item.receiptNo }}</td>\r\n            <td>{{ item.resultCode }}</td>\r\n            <td>{{ item.patientName }}</td>\r\n            <td>{{ item.testYn }}</td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div class=\"popup-modal-footer\">\r\n        <button\r\n            class=\"popup-btn-close\"\r\n            @click=\"handleClose\"\r\n        >\r\n          CLOSE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, watch } from 'vue';\r\nimport Datepicker from 'vue3-datepicker';\r\n\r\ninterface Props {\r\n  isOpen: boolean;\r\n  workList: any[];\r\n}\r\n\r\ninterface Emits {\r\n  (e: 'update:isOpen', value: boolean): void;\r\n}\r\n\r\nconst props = defineProps<Props>();\r\nconst emit = defineEmits<Emits>();\r\nconst workListValue = ref<any>([]);\r\nconst workListShowValue = ref<any>([]);\r\nconst datepicker = ref(null);\r\nconst selectedDate = ref(new Date());\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\nimport moment from \"moment/moment\";\r\nimport {sdWorklistsAPI} from \"@/common/helpers/lisCbc/sdCbcLis\";\r\n\r\nwatch(() => props.workList, (newWorkList) => {\r\n  workListValue.value = newWorkList;\r\n})\r\n\r\nwatch(() => selectedDate.value, async (newVal: any, prevVal: any) => {\r\n  const formattedDate = moment(newVal).format('YYYY-MM-DD');\r\n  const { data, code } = await sdWorklistsAPI(formattedDate);\r\n\r\n  if (Number(code) === 200) {\r\n    workListValue.value = data;\r\n  } else {\r\n    await showSuccessAlert('불러오기에 실패했습니다');\r\n  }\r\n})\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n};\r\nconst dateFormat = (date: Date): string => {\r\n  return date.toISOString().split('T')[0];\r\n};\r\n\r\nconst handleClose = () => {\r\n  emit('update:isOpen', false);\r\n};\r\n</script>","import script from \"./PopupTable.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./PopupTable.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, withModifiers as _withModifiers, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createVNode as _createVNode, vModelText as _vModelText, withKeys as _withKeys, unref as _unref, vShow as _vShow, Fragment as _Fragment, toDisplayString as _toDisplayString, renderList as _renderList, vModelCheckbox as _vModelCheckbox, KeepAlive as _KeepAlive } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"loaderBackgroundForLogin\"\n}\nconst _hoisted_2 = { class: \"titleH3\" }\nconst _hoisted_3 = { class: \"listBoxTable\" }\nconst _hoisted_4 = { class: \"filterListDiv\" }\nconst _hoisted_5 = { class: \"search-container\" }\nconst _hoisted_6 = { class: \"settingDatePickers\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"filterDivBox\"\n}\nconst _hoisted_8 = {\n  key: 0,\n  class: \"nrCount\"\n}\nconst _hoisted_9 = { class: \"wbcTotal\" }\nconst _hoisted_10 = { class: \"wbcInfoFilter\" }\nconst _hoisted_11 = { class: \"wbcInfoFilter\" }\nconst _hoisted_12 = [\"id\", \"onUpdate:modelValue\"]\nconst _hoisted_13 = [\"for\"]\nconst _hoisted_14 = { class: \"lastTestType\" }\nconst _hoisted_15 = [\"checked\"]\nconst _hoisted_16 = [\"checked\"]\nconst _hoisted_17 = [\"checked\"]\nconst _hoisted_18 = [\"checked\"]\nconst _hoisted_19 = [\"checked\"]\nconst _hoisted_20 = [\"checked\"]\nconst _hoisted_21 = { class: \"listBox\" }\n\nimport ListTable from \"@/views/datebase/commponent/list/listTable.vue\";\r\nimport ListInfo from \"@/views/datebase/commponent/list/listInfo.vue\";\r\nimport ListWbcImg from \"@/views/datebase/commponent/list/listWbcImg.vue\";\r\nimport {\r\n  computed,\r\n  getCurrentInstance,\r\n  onBeforeMount,\r\n  onBeforeUnmount,\r\n  onMounted,\r\n  ref,\r\n} from \"vue\";\r\nimport {\r\n  detailRunningApi,\r\n  getRunningApi,\r\n  removePageAllDataApi,\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport moment from \"moment/moment\";\r\nimport Datepicker from \"vue3-datepicker\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport ListBmImg from \"@/views/datebase/commponent/list/listBmImg.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {executeExcelCreate} from \"@/common/api/service/excel/excelApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from \"pako\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useRouter} from \"vue-router\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport PopupTable from \"@/components/commonUi/PopupTable.vue\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport {RBC_CODE_CLASS_ID, SHOWING_RBC_SHAPE_CLASS_IDS} from \"@/common/defines/constants/dataBase\";\r\nimport {sdPatientNameGetAPI, sdWorklistsAPI} from \"@/common/helpers/lisCbc/sdCbcLis\";\r\nimport {isObjectEmpty} from \"@/common/lib/utils/validators\";\r\nimport { WbcInfo } from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport { DIR_NAME } from \"@/common/defines/constants/settings\";\r\n\r\n\r\nconst bufferDelay = 100; // 입력 완료 감지 지연 시간 (ms)\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst dbGetData = ref<any[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\n\r\nconst today = new Date();\r\nconst thirtyDaysAgo = new Date(today);\r\nthirtyDaysAgo.setDate(today.getDate() - 29);\r\n\r\nconst startDate = ref(thirtyDaysAgo);\r\nconst endDate = ref(new Date());\r\nconst searchText = ref('');\r\nconst searchType = ref('barcodeNo');\r\nconst page = ref(1);\r\nconst prevPage = ref(1);\r\nconst selectedItem = ref<any>({});\r\nconst titleItem = ref<any>([]);\r\nconst titleItemArr = ref([]);\r\nconst nrCount = ref(0);\r\nconst testType = ref('00');\r\nconst wbcCountOrder = ref('all');\r\nconst classListToggle = ref(false);\r\nconst bmClassIsBoolen = ref(false);\r\nconst instance = getCurrentInstance();\r\nconst prevDataPage = ref('');\r\nconst reqDataPrev = ref('');\r\nconst checkedSelectedItems = ref<any>([]);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst eventTriggered = ref(false);\r\nconst loadingDelayParents = ref(false);\r\nconst selectedItemIdFalse = ref(false);\r\nconst notStartLoading = ref(false);\r\nconst barcodeInput = ref<HTMLInputElement | null>(null);\r\nconst isPrintingExcel = ref(false);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst shapeOthersCount = ref(0);\r\n\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst rbcInfoAfterVal = ref<any>([]);\r\nconst rbcInfoBeforeVal = ref<any>([]);\r\nconst inputTimeout = ref<any>(null);\r\nconst inputBuffer = ref('');\r\nconst showPopupTable = ref(false);\r\nconst workList = ref({});\r\nconst previousValue = ref('');\r\nlet lastInputTime = Date.now();\r\nconst isBarcodeScannerInput = { value: false };\r\n\r\n\r\nonBeforeMount(async () => {\r\n  bmClassIsBoolen.value = window.PROJECT_TYPE === 'bm';\r\n})\r\n\r\nonMounted(async () => {\r\n  if (!eventTriggered.value) {\r\n    await initDbData();\r\n    // loadingDelayParents.value = true;\r\n  }\r\n\r\n  document.addEventListener('click', closeClassListBox);\r\n  if (barcodeInput.value) {\r\n    barcodeInput.value.focus();\r\n  }\r\n\r\n  notStartLoading.value = true;\r\n  instance?.appContext.config.globalProperties.$socket.on('stateVal', handleStateVal);\r\n  document.addEventListener('keydown', handleGlobalKeydown);\r\n\r\n});\r\n\r\nasync function handleStateVal(data: any) {\r\n  eventTriggered.value = true;\r\n  notStartLoading.value = false;\r\n  await removePageAllDataApi();\r\n  await initDbData();\r\n}\r\n\r\nconst setDateToday = () => {\r\n  startDate.value = new Date();\r\n  endDate.value = new Date();\r\n  search();\r\n}\r\n\r\n// 이벤트 핸들러 함수\r\nconst handleInput = (event: any) => {\r\n  if (!event.data) return;\r\n\r\n  // 현재 입력 시간\r\n  const currentTime = Date.now();\r\n\r\n  // 현재 입력과 마지막 입력 사이의 시간 차이 계산\r\n  const timeDiff = currentTime - lastInputTime;\r\n\r\n  // 바코드 리더기에서 입력된 것인지 확인 (시간 차이가 50ms 이하이면 바코드 리더기에서 입력된 것으로 간주)\r\n  if (timeDiff < 50) {\r\n    isBarcodeScannerInput.value = true;\r\n  } else {\r\n    isBarcodeScannerInput.value = false;\r\n  }\r\n\r\n  // 마지막 입력 시간을 현재 시간으로 업데이트\r\n  lastInputTime = currentTime;\r\n\r\n  // 바코드 리더기 입력이 아니면 이벤트 종료\r\n  if (!isBarcodeScannerInput.value) {\r\n    return;\r\n  }\r\n\r\n  // 입력 버퍼에 추가된 문자\r\n  inputBuffer.value += event.data;\r\n\r\n  // 이전 타이머가 설정되어 있으면 클리어\r\n  if (inputTimeout.value) {\r\n    clearTimeout(inputTimeout.value);\r\n  }\r\n\r\n  // 새로운 타이머 설정\r\n  inputTimeout.value = setTimeout(() => {\r\n    // 입력 완료로 간주\r\n    const trimmedValue = inputBuffer.value.trim();\r\n\r\n    // 입력된 값과 이전 값이 다를 때만 업데이트\r\n    if (trimmedValue !== previousValue.value) {\r\n      searchText.value = trimmedValue;\r\n      previousValue.value = trimmedValue;\r\n    }\r\n\r\n    // search버퍼 초기화\r\n    inputBuffer.value = '';\r\n    search();\r\n  }, bufferDelay);\r\n};\r\n\r\nconst openCheckList = async () => {\r\n  const formattedDate = moment(today).format('YYYY-MM-DD');\r\n  const { data, code } = await sdWorklistsAPI(formattedDate);\r\n  if (Number(code) === 200) {\r\n    workList.value = data;\r\n    showPopupTable.value = true;\r\n  } else {\r\n    await showSuccessAlert('불러오기에 실패했습니다');\r\n  }\r\n}\r\n\r\n\r\nconst handleGlobalKeydown = (event: any) => {\r\n  if (router.currentRoute.value.path === '/dataBase') {\r\n    if (event.key === 'Enter' || event.key === 'Tab') {\r\n      setTimeout(() => {\r\n        if (barcodeInput.value) {\r\n          barcodeInput.value.focus();\r\n          searchText.value = searchText.value.trim();\r\n          const trimmedValue = searchText.value.trim();\r\n          if (trimmedValue !== previousValue.value) {\r\n            // 입력된 값과 이전 값이 다를 때만 업데이트\r\n            previousValue.value = trimmedValue;\r\n          }\r\n        }\r\n      }, 10); // 아주 짧은 지연을 주어 바코드 리더기가 입력을 시작할 수 있도록 함\r\n\r\n    }\r\n  }\r\n};\r\n\r\nconst handleEnter = () => {\r\n  if (barcodeInput.value) {\r\n    search();\r\n  }\r\n};\r\n\r\nonBeforeUnmount(() => {\r\n  // instance?.appContext.config.globalProperties.$socket.off('stateVal', handleStateVal);\r\n  document.removeEventListener('click', closeClassListBox);\r\n});\r\n\r\nconst closeClassListBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.filterDivBox');\r\n  const selectButton = document.querySelector('.classificationListBtn');\r\n  if (selectButton && selectButton.contains(event.target as Node)) return;\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    classListToggle.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\nconst classListToggleEvent = () => {\r\n  classListToggle.value = !classListToggle.value;\r\n}\r\nconst changeTestType = (value: any) => {\r\n  testType.value = testType.value === value ? '' : value;\r\n}\r\n\r\nconst updateFilter = () => {\r\n  const selectedItems = titleItem.value?.filter((item: any) => item.checked).map((item: any) => item.title);\r\n  titleItemArr.value = selectedItems ?? [];\r\n}\r\n\r\nconst initDbData = async () => {\r\n  // 이전 조회 결과 및 검색 조건 불러오기\r\n  loadingDelayParents.value = true;\r\n  // const lastQuery = loadLastQuery();\r\n  const lastSearchParams = loadLastSearchParams();\r\n  // 이전 검색 조건 적용\r\n  if (!isObjectEmpty(lastSearchParams)) {\r\n    page.value = lastSearchParams.page || 1;\r\n    searchType.value = lastSearchParams.searchType || 'barcodeNo';\r\n    searchText.value = lastSearchParams.searchText || '';\r\n    startDate.value = new Date(lastSearchParams.startDate) || new Date();\r\n    endDate.value = new Date(lastSearchParams.endDate) || new Date();\r\n    nrCount.value = lastSearchParams.nrCount;\r\n    wbcCountOrder.value = lastSearchParams.wbcTotal;\r\n    testType.value = lastSearchParams.testType;\r\n    titleItemArr.value = lastSearchParams.wbcInfo ?? [];\r\n    titleItem.value = titleItem.value.map((item: WbcInfo) => {\r\n      if (lastSearchParams.wbcInfo.includes(item.title)) {\r\n        return {...item, checked: true }\r\n      }\r\n      return item;\r\n    })\r\n    await getDbData('search');\r\n  } else {\r\n    await getDbData('mounted', 1);\r\n  }\r\n}\r\n\r\nconst selectItem = async (item: any) => {\r\n  selectedItem.value = item;\r\n};\r\n\r\nconst saveLastSearchParams = () => {\r\n  const lastSearchParams = {\r\n    page: page.value,\r\n    prevPage: prevPage.value,\r\n    searchType: searchType.value,\r\n    searchText: searchText.value,\r\n    startDate: formatDate(startDate.value),\r\n    endDate: formatDate(endDate.value),\r\n    nrCount: nrCount.value,\r\n    wbcTotal: wbcCountOrder.value,\r\n    wbcInfo: titleItemArr.value,\r\n    testType: testType.value,\r\n  };\r\n  sessionStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n  localStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n};\r\n\r\nconst loadLastSearchParams = () => {\r\n  const storedSearchParams = sessionStorage.getItem('lastSearchParams');\r\n  return storedSearchParams ? JSON.parse(storedSearchParams) : {};\r\n};\r\n\r\nconst getDbData = async (type: string, pageNum?: number) => {\r\n\r\n  if (type === 'search') {\r\n    checkedSelectedItems.value = [];\r\n    selectedItemIdFalse.value = true;\r\n    notStartLoading.value = true;\r\n    page.value = 1;\r\n  } else {\r\n    selectedItemIdFalse.value = false;\r\n    notStartLoading.value = false;\r\n  }\r\n  let pageChange = 0;\r\n  if (type === 'loadMoreData') {\r\n    pageChange = page.value;\r\n  } else if (type === 'loadPrevData') {\r\n    pageChange = prevPage.value;\r\n  } else {\r\n    pageChange = page.value;\r\n  }\r\n  const requestData: any = {\r\n    page: type !== 'mounted' ? pageChange : Number(pageNum),\r\n    pageSize: 20,\r\n    startDay: searchText.value === '' ? formatDate(startDate.value) : '',\r\n    endDay: searchText.value === '' ? formatDate(endDate.value) : '',\r\n    barcodeNo: searchType.value === 'barcodeNo' ? searchText.value : undefined,\r\n    patientId: searchType.value === 'patientId' ? searchText.value : undefined,\r\n    patientNm: searchType.value === 'patientNm' ? searchText.value : undefined,\r\n    nrCount: nrCount.value,\r\n  };\r\n  if (prevDataPage.value === '') {\r\n    prevDataPage.value = requestData.page;\r\n  }\r\n  if (titleItemArr.value.length !== 0) {\r\n    requestData.title = titleItemArr.value;\r\n  }\r\n\r\n  if (testType.value !== '00' && testType.value !== '') {\r\n    requestData.testType = testType.value;\r\n  }\r\n\r\n  if (wbcCountOrder.value !== '' && wbcCountOrder.value !== 'all') {\r\n    requestData.wbcCountOrder = wbcCountOrder.value;\r\n  }\r\n\r\n  try {\r\n    const result = await getRunningApi(requestData);\r\n    saveLastSearchParams();\r\n\r\n    if (page.value === 1 && result.data.data.length === 0) {\r\n      loadingDelayParents.value = false;\r\n      dbGetData.value = [];\r\n      return;\r\n    }\r\n    if (result && result.data) {\r\n      prevDataPage.value = requestData.page;\r\n      reqDataPrev.value = requestData;\r\n      const newData = result.data.data;\r\n      if (newData.length === 0) {\r\n        if (page.value === 1) {\r\n          page.value = 1;\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n        if (newData.length === 0 && String(result.data?.page) === '1') {\r\n          dbGetData.value = newData;\r\n        }\r\n      } else {\r\n\r\n        if (type === 'search') {\r\n          dbGetData.value = newData;\r\n        } else {\r\n          newData.forEach((item: any) => {\r\n            const index = dbGetData.value.findIndex(data => data.id === item.id);\r\n            if (index !== -1) {\r\n              dbGetData.value[index] = item;\r\n            } else {\r\n              dbGetData.value.push(item);\r\n            }\r\n          });\r\n        }\r\n\r\n        if (titleItem.value.length === 0) {\r\n          const wbcInfoItems = dbGetData.value[0]?.wbcInfo?.wbcInfo[0];\r\n          titleItem.value = wbcInfoItems.map((item: WbcInfo) => {\r\n            if (titleItemArr.value.includes(item.title)) {\r\n              return {...item, checked: true };\r\n            }\r\n            return { ...item, checked: false };\r\n          });\r\n        }\r\n\r\n        if (wbcCountOrder.value === '' || wbcCountOrder.value === 'all') {\r\n          dbGetData.value = dbGetData.value.sort((a, b) => {\r\n            const dateA = moment(a.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n            const dateB = moment(b.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n\r\n            // Moment.js의 diff 메서드를 사용하여 날짜 차이 계산\r\n            return dateB.diff(dateA);\r\n          });\r\n        }\r\n        // 마지막 조회 결과 저장\r\n        if (dbGetData.value.length !== 0) {\r\n        //\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    if (HOSPITAL_SITE_CD_BY_NAME['SD의학연구소'] === siteCd.value) {\r\n      if (dbGetData.value.length > 0) {\r\n        const barcodeNoList = dbGetData.value.map((item: any) => item.barcodeNo) ?? [];\r\n        const formatedStartDate = moment(startDate.value).format('YYYY-MM-DD');\r\n        const formatedEndDate = moment(endDate.value).format('YYYY-MM-DD');\r\n        try {\r\n          const { data: patientDataResult, code } = await sdPatientNameGetAPI(barcodeNoList, formatedStartDate, formatedEndDate);\r\n          if (code === 200) {\r\n            dbGetData.value = dbGetData.value.map((item: any) => {\r\n              const equalBarcodeData = patientDataResult.data.find((patItem: {no: number; reqNo: string; patName: string }) => patItem.reqNo === item.barcodeNo)\r\n              if (!isObjectEmpty(equalBarcodeData)) {\r\n                const updatedItem = { ...item, patientNm: equalBarcodeData.patName };\r\n                return updatedItem;\r\n              } else {\r\n                return item;\r\n              }\r\n            })\r\n          }\r\n        } catch (error) {\r\n          console.error(`SD 환자정보 조회 실패: ${error}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (dbGetData.value.length > 0) {\r\n      const {path} = router.currentRoute.value;\r\n\r\n      if(path === '/dataBase'){\r\n        await store.dispatch('commonModule/setCommonInfo', {dbListDataFirstNum: Number(dbGetData.value[0].id)})\r\n        await store.dispatch('commonModule/setCommonInfo', {dbListDataLastNum: Number(dbGetData.value[dbGetData.value.length - 1].id)})\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst search = () => {\r\n  dbGetData.value = [];\r\n\r\n  // 전시회 갈 때 주석처리할 코드 START\r\n  const diffInMs = endDate.value.getTime() - startDate.value.getTime();\r\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n  if (diffInDays > 31) {\r\n    showSuccessAlert(\"You cannot select a period of more than 31 days.\");\r\n    return;\r\n  }\r\n  // 전시회 갈 때 주석처리할 코드 END\r\n\r\n  getDbData('search');\r\n};\r\n\r\nconst refresh = () => {\r\n  getDbData('search');\r\n}\r\n\r\nconst disableSelectItem = async () => {\r\n  selectedItem.value = {};\r\n}\r\n\r\nconst loadMoreData = async () => {\r\n  page.value += 1;\r\n  await getDbData('loadMoreData');\r\n};\r\n\r\nconst loadPrevData = async () => {\r\n\r\n  prevPage.value = loadLastSearchParams().prevPage;\r\n  prevPage.value -= 1;\r\n  if (prevPage.value <= 0) {\r\n    return;\r\n  }\r\n  await getDbData('loadPrevData');\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst exportToExcel = async () => {\r\n  if (checkedSelectedItems.value.length === 0) {\r\n    await showSuccessAlert('Select an Item')\r\n    return;\r\n  }\r\n  isPrintingExcel.value = true;\r\n\r\n  // RBC Print\r\n  await convertRbcData(checkedSelectedItems.value);\r\n\r\n  // WBC Print\r\n  await excecuteExcel();\r\n}\r\n\r\nconst excecuteExcel = async () => {\r\n  const folderName = checkedSelectedItems.value[0].testType === '01' || checkedSelectedItems.value[0].testType === '04' ? '01_WBC_Classification' : '05_BF_Classification';\r\n  const path = selectedItem.value?.img_drive_root_path !== '' && selectedItem.value?.img_drive_root_path ? selectedItem.value?.img_drive_root_path : iaRootPath.value;\r\n  const body = checkedSelectedItems.value.map((checkedItem: any) => {\r\n    return `${path}\\\\${checkedItem.slotId}\\\\${folderName}`\r\n  });\r\n\r\n  try {\r\n    const result: any = await executeExcelCreate(body);\r\n    if (result.data.message === 'Application executed successfully') {\r\n      await showSuccessAlert('Excel created');\r\n    } else {\r\n      await showSuccessAlert('Excel create failed');\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n    await showSuccessAlert('Excel create failed');\r\n  } finally {\r\n    isPrintingExcel.value = false;\r\n  }\r\n}\r\n\r\nconst convertRbcData = async (dataList: any) => {\r\n  if (bmClassIsBoolen.value) {\r\n    return;\r\n  }\r\n\r\n  let beforeRbcData = {};\r\n  let afterRbcData = {};\r\n\r\n  for (const item of dataList) {\r\n    // PB & RBC일 경우\r\n    if (item.testType !== '04') {\r\n      continue;\r\n    }\r\n\r\n    const result: any = await detailRunningApi(String(item.id));\r\n    await getRbcDegreeData();\r\n    const data = result.data;\r\n    rbcInfoBeforeVal.value = data.rbcInfo.rbcClass;\r\n    rbcInfoAfterVal.value = data.rbcInfoAfter;\r\n    await rbcTotalAndReCount(data);\r\n    await countReAdd();\r\n    await reDegree(rbcInfoBeforeVal.value);\r\n    if (areDegreesIdentical(rbcInfoBeforeVal.value, rbcInfoAfterVal.value)) {\r\n      await reDegree(rbcInfoAfterVal.value);\r\n    }\r\n\r\n    const sendingItem = {before: {}, after: {}};\r\n\r\n    // Before\r\n    for (const classItem of rbcInfoBeforeVal.value) {\r\n      let beforeItem = {}\r\n\r\n      const beforeCategoryId = classItem.categoryId;\r\n\r\n      const rbcInfoItem = rbcInfoAfterVal.value.filter((item: any) => item.categoryId === beforeCategoryId)[0];\r\n\r\n\r\n      for (const classInfoItem of classItem.classInfo) {\r\n        const beforeClassId = classInfoItem.classId;\r\n\r\n        const rbcDetailItem = rbcInfoItem.classInfo.filter((item: any) => item.classId === beforeClassId)[0];\r\n\r\n        const classInfoDetailItem = {\r\n          [classInfoItem.classNm]: {\r\n            degree: classInfoItem.degree,\r\n            count: Number(rbcDetailItem.originalDegree)\r\n          }\r\n        }\r\n        beforeItem = {...beforeItem, ...classInfoDetailItem}\r\n\r\n        // Add Malaria\r\n        if (classInfoItem.classNm === 'Basophilic Stippling') {\r\n          beforeItem = {...beforeItem, ...{Malaria: {degree: '-', count: Number(data.rbcInfo.malariaCount)}}}\r\n        }\r\n      }\r\n\r\n      if (classItem.categoryNm === 'Shape') {\r\n        beforeItem = {\r\n          ...beforeItem, ...{\r\n            Others: {\r\n              degree: '-',\r\n              count: Number(shapeOthersCount.value)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      beforeRbcData = {...beforeRbcData, ...{[classItem.categoryNm]: beforeItem}}\r\n\r\n      // Add Others\r\n      if (classItem.categoryNm === 'Inclusion Body') {\r\n        beforeRbcData = {...beforeRbcData, ...{Others: {Platelet: {degree: '-', count: Number(data.rbcInfo.pltCount)}}}}\r\n      }\r\n\r\n    }\r\n\r\n    // After\r\n    for (const classItem of rbcInfoAfterVal.value) {\r\n      let afterItem = {}\r\n      for (const classInfoItem of classItem.classInfo) {\r\n        const classInfoDetailItem = {\r\n          [classInfoItem.classNm]: {\r\n            degree: classInfoItem.degree,\r\n            count: Number(classInfoItem.originalDegree)\r\n          }\r\n        }\r\n        afterItem = {...afterItem, ...classInfoDetailItem}\r\n\r\n        // Add Malaria\r\n        if (classInfoItem.classNm === 'Basophilic Stippling') {\r\n          afterItem = {...afterItem, ...{Malaria: {degree: '-', count: Number(data.rbcInfo.malariaCount)}}}\r\n        }\r\n      }\r\n\r\n      if (classItem.categoryNm === 'Shape') {\r\n        afterItem = {\r\n          ...afterItem, ...{\r\n            Others: {\r\n              degree: '-',\r\n              count: Number(shapeOthersCount.value)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      afterRbcData = {...afterRbcData, ...{[classItem.categoryNm]: afterItem}}\r\n\r\n      // Add Others\r\n      if (classItem.categoryNm === 'Inclusion Body') {\r\n        afterRbcData = {...afterRbcData, ...{Others: {Platelet: {degree: '-', count: Number(data.rbcInfo.pltCount)}}}}\r\n      }\r\n    }\r\n    sendingItem.before = beforeRbcData;\r\n    sendingItem.after = afterRbcData;\r\n\r\n    await createRbcJson(data.slotId, sendingItem);\r\n  }\r\n}\r\n\r\nconst areDegreesIdentical = (arr1: any[], arr2: any[]): boolean => {\r\n\r\n  // 배열 항목 비교\r\n  for (let i = 0; i < arr1.length; i++) {\r\n    const item1 = arr1[i];\r\n    const item2 = arr2[i];\r\n\r\n    for (let j = 0; j < item1.classInfo.length; j++) {\r\n      const classInfo1 = item1.classInfo[j];\r\n      const classInfo2 = item2.classInfo[j];\r\n\r\n      // degree 값 비교\r\n      if (String(classInfo1.degree) !== String(classInfo2.degree)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst createRbcJson = async (slotId: string, sendingData: any) => {\r\n  const jsonString = JSON.stringify(sendingData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `RBC.json`);\r\n  const path = selectedItem.value?.img_drive_root_path !== '' && selectedItem.value?.img_drive_root_path ? selectedItem.value?.img_drive_root_path : iaRootPath.value;\r\n  const filePath = `${path}/${slotId}/RBC_Analysis.json`\r\n  try {\r\n    await fetch(`${apiBaseUrl}/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    showSuccessAlert('Excel print failed');\r\n    isPrintingExcel.value = false;\r\n  }\r\n}\r\n\r\nconst rbcTotalAndReCount = async (selectItem: any) => {\r\n  const path = selectItem?.img_drive_root_path !== '' && selectItem?.img_drive_root_path ? selectItem?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItem?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItem?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItem?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItem?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeTotalVal = 0;\r\n  let inclusionBody = 0;\r\n  shapeOthersCount.value = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    switch (el.categoryId) {\r\n      case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n        total = el.classInfo.length;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n        chromiaTotalval = el.classInfo.length;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n        shapeTotalVal = el.classInfo.length;\r\n\r\n        for (const classItem of el.classInfo) {\r\n          if (!SHOWING_RBC_SHAPE_CLASS_IDS.includes(classItem.classId)) {\r\n            shapeOthersCount.value += 1;\r\n          }\r\n        }\r\n        break;\r\n      case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n        inclusionBody = el.classInfo.length;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total);\r\n  sizeChromiaTotal.value = Number(total);\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeTotalVal) + Number(inclusionBody);\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  // rbcInfoBeforeVal.value와 rbcInfoPathAfter.value가 정의되어 있는지 확인\r\n  if (!rbcInfoAfterVal.value || !Array.isArray(rbcInfoAfterVal.value)) {\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoBeforeVal.value || !Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    return;\r\n  }\r\n\r\n\r\n  for (const category of rbcInfoAfterVal.value) {\r\n    for (const classItem of category.classInfo) {\r\n      let count = 0;\r\n\r\n      for (const afterCategory of rbcInfoPathAfter.value) {\r\n        for (const afterClassItem of afterCategory.classInfo) {\r\n          if (afterClassItem.classNm.replace(/\\s+/g, '') === classItem.classNm.replace(/\\s+/g, '') && afterCategory.categoryId === category.categoryId) {\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n\r\n      classItem.originalDegree = count;\r\n    }\r\n  }\r\n\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal;\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst reDegree = async (rbcInfoArray: any) => {\r\n  if (bmClassIsBoolen.value) return;\r\n\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n  if (!Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n\r\n  rbcInfoArray.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) {\r\n            setDegree('0');\r\n            return;\r\n          }\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) {\r\n            setDegree('1');\r\n            return;\r\n          }\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) {\r\n            setDegree('2');\r\n            return;\r\n          }\r\n          // 3\r\n          else {\r\n            setDegree('3');\r\n            return;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst dateRefresh = () => {\r\n  startDate.value = thirtyDaysAgo\r\n  endDate.value = new Date();\r\n  searchText.value = '';\r\n  nrCount.value = 0;\r\n  wbcCountOrder.value = 'all';\r\n  testType.value = '00';\r\n  titleItemArr.value = [];\r\n  titleItem.value = [];\r\n  sessionStorage.removeItem('lastSearchParams');\r\n  localStorage.removeItem('lastSearchParams');\r\n  search();\r\n}\r\n\r\nconst checkListItem = (items: any) => {\r\n  checkedSelectedItems.value = items;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (isPrintingExcel.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[13] || (_cache[13] = [\n          _createElementVNode(\"div\", { class: \"loaderForLogin\" }, null, -1),\n          _createElementVNode(\"p\", { class: \"loadingTextLogin\" }, \"Loading...\", -1)\n        ])))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"h3\", _hoisted_2, [\n        _cache[14] || (_cache[14] = _createTextVNode(\" Classification List \")),\n        _createElementVNode(\"button\", {\n          onClick: _withModifiers(classListToggleEvent, [\"stop\"]),\n          class: \"classificationListBtn\"\n        }, [\n          (!classListToggle.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 0,\n                icon: ['fas', 'caret-up'],\n                flip: \"vertical\"\n              }))\n            : (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 1,\n                icon: ['fas', 'caret-up']\n              }))\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", null, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((searchType).value = $event)),\n              class: \"searchSelect\"\n            }, _cache[15] || (_cache[15] = [\n              _createElementVNode(\"option\", { value: \"barcodeNo\" }, \"Barcode No\", -1),\n              _createElementVNode(\"option\", { value: \"patientId\" }, \"Patient ID\", -1),\n              _createElementVNode(\"option\", { value: \"patientNm\" }, \"Patient Name\", -1)\n            ]), 512), [\n              [_vModelSelect, searchType.value]\n            ]),\n            _createElementVNode(\"div\", _hoisted_5, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'magnifying-glass'],\n                class: \"search-icon\"\n              }),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((searchText).value = $event)),\n                placeholder: \"Search\",\n                class: \"searchInputBox\",\n                onKeydown: _withKeys(handleEnter, [\"enter\"]),\n                ref_key: \"barcodeInput\",\n                ref: barcodeInput,\n                onInput: handleInput\n              }, null, 544), [\n                [_vModelText, searchText.value]\n              ])\n            ]),\n            _cache[16] || (_cache[16] = _createTextVNode()),\n            _createElementVNode(\"div\", _hoisted_6, [\n              _createVNode(_unref(Datepicker), {\n                modelValue: startDate.value,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((startDate).value = $event))\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_unref(Datepicker), {\n                modelValue: endDate.value,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((endDate).value = $event))\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _createElementVNode(\"button\", {\n              class: \"searchClass\",\n              onClick: setDateToday\n            }, \"Today\"),\n            _createElementVNode(\"button\", {\n              class: \"searchClass\",\n              onClick: dateRefresh\n            }, \"Clear\"),\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              class: \"searchClass\",\n              onClick: search\n            }, \"Search\"),\n            (viewerCheck.value === 'main')\n              ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                  _withDirectives(_createElementVNode(\"button\", {\n                    onClick: openCheckList,\n                    class: \"searchClass\",\n                    style: {\"left\":\"12%\"}\n                  }, \"Patient List\", 512), [\n                    [_vShow, _unref(HOSPITAL_SITE_CD_BY_NAME)['SD의학연구소'] === siteCd.value]\n                  ]),\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'file-csv'],\n                    onClick: exportToExcel,\n                    class: \"excelIcon\"\n                  })\n                ], 64))\n              : _createCommentVNode(\"\", true)\n          ]),\n          (classListToggle.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                (!bmClassIsBoolen.value)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n                      _cache[17] || (_cache[17] = _createElementVNode(\"span\", null, \"NR Count\", -1)),\n                      _withDirectives(_createElementVNode(\"input\", {\n                        type: \"text\",\n                        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((nrCount).value = $event))\n                      }, null, 512), [\n                        [_vModelText, nrCount.value]\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _cache[19] || (_cache[19] = _createElementVNode(\"span\", null, \"WBC Total\", -1)),\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((wbcCountOrder).value = $event))\n                  }, _cache[18] || (_cache[18] = [\n                    _createElementVNode(\"option\", { value: \"all\" }, \"Do Not Select\", -1),\n                    _createElementVNode(\"option\", null, \"DESC\", -1),\n                    _createElementVNode(\"option\", null, \"ASC\", -1)\n                  ]), 512), [\n                    [_vModelSelect, wbcCountOrder.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_10, [\n                  _createElementVNode(\"span\", null, _toDisplayString(bmClassIsBoolen.value ? 'BM' : 'WBC') + \" Info Filter\", 1),\n                  _createElementVNode(\"ul\", _hoisted_11, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(titleItem.value, (item, idx) => {\n                      return (_openBlock(), _createElementBlock(\"li\", { key: idx }, [\n                        _withDirectives(_createElementVNode(\"input\", {\n                          type: \"checkbox\",\n                          id: 'checkbox_' + idx,\n                          \"onUpdate:modelValue\": ($event: any) => ((item.checked) = $event),\n                          onChange: updateFilter\n                        }, null, 40, _hoisted_12), [\n                          [_vModelCheckbox, item.checked]\n                        ]),\n                        _createElementVNode(\"label\", {\n                          for: 'checkbox_' + idx\n                        }, _toDisplayString(item.title), 9, _hoisted_13)\n                      ]))\n                    }), 128))\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_14, [\n                  _cache[26] || (_cache[26] = _createElementVNode(\"span\", null, \"Test Type\", -1)),\n                  _createElementVNode(\"div\", null, [\n                    _createElementVNode(\"label\", null, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: \"00\",\n                        onChange: _cache[6] || (_cache[6] = ($event: any) => (changeTestType('00'))),\n                        checked: testType.value === '00'\n                      }, null, 40, _hoisted_15),\n                      _cache[20] || (_cache[20] = _createElementVNode(\"span\", null, \"All\", -1))\n                    ]),\n                    (!bmClassIsBoolen.value)\n                      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"01\",\n                              onChange: _cache[7] || (_cache[7] = ($event: any) => (changeTestType('01'))),\n                              checked: testType.value === '01'\n                            }, null, 40, _hoisted_16),\n                            _cache[21] || (_cache[21] = _createElementVNode(\"span\", null, \"Diff\", -1))\n                          ]),\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"04\",\n                              onChange: _cache[8] || (_cache[8] = ($event: any) => (changeTestType('04'))),\n                              checked: testType.value === '04'\n                            }, null, 40, _hoisted_17),\n                            _cache[22] || (_cache[22] = _createElementVNode(\"span\", null, \"PBS\", -1))\n                          ])\n                        ], 64))\n                      : _createCommentVNode(\"\", true),\n                    (bmClassIsBoolen.value)\n                      ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"02\",\n                              onChange: _cache[9] || (_cache[9] = ($event: any) => (changeTestType('02'))),\n                              checked: testType.value === '02'\n                            }, null, 40, _hoisted_18),\n                            _cache[23] || (_cache[23] = _createElementVNode(\"span\", null, \"Wedge\", -1))\n                          ]),\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"04\",\n                              onChange: _cache[10] || (_cache[10] = ($event: any) => (changeTestType('04'))),\n                              checked: testType.value === '04'\n                            }, null, 40, _hoisted_19),\n                            _cache[24] || (_cache[24] = _createElementVNode(\"span\", null, \"Biopsy\", -1))\n                          ]),\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"06\",\n                              onChange: _cache[11] || (_cache[11] = ($event: any) => (changeTestType('06'))),\n                              checked: testType.value === '06'\n                            }, null, 40, _hoisted_20),\n                            _cache[25] || (_cache[25] = _createElementVNode(\"span\", null, \"Squash\", -1))\n                          ])\n                        ], 64))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        (_openBlock(), _createBlock(_KeepAlive, null, [\n          _createVNode(ListTable, {\n            loadingDelayParents: loadingDelayParents.value,\n            dbData: dbGetData.value,\n            onLoadMoreData: loadMoreData,\n            onLoadPrevData: loadPrevData,\n            onInitData: initDbData,\n            onSelectItem: selectItem,\n            onRefresh: refresh,\n            onCheckListItem: checkListItem,\n            onDisableSelectItem: disableSelectItem,\n            selectedItemIdFalse: selectedItemIdFalse.value,\n            notStartLoading: notStartLoading.value\n          }, null, 8, [\"loadingDelayParents\", \"dbData\", \"selectedItemIdFalse\", \"notStartLoading\"])\n        ], 1024))\n      ]),\n      _createElementVNode(\"div\", _hoisted_21, [\n        _createVNode(ListInfo, {\n          dbData: dbGetData.value,\n          selectedItem: selectedItem.value\n        }, null, 8, [\"dbData\", \"selectedItem\"]),\n        (!bmClassIsBoolen.value)\n          ? (_openBlock(), _createBlock(ListWbcImg, {\n              key: 0,\n              dbData: dbGetData.value,\n              selectedItem: selectedItem.value\n            }, null, 8, [\"dbData\", \"selectedItem\"]))\n          : _createCommentVNode(\"\", true),\n        (bmClassIsBoolen.value)\n          ? (_openBlock(), _createBlock(ListBmImg, {\n              key: 1,\n              dbData: dbGetData.value,\n              selectedItem: selectedItem.value\n            }, null, 8, [\"dbData\", \"selectedItem\"]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _createVNode(PopupTable, {\n      isOpen: showPopupTable.value,\n      \"onUpdate:isOpen\": _cache[12] || (_cache[12] = ($event: any) => ((showPopupTable).value = $event)),\n      workList: workList.value\n    }, null, 8, [\"isOpen\", \"workList\"]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"loaderBackgroundForLogin\" v-if=\"isPrintingExcel\">\r\n    <div class=\"loaderForLogin\"></div>\r\n    <p class=\"loadingTextLogin\">Loading...</p>\r\n  </div>\r\n\r\n  <div>\r\n    <h3 class=\"titleH3\">\r\n      Classification List\r\n      <button @click.stop=\"classListToggleEvent\" class=\"classificationListBtn\">\r\n        <font-awesome-icon v-if=\"!classListToggle\" :icon=\"['fas', 'caret-up']\" flip=\"vertical\" />\r\n        <font-awesome-icon v-else :icon=\"['fas', 'caret-up']\" />\r\n      </button>\r\n    </h3>\r\n    <div class='listBoxTable'>\r\n      <div class=\"filterListDiv\">\r\n        <div>\r\n          <select v-model=\"searchType\" class=\"searchSelect\">\r\n            <option value=\"barcodeNo\">Barcode No</option>\r\n            <option value=\"patientId\">Patient ID</option>\r\n            <option value=\"patientNm\">Patient Name</option>\r\n          </select>\r\n          <div class=\"search-container\">\r\n            <font-awesome-icon :icon=\"['fas', 'magnifying-glass']\" class=\"search-icon\" />\r\n            <input type=\"text\" v-model=\"searchText\" placeholder=\"Search\" class=\"searchInputBox\" @keydown.enter=\"handleEnter\" ref=\"barcodeInput\" @input=\"handleInput\"/>\r\n          </div>          <div class=\"settingDatePickers\">\r\n            <Datepicker v-model=\"startDate\"></Datepicker>\r\n            <Datepicker v-model=\"endDate\"></Datepicker>\r\n          </div>\r\n          <button class=\"searchClass\" @click=\"setDateToday\">Today</button>\r\n          <button class=\"searchClass\" @click=\"dateRefresh\">Clear</button>\r\n          <button type=\"button\" class=\"searchClass\" @click=\"search\">Search</button>\r\n\r\n          <template v-if=\"viewerCheck === 'main'\">\r\n            <button v-show=\"HOSPITAL_SITE_CD_BY_NAME['SD의학연구소'] === siteCd\" @click=\"openCheckList\" class=\"searchClass\" style=\"left: 12%\">Patient List</button>\r\n            <font-awesome-icon :icon=\"['fas', 'file-csv']\" @click=\"exportToExcel\" class=\"excelIcon\" />\r\n          </template>\r\n        </div>\r\n\r\n\r\n        <!-- Classification List Modal -->\r\n        <div class=\"filterDivBox\" v-if=\"classListToggle\">\r\n          <div class=\"nrCount\" v-if=\"!bmClassIsBoolen\">\r\n            <span>NR Count</span>\r\n            <input type=\"text\" v-model=\"nrCount\"/>\r\n          </div>\r\n          <div class=\"wbcTotal\">\r\n            <span>WBC Total</span>\r\n            <select v-model=\"wbcCountOrder\">\r\n              <option value=\"all\">Do Not Select</option>\r\n              <option>DESC</option>\r\n              <option>ASC</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"wbcInfoFilter\">\r\n            <span>{{ bmClassIsBoolen ? 'BM' : 'WBC' }} Info Filter</span>\r\n            <ul class=\"wbcInfoFilter\">\r\n              <li v-for=\"(item, idx) in titleItem\" :key=\"idx\">\r\n                <input type=\"checkbox\" :id=\"'checkbox_' + idx\" v-model=\"item.checked\" @change=\"updateFilter\">\r\n                <label :for=\"'checkbox_' + idx\">{{ item.title }}</label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"lastTestType\">\r\n            <span>Test Type</span>\r\n            <div>\r\n              <label>\r\n                <input type=\"checkbox\" value=\"00\" @change=\"changeTestType('00')\" :checked=\"testType === '00'\"/>\r\n                <span>All</span>\r\n              </label>\r\n              <template v-if=\"!bmClassIsBoolen\">\r\n                <label>\r\n                  <input type=\"checkbox\" value=\"01\" @change=\"changeTestType('01')\" :checked=\"testType === '01'\"/>\r\n                  <span>Diff</span>\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" value=\"04\" @change=\"changeTestType('04')\" :checked=\"testType === '04'\"/>\r\n                  <span>PBS</span>\r\n                </label>\r\n              </template>\r\n\r\n              <template v-if=\"bmClassIsBoolen\">\r\n                <label>\r\n                  <input type=\"checkbox\" value=\"02\" @change=\"changeTestType('02')\" :checked=\"testType === '02'\"/>\r\n                  <span>Wedge</span>\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" value=\"04\" @change=\"changeTestType('04')\" :checked=\"testType === '04'\"/>\r\n                  <span>Biopsy</span>\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" value=\"06\" @change=\"changeTestType('06')\" :checked=\"testType === '06'\"/>\r\n                  <span>Squash</span>\r\n                </label>\r\n              </template>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <keep-alive>\r\n        <ListTable\r\n            :loadingDelayParents=\"loadingDelayParents\"\r\n            :dbData=\"dbGetData\"\r\n            @loadMoreData=\"loadMoreData\"\r\n            @loadPrevData=\"loadPrevData\"\r\n            @initData=\"initDbData\"\r\n            @selectItem=\"selectItem\"\r\n            @refresh=\"refresh\"\r\n            @checkListItem=\"checkListItem\"\r\n            @disableSelectItem=\"disableSelectItem\"\r\n            :selectedItemIdFalse=\"selectedItemIdFalse\"\r\n            :notStartLoading='notStartLoading'\r\n        />\r\n      </keep-alive>\r\n    </div>\r\n    <div class='listBox'>\r\n      <ListInfo :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n      <ListWbcImg v-if=\"!bmClassIsBoolen\" :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n      <ListBmImg v-if=\"bmClassIsBoolen\" :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n    </div>\r\n  </div>\r\n\r\n  <PopupTable v-model:isOpen=\"showPopupTable\" :workList=\"workList\" />\r\n\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport ListTable from \"@/views/datebase/commponent/list/listTable.vue\";\r\nimport ListInfo from \"@/views/datebase/commponent/list/listInfo.vue\";\r\nimport ListWbcImg from \"@/views/datebase/commponent/list/listWbcImg.vue\";\r\nimport {\r\n  computed,\r\n  getCurrentInstance,\r\n  onBeforeMount,\r\n  onBeforeUnmount,\r\n  onMounted,\r\n  ref,\r\n} from \"vue\";\r\nimport {\r\n  detailRunningApi,\r\n  getRunningApi,\r\n  removePageAllDataApi,\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport moment from \"moment/moment\";\r\nimport Datepicker from \"vue3-datepicker\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport ListBmImg from \"@/views/datebase/commponent/list/listBmImg.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {executeExcelCreate} from \"@/common/api/service/excel/excelApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from \"pako\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useRouter} from \"vue-router\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport PopupTable from \"@/components/commonUi/PopupTable.vue\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport {RBC_CODE_CLASS_ID, SHOWING_RBC_SHAPE_CLASS_IDS} from \"@/common/defines/constants/dataBase\";\r\nimport {sdPatientNameGetAPI, sdWorklistsAPI} from \"@/common/helpers/lisCbc/sdCbcLis\";\r\nimport {isObjectEmpty} from \"@/common/lib/utils/validators\";\r\nimport { WbcInfo } from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport { DIR_NAME } from \"@/common/defines/constants/settings\";\r\n\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst dbGetData = ref<any[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\n\r\nconst today = new Date();\r\nconst thirtyDaysAgo = new Date(today);\r\nthirtyDaysAgo.setDate(today.getDate() - 29);\r\n\r\nconst startDate = ref(thirtyDaysAgo);\r\nconst endDate = ref(new Date());\r\nconst searchText = ref('');\r\nconst searchType = ref('barcodeNo');\r\nconst page = ref(1);\r\nconst prevPage = ref(1);\r\nconst selectedItem = ref<any>({});\r\nconst titleItem = ref<any>([]);\r\nconst titleItemArr = ref([]);\r\nconst nrCount = ref(0);\r\nconst testType = ref('00');\r\nconst wbcCountOrder = ref('all');\r\nconst classListToggle = ref(false);\r\nconst bmClassIsBoolen = ref(false);\r\nconst instance = getCurrentInstance();\r\nconst prevDataPage = ref('');\r\nconst reqDataPrev = ref('');\r\nconst checkedSelectedItems = ref<any>([]);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst eventTriggered = ref(false);\r\nconst loadingDelayParents = ref(false);\r\nconst selectedItemIdFalse = ref(false);\r\nconst notStartLoading = ref(false);\r\nconst barcodeInput = ref<HTMLInputElement | null>(null);\r\nconst isPrintingExcel = ref(false);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst shapeOthersCount = ref(0);\r\n\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst rbcInfoAfterVal = ref<any>([]);\r\nconst rbcInfoBeforeVal = ref<any>([]);\r\nconst inputTimeout = ref<any>(null);\r\nconst bufferDelay = 100; // 입력 완료 감지 지연 시간 (ms)\r\nconst inputBuffer = ref('');\r\nconst showPopupTable = ref(false);\r\nconst workList = ref({});\r\nconst previousValue = ref('');\r\nlet lastInputTime = Date.now();\r\nconst isBarcodeScannerInput = { value: false };\r\n\r\n\r\nonBeforeMount(async () => {\r\n  bmClassIsBoolen.value = window.PROJECT_TYPE === 'bm';\r\n})\r\n\r\nonMounted(async () => {\r\n  if (!eventTriggered.value) {\r\n    await initDbData();\r\n    // loadingDelayParents.value = true;\r\n  }\r\n\r\n  document.addEventListener('click', closeClassListBox);\r\n  if (barcodeInput.value) {\r\n    barcodeInput.value.focus();\r\n  }\r\n\r\n  notStartLoading.value = true;\r\n  instance?.appContext.config.globalProperties.$socket.on('stateVal', handleStateVal);\r\n  document.addEventListener('keydown', handleGlobalKeydown);\r\n\r\n});\r\n\r\nasync function handleStateVal(data: any) {\r\n  eventTriggered.value = true;\r\n  notStartLoading.value = false;\r\n  await removePageAllDataApi();\r\n  await initDbData();\r\n}\r\n\r\nconst setDateToday = () => {\r\n  startDate.value = new Date();\r\n  endDate.value = new Date();\r\n  search();\r\n}\r\n\r\n// 이벤트 핸들러 함수\r\nconst handleInput = (event: any) => {\r\n  if (!event.data) return;\r\n\r\n  // 현재 입력 시간\r\n  const currentTime = Date.now();\r\n\r\n  // 현재 입력과 마지막 입력 사이의 시간 차이 계산\r\n  const timeDiff = currentTime - lastInputTime;\r\n\r\n  // 바코드 리더기에서 입력된 것인지 확인 (시간 차이가 50ms 이하이면 바코드 리더기에서 입력된 것으로 간주)\r\n  if (timeDiff < 50) {\r\n    isBarcodeScannerInput.value = true;\r\n  } else {\r\n    isBarcodeScannerInput.value = false;\r\n  }\r\n\r\n  // 마지막 입력 시간을 현재 시간으로 업데이트\r\n  lastInputTime = currentTime;\r\n\r\n  // 바코드 리더기 입력이 아니면 이벤트 종료\r\n  if (!isBarcodeScannerInput.value) {\r\n    return;\r\n  }\r\n\r\n  // 입력 버퍼에 추가된 문자\r\n  inputBuffer.value += event.data;\r\n\r\n  // 이전 타이머가 설정되어 있으면 클리어\r\n  if (inputTimeout.value) {\r\n    clearTimeout(inputTimeout.value);\r\n  }\r\n\r\n  // 새로운 타이머 설정\r\n  inputTimeout.value = setTimeout(() => {\r\n    // 입력 완료로 간주\r\n    const trimmedValue = inputBuffer.value.trim();\r\n\r\n    // 입력된 값과 이전 값이 다를 때만 업데이트\r\n    if (trimmedValue !== previousValue.value) {\r\n      searchText.value = trimmedValue;\r\n      previousValue.value = trimmedValue;\r\n    }\r\n\r\n    // search버퍼 초기화\r\n    inputBuffer.value = '';\r\n    search();\r\n  }, bufferDelay);\r\n};\r\n\r\nconst openCheckList = async () => {\r\n  const formattedDate = moment(today).format('YYYY-MM-DD');\r\n  const { data, code } = await sdWorklistsAPI(formattedDate);\r\n  if (Number(code) === 200) {\r\n    workList.value = data;\r\n    showPopupTable.value = true;\r\n  } else {\r\n    await showSuccessAlert('불러오기에 실패했습니다');\r\n  }\r\n}\r\n\r\n\r\nconst handleGlobalKeydown = (event: any) => {\r\n  if (router.currentRoute.value.path === '/dataBase') {\r\n    if (event.key === 'Enter' || event.key === 'Tab') {\r\n      setTimeout(() => {\r\n        if (barcodeInput.value) {\r\n          barcodeInput.value.focus();\r\n          searchText.value = searchText.value.trim();\r\n          const trimmedValue = searchText.value.trim();\r\n          if (trimmedValue !== previousValue.value) {\r\n            // 입력된 값과 이전 값이 다를 때만 업데이트\r\n            previousValue.value = trimmedValue;\r\n          }\r\n        }\r\n      }, 10); // 아주 짧은 지연을 주어 바코드 리더기가 입력을 시작할 수 있도록 함\r\n\r\n    }\r\n  }\r\n};\r\n\r\nconst handleEnter = () => {\r\n  if (barcodeInput.value) {\r\n    search();\r\n  }\r\n};\r\n\r\nonBeforeUnmount(() => {\r\n  // instance?.appContext.config.globalProperties.$socket.off('stateVal', handleStateVal);\r\n  document.removeEventListener('click', closeClassListBox);\r\n});\r\n\r\nconst closeClassListBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.filterDivBox');\r\n  const selectButton = document.querySelector('.classificationListBtn');\r\n  if (selectButton && selectButton.contains(event.target as Node)) return;\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    classListToggle.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\nconst classListToggleEvent = () => {\r\n  classListToggle.value = !classListToggle.value;\r\n}\r\nconst changeTestType = (value: any) => {\r\n  testType.value = testType.value === value ? '' : value;\r\n}\r\n\r\nconst updateFilter = () => {\r\n  const selectedItems = titleItem.value?.filter((item: any) => item.checked).map((item: any) => item.title);\r\n  titleItemArr.value = selectedItems ?? [];\r\n}\r\n\r\nconst initDbData = async () => {\r\n  // 이전 조회 결과 및 검색 조건 불러오기\r\n  loadingDelayParents.value = true;\r\n  // const lastQuery = loadLastQuery();\r\n  const lastSearchParams = loadLastSearchParams();\r\n  // 이전 검색 조건 적용\r\n  if (!isObjectEmpty(lastSearchParams)) {\r\n    page.value = lastSearchParams.page || 1;\r\n    searchType.value = lastSearchParams.searchType || 'barcodeNo';\r\n    searchText.value = lastSearchParams.searchText || '';\r\n    startDate.value = new Date(lastSearchParams.startDate) || new Date();\r\n    endDate.value = new Date(lastSearchParams.endDate) || new Date();\r\n    nrCount.value = lastSearchParams.nrCount;\r\n    wbcCountOrder.value = lastSearchParams.wbcTotal;\r\n    testType.value = lastSearchParams.testType;\r\n    titleItemArr.value = lastSearchParams.wbcInfo ?? [];\r\n    titleItem.value = titleItem.value.map((item: WbcInfo) => {\r\n      if (lastSearchParams.wbcInfo.includes(item.title)) {\r\n        return {...item, checked: true }\r\n      }\r\n      return item;\r\n    })\r\n    await getDbData('search');\r\n  } else {\r\n    await getDbData('mounted', 1);\r\n  }\r\n}\r\n\r\nconst selectItem = async (item: any) => {\r\n  selectedItem.value = item;\r\n};\r\n\r\nconst saveLastSearchParams = () => {\r\n  const lastSearchParams = {\r\n    page: page.value,\r\n    prevPage: prevPage.value,\r\n    searchType: searchType.value,\r\n    searchText: searchText.value,\r\n    startDate: formatDate(startDate.value),\r\n    endDate: formatDate(endDate.value),\r\n    nrCount: nrCount.value,\r\n    wbcTotal: wbcCountOrder.value,\r\n    wbcInfo: titleItemArr.value,\r\n    testType: testType.value,\r\n  };\r\n  sessionStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n  localStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n};\r\n\r\nconst loadLastSearchParams = () => {\r\n  const storedSearchParams = sessionStorage.getItem('lastSearchParams');\r\n  return storedSearchParams ? JSON.parse(storedSearchParams) : {};\r\n};\r\n\r\nconst getDbData = async (type: string, pageNum?: number) => {\r\n\r\n  if (type === 'search') {\r\n    checkedSelectedItems.value = [];\r\n    selectedItemIdFalse.value = true;\r\n    notStartLoading.value = true;\r\n    page.value = 1;\r\n  } else {\r\n    selectedItemIdFalse.value = false;\r\n    notStartLoading.value = false;\r\n  }\r\n  let pageChange = 0;\r\n  if (type === 'loadMoreData') {\r\n    pageChange = page.value;\r\n  } else if (type === 'loadPrevData') {\r\n    pageChange = prevPage.value;\r\n  } else {\r\n    pageChange = page.value;\r\n  }\r\n  const requestData: any = {\r\n    page: type !== 'mounted' ? pageChange : Number(pageNum),\r\n    pageSize: 20,\r\n    startDay: searchText.value === '' ? formatDate(startDate.value) : '',\r\n    endDay: searchText.value === '' ? formatDate(endDate.value) : '',\r\n    barcodeNo: searchType.value === 'barcodeNo' ? searchText.value : undefined,\r\n    patientId: searchType.value === 'patientId' ? searchText.value : undefined,\r\n    patientNm: searchType.value === 'patientNm' ? searchText.value : undefined,\r\n    nrCount: nrCount.value,\r\n  };\r\n  if (prevDataPage.value === '') {\r\n    prevDataPage.value = requestData.page;\r\n  }\r\n  if (titleItemArr.value.length !== 0) {\r\n    requestData.title = titleItemArr.value;\r\n  }\r\n\r\n  if (testType.value !== '00' && testType.value !== '') {\r\n    requestData.testType = testType.value;\r\n  }\r\n\r\n  if (wbcCountOrder.value !== '' && wbcCountOrder.value !== 'all') {\r\n    requestData.wbcCountOrder = wbcCountOrder.value;\r\n  }\r\n\r\n  try {\r\n    const result = await getRunningApi(requestData);\r\n    saveLastSearchParams();\r\n\r\n    if (page.value === 1 && result.data.data.length === 0) {\r\n      loadingDelayParents.value = false;\r\n      dbGetData.value = [];\r\n      return;\r\n    }\r\n    if (result && result.data) {\r\n      prevDataPage.value = requestData.page;\r\n      reqDataPrev.value = requestData;\r\n      const newData = result.data.data;\r\n      if (newData.length === 0) {\r\n        if (page.value === 1) {\r\n          page.value = 1;\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n        if (newData.length === 0 && String(result.data?.page) === '1') {\r\n          dbGetData.value = newData;\r\n        }\r\n      } else {\r\n\r\n        if (type === 'search') {\r\n          dbGetData.value = newData;\r\n        } else {\r\n          newData.forEach((item: any) => {\r\n            const index = dbGetData.value.findIndex(data => data.id === item.id);\r\n            if (index !== -1) {\r\n              dbGetData.value[index] = item;\r\n            } else {\r\n              dbGetData.value.push(item);\r\n            }\r\n          });\r\n        }\r\n\r\n        if (titleItem.value.length === 0) {\r\n          const wbcInfoItems = dbGetData.value[0]?.wbcInfo?.wbcInfo[0];\r\n          titleItem.value = wbcInfoItems.map((item: WbcInfo) => {\r\n            if (titleItemArr.value.includes(item.title)) {\r\n              return {...item, checked: true };\r\n            }\r\n            return { ...item, checked: false };\r\n          });\r\n        }\r\n\r\n        if (wbcCountOrder.value === '' || wbcCountOrder.value === 'all') {\r\n          dbGetData.value = dbGetData.value.sort((a, b) => {\r\n            const dateA = moment(a.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n            const dateB = moment(b.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n\r\n            // Moment.js의 diff 메서드를 사용하여 날짜 차이 계산\r\n            return dateB.diff(dateA);\r\n          });\r\n        }\r\n        // 마지막 조회 결과 저장\r\n        if (dbGetData.value.length !== 0) {\r\n        //\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    if (HOSPITAL_SITE_CD_BY_NAME['SD의학연구소'] === siteCd.value) {\r\n      if (dbGetData.value.length > 0) {\r\n        const barcodeNoList = dbGetData.value.map((item: any) => item.barcodeNo) ?? [];\r\n        const formatedStartDate = moment(startDate.value).format('YYYY-MM-DD');\r\n        const formatedEndDate = moment(endDate.value).format('YYYY-MM-DD');\r\n        try {\r\n          const { data: patientDataResult, code } = await sdPatientNameGetAPI(barcodeNoList, formatedStartDate, formatedEndDate);\r\n          if (code === 200) {\r\n            dbGetData.value = dbGetData.value.map((item: any) => {\r\n              const equalBarcodeData = patientDataResult.data.find((patItem: {no: number; reqNo: string; patName: string }) => patItem.reqNo === item.barcodeNo)\r\n              if (!isObjectEmpty(equalBarcodeData)) {\r\n                const updatedItem = { ...item, patientNm: equalBarcodeData.patName };\r\n                return updatedItem;\r\n              } else {\r\n                return item;\r\n              }\r\n            })\r\n          }\r\n        } catch (error) {\r\n          console.error(`SD 환자정보 조회 실패: ${error}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (dbGetData.value.length > 0) {\r\n      const {path} = router.currentRoute.value;\r\n\r\n      if(path === '/dataBase'){\r\n        await store.dispatch('commonModule/setCommonInfo', {dbListDataFirstNum: Number(dbGetData.value[0].id)})\r\n        await store.dispatch('commonModule/setCommonInfo', {dbListDataLastNum: Number(dbGetData.value[dbGetData.value.length - 1].id)})\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst search = () => {\r\n  dbGetData.value = [];\r\n\r\n  // 전시회 갈 때 주석처리할 코드 START\r\n  const diffInMs = endDate.value.getTime() - startDate.value.getTime();\r\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n  if (diffInDays > 31) {\r\n    showSuccessAlert(\"You cannot select a period of more than 31 days.\");\r\n    return;\r\n  }\r\n  // 전시회 갈 때 주석처리할 코드 END\r\n\r\n  getDbData('search');\r\n};\r\n\r\nconst refresh = () => {\r\n  getDbData('search');\r\n}\r\n\r\nconst disableSelectItem = async () => {\r\n  selectedItem.value = {};\r\n}\r\n\r\nconst loadMoreData = async () => {\r\n  page.value += 1;\r\n  await getDbData('loadMoreData');\r\n};\r\n\r\nconst loadPrevData = async () => {\r\n\r\n  prevPage.value = loadLastSearchParams().prevPage;\r\n  prevPage.value -= 1;\r\n  if (prevPage.value <= 0) {\r\n    return;\r\n  }\r\n  await getDbData('loadPrevData');\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst exportToExcel = async () => {\r\n  if (checkedSelectedItems.value.length === 0) {\r\n    await showSuccessAlert('Select an Item')\r\n    return;\r\n  }\r\n  isPrintingExcel.value = true;\r\n\r\n  // RBC Print\r\n  await convertRbcData(checkedSelectedItems.value);\r\n\r\n  // WBC Print\r\n  await excecuteExcel();\r\n}\r\n\r\nconst excecuteExcel = async () => {\r\n  const folderName = checkedSelectedItems.value[0].testType === '01' || checkedSelectedItems.value[0].testType === '04' ? '01_WBC_Classification' : '05_BF_Classification';\r\n  const path = selectedItem.value?.img_drive_root_path !== '' && selectedItem.value?.img_drive_root_path ? selectedItem.value?.img_drive_root_path : iaRootPath.value;\r\n  const body = checkedSelectedItems.value.map((checkedItem: any) => {\r\n    return `${path}\\\\${checkedItem.slotId}\\\\${folderName}`\r\n  });\r\n\r\n  try {\r\n    const result: any = await executeExcelCreate(body);\r\n    if (result.data.message === 'Application executed successfully') {\r\n      await showSuccessAlert('Excel created');\r\n    } else {\r\n      await showSuccessAlert('Excel create failed');\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n    await showSuccessAlert('Excel create failed');\r\n  } finally {\r\n    isPrintingExcel.value = false;\r\n  }\r\n}\r\n\r\nconst convertRbcData = async (dataList: any) => {\r\n  if (bmClassIsBoolen.value) {\r\n    return;\r\n  }\r\n\r\n  let beforeRbcData = {};\r\n  let afterRbcData = {};\r\n\r\n  for (const item of dataList) {\r\n    // PB & RBC일 경우\r\n    if (item.testType !== '04') {\r\n      continue;\r\n    }\r\n\r\n    const result: any = await detailRunningApi(String(item.id));\r\n    await getRbcDegreeData();\r\n    const data = result.data;\r\n    rbcInfoBeforeVal.value = data.rbcInfo.rbcClass;\r\n    rbcInfoAfterVal.value = data.rbcInfoAfter;\r\n    await rbcTotalAndReCount(data);\r\n    await countReAdd();\r\n    await reDegree(rbcInfoBeforeVal.value);\r\n    if (areDegreesIdentical(rbcInfoBeforeVal.value, rbcInfoAfterVal.value)) {\r\n      await reDegree(rbcInfoAfterVal.value);\r\n    }\r\n\r\n    const sendingItem = {before: {}, after: {}};\r\n\r\n    // Before\r\n    for (const classItem of rbcInfoBeforeVal.value) {\r\n      let beforeItem = {}\r\n\r\n      const beforeCategoryId = classItem.categoryId;\r\n\r\n      const rbcInfoItem = rbcInfoAfterVal.value.filter((item: any) => item.categoryId === beforeCategoryId)[0];\r\n\r\n\r\n      for (const classInfoItem of classItem.classInfo) {\r\n        const beforeClassId = classInfoItem.classId;\r\n\r\n        const rbcDetailItem = rbcInfoItem.classInfo.filter((item: any) => item.classId === beforeClassId)[0];\r\n\r\n        const classInfoDetailItem = {\r\n          [classInfoItem.classNm]: {\r\n            degree: classInfoItem.degree,\r\n            count: Number(rbcDetailItem.originalDegree)\r\n          }\r\n        }\r\n        beforeItem = {...beforeItem, ...classInfoDetailItem}\r\n\r\n        // Add Malaria\r\n        if (classInfoItem.classNm === 'Basophilic Stippling') {\r\n          beforeItem = {...beforeItem, ...{Malaria: {degree: '-', count: Number(data.rbcInfo.malariaCount)}}}\r\n        }\r\n      }\r\n\r\n      if (classItem.categoryNm === 'Shape') {\r\n        beforeItem = {\r\n          ...beforeItem, ...{\r\n            Others: {\r\n              degree: '-',\r\n              count: Number(shapeOthersCount.value)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      beforeRbcData = {...beforeRbcData, ...{[classItem.categoryNm]: beforeItem}}\r\n\r\n      // Add Others\r\n      if (classItem.categoryNm === 'Inclusion Body') {\r\n        beforeRbcData = {...beforeRbcData, ...{Others: {Platelet: {degree: '-', count: Number(data.rbcInfo.pltCount)}}}}\r\n      }\r\n\r\n    }\r\n\r\n    // After\r\n    for (const classItem of rbcInfoAfterVal.value) {\r\n      let afterItem = {}\r\n      for (const classInfoItem of classItem.classInfo) {\r\n        const classInfoDetailItem = {\r\n          [classInfoItem.classNm]: {\r\n            degree: classInfoItem.degree,\r\n            count: Number(classInfoItem.originalDegree)\r\n          }\r\n        }\r\n        afterItem = {...afterItem, ...classInfoDetailItem}\r\n\r\n        // Add Malaria\r\n        if (classInfoItem.classNm === 'Basophilic Stippling') {\r\n          afterItem = {...afterItem, ...{Malaria: {degree: '-', count: Number(data.rbcInfo.malariaCount)}}}\r\n        }\r\n      }\r\n\r\n      if (classItem.categoryNm === 'Shape') {\r\n        afterItem = {\r\n          ...afterItem, ...{\r\n            Others: {\r\n              degree: '-',\r\n              count: Number(shapeOthersCount.value)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      afterRbcData = {...afterRbcData, ...{[classItem.categoryNm]: afterItem}}\r\n\r\n      // Add Others\r\n      if (classItem.categoryNm === 'Inclusion Body') {\r\n        afterRbcData = {...afterRbcData, ...{Others: {Platelet: {degree: '-', count: Number(data.rbcInfo.pltCount)}}}}\r\n      }\r\n    }\r\n    sendingItem.before = beforeRbcData;\r\n    sendingItem.after = afterRbcData;\r\n\r\n    await createRbcJson(data.slotId, sendingItem);\r\n  }\r\n}\r\n\r\nconst areDegreesIdentical = (arr1: any[], arr2: any[]): boolean => {\r\n\r\n  // 배열 항목 비교\r\n  for (let i = 0; i < arr1.length; i++) {\r\n    const item1 = arr1[i];\r\n    const item2 = arr2[i];\r\n\r\n    for (let j = 0; j < item1.classInfo.length; j++) {\r\n      const classInfo1 = item1.classInfo[j];\r\n      const classInfo2 = item2.classInfo[j];\r\n\r\n      // degree 값 비교\r\n      if (String(classInfo1.degree) !== String(classInfo2.degree)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst createRbcJson = async (slotId: string, sendingData: any) => {\r\n  const jsonString = JSON.stringify(sendingData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `RBC.json`);\r\n  const path = selectedItem.value?.img_drive_root_path !== '' && selectedItem.value?.img_drive_root_path ? selectedItem.value?.img_drive_root_path : iaRootPath.value;\r\n  const filePath = `${path}/${slotId}/RBC_Analysis.json`\r\n  try {\r\n    await fetch(`${apiBaseUrl}/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    showSuccessAlert('Excel print failed');\r\n    isPrintingExcel.value = false;\r\n  }\r\n}\r\n\r\nconst rbcTotalAndReCount = async (selectItem: any) => {\r\n  const path = selectItem?.img_drive_root_path !== '' && selectItem?.img_drive_root_path ? selectItem?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItem?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItem?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItem?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItem?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeTotalVal = 0;\r\n  let inclusionBody = 0;\r\n  shapeOthersCount.value = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    switch (el.categoryId) {\r\n      case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n        total = el.classInfo.length;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n        chromiaTotalval = el.classInfo.length;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n        shapeTotalVal = el.classInfo.length;\r\n\r\n        for (const classItem of el.classInfo) {\r\n          if (!SHOWING_RBC_SHAPE_CLASS_IDS.includes(classItem.classId)) {\r\n            shapeOthersCount.value += 1;\r\n          }\r\n        }\r\n        break;\r\n      case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n        inclusionBody = el.classInfo.length;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total);\r\n  sizeChromiaTotal.value = Number(total);\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeTotalVal) + Number(inclusionBody);\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  // rbcInfoBeforeVal.value와 rbcInfoPathAfter.value가 정의되어 있는지 확인\r\n  if (!rbcInfoAfterVal.value || !Array.isArray(rbcInfoAfterVal.value)) {\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoBeforeVal.value || !Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    return;\r\n  }\r\n\r\n\r\n  for (const category of rbcInfoAfterVal.value) {\r\n    for (const classItem of category.classInfo) {\r\n      let count = 0;\r\n\r\n      for (const afterCategory of rbcInfoPathAfter.value) {\r\n        for (const afterClassItem of afterCategory.classInfo) {\r\n          if (afterClassItem.classNm.replace(/\\s+/g, '') === classItem.classNm.replace(/\\s+/g, '') && afterCategory.categoryId === category.categoryId) {\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n\r\n      classItem.originalDegree = count;\r\n    }\r\n  }\r\n\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal;\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst reDegree = async (rbcInfoArray: any) => {\r\n  if (bmClassIsBoolen.value) return;\r\n\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n  if (!Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n\r\n  rbcInfoArray.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) {\r\n            setDegree('0');\r\n            return;\r\n          }\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) {\r\n            setDegree('1');\r\n            return;\r\n          }\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) {\r\n            setDegree('2');\r\n            return;\r\n          }\r\n          // 3\r\n          else {\r\n            setDegree('3');\r\n            return;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst dateRefresh = () => {\r\n  startDate.value = thirtyDaysAgo\r\n  endDate.value = new Date();\r\n  searchText.value = '';\r\n  nrCount.value = 0;\r\n  wbcCountOrder.value = 'all';\r\n  testType.value = '00';\r\n  titleItemArr.value = [];\r\n  titleItem.value = [];\r\n  sessionStorage.removeItem('lastSearchParams');\r\n  localStorage.removeItem('lastSearchParams');\r\n  search();\r\n}\r\n\r\nconst checkListItem = (items: any) => {\r\n  checkedSelectedItems.value = items;\r\n}\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const rulers = [{\r\n    id: 'none',\r\n    text: 'None',\r\n  }, {\r\n    id: 'line',\r\n    text: 'Line',\r\n  }, {\r\n    id: 'cross',\r\n    text: 'Cross',\r\n  }, {\r\n    id: 'circle',\r\n    text: 'Circle'\r\n}]\r\n\r\nexport type VisibleRbcType = { classId: string; categoryId: string };\r\n\r\nexport const VISIBLE_SIZE_OPTIONS = [\r\n  { categoryId: '01', classId: '01' },\r\n  { categoryId: '01', classId: '02' },\r\n  { categoryId: '01', classId: '03' },\r\n];\r\n\r\nexport const VISIBLE_CHROMIA_OPTIONS = [\r\n  { categoryId: '02', classId: '01' },\r\n  { categoryId: '02', classId: '02' },\r\n  { categoryId: '02', classId: '03' },\r\n];\r\n\r\nexport const VISIBLE_SHAPE_OPTIONS = [\r\n  { categoryId: '03', classId: '01' },\r\n  { categoryId: '03', classId: '03' },\r\n  { categoryId: '03', classId: '04' },\r\n  { categoryId: '03', classId: '05' },\r\n  { categoryId: '03', classId: '06' },\r\n  { categoryId: '03', classId: '07' },\r\n  { categoryId: '03', classId: '08' },\r\n  { categoryId: '03', classId: '09' },\r\n  { categoryId: '03', classId: '10' },\r\n  { categoryId: '03', classId: '11' },\r\n];\r\n\r\nexport const VISIBLE_INCLUSION_BODY_OPTIONS = [\r\n  { categoryId: '05', classId: '01' },\r\n  { categoryId: '05', classId: '02' },\r\n  { categoryId: '05', classId: '03' },\r\n];\r\n\r\nexport const VISIBLE_OTHERS_OPTIONS = [\r\n  { categoryId: '04', classId: '01' }\r\n];\r\n\r\nexport const VISIBLE_RBC_OPTIONS = [\r\n    ...VISIBLE_SIZE_OPTIONS,\r\n  ...VISIBLE_CHROMIA_OPTIONS,\r\n  ...VISIBLE_SHAPE_OPTIONS,\r\n  ...VISIBLE_INCLUSION_BODY_OPTIONS,\r\n  ...VISIBLE_OTHERS_OPTIONS\r\n];","import { gql } from \"graphql-tag\";\r\nimport * as VueApolloComposable from \"@vue/apollo-composable\";\r\nimport { ReactiveFunction, UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables } from \"../index\";\r\n\r\n// GraphQL 문서\r\nexport const UpdateRunningInfoDocument = gql`\r\n    mutation UpdateRunningInfo($updateDto: UpdateRuningInfoDto!) {\r\n        updateRunningInfoGQL(updateDto: $updateDto) {\r\n            id\r\n            isNormal\r\n            abnormalClassInfo {\r\n                classNm\r\n                val\r\n            }\r\n            pcIp\r\n            lock_status\r\n            wbcInfoAfter {\r\n                id\r\n                name\r\n                count\r\n                title\r\n                images {\r\n                    coordinates {\r\n                        display\r\n                    }\r\n                    fileName\r\n                    title\r\n                    filter\r\n                    height\r\n                    width\r\n                }\r\n                percent\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const cbcUpdateDocument = gql`\r\n    mutation UpdateRunningInfo($updateDto: UpdateRuningInfoDto!) {\r\n        updateRunningInfoGQL(updateDto: $updateDto) {\r\n            id\r\n            submitState\r\n            submitOfDate\r\n            submitUserId\r\n        }\r\n    }\r\n`;\r\n\r\nexport const memoUpdateDocument = gql`\r\n    mutation UpdateRunningInfo($updateDto: UpdateRuningInfoDto!) {\r\n        updateRunningInfoGQL(updateDto: $updateDto) {\r\n            id\r\n            wbcMemo\r\n            rbcMemo\r\n        }\r\n    }\r\n`;\r\n\r\nexport const rbcUpdateDocument = gql`\r\n    mutation UpdateRunningInfo($updateDto: UpdateRuningInfoDto!) {\r\n        updateRunningInfoGQL(updateDto: $updateDto) {\r\n            id\r\n            rbcInfoAfter {\r\n                classInfo {\r\n                    classId\r\n                    classNm\r\n                    degree\r\n                    originalDegree\r\n                    percent\r\n                }\r\n                categoryId\r\n                categoryNm\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// 뮤테이션 훅 정의\r\nexport function useUpdateRunningInfoMutation(options: VueApolloComposable.UseMutationOptions<UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables>> = {}) {\r\n    return VueApolloComposable.useMutation<UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables>(UpdateRunningInfoDocument, options);\r\n}\r\n\r\nexport function cbcUpdateMutation(options: VueApolloComposable.UseMutationOptions<UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables>> = {}) {\r\n    return VueApolloComposable.useMutation<UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables>(cbcUpdateDocument, options);\r\n}\r\n\r\nexport function memoUpdateMutation(options: VueApolloComposable.UseMutationOptions<UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables>> = {}) {\r\n    return VueApolloComposable.useMutation<UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables>(memoUpdateDocument, options);\r\n}\r\n\r\nexport function rbcUpdateMutation(options: VueApolloComposable.UseMutationOptions<UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables> | ReactiveFunction<VueApolloComposable.UseMutationOptions<UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables>> = {}) {\r\n    return VueApolloComposable.useMutation<UpdateRunningInfoMutation, UpdateRunningInfoMutationVariables>(rbcUpdateDocument, options);\r\n}\r\n\r\ntype MutationHook = (options: {\r\n    variables: { updateDto: any };\r\n}) => {\r\n    mutate: () => Promise<any>;\r\n    loading: boolean;\r\n    error: any;\r\n    onDone: () => void;\r\n};\r\n\r\n// 공통 업데이트 함수\r\nexport const gqlGenericUpdate = async (\r\n    mutationHook: MutationHook,\r\n    originalDb: any,\r\n) => {\r\n    const updateDtos = {\r\n        runingInfoDtoItems: [\r\n            originalDb,\r\n        ],\r\n    };\r\n\r\n    const { mutate, loading, error, onDone } = mutationHook({\r\n        variables: {\r\n            updateDto: updateDtos,\r\n        },\r\n    });\r\n\r\n    return await mutate();\r\n};\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementBlock as _createElementBlock, unref as _unref, createVNode as _createVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"createdRbc\" }\nconst _hoisted_2 = { class: \"mt10 flex-justify-between\" }\nconst _hoisted_3 = { class: \"leftWbcInfo rbcClass\" }\nconst _hoisted_4 = { class: \"pos-relative\" }\nconst _hoisted_5 = {\n  key: 1,\n  class: \"memoModal\"\n}\nconst _hoisted_6 = { class: \"categoryNm\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"mt18 mb14 liTitle\"\n}\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = { style: {\"margin-left\":\"12px\",\"margin-top\":\"2px\"} }\nconst _hoisted_10 = { class: \"classNmRbc\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mt18 mb14 liTitle flex-justify-start-align-center w-fit\",\n  style: {\"top\":\"-4px\"}\n}\nconst _hoisted_12 = [\"onClick\"]\nconst _hoisted_13 = { key: 0 }\nconst _hoisted_14 = { key: 0 }\nconst _hoisted_15 = [\"onClick\"]\nconst _hoisted_16 = { key: 0 }\nconst _hoisted_17 = { class: \"degree analysis\" }\nconst _hoisted_18 = {\n  key: 0,\n  class: \"mt18 mb14 liTitle\"\n}\nconst _hoisted_19 = { key: 0 }\nconst _hoisted_20 = {\n  key: 0,\n  class: \"rbcSapn\"\n}\nconst _hoisted_21 = {\n  key: 1,\n  class: \"rbcSapnDown\"\n}\nconst _hoisted_22 = { key: 1 }\nconst _hoisted_23 = {\n  key: 0,\n  class: \"rbcSapn\"\n}\nconst _hoisted_24 = {\n  key: 1,\n  class: \"rbcSapn\"\n}\nconst _hoisted_25 = {\n  key: 2,\n  class: \"rbcSapnDown\"\n}\nconst _hoisted_26 = {\n  key: 3,\n  class: \"rbcSapnDown\"\n}\nconst _hoisted_27 = { key: 2 }\nconst _hoisted_28 = { key: 3 }\nconst _hoisted_29 = { key: 4 }\nconst _hoisted_30 = { class: \"rbcPercent\" }\nconst _hoisted_31 = {\n  key: 0,\n  class: \"mt18 mb14 liTitle\"\n}\nconst _hoisted_32 = { key: 0 }\nconst _hoisted_33 = { key: 1 }\nconst _hoisted_34 = {\n  key: 2,\n  class: \"defaultText\"\n}\nconst _hoisted_35 = {\n  key: 3,\n  class: \"defaultText\"\n}\nconst _hoisted_36 = { key: 4 }\nconst _hoisted_37 = {\n  key: 5,\n  class: \"underline\"\n}\nconst _hoisted_38 = { class: \"rbcPercent mr1\" }\nconst _hoisted_39 = {\n  key: 0,\n  class: \"mt18 mb14 liTitle\"\n}\nconst _hoisted_40 = { key: 0 }\nconst _hoisted_41 = { key: 1 }\nconst _hoisted_42 = {\n  key: 2,\n  class: \"defaultText\"\n}\nconst _hoisted_43 = {\n  key: 3,\n  class: \"defaultText\"\n}\nconst _hoisted_44 = { key: 4 }\nconst _hoisted_45 = { class: \"categories rbcClass\" }\nconst _hoisted_46 = { class: \"classNmRbc\" }\nconst _hoisted_47 = { key: 0 }\nconst _hoisted_48 = { class: \"degree analysis\" }\nconst _hoisted_49 = { style: {\"width\":\"130px\"} }\nconst _hoisted_50 = {\n  key: 0,\n  class: \"memoModal bottom text-left staticMemoModal\"\n}\n\nimport {ref, watch, onMounted, computed, nextTick} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {RbcInfo} from \"@/store/modules/analysis/rbcClassification\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {MESSAGES, MSG} from \"@/common/defines/constants/constantMessageText\";\r\nimport moment from \"moment/moment\";\r\nimport {tcpReq} from \"@/common/defines/constants/tcpRequest/tcpReq\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {RBC_CODE_CLASS_ID, SHOWING_RBC_SHAPE_CLASS_IDS} from \"@/common/defines/constants/dataBase\";\r\nimport {\r\n  VISIBLE_CHROMIA_OPTIONS, VISIBLE_INCLUSION_BODY_OPTIONS, VISIBLE_OTHERS_OPTIONS,\r\n  VISIBLE_RBC_OPTIONS,\r\n  VISIBLE_SHAPE_OPTIONS,\r\n  VISIBLE_SIZE_OPTIONS, VisibleRbcType\r\n} from \"@/common/defines/constants/rbc\";\r\nimport Tooltip from \"@/components/commonUi/Tooltip.vue\";\r\nimport {TooltipRbcClassType} from \"@/common/type/tooltipType\";\r\nimport {DIR_NAME} from \"@/common/defines/constants/settings\";\r\nimport {cbcUpdateMutation, gqlGenericUpdate, memoUpdateMutation, rbcUpdateMutation} from \"@/gql/mutation/slideData\";\r\n\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'rbcClass',\n  props: ['rbcInfo', 'type', 'allCheckClear', 'isCommitChanged', 'notCanvasClickVal'],\n  setup(__props, { emit: __emit }) {\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\nconst checkedClassIndices = ref<string[]>([]);\r\nconst props = __props;\r\nconst rbcInfoAfterVal = ref<any>([]);\r\nconst rbcInfoBeforeVal = ref<any>([]);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst memo = ref('');\r\nconst sliderValue = ref(50);\r\nconst memoModal = ref(false);\r\nconst store = useStore();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isBefore = ref(false);\r\nconst classInfoArr = ref<any>([]);\r\nconst emits = __emit;\r\nconst maxRbcCount: any = ref('');\r\nconst router = useRouter();\r\nconst except = ref(false);\r\nconst rightClickItem: any = ref([]);\r\nconst selectedClass = ref('Macrocyte');\r\nconst allCheckType = ref<Record<string, boolean>>({\r\n  '01': true,\r\n  '02': true,\r\n  '03': true,\r\n  '05': true,\r\n  '04': true,\r\n})\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst jsonIsBool = ref(false);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst resetRbcArr = computed(() => store.state.commonModule.resetRbcArr);\r\nconst rbcImagePageNumber = computed(() => store.state.commonModule.rbcImagePageNumber);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst bodyTotal = ref(0);\r\nconst shapeTotal = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst rbcReDataCheck = computed(() => store.state.commonModule.rbcReDataCheck);\r\nconst rbcSendtimerId = ref<number | null>(null);\r\nlet timeoutId: any;\r\nconst submitState = ref('');\r\nconst projectType = ref(window.PROJECT_TYPE);\r\nconst shapeOthersCount = ref(0);\r\nconst rbcResponseOldArr: any = ref([]);\r\nconst tooltipVisible = ref({\r\n  confirm: false,\r\n  memo: false,\r\n})\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcImagePageNumber: 0});\r\n  const {path} = router.currentRoute.value;\r\n  memo.value = slideData.value?.rbcMemo;\r\n  pltCount.value = slideData.value?.rbcInfo.pltCount;\r\n  malariaCount.value = slideData.value?.rbcInfo.malariaCount;\r\n  memo.value = slideData.value?.rbcMemo;\r\n  maxRbcCount.value = slideData.value?.rbcInfo.maxRbcCount;\r\n  submitState.value = slideData.value?.submitState;\r\n  except.value = path === '/report';\r\n  rightClickItem.value = [];\r\n  rightClickItemSet();\r\n  await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n  await afterChange(slideData.value);\r\n  await countReAdd();\r\n\r\n});\r\n\r\n\r\nwatch(() => props.isCommitChanged, () => {\r\n  submitState.value = 'Submit';\r\n})\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n}, {deep: true})\r\n\r\nwatch(() => rbcImagePageNumber.value, async (newRbcPageNumber) => {\r\n  await rbcTotalAndReCount(newRbcPageNumber);\r\n  await countReAdd();\r\n})\r\n\r\nconst rightClickItemSet = () => {\r\n  rightClickItem.value = [];\r\n  if (!slideData.value?.rbcInfo) {\r\n    return;\r\n  }\r\n  const processItems = slideData.value?.rbcInfo.rbcClass || slideData.value?.rbcInfo;\r\n\r\n  if (processItems) {\r\n    for (const argument of processItems) {\r\n      argument.classInfo.forEach((classInfo: any) => {\r\n        if (classInfo.classNm !== 'Normal') {\r\n          rightClickItem.value.push({...classInfo, categoryId: argument.categoryId});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  rightClickItem.value.push(\r\n      {categoryId: '04', classId: '01', classNm: 'Platelet'},\r\n      {categoryId: '05', classId: '03', classNm: 'Malaria'}\r\n  );\r\n}\r\n\r\n\r\nwatch(\r\n    () => slideData.value.id,\r\n    async (newVal, oldVal) => {\r\n      await nextTick();\r\n      await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n      await getRbcDegreeData();\r\n      await reDegree(rbcInfoBeforeVal.value);\r\n      pltCount.value = slideData.value?.pltCount;\r\n      malariaCount.value = slideData.value?.malariaCount;\r\n      memo.value = slideData.value?.rbcMemo;\r\n      submitState.value = slideData.value?.submitState;\r\n      rightClickItemSet();\r\n      allCheckType.value = {\r\n        '01': true,\r\n        '02': true,\r\n        '03': true,\r\n        '04': true,\r\n        '05': true,\r\n      }\r\n      await countReAdd();\r\n    },\r\n    { deep: true}\r\n);\r\n\r\n\r\nwatch(() => resetRbcArr, async (newItem) => {\r\n  if (newItem) {\r\n    await store.dispatch('commonModule/setCommonInfo', {resetRbcArr: false});\r\n    await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n    await countReAdd();\r\n  }\r\n}, {deep: true})\r\n\r\nwatch(() => props.allCheckClear, () => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n  allCheckType.value = {\r\n    '01': true,\r\n    '02': true,\r\n    '03': true,\r\n    '04': true,\r\n    '05': true,\r\n  }\r\n}, {deep: true})\r\n\r\n\r\nwatch(() => rbcReData, async (newItem) => {\r\n  if (newItem) {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(async () => {\r\n      jsonIsBool.value = false;\r\n      // await afterChange();\r\n      await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n      await countReAdd();\r\n      await getRbcDegreeData();\r\n    }, 1000);\r\n  }\r\n\r\n}, {deep: true});\r\n\r\nconst showCheckbox = (categoryId: string, classId: string, availableClassIds: {\r\n  categoryId: string;\r\n  classId: string\r\n}[]) => availableClassIds.find((item) => item.categoryId === categoryId && item.classId === classId);\r\n\r\nconst handleClick = (categoryId: string, classId: string, classNm: string, categoryNm: string) => {\r\n  if (props.notCanvasClickVal) return;\r\n  if (!showCheckbox(categoryId, classId, VISIBLE_RBC_OPTIONS)) return;\r\n\r\n  toggleCheckbox(categoryId, classId, classNm);\r\n  clickChangeSens(classNm, categoryNm, categoryId, classId);\r\n}\r\n\r\nconst toggleCheckbox = (categoryId: string, classId: string, classNm: string) => {\r\n  const checkValue = `${categoryId}-${classId}`;\r\n  const isChecked = checkedClassIndices.value.includes(checkValue);\r\n\r\n  // `RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID`를 유지하기 위한 필터링 로직 추가\r\n  const othersCategoryItems = checkedClassIndices.value.filter((item) => item.startsWith(RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID));\r\n\r\n  if (isChecked) {\r\n    checkedClassIndices.value = checkedClassIndices.value.filter((item: any) => item !== checkValue);\r\n  } else {\r\n    if (categoryId === RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID) checkedClassIndices.value.push(checkValue);\r\n    else {\r\n      const checkedCategoryIdArr = checkedClassIndices.value.map((item) => item.split('-')[0]);\r\n\r\n      // Shape 과 InclusionBody는 같은 Total이므로 조건 추가\r\n      const isShapeOrInclusionBodyClicked = checkedCategoryIdArr.some((item) => item === '03' || item === '05') && (categoryId === '03' || categoryId === '05');\r\n\r\n      if (!checkedCategoryIdArr.includes(categoryId) && !isShapeOrInclusionBodyClicked) {\r\n        checkedClassIndices.value = [checkValue];\r\n        if (othersCategoryItems.length > 0) {\r\n          checkedClassIndices.value = [...checkedClassIndices.value, ...othersCategoryItems];\r\n        }\r\n      } else checkedClassIndices.value.push(checkValue);\r\n    }\r\n  }\r\n\r\n  const optionsMap: Record<string, VisibleRbcType[]> = {\r\n    '01': VISIBLE_SIZE_OPTIONS,\r\n    '02': VISIBLE_CHROMIA_OPTIONS,\r\n    '03': VISIBLE_SHAPE_OPTIONS,\r\n    '04': VISIBLE_OTHERS_OPTIONS,\r\n    '05': VISIBLE_INCLUSION_BODY_OPTIONS,\r\n  };\r\n\r\n  if (optionsMap[categoryId] && categoryId !== RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID) {\r\n    const setCheckedClassIndices = new Set(checkedClassIndices.value);\r\n\r\n    for (const categoryId of Object.keys(allCheckType.value)) {\r\n      const availableOptions = categoryId === RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID || categoryId === RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID\r\n          ? [...VISIBLE_SHAPE_OPTIONS, ...VISIBLE_INCLUSION_BODY_OPTIONS].map((item) => `${item.categoryId}-${item.classId}`)\r\n          : optionsMap[categoryId].map((item) => `${item.categoryId}-${item.classId}`);\r\n      const allChecked = availableOptions.every((item) => setCheckedClassIndices.has(item));\r\n      if (allChecked) allCheckType.value[categoryId] = !allChecked;\r\n      else allCheckType.value[categoryId] = true;\r\n    }\r\n  }\r\n\r\n  updateClassInfoArr(classNm, !isChecked, categoryId, classId);\r\n}\r\n\r\nconst rbcTotalAndReCount = async (pageNumber: any) => {\r\n  const path = slideData.value?.img_drive_root_path !== '' && slideData.value?.img_drive_root_path ? slideData.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${slideData.value.slotId}/${DIR_NAME.RBC_CLASS}/${slideData.value.slotId}_new_${rbcImagePageNumber.value}.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${slideData.value.slotId}/${DIR_NAME.RBC_CLASS}/${slideData.value.slotId}.json`;\r\n  rbcResponseOldArr.value = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of rbcResponseOldArr.value.data[pageNumber].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            el.index === newRbcData.index\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = rbcResponseOldArr.value?.data[pageNumber].rbcClassList;\r\n  } else {\r\n    if (rbcResponseOldArr.value?.data.length === 0 || !rbcResponseOldArr.value?.data[pageNumber]) rbcInfoPathAfter.value = [];\r\n    else rbcInfoPathAfter.value = rbcResponseOldArr.value?.data[pageNumber].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeTotalVal = 0;\r\n  let inclusionBody = 0;\r\n  shapeOthersCount.value = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    switch (el.categoryId) {\r\n      case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n        total = el.classInfo.length;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n        chromiaTotalval = el.classInfo.length;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n        shapeTotalVal = el.classInfo.length;\r\n\r\n        for (const classItem of el.classInfo) {\r\n          if (!SHOWING_RBC_SHAPE_CLASS_IDS.includes(classItem.classId)) {\r\n            shapeOthersCount.value += 1;\r\n          }\r\n        }\r\n        break;\r\n      case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n        inclusionBody = el.classInfo.length;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total);\r\n  sizeChromiaTotal.value = Number(total);\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  bodyTotal.value = Number(inclusionBody);\r\n  shapeTotal.value = Number(shapeTotalVal);\r\n  shapeBodyTotal.value = Number(shapeTotalVal) + Number(inclusionBody);\r\n}\r\n\r\nconst percentageChange = (count: any, categoryId: string): any => {\r\n  const percentage: any = ((Number(count) / calculateRbcTotalByCategoryId(categoryId)) * 100).toFixed(1);\r\n  if (isNaN(percentage)) return '-';\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst calculateRbcTotalByCategoryId = (categoryId: string) => {\r\n  switch (categoryId) {\r\n    case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n      return Number(rbcTotalVal.value);\r\n    case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n      return Number(chromiaTotalTwo.value);\r\n    case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n    case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n      return Number(shapeBodyTotal.value);\r\n    default:\r\n      return Number(rbcTotalVal.value);\r\n  }\r\n}\r\n\r\nconst classChange = async () => {\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  if (!Array.isArray(rbcData)) {\r\n    return;\r\n  }\r\n  const category = rbcData.find((el: any) => el.categoryNm === selectedClass.value);\r\n  if (category) {\r\n    sliderValue.value = category.sensitivity || 50;\r\n    return;\r\n  }\r\n\r\n  for (const el of rbcData) {\r\n    const classInfoItem = el.classInfo.find((classInfo: any) => classInfo.classNm === selectedClass.value);\r\n    if (classInfoItem) {\r\n      sliderValue.value = classInfoItem.sensitivity || 50;\r\n      return;\r\n    }\r\n  }\r\n  sliderValue.value = 50;\r\n};\r\n\r\nconst resetTimer = () => {\r\n  if (rbcSendtimerId.value !== null) {\r\n    clearTimeout(rbcSendtimerId.value);\r\n  }\r\n};\r\n\r\n\r\nwatch(rbcReDataCheck, (newVal) => {\r\n  resetTimer();\r\n\r\n  if (rbcSendtimerId.value !== null) {\r\n    clearInterval(rbcSendtimerId.value);\r\n  }\r\n\r\n  rbcSendtimerId.value = window.setInterval(() => {\r\n    if (newVal) {\r\n      sensRbcReJsonSend();\r\n    }\r\n  }, 800);\r\n}, {deep: true});\r\n\r\n\r\nconst sensRbcReJsonSend = async () => {\r\n  jsonIsBool.value = true;\r\n  await rbcInfoAfterSensitivity(selectedClass.value);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n  const payload = {\r\n    jobCmd: 'RBC_RE_CLASSIFICATION',\r\n    sensitivity: Number(sliderValue.value),\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    reqUserId: userModuleDataGet.value.userId || '',\r\n    className: selectedClass.value.replace(/\\s/g, ''),\r\n    slotId: slideData.value?.slotId,\r\n    anyWay: 'true',\r\n  };\r\n  EventBus.publish('childEmitSocketData', payload);\r\n}\r\n\r\nconst clickChangeSens = (classNm: string, categoryNm: string, categoryId: string, classId: any) => {\r\n  if (classNm === 'Normal') return;\r\n\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const el of rbcData) {\r\n    for (const item of el?.classInfo) {\r\n      if (item.classNm === classNm && item.classId === classId) {\r\n        sliderValue.value = item.sensitivity || 50;\r\n      }\r\n    }\r\n  }\r\n  selectedClass.value = classNm;\r\n  return;\r\n\r\n}\r\n\r\n\r\nconst areDegreesIdentical = (arr1: any[], arr2: any[]): boolean => {\r\n\r\n  // 배열 항목 비교\r\n  for (let i = 0; i < arr1.length; i++) {\r\n    const item1 = arr1[i];\r\n    const item2 = arr2[i];\r\n\r\n    for (let j = 0; j < item1.classInfo.length; j++) {\r\n      const classInfo1 = item1.classInfo[j];\r\n      const classInfo2 = item2.classInfo[j];\r\n\r\n      // degree 값 비교\r\n      if (String(classInfo1.degree) !== String(classInfo2.degree)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst afterChange = async (newItem?: any) => {\r\n  isBefore.value = false;\r\n  emits('isBeforeUpdate', false);\r\n  const rbcData: any = slideData.value;\r\n\r\n  rbcInfoBeforeVal.value = rbcData.rbcInfo?.rbcClass ? rbcData.rbcInfo.rbcClass : rbcData;\r\n  rbcInfoAfterVal.value = slideData.value?.rbcInfoAfter;\r\n  await classChange();\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  // rbcInfoBeforeVal.value와 rbcInfoPathAfter.value가 정의되어 있는지 확인\r\n  if (!rbcInfoBeforeVal.value || !Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    return;\r\n  }\r\n\r\n  for (const category of rbcInfoBeforeVal.value) {\r\n    for (const classItem of category.classInfo) {\r\n      let count = 0;\r\n      for (const afterCategory of rbcInfoPathAfter.value) {\r\n        for (const afterClassItem of afterCategory.classInfo) {\r\n          // 기존 비교\r\n          // if (afterClassItem.classNm.replace(/\\s+/g, '') === classItem.classNm.replace(/\\s+/g, '') && afterCategory.categoryId === category.categoryId) {\r\n          if (afterClassItem.classId === classItem.classId && afterCategory.categoryId === category.categoryId) {\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n\r\n      classItem.originalDegree = count;\r\n      classItem.percent = percentageChange(count, category.categoryId);\r\n    }\r\n  }\r\n\r\n  maxRbcCount.value = 0;\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID || el.categoryId === RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) {\r\n      maxRbcCount.value += Number(el.classInfo.length);\r\n      // const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      // maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID) {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classId === RBC_CODE_CLASS_ID.OTHERS.PLATELET) {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classId === RBC_CODE_CLASS_ID.INCLUSION_BODY.MALARIA) {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal;\r\n};\r\n\r\n\r\nconst rbcInfoAfterSensitivity = async (selectedClassVal: string) => {\r\n  let rbcInfoAfterData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const item of rbcInfoAfterData) {\r\n    if (item.categoryNm === selectedClassVal) {\r\n      item.sensitivity = sliderValue.value;\r\n    } else {\r\n      const findClass = item?.classInfo?.findIndex((option: any) => option.classNm === selectedClassVal);\r\n      if (findClass !== -1 && findClass !== undefined) {\r\n        if (item?.classInfo) {\r\n          item.classInfo[findClass].sensitivity = sliderValue.value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfterData;\r\n\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfterData,\r\n  };\r\n\r\n  const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n\r\n  // rbc info 업데이트\r\n  await gqlGenericUpdate(rbcUpdateMutation, {\r\n    id: updatedRuningInfo.id,\r\n    rbcInfoAfter: updatedRuningInfo.rbcInfoAfter,\r\n  });\r\n  await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n\r\n  return;\r\n}\r\n\r\nconst toggleAll = (allCheck: boolean, categoryId: string) => {\r\n  if (props.notCanvasClickVal) return;\r\n\r\n  const baseClassIds =\r\n      categoryId === RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID || categoryId === RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID\r\n          ? [...VISIBLE_SHAPE_OPTIONS, ...VISIBLE_INCLUSION_BODY_OPTIONS] // Shape 과 Inclusion Body는 total 값을 공유\r\n          : VISIBLE_RBC_OPTIONS.filter((item) => item.categoryId === categoryId);\r\n\r\n  const allClassIds = checkedClassIndices.value.some((item) => item.startsWith(RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID))\r\n      ? [...baseClassIds, ...VISIBLE_OTHERS_OPTIONS]  // Others는 total 값에서 제외\r\n      : baseClassIds;\r\n\r\n  const allCheckboxes = rbcInfoBeforeVal.value.flatMap((item: any) => {\r\n    const categoryCheckboxes = item.classInfo\r\n        .filter((classInfo: any) => showCheckbox(item.categoryId, classInfo.classId, allClassIds))\r\n        .map((classInfo: any) => ({\r\n          classNm: classInfo.classNm,\r\n          categoryId: item.categoryId,\r\n          classId: classInfo.classId\r\n        }));\r\n\r\n    if (categoryId === item.categoryId && item.categoryId === RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) {\r\n      categoryCheckboxes.push({classNm: 'Malaria', categoryId: '05', classId: '03'});\r\n    }\r\n\r\n    return categoryCheckboxes;\r\n  });\r\n\r\n  if (categoryId === RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID) allCheckboxes.push({\r\n    classNm: 'Platelet',\r\n    categoryId: '04',\r\n    classId: '01'\r\n  });\r\n\r\n  const categoryClassIdStrArr = allClassIds.map((item) => `${item.categoryId}-${item.classId}`);\r\n  if (allCheck) {\r\n    const hasCategoryId = checkedClassIndices.value.some((item) => item.startsWith(categoryId));\r\n    checkedClassIndices.value = hasCategoryId\r\n        ? [...new Set([...checkedClassIndices.value, ...categoryClassIdStrArr])]\r\n        : categoryClassIdStrArr;\r\n  } else {\r\n    checkedClassIndices.value = checkedClassIndices.value.filter((item) =>\r\n        item.startsWith(RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID) || !categoryClassIdStrArr.includes(item)\r\n    );\r\n  }\r\n\r\n  for (const checkbox of allCheckboxes) {\r\n    updateClassInfoArr(checkbox.classNm, allCheck, checkbox.categoryId, checkbox.classId);\r\n  }\r\n\r\n  const validCategories = ['01', '02', '03', '04', '05'];\r\n  for (const validCategoryId of validCategories) {\r\n    allCheckType.value[validCategoryId] = true;\r\n  }\r\n\r\n  if (allCheck) {\r\n    if (categoryId === RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID || categoryId === RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) {\r\n      allCheckType.value[RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID] = false;\r\n      allCheckType.value[RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID] = false;\r\n    } else {\r\n      allCheckType.value[categoryId] = false;\r\n    }\r\n  }\r\n}\r\n\r\nconst updateClassInfoArr = (classNm: string, isChecked: boolean, categoryId: string, classId: string) => {\r\n  if (props.notCanvasClickVal) return;\r\n\r\n  const classItem = {classNm, categoryId, classId};\r\n  if (isChecked) {\r\n    classInfoArr.value.push(classItem)\r\n    classInfoArr.value = classInfoArr.value.filter((item) => checkedClassIndices.value.includes(`${item.categoryId}-${item.classId}`));\r\n  } else {\r\n    classInfoArr.value = classInfoArr.value.filter((item: any) => !(item.classNm === classNm && item.classId === classId && item.categoryId === categoryId));\r\n  }\r\n\r\n  emits('classInfoArrUpdate', classInfoArr.value);\r\n};\r\n\r\nwatch(rbcReData, async (newItem, oldItem) => {\r\n  if (newItem) {\r\n    updataClassInfoaArr();\r\n    return;\r\n  }\r\n\r\n}, {deep: true})\r\nconst updataClassInfoaArr = () => {\r\n  emits('classInfoArrUpdateRe', classInfoArr.value);\r\n}\r\n\r\nconst onClickDegree = async (category: any, classInfo: any, degreeIndex: any, isNormal = false) => {\r\n  if (props.type === 'report') {\r\n    return;\r\n  }\r\n  // rbcInfoAfterVal을 깊은 복사하여 수정\r\n  const rbcInfoAfter = JSON.parse(JSON.stringify(rbcInfoAfterVal.value)).map((rbc: any) => {\r\n    if (rbc.categoryNm === category.categoryNm) {\r\n      rbc.classInfo = rbc.classInfo.map((item: any) => {\r\n        if (item.classNm === classInfo.classNm) {\r\n          if (isNormal) {\r\n            item.degree = String(Number(item.degree) === 0 ? 1 : 0);\r\n          } else {\r\n            item.degree = String(degreeIndex);\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n    return rbc;\r\n  });\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfter;\r\n\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfter,\r\n  };\r\n  const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcInfoAfterData: rbcInfoAfter});\r\n  await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n\r\n  const res = await gqlGenericUpdate(rbcUpdateMutation, {\r\n    id: updatedRuningInfo.id,\r\n    rbcInfoAfter: updatedRuningInfo.rbcInfoAfter,\r\n  });\r\n\r\n  if (res && res?.data?.updateRunningInfoGQL[0].length !== 0) {\r\n    await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n    await countReAdd();\r\n    await getRbcDegreeData();\r\n  }\r\n\r\n};\r\n\r\nconst memoOpen = () => {\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoChange = async () => {\r\n\r\n  const enterAppliedRbcMemo = memo.value.replaceAll('\\r\\n', '<br>');\r\n  const updatedItem = {\r\n    rbcMemo: enterAppliedRbcMemo,\r\n  };\r\n  const updatedRuningInfo = {...slideData.value, ...updatedItem}\r\n  const res = await gqlGenericUpdate(memoUpdateMutation, {\r\n    id: updatedRuningInfo.id,\r\n    wbcMemo: updatedRuningInfo.wbcMemo,\r\n    rbcMemo: updatedRuningInfo.rbcMemo,\r\n  });\r\n  if (res && res?.data?.updateRunningInfoGQL[0].length !== 0) {\r\n    memo.value = updatedRuningInfo.rbcMemo;\r\n    showSuccessAlert('Success');\r\n  }\r\n  memoModal.value = false;\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst commitConfirmed = () => {\r\n  if (submitState.value === 'Submit') {\r\n    return;\r\n  }\r\n  showConfirm.value = true;\r\n  confirmMessage.value = MESSAGES.IDS_MSG_CONFIRM_SLIDE;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  onCommit();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n\r\n  const localTime = moment().local();\r\n\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.userId,\r\n  };\r\n  const updatedRuningInfo = {...slideData.value, ...updatedItem}\r\n  await gqlGenericUpdate(cbcUpdateMutation, {\r\n    id: updatedRuningInfo.id,\r\n    submitState: updatedRuningInfo.submitState,\r\n    submitOfDate: updatedRuningInfo.submitOfDate,\r\n    submitUserId: updatedRuningInfo.submitUserId,\r\n  });\r\n\r\n  emits('submitStateChanged', 'Submit');\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst reDegree = async (rbcInfoArray: any) => {\r\n  if (projectType.value === 'bm') return;\r\n\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n  if (!Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n  rbcInfoArray.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID) { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID) { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) {\r\n            setDegree('0');\r\n            return;\r\n          }\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) {\r\n            setDegree('1');\r\n            return;\r\n          }\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) {\r\n            setDegree('2');\r\n            return;\r\n          }\r\n          // 3\r\n          else {\r\n            setDegree('3');\r\n            return;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID) { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n          } else if (degreeStandard.categoryId === RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID) { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) percent = 0;\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          else setDegree('3');\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      // size\r\n      if (rbcCategory.categoryId === RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID) {\r\n        if (rbcClass.classId === RBC_CODE_CLASS_ID.SIZE.NORMAL) rbcCategory.classInfo[0].degree = '1';\r\n        if ([RBC_CODE_CLASS_ID.SIZE.MACROCYTE, RBC_CODE_CLASS_ID.SIZE.MICROCTYE].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID) {\r\n        if (rbcClass.classId === RBC_CODE_CLASS_ID.CHROMIA.NORMAL) rbcCategory.classInfo[0].degree = '1';\r\n        if ([RBC_CODE_CLASS_ID.CHROMIA.HYPERCHROMIC, RBC_CODE_CLASS_ID.CHROMIA.HYPOCHROMIC].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID) {\r\n        if (rbcClass.classId === RBC_CODE_CLASS_ID.SHAPE.NORMAL) {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== RBC_CODE_CLASS_ID.SHAPE.NORMAL && rbcClass.classId !== RBC_CODE_CLASS_ID.SHAPE.POLIKILOCYTOSIS) {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst tooltipVisibleFunc = (type: keyof TooltipRbcClassType, visible: boolean) => {\r\n  tooltipVisible.value[type] = visible;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Creating a new RBC classification ...\", 512), [\n      [_vShow, jsonIsBool.value]\n    ]),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _cache[11] || (_cache[11] = _createElementVNode(\"h3\", { class: \"wbcClassInfoLeft\" }, \"RBC Classification\", -1)),\n        _createElementVNode(\"ul\", _hoisted_3, [\n          _createElementVNode(\"li\", _hoisted_4, [\n            (__props.type !== 'report')\n              ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                  key: 0,\n                  icon: ['fas', 'comment-dots'],\n                  onClick: memoOpen,\n                  onMouseenter: _cache[0] || (_cache[0] = ($event: any) => (tooltipVisibleFunc('memo', true))),\n                  onMouseleave: _cache[1] || (_cache[1] = ($event: any) => (tooltipVisibleFunc('memo', false)))\n                }))\n              : _createCommentVNode(\"\", true),\n            (memoModal.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                  _withDirectives(_createElementVNode(\"textarea\", {\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((memo).value = $event))\n                  }, null, 512), [\n                    [_vModelText, memo.value]\n                  ]),\n                  _createElementVNode(\"button\", {\n                    class: \"memoModalBtn\",\n                    onClick: memoChange\n                  }, \"OK\"),\n                  _createElementVNode(\"button\", {\n                    class: \"memoModalBtn\",\n                    onClick: memoCancel\n                  }, \"CANCEL\")\n                ]))\n              : _createCommentVNode(\"\", true),\n            _createVNode(Tooltip, {\n              isVisible: tooltipVisible.value.memo,\n              className: \"mb08\",\n              position: \"top\",\n              type: \"\",\n              message: _unref(MSG).TOOLTIP.MEMO\n            }, null, 8, [\"isVisible\", \"message\"])\n          ]),\n          _createElementVNode(\"li\", {\n            class: _normalizeClass([\"pos-relative\", {'submitted': submitState.value === 'Submit'}]),\n            onClick: commitConfirmed\n          }, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'square-check'],\n              onMouseenter: _cache[3] || (_cache[3] = ($event: any) => (tooltipVisibleFunc('confirm', true))),\n              onMouseleave: _cache[4] || (_cache[4] = ($event: any) => (tooltipVisibleFunc('confirm', false)))\n            }),\n            _createVNode(Tooltip, {\n              isVisible: tooltipVisible.value.confirm,\n              className: \"mb08\",\n              position: \"top\",\n              type: \"\",\n              message: _unref(MSG).TOOLTIP.CONFIRM\n            }, null, 8, [\"isVisible\", \"message\"])\n          ], 2)\n        ])\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rbcInfoBeforeVal.value], (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: innerIndex,\n              class: \"categories rbcClass\"\n            }, [\n              _createElementVNode(\"ul\", _hoisted_6, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_7, \"Category\"))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"li\", {\n                  onClick: ($event: any) => (toggleAll(allCheckType.value[category?.categoryId], category?.categoryId)),\n                  class: \"flex-column cursorPointer\",\n                  style: {\"padding-top\":\"6px\"}\n                }, [\n                  _createElementVNode(\"span\", null, _toDisplayString(getCategoryName(category)), 1),\n                  _createElementVNode(\"span\", _hoisted_9, [\n                    _withDirectives(_createVNode(_component_font_awesome_icon, {\n                      class: \"rbc-allCheck-eye-font rbc-check-eye-font\",\n                      icon: ['fas', 'eye'],\n                      color: \"#29C7CA\"\n                    }, null, 512), [\n                      [_vShow, __props.type !== 'report' && !allCheckType.value[category?.categoryId] && category?.categoryId !== '05']\n                    ]),\n                    _withDirectives(_createVNode(_component_font_awesome_icon, {\n                      class: \"rbc-allCheck-eye-font rbc-check-eye-font\",\n                      icon: ['fas', 'eye-slash']\n                    }, null, 512), [\n                      [_vShow, __props.type !== 'report' && allCheckType.value[category?.categoryId] && category?.categoryId !== '05']\n                    ])\n                  ])\n                ], 8, _hoisted_8)\n              ]),\n              _createElementVNode(\"ul\", _hoisted_10, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, _cache[12] || (_cache[12] = [\n                      _createElementVNode(\"p\", { style: {\"padding-top\":\"2px\"} }, \"Class\", -1)\n                    ])))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${category?.categoryId}-${classInfo?.classId}`\n                  }, [\n                    _createElementVNode(\"li\", {\n                      onClick: ($event: any) => (handleClick(category?.categoryId, classInfo?.classId, classInfo?.classNm, category?.categoryNm)),\n                      class: \"flex-align-center cursorPointer\"\n                    }, [\n                      _createElementVNode(\"span\", null, _toDisplayString(classInfo?.classNm === 'TearDropCell' ? 'TearDrop Cell' : classInfo?.classNm), 1),\n                      (showCheckbox(category?.categoryId, classInfo?.classId, _unref(VISIBLE_RBC_OPTIONS)) && __props.type !== 'report')\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n                            _withDirectives(_createVNode(_component_font_awesome_icon, {\n                              icon: ['fas', 'eye'],\n                              class: \"rbc-check-eye-font\",\n                              color: \"#29C7CA\"\n                            }, null, 512), [\n                              [_vShow, !except.value && checkedClassIndices.value.includes(`${category?.categoryId}-${classInfo?.classId}`)]\n                            ]),\n                            _withDirectives(_createVNode(_component_font_awesome_icon, {\n                              icon: ['fas', 'eye-slash'],\n                              class: \"rbc-check-eye-font\"\n                            }, null, 512), [\n                              [_vShow, !except.value && !checkedClassIndices.value.includes(`${category?.categoryId}-${classInfo?.classId}`)]\n                            ])\n                          ]))\n                        : _createCommentVNode(\"\", true)\n                    ], 8, _hoisted_12),\n                    (classIndex === category?.classInfo.length - 1 && category?.categoryId === '03')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_14, _cache[13] || (_cache[13] = [\n                          _createElementVNode(\"span\", null, \"Others\", -1)\n                        ])))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category?.classInfo.length - 1 && category?.categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 1,\n                          onClick: ($event: any) => (handleClick('05', '03', classInfo?.classNm, category?.categoryNm)),\n                          class: \"flex-align-center\"\n                        }, [\n                          _cache[14] || (_cache[14] = _createElementVNode(\"span\", null, \"Malaria\", -1)),\n                          (__props.type !== 'report')\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n                                _withDirectives(_createVNode(_component_font_awesome_icon, {\n                                  icon: ['fas', 'eye'],\n                                  class: \"rbc-check-eye-font\",\n                                  color: \"#29C7CA\",\n                                  onChange: _cache[5] || (_cache[5] = ($event: any) => (updateClassInfoArr('Malaria', $event.target.checked, '05', '03')))\n                                }, null, 512), [\n                                  [_vShow, !except.value && checkedClassIndices.value.includes('05-03')]\n                                ]),\n                                _withDirectives(_createVNode(_component_font_awesome_icon, {\n                                  icon: ['fas', 'eye-slash'],\n                                  class: \"rbc-check-eye-font\",\n                                  onChange: _cache[6] || (_cache[6] = ($event: any) => (updateClassInfoArr('Malaria', $event.target.checked, '05', '03')))\n                                }, null, 512), [\n                                  [_vShow, !except.value && !checkedClassIndices.value.includes('05-03')]\n                                ])\n                              ]))\n                            : _createCommentVNode(\"\", true)\n                        ], 8, _hoisted_15))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_17, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_18, _cache[15] || (_cache[15] = [\n                      _createElementVNode(\"p\", null, \"Degree\", -1),\n                      _createElementVNode(\"p\", { class: \"rbcDegree-span-wrapper\" }, [\n                        _createElementVNode(\"span\", null, \"0\"),\n                        _createElementVNode(\"span\", null, \"1+\"),\n                        _createElementVNode(\"span\", null, \"2+\"),\n                        _createElementVNode(\"span\", null, \"3+\")\n                      ], -1)\n                    ])))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${category.categoryId}-${classInfo.classId}`\n                  }, [\n                    ((classInfo?.classId !== '01' || category?.categoryId === '05') || (rbcInfoAfterVal.value[innerIndex]?.classInfo[classIndex].classId !== '01' || rbcInfoAfterVal.value[innerIndex]?.categoryId === '05'))\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_19, [\n                          (classInfo?.classId !== '01' || category?.categoryId === '05')\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_20, [\n                                (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                  return _createVNode(_component_font_awesome_icon, {\n                                    icon: ['fac', 'half-circle-up'],\n                                    key: degreeIndex,\n                                    class: _normalizeClass({\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }),\n                                    onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex]?.classInfo[classIndex], degreeIndex - 1, false))\n                                  }, null, 8, [\"class\", \"onClick\"])\n                                }), 64))\n                              ]))\n                            : _createCommentVNode(\"\", true),\n                          (rbcInfoAfterVal.value[innerIndex]?.classInfo[classIndex]?.classId !== '01' || rbcInfoAfterVal.value[innerIndex]?.categoryId === '05')\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_21, [\n                                (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                  return _createVNode(_component_font_awesome_icon, {\n                                    icon: ['fac', 'half-circle-down'],\n                                    key: degreeIndex + '-down',\n                                    class: _normalizeClass({\r\n                      'degreeActive': degreeIndex < Number(rbcInfoAfterVal.value[innerIndex]?.classInfo[classIndex]?.degree) + 2 || 0,\r\n                      'degree0-img': degreeIndex >= Number(rbcInfoAfterVal.value[innerIndex]?.classInfo[classIndex]?.degree) + 1 || 0\r\n                    }),\n                                    onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex]?.classInfo[classIndex], degreeIndex - 1, false))\n                                  }, null, 8, [\"class\", \"onClick\"])\n                                }), 64))\n                              ]))\n                            : _createCommentVNode(\"\", true)\n                        ]))\n                      : (_openBlock(), _createElementBlock(\"li\", _hoisted_22, [\n                          (classInfo.degree === '0')\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_23, [\n                                _createVNode(_component_font_awesome_icon, { icon: ['fac', 'half-circle-up'] })\n                              ]))\n                            : (_openBlock(), _createElementBlock(\"span\", _hoisted_24, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  icon: ['fac', 'half-circle-up'],\n                                  class: \"degreeActive\"\n                                })\n                              ])),\n                          (rbcInfoAfterVal.value[innerIndex]?.classInfo[classIndex]?.degree === '0')\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_25, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex]?.classInfo[classIndex],'0', true)),\n                                  icon: ['fac', 'half-circle-down']\n                                }, null, 8, [\"onClick\"])\n                              ]))\n                            : (_openBlock(), _createElementBlock(\"span\", _hoisted_26, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex]?.classInfo[classIndex], '1', true) ),\n                                  icon: ['fac', 'half-circle-down'],\n                                  class: \"degreeActive\"\n                                }, null, 8, [\"onClick\"])\n                              ]))\n                        ])),\n                    (classIndex === category?.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex]?.categoryId === '03')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_27, \" - \"))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category?.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex]?.categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_28, \" - \"))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category?.classInfo.length - 1)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [\n                          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['01', '02', '05'], (categoryId) => {\n                            return _withDirectives(_createElementVNode(\"div\", {\n                              key: categoryId,\n                              class: \"underline\"\n                            }, \" Total \"), [\n                              [_vShow, rbcInfoAfterVal.value[innerIndex].categoryId === categoryId]\n                            ])\n                          }), 64))\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_30, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_31, \"Count\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    (classInfo?.classNm !== 'Poikilocyte')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_32, _toDisplayString(Number(classInfo?.originalDegree) || 0), 1))\n                      : (_openBlock(), _createElementBlock(\"li\", _hoisted_33, \"-\")),\n                    (classIndex === category?.classInfo.length - 1 && category?.categoryId === '03')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_34, _toDisplayString(Number(shapeOthersCount.value) || 0), 1))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category?.classInfo.length - 1 && category?.categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_35, _toDisplayString(Number(malariaCount.value) || 0), 1))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category?.classInfo.length - 1)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_36, [\n                          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['01', '02'], (categoryId) => {\n                            return _withDirectives(_createElementVNode(\"div\", {\n                              key: categoryId,\n                              class: \"underline\"\n                            }, _toDisplayString(Number(sizeChromiaTotal.value) || 0), 1), [\n                              [_vShow, rbcInfoAfterVal.value[innerIndex].categoryId === categoryId]\n                            ])\n                          }), 64))\n                        ]))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category?.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex]?.categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_37, _toDisplayString(Number(shapeBodyTotal.value) || 0), 1))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_38, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_39, \"Percent\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    (classInfo?.classNm !== 'Poikilocyte')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_40, _toDisplayString(Number(classInfo?.percent) || 0), 1))\n                      : (_openBlock(), _createElementBlock(\"li\", _hoisted_41, \"-\")),\n                    (classIndex === category?.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex]?.categoryId === '03')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_42, _toDisplayString(percentageChange(shapeOthersCount.value, _unref(RBC_CODE_CLASS_ID).SHAPE.CATEGORY_ID) || 0), 1))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category?.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex]?.categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_43, _toDisplayString(percentageChange(malariaCount.value, _unref(RBC_CODE_CLASS_ID).INCLUSION_BODY.CATEGORY_ID) || 0), 1))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category?.classInfo.length - 1)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_44, [\n                          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['01', '02', '05'], (categoryId) => {\n                            return _withDirectives(_createElementVNode(\"div\", {\n                              key: categoryId,\n                              class: \"underline\"\n                            }, \" 100% \"), [\n                              [_vShow, rbcInfoAfterVal.value[innerIndex]?.categoryId === categoryId]\n                            ])\n                          }), 64))\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128))\n              ])\n            ]))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"div\", _hoisted_45, [\n          _cache[17] || (_cache[17] = _createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n            _createElementVNode(\"li\", null, \"Others\")\n          ], -1)),\n          _createElementVNode(\"ul\", _hoisted_46, [\n            _createElementVNode(\"li\", {\n              onClick: _cache[9] || (_cache[9] = ($event: any) => (handleClick('04', '01', 'Platelet', 'Others'))),\n              style: {\"padding-top\":\"0\"},\n              class: \"flex-align-center\"\n            }, [\n              _cache[16] || (_cache[16] = _createElementVNode(\"span\", null, \"Platelet\", -1)),\n              (__props.type !== 'report')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_47, [\n                    _withDirectives(_createVNode(_component_font_awesome_icon, {\n                      icon: ['fas', 'eye'],\n                      class: \"rbc-check-eye-font\",\n                      color: \"#29C7CA\",\n                      onChange: _cache[7] || (_cache[7] = ($event: any) => (updateClassInfoArr('Platelet', $event.target.checked, '04', '01')))\n                    }, null, 512), [\n                      [_vShow, !except.value && checkedClassIndices.value.includes('04-01')]\n                    ]),\n                    _withDirectives(_createVNode(_component_font_awesome_icon, {\n                      icon: ['fas', 'eye-slash'],\n                      class: \"rbc-check-eye-font\",\n                      onChange: _cache[8] || (_cache[8] = ($event: any) => (updateClassInfoArr('Platelet', $event.target.checked, '04', '01')))\n                    }, null, 512), [\n                      [_vShow, !except.value && !checkedClassIndices.value.includes('04-01')]\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ])\n          ]),\n          _createElementVNode(\"ul\", _hoisted_48, [\n            _createElementVNode(\"li\", _hoisted_49, _toDisplayString(pltCount.value || 0) + \" PLT / 1000 RBC\", 1)\n          ]),\n          _cache[18] || (_cache[18] = _createElementVNode(\"ul\", { class: \"rbcPercent\" }, null, -1)),\n          _cache[19] || (_cache[19] = _createElementVNode(\"ul\", { class: \"rbcPercent\" }, null, -1))\n        ])\n      ]),\n      (_unref(router).currentRoute.value.path === '/report')\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_50, [\n            _withDirectives(_createElementVNode(\"textarea\", {\n              class: \"staticTextArea\",\n              \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((memo).value = $event))\n            }, null, 512), [\n              [_vModelText, memo.value]\n            ]),\n            _createElementVNode(\"button\", {\n              class: \"memoModalBtn\",\n              onClick: memoChange\n            }, \"Save\")\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 1,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <!--  {{ jsonIsBool }}-->\r\n  <div v-show=\"jsonIsBool\" class=\"createdRbc\"> Creating a new RBC classification ...</div>\r\n  <div>\r\n    <div class=\"mt10 flex-justify-between\">\r\n      <h3 class=\"wbcClassInfoLeft\">RBC Classification</h3>\r\n      <ul class=\"leftWbcInfo rbcClass\">\r\n        <li class=\"pos-relative\">\r\n          <font-awesome-icon\r\n              v-if=\"type !== 'report'\"\r\n              :icon=\"['fas', 'comment-dots']\"\r\n              @click=\"memoOpen\"\r\n              @mouseenter=\"tooltipVisibleFunc('memo', true)\"\r\n              @mouseleave=\"tooltipVisibleFunc('memo', false)\"\r\n          />\r\n          <div v-if=\"memoModal\" class=\"memoModal\">\r\n            <textarea v-model=\"memo\"></textarea>\r\n            <button class=\"memoModalBtn\" @click=\"memoChange\">OK</button>\r\n            <button class=\"memoModalBtn\" @click=\"memoCancel\">CANCEL</button>\r\n          </div>\r\n          <Tooltip :isVisible=\"tooltipVisible.memo\" className=\"mb08\" position=\"top\" type=\"\"\r\n                   :message=\"MSG.TOOLTIP.MEMO\"/>\r\n        </li>\r\n        <li class=\"pos-relative\" @click=\"commitConfirmed\" :class=\"{'submitted': submitState === 'Submit'}\">\r\n          <font-awesome-icon\r\n              :icon=\"['fas', 'square-check']\"\r\n              @mouseenter=\"tooltipVisibleFunc('confirm', true)\"\r\n              @mouseleave=\"tooltipVisibleFunc('confirm', false)\"\r\n          />\r\n          <Tooltip :isVisible=\"tooltipVisible.confirm\" className=\"mb08\" position=\"top\" type=\"\"\r\n                   :message=\"MSG.TOOLTIP.CONFIRM\"/>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <template v-for=\"(classList, outerIndex) in [rbcInfoBeforeVal]\" :key=\"outerIndex\">\r\n      <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n        <div class=\"categories rbcClass\">\r\n          <ul class=\"categoryNm\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mt18 mb14 liTitle\">Category</li>\r\n            <li @click=\"toggleAll(allCheckType[category?.categoryId], category?.categoryId)\"\r\n                class=\"flex-column cursorPointer\" style=\"padding-top: 6px\">\r\n              <span>{{ getCategoryName(category) }}</span>\r\n              <span style=\"margin-left: 12px; margin-top: 2px;\">\r\n                <font-awesome-icon class=\"rbc-allCheck-eye-font rbc-check-eye-font\" :icon=\"['fas', 'eye']\"\r\n                                   color=\"#29C7CA\"\r\n                                   v-show=\"type !== 'report' && !allCheckType[category?.categoryId] && category?.categoryId !== '05'\"/>\r\n                <font-awesome-icon class=\"rbc-allCheck-eye-font rbc-check-eye-font\" :icon=\"['fas', 'eye-slash']\"\r\n                                   v-show=\"type !== 'report' && allCheckType[category?.categoryId] && category?.categoryId !== '05'\"/>\r\n              </span>\r\n            </li>\r\n          </ul>\r\n          <ul class=\"classNmRbc\">\r\n            <li\r\n                v-if=\"innerIndex === 0\"\r\n                class=\"mt18 mb14 liTitle flex-justify-start-align-center w-fit\"\r\n                style=\"top: -4px;\"\r\n            >\r\n              <p style=\"padding-top: 2px;\">Class</p>\r\n\r\n            </li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${category?.categoryId}-${classInfo?.classId}`\">\r\n              <li @click=\"handleClick(category?.categoryId, classInfo?.classId, classInfo?.classNm, category?.categoryNm)\"\r\n                  class=\"flex-align-center cursorPointer\">\r\n                <span>{{ classInfo?.classNm === 'TearDropCell' ? 'TearDrop Cell' : classInfo?.classNm }}</span>\r\n                <div\r\n                    v-if=\"showCheckbox(category?.categoryId, classInfo?.classId, VISIBLE_RBC_OPTIONS) && type !== 'report'\">\r\n                  <font-awesome-icon :icon=\"['fas', 'eye']\" class=\"rbc-check-eye-font\" color=\"#29C7CA\"\r\n                                     v-show=\"!except && checkedClassIndices.includes(`${category?.categoryId}-${classInfo?.classId}`)\"/>\r\n                  <font-awesome-icon :icon=\"['fas', 'eye-slash']\" class=\"rbc-check-eye-font\"\r\n                                     v-show=\"!except && !checkedClassIndices.includes(`${category?.categoryId}-${classInfo?.classId}`)\"/>\r\n                </div>\r\n              </li>\r\n              <li v-if=\"classIndex === category?.classInfo.length - 1 && category?.categoryId === '03'\">\r\n                <span>Others</span>\r\n              </li>\r\n              <li v-if=\"classIndex === category?.classInfo.length - 1 && category?.categoryId === '05'\"\r\n                  @click=\"handleClick('05', '03', classInfo?.classNm, category?.categoryNm)\"\r\n                  class=\"flex-align-center\"\r\n              >\r\n                <span>Malaria</span>\r\n                <div v-if=\"type !== 'report'\">\r\n                  <font-awesome-icon :icon=\"['fas', 'eye']\" class=\"rbc-check-eye-font\" color=\"#29C7CA\"\r\n                                     v-show=\"!except && checkedClassIndices.includes('05-03')\"\r\n                                     @change=\"updateClassInfoArr('Malaria', $event.target.checked, '05', '03')\"/>\r\n                  <font-awesome-icon :icon=\"['fas', 'eye-slash']\" class=\"rbc-check-eye-font\"\r\n                                     v-show=\"!except && !checkedClassIndices.includes('05-03')\"\r\n                                     @change=\"updateClassInfoArr('Malaria', $event.target.checked, '05', '03')\"/>\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n          <ul class=\"degree analysis\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mt18 mb14 liTitle\">\r\n              <p>Degree</p>\r\n              <p class=\"rbcDegree-span-wrapper\">\r\n                <span>0</span>\r\n                <span>1+</span>\r\n                <span>2+</span>\r\n                <span>3+</span>\r\n              </p>\r\n            </li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${category.categoryId}-${classInfo.classId}`\">\r\n              <li v-if=\"(classInfo?.classId !== '01' || category?.categoryId === '05') || (rbcInfoAfterVal[innerIndex]?.classInfo[classIndex].classId !== '01' || rbcInfoAfterVal[innerIndex]?.categoryId === '05')\">\r\n                <span v-if=\"classInfo?.classId !== '01' || category?.categoryId === '05'\" class=\"rbcSapn\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-up']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex\"\r\n                      :class=\"{\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }\"\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex]?.classInfo[classIndex], degreeIndex - 1, false)\"\r\n                  />\r\n                </span>\r\n                <span\r\n                    v-if=\"rbcInfoAfterVal[innerIndex]?.classInfo[classIndex]?.classId !== '01' || rbcInfoAfterVal[innerIndex]?.categoryId === '05'\"\r\n                    class=\"rbcSapnDown\"\r\n                >\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-down']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex + '-down'\"\r\n                      :class=\"{\r\n                      'degreeActive': degreeIndex < Number(rbcInfoAfterVal[innerIndex]?.classInfo[classIndex]?.degree) + 2 || 0,\r\n                      'degree0-img': degreeIndex >= Number(rbcInfoAfterVal[innerIndex]?.classInfo[classIndex]?.degree) + 1 || 0\r\n                    }\"\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex]?.classInfo[classIndex], degreeIndex - 1, false)\"\r\n                  />\r\n                </span>\r\n\r\n              </li>\r\n              <li v-else>\r\n                <span v-if=\"classInfo.degree === '0'\" class=\"rbcSapn\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-up']\"\r\n                  />\r\n                </span>\r\n                <span v-else class=\"rbcSapn\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-up']\"\r\n                      class=\"degreeActive\"\r\n                  />\r\n                </span>\r\n                <span v-if=\"rbcInfoAfterVal[innerIndex]?.classInfo[classIndex]?.degree === '0'\" class=\"rbcSapnDown\"\r\n                >\r\n                  <font-awesome-icon\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex]?.classInfo[classIndex],'0', true)\"\r\n                      :icon=\"['fac', 'half-circle-down']\"\r\n                  />\r\n                </span>\r\n                <span v-else class=\"rbcSapnDown\">\r\n                  <font-awesome-icon\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex]?.classInfo[classIndex], '1', true) \"\r\n                      :icon=\"['fac', 'half-circle-down']\"\r\n                      class=\"degreeActive\"\r\n                  />\r\n                </span>\r\n              </li>\r\n              <li v-if=\"classIndex === category?.classInfo.length - 1 && rbcInfoAfterVal[innerIndex]?.categoryId === '03'\">\r\n                -\r\n              </li>\r\n              <li v-if=\"classIndex === category?.classInfo.length - 1 && rbcInfoAfterVal[innerIndex]?.categoryId === '05'\">\r\n                -\r\n              </li>\r\n              <div v-if=\"classIndex === category?.classInfo.length - 1\">\r\n                <div v-for=\"categoryId in ['01', '02', '05']\" :key=\"categoryId\" class=\"underline\"\r\n                     v-show=\"rbcInfoAfterVal[innerIndex].categoryId === categoryId\">\r\n                  Total\r\n                </div>\r\n              </div>\r\n            </template>\r\n\r\n          </ul>\r\n          <ul class=\"rbcPercent\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mt18 mb14 liTitle\">Count</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"classInfo?.classNm !== 'Poikilocyte'\">{{ Number(classInfo?.originalDegree) || 0 }}</li>\r\n              <li v-else>-</li>\r\n              <li class=\"defaultText\"\r\n                  v-if=\"classIndex === category?.classInfo.length - 1 && category?.categoryId === '03'\">\r\n                {{ Number(shapeOthersCount) || 0 }}\r\n              </li>\r\n              <li class=\"defaultText\"\r\n                  v-if=\"classIndex === category?.classInfo.length - 1 && category?.categoryId === '05'\">\r\n                {{ Number(malariaCount) || 0 }}\r\n              </li>\r\n              <div v-if=\"classIndex === category?.classInfo.length - 1\">\r\n                <div v-for=\"categoryId in ['01', '02']\" :key=\"categoryId\" class=\"underline\"\r\n                     v-show=\"rbcInfoAfterVal[innerIndex].categoryId === categoryId\">\r\n                  {{ Number(sizeChromiaTotal) || 0 }}\r\n                </div>\r\n              </div>\r\n              <div class=\"underline\"\r\n                   v-if=\"classIndex === category?.classInfo.length - 1 && rbcInfoAfterVal[innerIndex]?.categoryId === '05'\">\r\n                {{ Number(shapeBodyTotal) || 0 }}\r\n              </div>\r\n            </template>\r\n          </ul>\r\n          <ul class=\"rbcPercent mr1\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mt18 mb14 liTitle\">Percent</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"classInfo?.classNm !== 'Poikilocyte'\">\r\n                {{ Number(classInfo?.percent) || 0 }}\r\n              </li>\r\n              <li v-else>-</li>\r\n              <li class=\"defaultText\"\r\n                  v-if=\"classIndex === category?.classInfo.length - 1 && rbcInfoAfterVal[innerIndex]?.categoryId === '03'\">\r\n                {{ percentageChange(shapeOthersCount, RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID) || 0 }}\r\n              </li>\r\n              <li class=\"defaultText\"\r\n                  v-if=\"classIndex === category?.classInfo.length - 1 && rbcInfoAfterVal[innerIndex]?.categoryId === '05'\">\r\n                {{ percentageChange(malariaCount, RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) || 0 }}\r\n              </li>\r\n              <div v-if=\"classIndex === category?.classInfo.length - 1\">\r\n                <div v-for=\"categoryId in ['01', '02', '05']\" :key=\"categoryId\" class=\"underline\"\r\n                     v-show=\"rbcInfoAfterVal[innerIndex]?.categoryId === categoryId\"\r\n                >\r\n                  100%\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </ul>\r\n\r\n        </div>\r\n      </template>\r\n\r\n    </template>\r\n    <!--orders-->\r\n    <div>\r\n      <div class=\"categories rbcClass\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li @click=\"handleClick('04', '01', 'Platelet', 'Others')\" style=\"padding-top: 0;\" class=\"flex-align-center\">\r\n            <span>Platelet</span>\r\n            <div v-if=\"type !== 'report'\">\r\n              <font-awesome-icon :icon=\"['fas', 'eye']\" class=\"rbc-check-eye-font\" color=\"#29C7CA\"\r\n                                 v-show=\"!except && checkedClassIndices.includes('04-01')\"\r\n                                 @change=\"updateClassInfoArr('Platelet', $event.target.checked, '04', '01')\"/>\r\n              <font-awesome-icon :icon=\"['fas', 'eye-slash']\" class=\"rbc-check-eye-font\"\r\n                                 v-show=\"!except && !checkedClassIndices.includes('04-01')\"\r\n                                 @change=\"updateClassInfoArr('Platelet', $event.target.checked, '04', '01')\"/>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <ul class=\"degree analysis\">\r\n          <li style=\"width: 130px;\">{{ pltCount || 0 }} PLT / 1000 RBC</li>\r\n        </ul>\r\n        <ul class=\"rbcPercent\"></ul>\r\n        <ul class=\"rbcPercent\"></ul>\r\n      </div>\r\n    </div>\r\n    <!--  RBC 감도 조절 기능  -->\r\n    <!--        <div class=\"sensitivityDiv\" v-if=\"type !== 'report'\">-->\r\n    <!--          <select v-model=\"selectedClass\" @change=\"classChange\">-->\r\n    <!--            <option v-for=\"(item) in rightClickItem\" :key=\"item.classNm\">-->\r\n    <!--              {{ item.classNm }}-->\r\n    <!--            </option>-->\r\n    <!--          </select>-->\r\n    <!--          <SliderBar v-model=\"sliderValue\" :min=\"0\" :max=\"100\" leftText=\"less\" rightText=\"more\"/>-->\r\n    <!--          <button class=\"degreeBtn\" type=\"button\" @click=\"sensRbcReJsonSend\">Ok</button>-->\r\n    <!--        </div>-->\r\n\r\n    <div class=\"memoModal bottom text-left staticMemoModal\" v-if=\"router.currentRoute.value.path === '/report'\">\r\n      <textarea class=\"staticTextArea\" v-model=\"memo\"></textarea>\r\n      <button class=\"memoModalBtn\" @click=\"memoChange\">Save</button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, defineProps, watch, onMounted, computed, defineEmits, nextTick} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {RbcInfo} from \"@/store/modules/analysis/rbcClassification\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {MESSAGES, MSG} from \"@/common/defines/constants/constantMessageText\";\r\nimport moment from \"moment/moment\";\r\nimport {tcpReq} from \"@/common/defines/constants/tcpRequest/tcpReq\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {RBC_CODE_CLASS_ID, SHOWING_RBC_SHAPE_CLASS_IDS} from \"@/common/defines/constants/dataBase\";\r\nimport {\r\n  VISIBLE_CHROMIA_OPTIONS, VISIBLE_INCLUSION_BODY_OPTIONS, VISIBLE_OTHERS_OPTIONS,\r\n  VISIBLE_RBC_OPTIONS,\r\n  VISIBLE_SHAPE_OPTIONS,\r\n  VISIBLE_SIZE_OPTIONS, VisibleRbcType\r\n} from \"@/common/defines/constants/rbc\";\r\nimport Tooltip from \"@/components/commonUi/Tooltip.vue\";\r\nimport {TooltipRbcClassType} from \"@/common/type/tooltipType\";\r\nimport {DIR_NAME} from \"@/common/defines/constants/settings\";\r\nimport {cbcUpdateMutation, gqlGenericUpdate, memoUpdateMutation, rbcUpdateMutation} from \"@/gql/mutation/slideData\";\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\nconst checkedClassIndices = ref<string[]>([]);\r\nconst props = defineProps(['rbcInfo', 'type', 'allCheckClear', 'isCommitChanged', 'notCanvasClickVal']);\r\nconst rbcInfoAfterVal = ref<any>([]);\r\nconst rbcInfoBeforeVal = ref<any>([]);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst memo = ref('');\r\nconst sliderValue = ref(50);\r\nconst memoModal = ref(false);\r\nconst store = useStore();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isBefore = ref(false);\r\nconst classInfoArr = ref<any>([]);\r\nconst emits = defineEmits();\r\nconst maxRbcCount: any = ref('');\r\nconst router = useRouter();\r\nconst except = ref(false);\r\nconst rightClickItem: any = ref([]);\r\nconst selectedClass = ref('Macrocyte');\r\nconst allCheckType = ref<Record<string, boolean>>({\r\n  '01': true,\r\n  '02': true,\r\n  '03': true,\r\n  '05': true,\r\n  '04': true,\r\n})\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst jsonIsBool = ref(false);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst resetRbcArr = computed(() => store.state.commonModule.resetRbcArr);\r\nconst rbcImagePageNumber = computed(() => store.state.commonModule.rbcImagePageNumber);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst bodyTotal = ref(0);\r\nconst shapeTotal = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst rbcReDataCheck = computed(() => store.state.commonModule.rbcReDataCheck);\r\nconst rbcSendtimerId = ref<number | null>(null);\r\nlet timeoutId: any;\r\nconst submitState = ref('');\r\nconst projectType = ref(window.PROJECT_TYPE);\r\nconst shapeOthersCount = ref(0);\r\nconst rbcResponseOldArr: any = ref([]);\r\nconst tooltipVisible = ref({\r\n  confirm: false,\r\n  memo: false,\r\n})\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcImagePageNumber: 0});\r\n  const {path} = router.currentRoute.value;\r\n  memo.value = slideData.value?.rbcMemo;\r\n  pltCount.value = slideData.value?.rbcInfo.pltCount;\r\n  malariaCount.value = slideData.value?.rbcInfo.malariaCount;\r\n  memo.value = slideData.value?.rbcMemo;\r\n  maxRbcCount.value = slideData.value?.rbcInfo.maxRbcCount;\r\n  submitState.value = slideData.value?.submitState;\r\n  except.value = path === '/report';\r\n  rightClickItem.value = [];\r\n  rightClickItemSet();\r\n  await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n  await afterChange(slideData.value);\r\n  await countReAdd();\r\n\r\n});\r\n\r\n\r\nwatch(() => props.isCommitChanged, () => {\r\n  submitState.value = 'Submit';\r\n})\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n}, {deep: true})\r\n\r\nwatch(() => rbcImagePageNumber.value, async (newRbcPageNumber) => {\r\n  await rbcTotalAndReCount(newRbcPageNumber);\r\n  await countReAdd();\r\n})\r\n\r\nconst rightClickItemSet = () => {\r\n  rightClickItem.value = [];\r\n  if (!slideData.value?.rbcInfo) {\r\n    return;\r\n  }\r\n  const processItems = slideData.value?.rbcInfo.rbcClass || slideData.value?.rbcInfo;\r\n\r\n  if (processItems) {\r\n    for (const argument of processItems) {\r\n      argument.classInfo.forEach((classInfo: any) => {\r\n        if (classInfo.classNm !== 'Normal') {\r\n          rightClickItem.value.push({...classInfo, categoryId: argument.categoryId});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  rightClickItem.value.push(\r\n      {categoryId: '04', classId: '01', classNm: 'Platelet'},\r\n      {categoryId: '05', classId: '03', classNm: 'Malaria'}\r\n  );\r\n}\r\n\r\n\r\nwatch(\r\n    () => slideData.value.id,\r\n    async (newVal, oldVal) => {\r\n      await nextTick();\r\n      await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n      await getRbcDegreeData();\r\n      await reDegree(rbcInfoBeforeVal.value);\r\n      pltCount.value = slideData.value?.pltCount;\r\n      malariaCount.value = slideData.value?.malariaCount;\r\n      memo.value = slideData.value?.rbcMemo;\r\n      submitState.value = slideData.value?.submitState;\r\n      rightClickItemSet();\r\n      allCheckType.value = {\r\n        '01': true,\r\n        '02': true,\r\n        '03': true,\r\n        '04': true,\r\n        '05': true,\r\n      }\r\n      await countReAdd();\r\n    },\r\n    { deep: true}\r\n);\r\n\r\n\r\nwatch(() => resetRbcArr, async (newItem) => {\r\n  if (newItem) {\r\n    await store.dispatch('commonModule/setCommonInfo', {resetRbcArr: false});\r\n    await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n    await countReAdd();\r\n  }\r\n}, {deep: true})\r\n\r\nwatch(() => props.allCheckClear, () => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n  allCheckType.value = {\r\n    '01': true,\r\n    '02': true,\r\n    '03': true,\r\n    '04': true,\r\n    '05': true,\r\n  }\r\n}, {deep: true})\r\n\r\n\r\nwatch(() => rbcReData, async (newItem) => {\r\n  if (newItem) {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(async () => {\r\n      jsonIsBool.value = false;\r\n      // await afterChange();\r\n      await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n      await countReAdd();\r\n      await getRbcDegreeData();\r\n    }, 1000);\r\n  }\r\n\r\n}, {deep: true});\r\n\r\nconst showCheckbox = (categoryId: string, classId: string, availableClassIds: {\r\n  categoryId: string;\r\n  classId: string\r\n}[]) => availableClassIds.find((item) => item.categoryId === categoryId && item.classId === classId);\r\n\r\nconst handleClick = (categoryId: string, classId: string, classNm: string, categoryNm: string) => {\r\n  if (props.notCanvasClickVal) return;\r\n  if (!showCheckbox(categoryId, classId, VISIBLE_RBC_OPTIONS)) return;\r\n\r\n  toggleCheckbox(categoryId, classId, classNm);\r\n  clickChangeSens(classNm, categoryNm, categoryId, classId);\r\n}\r\n\r\nconst toggleCheckbox = (categoryId: string, classId: string, classNm: string) => {\r\n  const checkValue = `${categoryId}-${classId}`;\r\n  const isChecked = checkedClassIndices.value.includes(checkValue);\r\n\r\n  // `RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID`를 유지하기 위한 필터링 로직 추가\r\n  const othersCategoryItems = checkedClassIndices.value.filter((item) => item.startsWith(RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID));\r\n\r\n  if (isChecked) {\r\n    checkedClassIndices.value = checkedClassIndices.value.filter((item: any) => item !== checkValue);\r\n  } else {\r\n    if (categoryId === RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID) checkedClassIndices.value.push(checkValue);\r\n    else {\r\n      const checkedCategoryIdArr = checkedClassIndices.value.map((item) => item.split('-')[0]);\r\n\r\n      // Shape 과 InclusionBody는 같은 Total이므로 조건 추가\r\n      const isShapeOrInclusionBodyClicked = checkedCategoryIdArr.some((item) => item === '03' || item === '05') && (categoryId === '03' || categoryId === '05');\r\n\r\n      if (!checkedCategoryIdArr.includes(categoryId) && !isShapeOrInclusionBodyClicked) {\r\n        checkedClassIndices.value = [checkValue];\r\n        if (othersCategoryItems.length > 0) {\r\n          checkedClassIndices.value = [...checkedClassIndices.value, ...othersCategoryItems];\r\n        }\r\n      } else checkedClassIndices.value.push(checkValue);\r\n    }\r\n  }\r\n\r\n  const optionsMap: Record<string, VisibleRbcType[]> = {\r\n    '01': VISIBLE_SIZE_OPTIONS,\r\n    '02': VISIBLE_CHROMIA_OPTIONS,\r\n    '03': VISIBLE_SHAPE_OPTIONS,\r\n    '04': VISIBLE_OTHERS_OPTIONS,\r\n    '05': VISIBLE_INCLUSION_BODY_OPTIONS,\r\n  };\r\n\r\n  if (optionsMap[categoryId] && categoryId !== RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID) {\r\n    const setCheckedClassIndices = new Set(checkedClassIndices.value);\r\n\r\n    for (const categoryId of Object.keys(allCheckType.value)) {\r\n      const availableOptions = categoryId === RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID || categoryId === RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID\r\n          ? [...VISIBLE_SHAPE_OPTIONS, ...VISIBLE_INCLUSION_BODY_OPTIONS].map((item) => `${item.categoryId}-${item.classId}`)\r\n          : optionsMap[categoryId].map((item) => `${item.categoryId}-${item.classId}`);\r\n      const allChecked = availableOptions.every((item) => setCheckedClassIndices.has(item));\r\n      if (allChecked) allCheckType.value[categoryId] = !allChecked;\r\n      else allCheckType.value[categoryId] = true;\r\n    }\r\n  }\r\n\r\n  updateClassInfoArr(classNm, !isChecked, categoryId, classId);\r\n}\r\n\r\nconst rbcTotalAndReCount = async (pageNumber: any) => {\r\n  const path = slideData.value?.img_drive_root_path !== '' && slideData.value?.img_drive_root_path ? slideData.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${slideData.value.slotId}/${DIR_NAME.RBC_CLASS}/${slideData.value.slotId}_new_${rbcImagePageNumber.value}.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${slideData.value.slotId}/${DIR_NAME.RBC_CLASS}/${slideData.value.slotId}.json`;\r\n  rbcResponseOldArr.value = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of rbcResponseOldArr.value.data[pageNumber].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            el.index === newRbcData.index\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = rbcResponseOldArr.value?.data[pageNumber].rbcClassList;\r\n  } else {\r\n    if (rbcResponseOldArr.value?.data.length === 0 || !rbcResponseOldArr.value?.data[pageNumber]) rbcInfoPathAfter.value = [];\r\n    else rbcInfoPathAfter.value = rbcResponseOldArr.value?.data[pageNumber].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeTotalVal = 0;\r\n  let inclusionBody = 0;\r\n  shapeOthersCount.value = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    switch (el.categoryId) {\r\n      case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n        total = el.classInfo.length;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n        chromiaTotalval = el.classInfo.length;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n        shapeTotalVal = el.classInfo.length;\r\n\r\n        for (const classItem of el.classInfo) {\r\n          if (!SHOWING_RBC_SHAPE_CLASS_IDS.includes(classItem.classId)) {\r\n            shapeOthersCount.value += 1;\r\n          }\r\n        }\r\n        break;\r\n      case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n        inclusionBody = el.classInfo.length;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total);\r\n  sizeChromiaTotal.value = Number(total);\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  bodyTotal.value = Number(inclusionBody);\r\n  shapeTotal.value = Number(shapeTotalVal);\r\n  shapeBodyTotal.value = Number(shapeTotalVal) + Number(inclusionBody);\r\n}\r\n\r\nconst percentageChange = (count: any, categoryId: string): any => {\r\n  const percentage: any = ((Number(count) / calculateRbcTotalByCategoryId(categoryId)) * 100).toFixed(1);\r\n  if (isNaN(percentage)) return '-';\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst calculateRbcTotalByCategoryId = (categoryId: string) => {\r\n  switch (categoryId) {\r\n    case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n      return Number(rbcTotalVal.value);\r\n    case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n      return Number(chromiaTotalTwo.value);\r\n    case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n    case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n      return Number(shapeBodyTotal.value);\r\n    default:\r\n      return Number(rbcTotalVal.value);\r\n  }\r\n}\r\n\r\nconst classChange = async () => {\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  if (!Array.isArray(rbcData)) {\r\n    return;\r\n  }\r\n  const category = rbcData.find((el: any) => el.categoryNm === selectedClass.value);\r\n  if (category) {\r\n    sliderValue.value = category.sensitivity || 50;\r\n    return;\r\n  }\r\n\r\n  for (const el of rbcData) {\r\n    const classInfoItem = el.classInfo.find((classInfo: any) => classInfo.classNm === selectedClass.value);\r\n    if (classInfoItem) {\r\n      sliderValue.value = classInfoItem.sensitivity || 50;\r\n      return;\r\n    }\r\n  }\r\n  sliderValue.value = 50;\r\n};\r\n\r\nconst resetTimer = () => {\r\n  if (rbcSendtimerId.value !== null) {\r\n    clearTimeout(rbcSendtimerId.value);\r\n  }\r\n};\r\n\r\n\r\nwatch(rbcReDataCheck, (newVal) => {\r\n  resetTimer();\r\n\r\n  if (rbcSendtimerId.value !== null) {\r\n    clearInterval(rbcSendtimerId.value);\r\n  }\r\n\r\n  rbcSendtimerId.value = window.setInterval(() => {\r\n    if (newVal) {\r\n      sensRbcReJsonSend();\r\n    }\r\n  }, 800);\r\n}, {deep: true});\r\n\r\n\r\nconst sensRbcReJsonSend = async () => {\r\n  jsonIsBool.value = true;\r\n  await rbcInfoAfterSensitivity(selectedClass.value);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n  const payload = {\r\n    jobCmd: 'RBC_RE_CLASSIFICATION',\r\n    sensitivity: Number(sliderValue.value),\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    reqUserId: userModuleDataGet.value.userId || '',\r\n    className: selectedClass.value.replace(/\\s/g, ''),\r\n    slotId: slideData.value?.slotId,\r\n    anyWay: 'true',\r\n  };\r\n  EventBus.publish('childEmitSocketData', payload);\r\n}\r\n\r\nconst clickChangeSens = (classNm: string, categoryNm: string, categoryId: string, classId: any) => {\r\n  if (classNm === 'Normal') return;\r\n\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const el of rbcData) {\r\n    for (const item of el?.classInfo) {\r\n      if (item.classNm === classNm && item.classId === classId) {\r\n        sliderValue.value = item.sensitivity || 50;\r\n      }\r\n    }\r\n  }\r\n  selectedClass.value = classNm;\r\n  return;\r\n\r\n}\r\n\r\n\r\nconst areDegreesIdentical = (arr1: any[], arr2: any[]): boolean => {\r\n\r\n  // 배열 항목 비교\r\n  for (let i = 0; i < arr1.length; i++) {\r\n    const item1 = arr1[i];\r\n    const item2 = arr2[i];\r\n\r\n    for (let j = 0; j < item1.classInfo.length; j++) {\r\n      const classInfo1 = item1.classInfo[j];\r\n      const classInfo2 = item2.classInfo[j];\r\n\r\n      // degree 값 비교\r\n      if (String(classInfo1.degree) !== String(classInfo2.degree)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst afterChange = async (newItem?: any) => {\r\n  isBefore.value = false;\r\n  emits('isBeforeUpdate', false);\r\n  const rbcData: any = slideData.value;\r\n\r\n  rbcInfoBeforeVal.value = rbcData.rbcInfo?.rbcClass ? rbcData.rbcInfo.rbcClass : rbcData;\r\n  rbcInfoAfterVal.value = slideData.value?.rbcInfoAfter;\r\n  await classChange();\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  // rbcInfoBeforeVal.value와 rbcInfoPathAfter.value가 정의되어 있는지 확인\r\n  if (!rbcInfoBeforeVal.value || !Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    return;\r\n  }\r\n\r\n  for (const category of rbcInfoBeforeVal.value) {\r\n    for (const classItem of category.classInfo) {\r\n      let count = 0;\r\n      for (const afterCategory of rbcInfoPathAfter.value) {\r\n        for (const afterClassItem of afterCategory.classInfo) {\r\n          // 기존 비교\r\n          // if (afterClassItem.classNm.replace(/\\s+/g, '') === classItem.classNm.replace(/\\s+/g, '') && afterCategory.categoryId === category.categoryId) {\r\n          if (afterClassItem.classId === classItem.classId && afterCategory.categoryId === category.categoryId) {\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n\r\n      classItem.originalDegree = count;\r\n      classItem.percent = percentageChange(count, category.categoryId);\r\n    }\r\n  }\r\n\r\n  maxRbcCount.value = 0;\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID || el.categoryId === RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) {\r\n      maxRbcCount.value += Number(el.classInfo.length);\r\n      // const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      // maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID) {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classId === RBC_CODE_CLASS_ID.OTHERS.PLATELET) {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classId === RBC_CODE_CLASS_ID.INCLUSION_BODY.MALARIA) {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal;\r\n};\r\n\r\n\r\nconst rbcInfoAfterSensitivity = async (selectedClassVal: string) => {\r\n  let rbcInfoAfterData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const item of rbcInfoAfterData) {\r\n    if (item.categoryNm === selectedClassVal) {\r\n      item.sensitivity = sliderValue.value;\r\n    } else {\r\n      const findClass = item?.classInfo?.findIndex((option: any) => option.classNm === selectedClassVal);\r\n      if (findClass !== -1 && findClass !== undefined) {\r\n        if (item?.classInfo) {\r\n          item.classInfo[findClass].sensitivity = sliderValue.value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfterData;\r\n\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfterData,\r\n  };\r\n\r\n  const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n\r\n  // rbc info 업데이트\r\n  await gqlGenericUpdate(rbcUpdateMutation, {\r\n    id: updatedRuningInfo.id,\r\n    rbcInfoAfter: updatedRuningInfo.rbcInfoAfter,\r\n  });\r\n  await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n\r\n  return;\r\n}\r\n\r\nconst toggleAll = (allCheck: boolean, categoryId: string) => {\r\n  if (props.notCanvasClickVal) return;\r\n\r\n  const baseClassIds =\r\n      categoryId === RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID || categoryId === RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID\r\n          ? [...VISIBLE_SHAPE_OPTIONS, ...VISIBLE_INCLUSION_BODY_OPTIONS] // Shape 과 Inclusion Body는 total 값을 공유\r\n          : VISIBLE_RBC_OPTIONS.filter((item) => item.categoryId === categoryId);\r\n\r\n  const allClassIds = checkedClassIndices.value.some((item) => item.startsWith(RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID))\r\n      ? [...baseClassIds, ...VISIBLE_OTHERS_OPTIONS]  // Others는 total 값에서 제외\r\n      : baseClassIds;\r\n\r\n  const allCheckboxes = rbcInfoBeforeVal.value.flatMap((item: any) => {\r\n    const categoryCheckboxes = item.classInfo\r\n        .filter((classInfo: any) => showCheckbox(item.categoryId, classInfo.classId, allClassIds))\r\n        .map((classInfo: any) => ({\r\n          classNm: classInfo.classNm,\r\n          categoryId: item.categoryId,\r\n          classId: classInfo.classId\r\n        }));\r\n\r\n    if (categoryId === item.categoryId && item.categoryId === RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) {\r\n      categoryCheckboxes.push({classNm: 'Malaria', categoryId: '05', classId: '03'});\r\n    }\r\n\r\n    return categoryCheckboxes;\r\n  });\r\n\r\n  if (categoryId === RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID) allCheckboxes.push({\r\n    classNm: 'Platelet',\r\n    categoryId: '04',\r\n    classId: '01'\r\n  });\r\n\r\n  const categoryClassIdStrArr = allClassIds.map((item) => `${item.categoryId}-${item.classId}`);\r\n  if (allCheck) {\r\n    const hasCategoryId = checkedClassIndices.value.some((item) => item.startsWith(categoryId));\r\n    checkedClassIndices.value = hasCategoryId\r\n        ? [...new Set([...checkedClassIndices.value, ...categoryClassIdStrArr])]\r\n        : categoryClassIdStrArr;\r\n  } else {\r\n    checkedClassIndices.value = checkedClassIndices.value.filter((item) =>\r\n        item.startsWith(RBC_CODE_CLASS_ID.OTHERS.CATEGORY_ID) || !categoryClassIdStrArr.includes(item)\r\n    );\r\n  }\r\n\r\n  for (const checkbox of allCheckboxes) {\r\n    updateClassInfoArr(checkbox.classNm, allCheck, checkbox.categoryId, checkbox.classId);\r\n  }\r\n\r\n  const validCategories = ['01', '02', '03', '04', '05'];\r\n  for (const validCategoryId of validCategories) {\r\n    allCheckType.value[validCategoryId] = true;\r\n  }\r\n\r\n  if (allCheck) {\r\n    if (categoryId === RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID || categoryId === RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) {\r\n      allCheckType.value[RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID] = false;\r\n      allCheckType.value[RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID] = false;\r\n    } else {\r\n      allCheckType.value[categoryId] = false;\r\n    }\r\n  }\r\n}\r\n\r\nconst updateClassInfoArr = (classNm: string, isChecked: boolean, categoryId: string, classId: string) => {\r\n  if (props.notCanvasClickVal) return;\r\n\r\n  const classItem = {classNm, categoryId, classId};\r\n  if (isChecked) {\r\n    classInfoArr.value.push(classItem)\r\n    classInfoArr.value = classInfoArr.value.filter((item) => checkedClassIndices.value.includes(`${item.categoryId}-${item.classId}`));\r\n  } else {\r\n    classInfoArr.value = classInfoArr.value.filter((item: any) => !(item.classNm === classNm && item.classId === classId && item.categoryId === categoryId));\r\n  }\r\n\r\n  emits('classInfoArrUpdate', classInfoArr.value);\r\n};\r\n\r\nwatch(rbcReData, async (newItem, oldItem) => {\r\n  if (newItem) {\r\n    updataClassInfoaArr();\r\n    return;\r\n  }\r\n\r\n}, {deep: true})\r\nconst updataClassInfoaArr = () => {\r\n  emits('classInfoArrUpdateRe', classInfoArr.value);\r\n}\r\n\r\nconst onClickDegree = async (category: any, classInfo: any, degreeIndex: any, isNormal = false) => {\r\n  if (props.type === 'report') {\r\n    return;\r\n  }\r\n  // rbcInfoAfterVal을 깊은 복사하여 수정\r\n  const rbcInfoAfter = JSON.parse(JSON.stringify(rbcInfoAfterVal.value)).map((rbc: any) => {\r\n    if (rbc.categoryNm === category.categoryNm) {\r\n      rbc.classInfo = rbc.classInfo.map((item: any) => {\r\n        if (item.classNm === classInfo.classNm) {\r\n          if (isNormal) {\r\n            item.degree = String(Number(item.degree) === 0 ? 1 : 0);\r\n          } else {\r\n            item.degree = String(degreeIndex);\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n    return rbc;\r\n  });\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfter;\r\n\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfter,\r\n  };\r\n  const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcInfoAfterData: rbcInfoAfter});\r\n  await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n\r\n  const res = await gqlGenericUpdate(rbcUpdateMutation, {\r\n    id: updatedRuningInfo.id,\r\n    rbcInfoAfter: updatedRuningInfo.rbcInfoAfter,\r\n  });\r\n\r\n  if (res && res?.data?.updateRunningInfoGQL[0].length !== 0) {\r\n    await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n    await countReAdd();\r\n    await getRbcDegreeData();\r\n  }\r\n\r\n};\r\n\r\nconst memoOpen = () => {\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoChange = async () => {\r\n\r\n  const enterAppliedRbcMemo = memo.value.replaceAll('\\r\\n', '<br>');\r\n  const updatedItem = {\r\n    rbcMemo: enterAppliedRbcMemo,\r\n  };\r\n  const updatedRuningInfo = {...slideData.value, ...updatedItem}\r\n  const res = await gqlGenericUpdate(memoUpdateMutation, {\r\n    id: updatedRuningInfo.id,\r\n    wbcMemo: updatedRuningInfo.wbcMemo,\r\n    rbcMemo: updatedRuningInfo.rbcMemo,\r\n  });\r\n  if (res && res?.data?.updateRunningInfoGQL[0].length !== 0) {\r\n    memo.value = updatedRuningInfo.rbcMemo;\r\n    showSuccessAlert('Success');\r\n  }\r\n  memoModal.value = false;\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst commitConfirmed = () => {\r\n  if (submitState.value === 'Submit') {\r\n    return;\r\n  }\r\n  showConfirm.value = true;\r\n  confirmMessage.value = MESSAGES.IDS_MSG_CONFIRM_SLIDE;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  onCommit();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n\r\n  const localTime = moment().local();\r\n\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.userId,\r\n  };\r\n  const updatedRuningInfo = {...slideData.value, ...updatedItem}\r\n  await gqlGenericUpdate(cbcUpdateMutation, {\r\n    id: updatedRuningInfo.id,\r\n    submitState: updatedRuningInfo.submitState,\r\n    submitOfDate: updatedRuningInfo.submitOfDate,\r\n    submitUserId: updatedRuningInfo.submitUserId,\r\n  });\r\n\r\n  emits('submitStateChanged', 'Submit');\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst reDegree = async (rbcInfoArray: any) => {\r\n  if (projectType.value === 'bm') return;\r\n\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n  if (!Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n  rbcInfoArray.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID) { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID) { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) {\r\n            setDegree('0');\r\n            return;\r\n          }\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) {\r\n            setDegree('1');\r\n            return;\r\n          }\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) {\r\n            setDegree('2');\r\n            return;\r\n          }\r\n          // 3\r\n          else {\r\n            setDegree('3');\r\n            return;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID) { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n          } else if (degreeStandard.categoryId === RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID) { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) percent = 0;\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          else setDegree('3');\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      // size\r\n      if (rbcCategory.categoryId === RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID) {\r\n        if (rbcClass.classId === RBC_CODE_CLASS_ID.SIZE.NORMAL) rbcCategory.classInfo[0].degree = '1';\r\n        if ([RBC_CODE_CLASS_ID.SIZE.MACROCYTE, RBC_CODE_CLASS_ID.SIZE.MICROCTYE].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID) {\r\n        if (rbcClass.classId === RBC_CODE_CLASS_ID.CHROMIA.NORMAL) rbcCategory.classInfo[0].degree = '1';\r\n        if ([RBC_CODE_CLASS_ID.CHROMIA.HYPERCHROMIC, RBC_CODE_CLASS_ID.CHROMIA.HYPOCHROMIC].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID) {\r\n        if (rbcClass.classId === RBC_CODE_CLASS_ID.SHAPE.NORMAL) {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== RBC_CODE_CLASS_ID.SHAPE.NORMAL && rbcClass.classId !== RBC_CODE_CLASS_ID.SHAPE.POLIKILOCYTOSIS) {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst tooltipVisibleFunc = (type: keyof TooltipRbcClassType, visible: boolean) => {\r\n  tooltipVisible.value[type] = visible;\r\n}\r\n\r\n</script>\r\n","import script from \"./rbcClass.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcClass.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const moveImgPost = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.images.move, request , true);\r\n};\r\n\r\nexport const moveClassImagePost = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.images.moveClassImage, request, '', false, window.VIEWER_CHECK);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, vShow as _vShow, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = [\"src\", \"onClick\", \"onDragstart\", \"onDblclick\"]\nconst _hoisted_3 = [\"src\", \"onClick\", \"onDragstart\", \"onDblclick\"]\nconst _hoisted_4 = { key: 1 }\nconst _hoisted_5 = { class: \"wbcModal\" }\nconst _hoisted_6 = { class: \"wbcModalImageContent\" }\nconst _hoisted_7 = [\"src\"]\n\n\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { DIR_NAME } from \"@/common/defines/constants/settings\";\r\nimport {moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'Malaria',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath') || DIR_NAME.IA_ROOT_PATH;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst malariaList = ref([]);\r\nconst noMalariaList = ref([]);\r\nconst selectedClickImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst selectedImageSrc = ref('');\r\nlet indexBeforePressingShift = ref<number | null>(null);\r\nlet draggedImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst imageExist = ref(false);\r\nconst modalOpen = ref(false);\r\nconst modalImageWidth = ref('150px');\r\nconst modalImageHeight = ref('150px');\r\n\r\nonMounted(async () => {\r\n  await getImageList(DIR_NAME.MALARIA, malariaList);\r\n  await getImageList(DIR_NAME.NO_MALARIA, noMalariaList);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n});\r\n\r\nasync function getImageList(folderName: string, list: []) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/${DIR_NAME.RBC_CLASS}/${folderName}`;\r\n\r\n  try {\r\n    const response = await fetch(`${apiBaseUrl}/folders?folderPath=${folderPath}`);\r\n    if (!response.ok) {\r\n      imageExist.value = false;\r\n      throw new Error('Network response was not ok');\r\n    } else {\r\n      const data = await response.json();\r\n      list.value = data.map((image: string) => `${apiBaseUrl}/folders?folderPath=${folderPath}/${image}`);\r\n      imageExist.value = true;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nconst outerClickCloseModal = (e: any) => {\r\n  if (e.target.classList.contains('wbc-modal-content')) {\r\n    modalOpen.value = false;\r\n  }\r\n}\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n}\r\n\r\nconst handleOpenModal = (type: string, malaria: any, index: number) => {\r\n  if (type === 'malaria') {\r\n    selectedImageSrc.value = malaria;\r\n    modalOpen.value = true;\r\n  }\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 400);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 400);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 150);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 150);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  \r\n  if (!target.closest('.item-image')) {\r\n    selectedClickImages.value = [];\r\n  }\r\n}\r\n\r\nfunction handleClickImage(section: string, imgName: string, index: number, event: MouseEvent) {\r\n  const clickedImage = { section, imgName, index };\r\n\r\n  if (selectedClickImages.value.length > 0 && selectedClickImages.value[selectedClickImages.value.length - 1].section !== section) {\r\n    selectedClickImages.value = [clickedImage];\r\n  } else {\r\n    if (event.shiftKey && indexBeforePressingShift.value !== null) {\r\n\r\n      const startIdx = Math.min(indexBeforePressingShift.value, index);\r\n      const endIdx = Math.max(indexBeforePressingShift.value, index);\r\n\r\n      for (let i = startIdx; i <= endIdx; i++) {\r\n        const existingIndex = selectedClickImages.value.findIndex(item => item.index === i);\r\n        if (existingIndex === -1) {\r\n          selectedClickImages.value.push({ section, imgName: section === 'malaria' ? malariaList.value[i] : noMalariaList.value[i], index: i });\r\n        }\r\n      }\r\n      \r\n    } else if (event.ctrlKey && indexBeforePressingShift.value !== null) {\r\n      selectedClickImages.value.push(clickedImage);\r\n    } else {\r\n      const existingIndex = selectedClickImages.value.findIndex(item => item.imgName === imgName);\r\n      if (existingIndex !== -1) {\r\n        selectedClickImages.value.splice(existingIndex, 1);\r\n      } else {\r\n        selectedClickImages.value = [clickedImage];\r\n      }\r\n    }\r\n  }\r\n\r\n  indexBeforePressingShift.value = index;\r\n}\r\n\r\nfunction isSelected(section: string, imgName: string): boolean {\r\n  return selectedClickImages.value.some(selectedImage => selectedImage.imgName === imgName);\r\n}\r\n\r\n\r\nfunction onDragStart(section: string, imgName: string, index: number) {\r\n  if (selectedClickImages.value.length > 0) {\r\n    draggedImages.value = selectedClickImages.value;\r\n  } else {\r\n    draggedImages.value = [{ section, imgName, index }];\r\n  }\r\n}\r\n\r\nfunction onDrop(targetSection: string) {\r\n  for (const draggedImage of draggedImages.value) {\r\n    if (targetSection !== draggedImage.section) {\r\n      moveImage(targetSection, draggedImage.imgName);\r\n    }\r\n  }\r\n}\r\n\r\nasync function moveImage(targetSection: string, imgName: string) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const pathNew = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n\r\n  const path = `${pathNew}/${slotId}/${DIR_NAME.RBC_CLASS}`\r\n  const sourceFolder = targetSection === 'malaria' ? `${path}/${DIR_NAME.NO_MALARIA}` : `${path}/${DIR_NAME.MALARIA}`;\r\n  const destinationFolder = targetSection === 'malaria' ? `${path}/${DIR_NAME.MALARIA}` : `${path}/${DIR_NAME.NO_MALARIA}`;\r\n\r\n  const imgNameArr = imgName.split(\"/\");\r\n  const imageName = imgNameArr[imgNameArr.length-1];\r\n\r\n\r\n  const response = await moveImgPost(`sourceFolder=${sourceFolder}&destinationFolder=${destinationFolder}&imageName=${imageName}`);\r\n  \r\n  if (response) {\r\n    const index = targetSection === 'malaria' ? noMalariaList.value.findIndex(image => image === imgName) : malariaList.value.findIndex(image => image === imgName);\r\n    if (targetSection === 'malaria') {\r\n      noMalariaList.value.splice(index, 1);\r\n      malariaList.value.push(imgName);\r\n    } else {\r\n      malariaList.value.splice(index, 1);\r\n      noMalariaList.value.push(imgName);\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (imageExist.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createElementVNode(\"div\", null, [\n            _cache[4] || (_cache[4] = _createElementVNode(\"h1\", { class: \"malariaTitle\" }, \"Malaria O\", -1)),\n            _createElementVNode(\"div\", {\n              class: \"malariaWrapper\",\n              onDrop: _cache[0] || (_cache[0] = ($event: any) => (onDrop('malaria'))),\n              onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"]))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(malariaList.value, (malaria, index) => {\n                return (_openBlock(), _createElementBlock(\"img\", {\n                  key: 'malaria-' + index,\n                  src: malaria,\n                  class: _normalizeClass([\"item-image\", {'selected': isSelected('malaria', malaria) }]),\n                  alt: \"malaria-image\",\n                  onClick: ($event: any) => (handleClickImage('malaria', malaria, index, $event)),\n                  onDragstart: ($event: any) => (onDragStart('malaria', malaria, index)),\n                  onDblclick: ($event: any) => (handleOpenModal('malaria', malaria, index))\n                }, null, 42, _hoisted_2))\n              }), 128))\n            ], 32)\n          ]),\n          _createElementVNode(\"div\", null, [\n            _cache[5] || (_cache[5] = _createElementVNode(\"h1\", { class: \"malariaTitle\" }, \"Malaria X\", -1)),\n            _createElementVNode(\"div\", {\n              class: \"malariaWrapper\",\n              onDrop: _cache[2] || (_cache[2] = ($event: any) => (onDrop('noMalaria'))),\n              onDragover: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"prevent\"]))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(noMalariaList.value, (noMalaria, index) => {\n                return (_openBlock(), _createElementBlock(\"img\", {\n                  key: 'noMalaria-' + index,\n                  src: noMalaria,\n                  class: _normalizeClass([\"item-image\", {'selected': isSelected('noMalaria', noMalaria) }]),\n                  alt: \"noMalaria-image\",\n                  onClick: ($event: any) => (handleClickImage('noMalaria', noMalaria, index, $event)),\n                  onDragstart: ($event: any) => (onDragStart('noMalaria', noMalaria, index)),\n                  onDblclick: ($event: any) => (handleOpenModal('malaria', noMalaria, index))\n                }, null, 42, _hoisted_3))\n              }), 128))\n            ], 32)\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[6] || (_cache[6] = [\n          _createElementVNode(\"span\", null, \"Malaria Images do not exist.\", -1)\n        ]))),\n    _withDirectives(_createElementVNode(\"div\", _hoisted_5, [\n      _createElementVNode(\"div\", {\n        class: \"wbc-modal-content\",\n        onClick: outerClickCloseModal\n      }, [\n        _createElementVNode(\"span\", {\n          class: \"wbcClose\",\n          onClick: closeModal\n        }, \"×\"),\n        _createElementVNode(\"div\", _hoisted_6, [\n          _createElementVNode(\"img\", {\n            src: selectedImageSrc.value,\n            style: _normalizeStyle({ width: modalImageWidth.value, height: modalImageHeight.value }),\n            class: \"modal-image\"\n          }, null, 12, _hoisted_7)\n        ]),\n        _createElementVNode(\"div\", { class: \"buttons\" }, [\n          _createElementVNode(\"button\", { onClick: zoomIn }, \"+\"),\n          _createElementVNode(\"button\", { onClick: zoomOut }, \"-\")\n        ])\n      ])\n    ], 512), [\n      [_vShow, modalOpen.value]\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-if=\"imageExist\">\r\n    <!-- malaria -->\r\n    <div>\r\n      <h1 class=\"malariaTitle\">Malaria O</h1>\r\n      <div class=\"malariaWrapper\" @drop=\"onDrop('malaria')\" @dragover.prevent>\r\n        <img\r\n          v-for=\"(malaria, index) in malariaList\"\r\n          :key=\"'malaria-' + index\" \r\n          :src=\"malaria\" \r\n          class=\"item-image\"\r\n          :class=\"{'selected': isSelected('malaria', malaria) }\"\r\n          alt=\"malaria-image\"\r\n          @click=\"handleClickImage('malaria', malaria, index, $event)\"\r\n          @dragstart=\"onDragStart('malaria', malaria, index)\"\r\n          @dblclick=\"handleOpenModal('malaria', malaria, index)\"\r\n        >\r\n      </div>\r\n    </div>\r\n    <!-- no malaria -->\r\n    <div>\r\n      <h1 class=\"malariaTitle\">Malaria X</h1>\r\n      <div class=\"malariaWrapper\" @drop=\"onDrop('noMalaria')\" @dragover.prevent>\r\n        <img\r\n          v-for=\"(noMalaria, index) in noMalariaList\"\r\n          :key=\"'noMalaria-' + index\"\r\n          :src=\"noMalaria\"\r\n          class=\"item-image\"\r\n          :class=\"{'selected': isSelected('noMalaria', noMalaria) }\"\r\n          alt=\"noMalaria-image\"  \r\n          @click=\"handleClickImage('noMalaria', noMalaria, index, $event)\"\r\n          @dragstart=\"onDragStart('noMalaria', noMalaria, index)\"\r\n          @dblclick=\"handleOpenModal('malaria', noMalaria, index)\"\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    <span>Malaria Images do not exist.</span>\r\n  </div>\r\n\r\n\r\n  <!--  Modal -->\r\n  <div class=\"wbcModal\" v-show=\"modalOpen\">\r\n    <div class=\"wbc-modal-content\" @click=\"outerClickCloseModal\">\r\n      <span class=\"wbcClose\" @click=\"closeModal\">&times;</span>\r\n      <div class=\"wbcModalImageContent\">\r\n        <img :src=\"selectedImageSrc\" :style=\"{ width: modalImageWidth, height: modalImageHeight }\"\r\n             class=\"modal-image\"/>\r\n      </div>\r\n      <div class=\"buttons\">\r\n        <button @click=\"zoomIn\">+</button>\r\n        <button @click=\"zoomOut\">-</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps } from 'vue';\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { DIR_NAME } from \"@/common/defines/constants/settings\";\r\nimport {moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath') || DIR_NAME.IA_ROOT_PATH;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst malariaList = ref([]);\r\nconst noMalariaList = ref([]);\r\nconst selectedClickImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst selectedImageSrc = ref('');\r\nlet indexBeforePressingShift = ref<number | null>(null);\r\nlet draggedImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst imageExist = ref(false);\r\nconst modalOpen = ref(false);\r\nconst modalImageWidth = ref('150px');\r\nconst modalImageHeight = ref('150px');\r\n\r\nonMounted(async () => {\r\n  await getImageList(DIR_NAME.MALARIA, malariaList);\r\n  await getImageList(DIR_NAME.NO_MALARIA, noMalariaList);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n});\r\n\r\nasync function getImageList(folderName: string, list: []) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/${DIR_NAME.RBC_CLASS}/${folderName}`;\r\n\r\n  try {\r\n    const response = await fetch(`${apiBaseUrl}/folders?folderPath=${folderPath}`);\r\n    if (!response.ok) {\r\n      imageExist.value = false;\r\n      throw new Error('Network response was not ok');\r\n    } else {\r\n      const data = await response.json();\r\n      list.value = data.map((image: string) => `${apiBaseUrl}/folders?folderPath=${folderPath}/${image}`);\r\n      imageExist.value = true;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nconst outerClickCloseModal = (e: any) => {\r\n  if (e.target.classList.contains('wbc-modal-content')) {\r\n    modalOpen.value = false;\r\n  }\r\n}\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n}\r\n\r\nconst handleOpenModal = (type: string, malaria: any, index: number) => {\r\n  if (type === 'malaria') {\r\n    selectedImageSrc.value = malaria;\r\n    modalOpen.value = true;\r\n  }\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 400);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 400);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 150);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 150);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  \r\n  if (!target.closest('.item-image')) {\r\n    selectedClickImages.value = [];\r\n  }\r\n}\r\n\r\nfunction handleClickImage(section: string, imgName: string, index: number, event: MouseEvent) {\r\n  const clickedImage = { section, imgName, index };\r\n\r\n  if (selectedClickImages.value.length > 0 && selectedClickImages.value[selectedClickImages.value.length - 1].section !== section) {\r\n    selectedClickImages.value = [clickedImage];\r\n  } else {\r\n    if (event.shiftKey && indexBeforePressingShift.value !== null) {\r\n\r\n      const startIdx = Math.min(indexBeforePressingShift.value, index);\r\n      const endIdx = Math.max(indexBeforePressingShift.value, index);\r\n\r\n      for (let i = startIdx; i <= endIdx; i++) {\r\n        const existingIndex = selectedClickImages.value.findIndex(item => item.index === i);\r\n        if (existingIndex === -1) {\r\n          selectedClickImages.value.push({ section, imgName: section === 'malaria' ? malariaList.value[i] : noMalariaList.value[i], index: i });\r\n        }\r\n      }\r\n      \r\n    } else if (event.ctrlKey && indexBeforePressingShift.value !== null) {\r\n      selectedClickImages.value.push(clickedImage);\r\n    } else {\r\n      const existingIndex = selectedClickImages.value.findIndex(item => item.imgName === imgName);\r\n      if (existingIndex !== -1) {\r\n        selectedClickImages.value.splice(existingIndex, 1);\r\n      } else {\r\n        selectedClickImages.value = [clickedImage];\r\n      }\r\n    }\r\n  }\r\n\r\n  indexBeforePressingShift.value = index;\r\n}\r\n\r\nfunction isSelected(section: string, imgName: string): boolean {\r\n  return selectedClickImages.value.some(selectedImage => selectedImage.imgName === imgName);\r\n}\r\n\r\n\r\nfunction onDragStart(section: string, imgName: string, index: number) {\r\n  if (selectedClickImages.value.length > 0) {\r\n    draggedImages.value = selectedClickImages.value;\r\n  } else {\r\n    draggedImages.value = [{ section, imgName, index }];\r\n  }\r\n}\r\n\r\nfunction onDrop(targetSection: string) {\r\n  for (const draggedImage of draggedImages.value) {\r\n    if (targetSection !== draggedImage.section) {\r\n      moveImage(targetSection, draggedImage.imgName);\r\n    }\r\n  }\r\n}\r\n\r\nasync function moveImage(targetSection: string, imgName: string) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const pathNew = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n\r\n  const path = `${pathNew}/${slotId}/${DIR_NAME.RBC_CLASS}`\r\n  const sourceFolder = targetSection === 'malaria' ? `${path}/${DIR_NAME.NO_MALARIA}` : `${path}/${DIR_NAME.MALARIA}`;\r\n  const destinationFolder = targetSection === 'malaria' ? `${path}/${DIR_NAME.MALARIA}` : `${path}/${DIR_NAME.NO_MALARIA}`;\r\n\r\n  const imgNameArr = imgName.split(\"/\");\r\n  const imageName = imgNameArr[imgNameArr.length-1];\r\n\r\n\r\n  const response = await moveImgPost(`sourceFolder=${sourceFolder}&destinationFolder=${destinationFolder}&imageName=${imageName}`);\r\n  \r\n  if (response) {\r\n    const index = targetSection === 'malaria' ? noMalariaList.value.findIndex(image => image === imgName) : malariaList.value.findIndex(image => image === imgName);\r\n    if (targetSection === 'malaria') {\r\n      noMalariaList.value.splice(index, 1);\r\n      malariaList.value.push(imgName);\r\n    } else {\r\n      malariaList.value.splice(index, 1);\r\n      noMalariaList.value.push(imgName);\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n}\r\n\r\n</script>\r\n","import script from \"./Malaria.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Malaria.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import completeAlarm from \"@/assets/sound/complete.wav\";\r\nimport errorAlarm from \"@/assets/sound/error.mp3\";\r\n\r\nexport const SOUND_ERROR_ALARM = new Audio(errorAlarm);\r\nexport const SOUND_COMPLETE_ALARM = new Audio(completeAlarm);\r\n\r\nexport const openseadragonPrefixUrl = (apiBaseUrl: string) => `${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { class: \"rbc-container imgList\" }\nconst _hoisted_2 = { class: \"btn-container_img_list\" }\nconst _hoisted_3 = {\n  class: \"btn-imgsetbox_img_list\",\n  ref: \"imgSetWrap\"\n}\nconst _hoisted_4 = { class: \"imgSet_img_list\" }\nconst _hoisted_5 = { class: \"flex-align-center\" }\nconst _hoisted_6 = { class: \"flex-align-center\" }\nconst _hoisted_7 = { class: \"flex-align-center\" }\nconst _hoisted_8 = { class: \"ruler_box_img_list\" }\nconst _hoisted_9 = [\"onClick\"]\nconst _hoisted_10 = { class: \"tiling-viewer_img_list-box_img_list\" }\nconst _hoisted_11 = { key: 2 }\nconst _hoisted_12 = { class: \"categoryNm\" }\nconst _hoisted_13 = { class: \"classNmRbc\" }\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = { class: \"categories\" }\nconst _hoisted_16 = { class: \"classNmRbc\" }\n\nimport {computed, nextTick, onMounted, ref, watch} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport {rulers} from '@/common/defines/constants/rbc';\r\nimport { DIR_NAME } from \"@/common/defines/constants/settings\";\r\nimport Malaria from './Malaria.vue';\r\nimport {readDziFile, readFileTxt, readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {openseadragonPrefixUrl} from \"@/common/lib/utils/assetUtils\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'rbcImageList',\n  props: ['rbcInfo', 'selectItems', 'type', 'classInfoArr', 'isBefore'],\n  setup(__props, { emit: __emit }) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst props = __props;\r\nconst activeTab = ref('lowMag');\r\n\r\nlet viewer: any = ref<any>(null);\r\nconst imgSet_img_list = ref(false);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst isGrid = ref(false);\r\nconst isMagnifyingGlass = ref(false);\r\nconst ruler = ref(null);\r\nconst activeRuler = ref<'None' | 'Line' | 'Cross' | 'Circle'>('None');\r\nconst showSelect = ref<any>(false);\r\nconst rulerXResolution = ref(0.000560);\r\nconst rulerPos = ref({\r\n  prevPosX: 0,\r\n  prevPosY: 0,\r\n  posX: 0,\r\n  posY: 0,\r\n  left: 0,\r\n  top: 0,\r\n  width: 50,\r\n  height: 50\r\n});\r\nconst rulerSize = ref(5);\r\nconst rulerWidth = ref(0);\r\nconst viewBoxWH = ref(150);\r\nconst tilingViewerLayer = ref(null);\r\nconst tileExist = ref(true);\r\nconst newItemClassInfoArr = ref<any>([]);\r\n\r\nconst store = useStore();\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst classInfoArr = ref<any>([]);\r\nconst canvasOverlay = ref<any>(null);\r\nconst drawPath = ref<any>([]);\r\nconst moveRbcClass = ref<any>([]);\r\nconst selectBoxX = ref(0);\r\nconst selectBoxY = ref(0);\r\nconst emits = __emit;\r\nconst rightClickItem = ref<any>([]);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst classInfoArrNewReData = computed(() => store.state.commonModule.classInfoArr);\r\nconst rbcImagePageNumber = computed(() => store.state.commonModule.rbcImagePageNumber);\r\nconst canvasCurrentHeight = ref('0');\r\nconst canvasCurrentWitdh = ref('0');\r\nconst fileNameResultArr = ref<any>([]);\r\nconst notCanvasClick = ref(false);\r\nconst imagePageType = ref<'RBC' | 'PLT'>('RBC');\r\nconst zoomRatio = ref(0);\r\nconst maxNumberOfLines = ref(330);\r\n\r\nonMounted(async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { rbcImagePageNumber: 0 });\r\n  await nextTick();\r\n  await initElement();\r\n  await initGetRulerWidthHeight();\r\n  document.addEventListener('click', closeSelectBox);\r\n  rightClickItem.value = !props.selectItems.rbcInfo.rbcClass ? props.selectItems.rbcInfo : props.selectItems.rbcInfo.rbcClass;\r\n});\r\n\r\nconst dziWidthHeight = async (imageFileName: any): Promise<any> => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const urlImage = `${path}/${props.selectItems.slotId}/02_RBC_Image/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({filePath: urlImage});\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\n\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return {fileName, width: Number(width), height: Number(height), tileSize: Number(tileSize)}\r\n}\r\n\r\nconst moveRbcClassEvent = async (categoryId: string, classId: string, classNm: string) => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  if (existingOverlays.length === 0) {\r\n    showErrorAlert('Nothing has been selected');\r\n    return;\r\n  }\r\n  // categoryId에 해당하는 객체를 찾음\r\n  let category = rbcInfoPathAfter.value.find((item: any) => item.categoryId === categoryId);\r\n\r\n  // categoryId에 해당하는 객체가 없으면 새로 추가\r\n  if (!category) {\r\n    category = {\r\n      categoryId: categoryId,\r\n      classInfo: []\r\n    };\r\n    rbcInfoPathAfter.value.push(category);\r\n  }\r\n  let newAsrr = [];\r\n  for (const moveRbcClassItem of moveRbcClass.value) {\r\n    for (const argument of rbcInfoPathAfter.value) {\r\n      // 기존 부분 삭제\r\n      if (moveRbcClassItem.categoryId === argument.categoryId) {\r\n        const foundElementIndex = argument.classInfo.findIndex((el: any) => String(el.index) === moveRbcClassItem.index);\r\n        if (foundElementIndex !== -1) {\r\n          newAsrr.push({\r\n            categoryId: categoryId,\r\n            classNm: classNm,\r\n            classId: classId,\r\n            posX: moveRbcClassItem.posX,\r\n            posY: moveRbcClassItem.posY,\r\n            width: moveRbcClassItem.width,\r\n            height: moveRbcClassItem.height,\r\n            index: String(moveRbcClassItem.index)\r\n          });\r\n          argument.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n      }\r\n      //기존 부분을 li 클릭 한 곳으로 이동\r\n      if (argument.categoryId === categoryId) {\r\n        argument.classInfo.push({\r\n          classNm: classNm,\r\n          classId: classId,\r\n          posX: moveRbcClassItem.posX,\r\n          posY: moveRbcClassItem.posY,\r\n          width: moveRbcClassItem.width,\r\n          height: moveRbcClassItem.height,\r\n          index: String(moveRbcClassItem.index)\r\n        })\r\n      }\r\n    }\r\n  }\r\n  await removeDiv();\r\n  await rbcInfoPathAfterJsonCreate(newAsrr);\r\n  await drawRbcMarker(classInfoArr.value);\r\n\r\n}\r\n\r\nconst removeDiv = async () => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  const overlaysArray = Array.from(existingOverlays); // HTMLCollection을 배열로 변환\r\n\r\n  // 모든 오버레이 제거\r\n  overlaysArray.forEach(overlay => {\r\n    viewer.value.removeOverlay(overlay);\r\n  });\r\n\r\n  showSelect.value = false;\r\n};\r\n\r\n\r\nconst rbcInfoPathAfterJsonCreate = async (jsonData: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url = `${path}/${props.selectItems?.slotId}/${DIR_NAME.RBC_CLASS}/${props.selectItems?.slotId}_new_${rbcImagePageNumber.value}.json`;\r\n  const response = await readJsonFile({fullPath: url});\r\n  let compareData = [];\r\n\r\n  if (response.data !== 'not file') {\r\n    const url = `${path}/${props.selectItems?.slotId}/${DIR_NAME.RBC_CLASS}/${props.selectItems?.slotId}_new_${rbcImagePageNumber.value}.json`;\r\n    const response = await readJsonFile({fullPath: url});\r\n    compareData = [...response.data, ...jsonData];\r\n  } else {\r\n    compareData = jsonData;\r\n  }\r\n\r\n  const jsonString = JSON.stringify(compareData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `${props.selectItems?.slotId}_new_${rbcImagePageNumber.value}.json`);\r\n  const filePath = `${path}/${props.selectItems?.slotId}/${DIR_NAME.RBC_CLASS}/${props.selectItems?.slotId}_new_${rbcImagePageNumber.value}.json`\r\n  try {\r\n\r\n    const response = await fetch(`${apiBaseUrl}/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    await response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nconst closeSelectBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.rbc-select-box');\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    showSelect.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\n\r\nwatch(() => props.classInfoArr, (newData) => {\r\n  newItemClassInfoArr.value = newData;\r\n\r\n  if (newData.length === 0) {\r\n    removeDiv();\r\n    removeRbcMarker();\r\n    return;\r\n  }\r\n\r\n  // 모든 <ol> 요소를 선택하고, data-class-nm 값을 배열로 수집\r\n  const olElements = document.querySelectorAll('ol.overlayElement');\r\n\r\n  // newData 배열에서 존재하는 data-class-nm 값을 수집\r\n  const validClassNmSet = new Set(newData.map((el: any) => el.classNm));\r\n\r\n  olElements.forEach(el => {\r\n    const classNm = el.getAttribute('data-class-nm');\r\n\r\n    // data-class-nm이 newData에 존재하지 않으면 해당 <ol> 요소를 제거\r\n    if (!validClassNmSet.has(classNm)) {\r\n      console.log('Removing <ol> with data-class-nm:', classNm);\r\n      viewer.value.removeOverlay(el);\r\n    }\r\n  });\r\n\r\n  // rbcMarker 함수 호출\r\n  rbcMarker(newData, rbcImagePageNumber.value);\r\n}, {deep: true});\r\n\r\n\r\nwatch(classInfoArrNewReData, async (newItem, oldItem) => {\r\n  if (rbcReData.value) {\r\n    if (newItem.length === 0) {\r\n      removeDiv();\r\n      removeRbcMarker();\r\n      return;\r\n    }\r\n    await rbcMarker(newItem, rbcImagePageNumber.value);\r\n    await store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n    await store.dispatch('commonModule/setCommonInfo', {classInfoArr: []});\r\n    return;\r\n  }\r\n\r\n}, {deep: true})\r\n\r\nconst rbcClassRightClick = (event: MouseEvent) => {\r\n  if (props.isBefore || classInfoArr.value.length === 0) {\r\n    return;\r\n  }\r\n\r\n  showSelect.value = true;\r\n\r\n  if (event.currentTarget instanceof HTMLElement) {\r\n    selectBoxX.value = event.clientX;\r\n    selectBoxY.value = event.clientY - 300;\r\n  }\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst rbcMarker = async (newItem: any, imgNum: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const url_new = `${path}/${props.selectItems.slotId}/${DIR_NAME.RBC_CLASS}/${props.selectItems.slotId}_new_${rbcImagePageNumber.value}.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/${DIR_NAME.RBC_CLASS}/${props.selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[imgNum].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            String(el.index) === String(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let sss = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: String(newRbcData.index),\r\n          }\r\n          rbcItem.classInfo.push(sss);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[imgNum].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[imgNum].rbcClassList;\r\n  }\r\n  classInfoArr.value = newItem;\r\n\r\n  if (newItem.length === 0) {\r\n    removeRbcMarker();\r\n  } else {\r\n    await drawRbcMarker(newItem); // 변경된 항목으로 마커 다시 그리기\r\n  }\r\n}\r\n\r\n\r\nwatch(() => props.selectItems, async (newItem) => {\r\n  await nextTick();\r\n  const tilingViewerLayer = document.getElementById('tiling-viewer_img_list');\r\n  if (tilingViewerLayer) {\r\n    tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n    // OpenSeadragon 인스턴스가 존재하면 초기화하지 않고 캔버스만 업데이트\r\n    if (viewer.value) {\r\n      viewer.value.destroy(); // 기존 뷰어 인스턴스 파괴\r\n    }\r\n\r\n    activeTab.value = 'lowMag';\r\n    await initElement();\r\n  }\r\n\r\n});\r\n\r\n// const rbc\r\n\r\nconst removeRbcMarker = () => {\r\n  const canvas = canvasOverlay.value;\r\n  if (!canvas) {\r\n    console.error('Canvas element를 찾을 수 없습니다.');\r\n    return null;\r\n  }\r\n\r\n  const ctx = canvas.getContext('2d');\r\n  if (!ctx) {\r\n    console.error('2D context를 가져올 수 없습니다.');\r\n    return null;\r\n  }\r\n\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.beginPath();\r\n  drawPath.value = [];\r\n  return ctx;\r\n};\r\n\r\n\r\nconst drawRbcMarker = async (classInfoArr: any) => {\r\n  // json rbcInfoPathAfter.value 로 그림 그리는곳\r\n  const colors: any = {\r\n    'Normal': 'red',\r\n    'Macrocyte': '#ff4600',\r\n    'Microcyte': '#4C0290',\r\n\r\n    'Hyperchromic': 'FF0090',\r\n    'Hypochromic': '#4C0290',\r\n\r\n    'Poikilocyte': 'orange',\r\n    'Target Cell': 'navy',\r\n    'Burr Cell': 'purple',\r\n    'Acanthocyte': '#1E90FF',\r\n    'Ovalocyte': '#800080',\r\n    'Schistocyte': 'magenta',\r\n    'Sickle Cell': '#3CB371',\r\n    'Stomatocyte': '#FFFF00',\r\n    'TearDrop Cell': '#4682B4',\r\n    'Spherocyte': '#FF6347',\r\n\r\n    'Howell-Jolly Body': '#FF4500',\r\n    'Basophilic Stippling': '#DDA0DD',\r\n    'Malaria': 'black',\r\n    'Platelet': '#C71585',\r\n  };\r\n\r\n  const ctx = removeRbcMarker(); // canvas 초기화\r\n  if (!ctx) {\r\n    console.error('Canvas context 초기화 실패');\r\n    return;\r\n  }\r\n\r\n  // classInfoArr -> input 에서 체크된 값\r\n  // rbcInfoPathAfter -> json 데이터\r\n  // 여기서 새로 추가 된 index 로 있나 없나 따지고 after 에서 있으면 비포에서는 보여주지않는다.\r\n  classInfoArr.forEach((info: any) => {\r\n    rbcInfoPathAfter.value.forEach((category: any) => {\r\n      category.classInfo.forEach((classItem: any) => {\r\n        // 기존 비교 항목\r\n        if (classItem.classId === info.classId && category.categoryId === info.categoryId) {\r\n          ctx.lineWidth = 3;\r\n          ctx.strokeStyle = `${colors[info.classNm] || 'black'}`;\r\n          let rectPath = new Path2D();\r\n          let width: number;\r\n          let height: number;\r\n          let classItemPosX: number;\r\n          let classItemPosY: number;\r\n\r\n          if (classItem?.width) {\r\n            width = classItem.width;\r\n            height = classItem.height;\r\n            classItemPosX = classItem.posX;\r\n            classItemPosY = classItem.posY;\r\n          } else {\r\n            width = Number(classItem.x2) - Number(classItem.x1);\r\n            height = Number(classItem.y2) - Number(classItem.y1);\r\n            classItemPosX = Number(classItem.x1);\r\n            classItemPosY = Number(classItem.y1);\r\n          }\r\n\r\n          let ddrr = {\r\n            categoryId: info.categoryId,\r\n            classNm: info.classNm,\r\n            classId: info.classId,\r\n            posX: classItemPosX,\r\n            posY: classItemPosY,\r\n            width: width,\r\n            height: height,\r\n            index: String(classItem.index),\r\n          };\r\n          rectPath.rect(classItemPosX, classItemPosY, width, height);\r\n          drawPath.value.push(ddrr);\r\n          ctx.stroke(rectPath);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  await store.dispatch('commonModule/setCommonInfo', {resetRbcArr: true});\r\n};\r\n\r\n\r\nconst initElement = async () => {\r\n  if (props.selectItems.slotId === undefined) {\r\n    return;\r\n  }\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  try {\r\n    const folderPath = `${path}/${props.selectItems.slotId}/${DIR_NAME.RBC_IMAGE}`;\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n    if (tilesInfo.length !== 0) {\r\n      viewer.value = OpenSeadragon({\r\n        id: \"tiling-viewer_img_list\",\r\n        animationTime: 0.4,\r\n        navigatorSizeRatio: 0.25,\r\n        showNavigator: true,\r\n        sequenceMode: true,\r\n        defaultZoomLevel: 1,\r\n        prefixUrl: openseadragonPrefixUrl(apiBaseUrl),\r\n        tileSources: tilesInfo,\r\n        showReferenceStrip: false,\r\n        gestureSettingsMouse: {clickToZoom: false},\r\n        minZoomLevel: 1, // 최소 확대 레벨 설정\r\n        zoomPerScroll: 1.2, // 스크롤 확대 비율 설정\r\n        viewportMargins: {top: 0, left: 0, bottom: 0, right: 0}, // 뷰포트 여백 설정\r\n        visibilityRatio: 1.0 // 이미지를 뷰포트에 맞추기 위한 비율 설정\r\n      });\r\n\r\n\r\n      const initialMaxZoomLevel = tilesInfo[0]?.maxZoomLevel || 15;\r\n      viewer.value.viewport.maxZoomLevel = initialMaxZoomLevel;\r\n\r\n      new OpenSeadragon.MouseTracker({\r\n        element: viewer.value.element,\r\n        moveHandler: function (event) {\r\n          const existingMagCanvas = document.getElementById('magCanvas');\r\n          if (existingMagCanvas) {\r\n            viewer.value.element.removeChild(existingMagCanvas);\r\n          }\r\n\r\n          if (!isMagnifyingGlass.value) {\r\n            return;\r\n          }\r\n\r\n          const {canvas} = viewer.value.drawer;\r\n          const magCanvas = document.createElement('canvas');\r\n          const magCtx = magCanvas.getContext('2d');\r\n          canvasOverlay.value = magCanvas;\r\n          if (magCtx) {\r\n            const magWidth = 200;\r\n            const magHeight = 200;\r\n            const zoomLevel = 5;\r\n\r\n            magCanvas.id = 'magCanvas';\r\n            magCanvas.width = magWidth;\r\n            magCanvas.height = magHeight;\r\n            magCanvas.style.position = 'absolute';\r\n            magCanvas.style.left = `${event.position.x - magWidth / 2}px`;\r\n            magCanvas.style.top = `${event.position.y - magHeight / 2}px`;\r\n            magCanvas.style.border = '1px solid';\r\n            magCanvas.style.borderRadius = '50%';\r\n            magCanvas.style.width = `${magWidth}px`;\r\n            magCanvas.style.height = `${magHeight}px`;\r\n            magCanvas.style.zIndex = '0';\r\n\r\n            viewer.value.element.appendChild(magCanvas);\r\n\r\n            // 줌을 위한 확대된 부분을 정확히 잘라내기 위해 drawImage 메서드 수정\r\n            magCtx.drawImage(\r\n                canvas,\r\n                event.position.x - (magWidth / 2 / zoomLevel),\r\n                event.position.y - (magHeight / 2 / zoomLevel),\r\n                magWidth / zoomLevel,\r\n                magHeight / zoomLevel,\r\n                0,\r\n                0,\r\n                magWidth,\r\n                magHeight\r\n            );\r\n\r\n            magCanvas.style.visibility = event.position.y <= 0 || event.position.x <= 0 ? 'hidden' : 'visible';\r\n          }\r\n        },\r\n      });\r\n\r\n\r\n      // 캔버스 오버레이 생성 및 추가\r\n      const canvas = document.createElement('canvas');\r\n      const overlay = viewer.value.addOverlay({\r\n        element: canvas,\r\n        location: new OpenSeadragon.Rect(0, 0, 1, 1), // 캔버스가 뷰어 전체를 덮도록 설정\r\n      });\r\n      canvas.id = 'myCanvas';\r\n      canvasOverlay.value = canvas;\r\n\r\n      viewer.value.addHandler('open', function (event: any) {\r\n\r\n        // 캔버스 크기를 조정\r\n        canvas.width = event.source.Image.Size.Width;\r\n        canvas.height = event.source.Image.Size.Height;\r\n      });\r\n\r\n      const fullPageButton = viewer.value.buttons.buttons.find((button: any) => button.tooltip === 'Toggle full page');\r\n\r\n      if (fullPageButton) {\r\n        fullPageButton.element.addEventListener('click', async () => {\r\n          if (viewer.value.isFullPage()) {\r\n            await document.exitFullscreen();\r\n            viewer.value.setFullPage(false);\r\n          } else {\r\n            viewer.value.setFullPage(true);\r\n          }\r\n        });\r\n      }\r\n\r\n      viewer.value.addHandler('full-page', async (event: any) => {\r\n        if (!event.fullPage) {\r\n          viewer.value.element.style.backgroundColor = '';\r\n          await document.documentElement.requestFullscreen();\r\n        } else {\r\n          viewer.value.element.style.backgroundColor = 'black';\r\n        }\r\n      })\r\n\r\n      viewer.value.addHandler('page', async (event: any) => {\r\n        const pageIndex = event.page;\r\n        const maxZoomLevel = tilesInfo[pageIndex]?.maxZoomLevel || 15;\r\n        const notCanvasClick = !fileNameResultArr.value[pageIndex].includes('RBC_Image');\r\n        viewer.value.viewport.maxZoomLevel = maxZoomLevel;\r\n        if (!notCanvasClick) {\r\n          imagePageType.value = 'RBC';\r\n          maxNumberOfLines.value = 330;\r\n          await store.dispatch('commonModule/setCommonInfo', { rbcImagePageNumber: pageIndex });\r\n        } else {\r\n          imagePageType.value = 'PLT';\r\n          maxNumberOfLines.value = 1000;\r\n        }\r\n\r\n        await removeRuler();\r\n        drawRuler(ruler);\r\n        emits('notCanvasClick', notCanvasClick);\r\n        // 페이지가 변경될 때 오버레이를 다시 추가\r\n        if (canvas.parentElement !== viewer.value.container) {\r\n          viewer.value.addOverlay({\r\n            element: canvas,\r\n            location: new OpenSeadragon.Rect(0, 0, 1, 1),\r\n          });\r\n        }\r\n        emits('unChecked');\r\n      });\r\n\r\n      viewer.value.addHandler('zoom', () => {\r\n        if (activeRuler.value === 'None') return;\r\n        drawRuler(activeRuler.value);\r\n      });\r\n\r\n      viewer.value.addHandler('canvas-click', async (event: any) => {\r\n        //\r\n        if (!event.originalEvent.ctrlKey) {\r\n          await removeDiv();\r\n        }\r\n        if (!event.originalEvent.shiftKey) { // 쉬프트 키를 누르지 않았을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n          for (const item of drawPath.value) {\r\n            const itemPos = item;\r\n            const width = itemPos.width; // 아이템의 너비\r\n            const height = itemPos.height; // 아이템의 높이\r\n\r\n            if (\r\n                canvasPos.x >= Number(itemPos.posX) && canvasPos.x <= (Number(itemPos.posX) + width) &&\r\n                canvasPos.y >= Number(itemPos.posY) && canvasPos.y <= (Number(itemPos.posY) + height)\r\n            ) {\r\n              const categoryId = item.categoryId;\r\n              const color = 'lightgreen'; // 연한 연두색\r\n              if (event.originalEvent.ctrlKey) { // 컨트롤 키를 눌렀을 때\r\n                // 기존의 오버레이가 클릭된 위치에 있는지 확인\r\n                const existingOverlay = document.querySelector(`.overlayElement[data-class-posX=\"${itemPos.posX}\"][data-class-posY=\"${itemPos.posY}\"]`);\r\n                if (existingOverlay) {\r\n                  // 클릭된 위치에 이미 오버레이가 있으면 새로 추가하지 않음\r\n                  return;\r\n                }\r\n\r\n                moveRbcClass.value.push(item)\r\n                const element = document.createElement('ol');\r\n                element.className = 'overlayElement';\r\n                element.id = 'overlayElement';\r\n                element.setAttribute('data-category-id', categoryId);\r\n                element.setAttribute('data-class-nm', item.classNm);\r\n                element.setAttribute('data-class-posY', itemPos.posY);\r\n                element.setAttribute('data-class-posX', itemPos.posX);\r\n                element.style.width = `${item.width}px`;\r\n                element.style.backgroundColor = color;\r\n                element.style.height = `${item.height}px`;\r\n                element.style.position = 'absolute';\r\n                element.style.opacity = '0.5';\r\n\r\n                const posX = parseFloat(itemPos.posX);\r\n                const posY = parseFloat(itemPos.posY);\r\n                const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                viewer.value.addOverlay({\r\n                  element: element,\r\n                  location: overlayRect\r\n                });\r\n              } else {\r\n\r\n                if (\r\n                    canvasPos.x >= Number(itemPos.posX) && canvasPos.x <= (Number(itemPos.posX) + width) &&\r\n                    canvasPos.y >= Number(itemPos.posY) && canvasPos.y <= (Number(itemPos.posY) + height)\r\n                ) {\r\n                  // 클릭된 아이템 처리\r\n                  const categoryId = item.categoryId;\r\n                  const color = 'lightgreen'; // 연한 연두색\r\n                  const classInfo = rbcInfoPathAfter.value.find((category: any) => category.categoryId === categoryId)?.classInfo.find((classItem: any) => classItem.index === item.index);\r\n                  if (classInfo) {\r\n                    moveRbcClass.value = [item];\r\n                    const existingOverlay = document.getElementById('overlayElement');\r\n                    if (existingOverlay) {\r\n                      viewer.value.removeOverlay(existingOverlay);\r\n                    }\r\n\r\n                    const previousOverlay = document.querySelector(`.overlayElement[data-category-id=\"${categoryId}\"][data-class-nm=\"${item.classNm}\"]`);\r\n                    if (previousOverlay) {\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.updateOverlay(previousOverlay, overlayRect);\r\n                    } else {\r\n\r\n                      const element = document.createElement('ol');\r\n                      element.className = 'overlayElement';\r\n                      element.id = 'overlayElement';\r\n                      element.setAttribute('data-category-id', categoryId);\r\n                      element.setAttribute('data-class-nm', item.classNm);\r\n                      element.style.width = `${item.width}px`;\r\n                      element.style.backgroundColor = color;\r\n                      element.style.height = `${item.height}px`;\r\n                      element.style.position = 'absolute';\r\n                      element.style.opacity = '0.5';\r\n\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(Number(posX), Number(posY), Number(item.width), Number(item.height)); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.addOverlay({\r\n                        element: element,\r\n                        location: overlayRect\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        } else { // 쉬프트 키를 눌렀을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n          // 함수: 클릭 위치가 아이템 위치와 겹치는지 확인\r\n          const isItemSelected = (item: any) => {\r\n            const width = item.width;\r\n            const height = item.height;\r\n            return (\r\n                canvasPos.x >= Number(item.posX) && canvasPos.x <= (Number(item.posX) + width) &&\r\n                canvasPos.y >= Number(item.posY) && canvasPos.y <= (Number(item.posY) + height)\r\n            );\r\n          };\r\n\r\n          // 선택된 아이템의 classNm 저장\r\n          let selectItm = '';\r\n          for (const item of drawPath.value) {\r\n            if (item.classNm !== \"Normal\" && isItemSelected(item)) {\r\n              selectItm = item.classNm;\r\n              break; // 하나의 아이템만 선택됨\r\n            }\r\n          }\r\n\r\n          // 선택된 아이템의 classNm에 해당하는 모든 아이템 처리\r\n          for (const item of drawPath.value) {\r\n            if (item.classNm !== \"Normal\" && selectItm === item.classNm) {\r\n              moveRbcClass.value.push(item);\r\n\r\n              const element = document.createElement('ol');\r\n              element.className = 'overlayElement';\r\n              element.id = 'overlayElement';\r\n              element.setAttribute('data-category-id', item.categoryId);\r\n              element.setAttribute('data-class-nm', item.classNm);\r\n              element.style.width = `${item.width}px`; // 픽셀 단위 추가\r\n              element.style.backgroundColor = 'lightgreen';\r\n              element.style.height = `${item.height}px`; // 픽셀 단위 추가\r\n              element.style.position = 'absolute';\r\n              element.style.opacity = '0.5';\r\n\r\n              const posX = parseFloat(item.posX);\r\n              const posY = parseFloat(item.posY);\r\n              const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, item.width, item.height);\r\n              viewer.value.addOverlay({\r\n                element: element,\r\n                location: overlayRect\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n\r\n      });\r\n\r\n\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n// const drawOverlays = () => {\r\n//   const overlays = drawPath.value; // drawPath에 있는 아이템들을 오버레이로 추가\r\n//   overlays.forEach((item: any) => {\r\n//     const element = document.createElement('div');\r\n//     element.className = 'overlayElement';\r\n//     element.style.background = 'rgba(255, 0, 0, 0.5)'; // 예시 스타일\r\n//     viewer.value?.addOverlay({\r\n//       element: element,\r\n//       location: new OpenSeadragon.Rect(item.x, item.y, item.width, item.height)\r\n//     });\r\n//   });\r\n// };\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    tileExist.value = false;\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n    fileNameResultArr.value = [];\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n\r\n        const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n        fileNameResultArr.value.push(fileNameResult)\r\n        const {width, height, tileSize} = await dziWidthHeight(fileNameResult)\r\n\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: \"jpg\",\r\n            Overlap: \"1\",\r\n            TileSize: tileSize,\r\n            Size: {\r\n              Width: width,\r\n              Height: height\r\n            },\r\n          },\r\n          maxZoomLevel: fileName.includes('RBC') ? 15 : 170,\r\n        });\r\n\r\n        canvasCurrentWitdh.value = width;\r\n        canvasCurrentHeight.value = height;\r\n      }\r\n    }\r\n    tileExist.value = true;\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Low magnification and Malaria tab\r\nconst toggleViewer = (viewerType: string) => {\r\n  switch (viewerType) {\r\n    case 'lowMag':\r\n      activeTab.value = 'lowMag';\r\n      break;\r\n    case 'malaria':\r\n      activeTab.value = 'malaria';\r\n      imgSet_img_list.value = false;\r\n      break;\r\n  }\r\n\r\n  if (activeTab.value !== 'malaria') {\r\n    initElement();\r\n    emits('notCanvasClick', false);\r\n  }\r\n};\r\n\r\n\r\n// Img setting\r\nconst imgSetOpen = () => {\r\n  imgSet_img_list.value = !imgSet_img_list.value;\r\n}\r\n\r\n\r\n// Brightness\r\nconst changeImgBrightness = (event: any) => {\r\n  const brightness = event?.target?.value;\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `\r\n      opacity(0.9)\r\n      drop-shadow(0 0 10px rgb(${red}, ${green}, ${blue}))\r\n      brightness(${brightness}%)\r\n    `;\r\n  }\r\n};\r\n\r\n\r\n// RGB\r\nconst changeImageRgb = () => {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = imgBrightness.value;\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n  const rgbValue = `rgb(${red}, ${green}, ${blue})`;\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `\r\n      opacity(0.9)\r\n      drop-shadow(0 0 0 ${rgbValue})\r\n      brightness(${brightness}%)\r\n    `;\r\n  }\r\n}\r\n\r\nconst rgbReset = () => {\r\n  const brightness = imgBrightness.value;\r\n  imageRgb.value = [0, 0, 0];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `\r\n      opacity(0.9)\r\n      drop-shadow(0 0 10px rgb(0,0,0))\r\n      brightness(${brightness}%)\r\n    `;\r\n  }\r\n};\r\n\r\nconst brightnessReset = () => {\r\n  imgBrightness.value = 100;\r\n  changeImageRgb();\r\n}\r\n\r\n\r\n// Grid\r\nconst onClickGrid = () => {\r\n  isGrid.value = !isGrid.value;\r\n  viewer.value.addHandler('zoom', drawLines);\r\n  if (isGrid.value) drawLines();\r\n  else removeGridLines();\r\n}\r\n\r\nconst drawLines = () => {\r\n  removeGridLines();\r\n  if (isGrid.value) {\r\n    const imageHeight = viewer.value.world.getItemAt(0).getContentSize().y;\r\n    const imageWidth = viewer.value.world.getItemAt(0).getContentSize().x;\r\n    const zoom = viewer.value.viewport.getZoom();\r\n\r\n    // 1칸 당 5μm로 고정\r\n    const numberOfLines = Math.round(maxNumberOfLines.value / zoom);\r\n\r\n    const minGap = Math.min(imageWidth, imageHeight) / numberOfLines;\r\n\r\n    for (let i = 1; i < numberOfLines; i++) {\r\n      const linePosition = i * minGap;\r\n\r\n      drawLine(linePosition, 0, 1, imageHeight, 'rgba(128, 128, 128, 0.2)'); // 세로선\r\n      drawLine(0, linePosition, imageWidth, 1, 'rgba(128, 128, 128, 0.2)'); // 가로선\r\n    }\r\n  }\r\n};\r\n\r\nconst drawLine = (x: number, y: number, width: number, height: number, color: string) => {\r\n  const lineElement = document.createElement('div');\r\n  lineElement.className = 'grid-line';\r\n  lineElement.style.position = 'absolute';\r\n  lineElement.style.left = `${x}px`;\r\n  lineElement.style.top = `${y}px`;\r\n  lineElement.style.width = `${width}px`;\r\n  lineElement.style.height = `${height}px`;\r\n  lineElement.style.background = color;\r\n  lineElement.style.userSelect = 'none';\r\n  lineElement.style.pointerEvents = 'none';\r\n  viewer.value.container.appendChild(lineElement);\r\n};\r\n\r\nconst removeGridLines = () => {\r\n  const gridLines = document.querySelectorAll('.grid-line');\r\n  gridLines.forEach(line => line.remove());\r\n};\r\n\r\n\r\n// Ruler\r\nconst onClickRuler = (ruler: any) => {\r\n  switch (ruler.text) {\r\n    case 'None':\r\n      activeRuler.value = 'None';\r\n      break;\r\n    case 'Line':\r\n      activeRuler.value = 'Line';\r\n      break;\r\n    case 'Cross':\r\n      activeRuler.value = 'Cross';\r\n      break;\r\n    case 'Circle':\r\n      activeRuler.value = 'Circle';\r\n      break;\r\n  }\r\n  drawRuler(ruler);\r\n}\r\n\r\nconst drawRuler = (ruler: any) => {\r\n  const divtilingViewer = document.getElementById('tiling-viewer_img_list');\r\n  zoomRatio.value = viewer.value.viewport.viewportToImageZoom(viewer.value.viewport.getZoom());\r\n\r\n  if (divtilingViewer instanceof HTMLElement) {\r\n    const rulerOverlay = document.getElementById('rulerOverlay');\r\n    if (rulerOverlay instanceof HTMLElement) {\r\n      divtilingViewer.removeChild(rulerOverlay);\r\n    }\r\n\r\n    const element = document.createElement('div');\r\n    element.id = 'rulerOverlay';\r\n    element.style.position = 'absolute';\r\n    element.style.display = 'flex';\r\n    element.style.justifyContent = 'center';\r\n    element.style.alignItems = 'center';\r\n    element.style.width = 0;\r\n    element.style.height = 0;\r\n    element.style.zIndex = '9999999';\r\n\r\n    if (rulerPos.value.left === 0) {\r\n      element.style.left = (viewer.value.container.clientWidth / 2) - (rulerWidth.value / 2) + 'px';\r\n    } else {\r\n      element.style.left = (rulerPos.value.left) + 'px';\r\n    }\r\n    if (rulerPos.value.top === 0) {\r\n      element.style.top = (viewer.value.container.clientHeight / 2) - (rulerWidth.value / 2) + 'px';\r\n    } else {\r\n      element.style.top = (rulerPos.value.top) + 'px';\r\n    }\r\n    if (rulerPos.value.left < 0) rulerPos.value.left = 0;\r\n    if (rulerPos.value.top < 0) rulerPos.value.top = 0;\r\n\r\n    refreshRuler(element, rulerSize, ruler);\r\n    divtilingViewer.appendChild(element);\r\n\r\n    let isPress = false;\r\n\r\n    element.onmousedown = function (e) {\r\n      rulerPos.value.prevPosX = e.clientX;\r\n      rulerPos.value.prevPosY = e.clientY;\r\n\r\n      if (rulerPos.value.left <= 30) rulerPos.value.left = 31;\r\n      if (rulerPos.value.top <= 80) rulerPos.value.top = 81;\r\n\r\n      isPress = true;\r\n    };\r\n\r\n    element.onmouseup = function () {\r\n      isPress = false;\r\n    };\r\n\r\n    element.onwheel = function (e) {\r\n      if (e.deltaY < 0) {\r\n        if (rulerSize.value < 20) {\r\n          refreshRuler(element, ++rulerSize.value, ruler);\r\n        }\r\n      } else {\r\n        if (rulerSize.value > 1) {\r\n          refreshRuler(element, --rulerSize.value, ruler);\r\n        }\r\n      }\r\n    };\r\n\r\n    const parent = document.getElementById('tiling-viewer_img_list');\r\n\r\n    if (parent instanceof HTMLElement) {\r\n      parent.onmousemove = function (e) {\r\n        if (!isPress) return;\r\n\r\n        rulerPos.value.posX = rulerPos.value.prevPosX - e.clientX;\r\n        rulerPos.value.posY = rulerPos.value.prevPosY - e.clientY;\r\n\r\n        rulerPos.value.prevPosX = e.clientX;\r\n        rulerPos.value.prevPosY = e.clientY;\r\n\r\n        element.style.left = (element.offsetLeft - rulerPos.value.posX) + 'px';\r\n        element.style.top = (element.offsetTop - rulerPos.value.posY) + 'px';\r\n\r\n        rulerPos.value.left = element.offsetLeft - rulerPos.value.posX;\r\n        rulerPos.value.top = element.offsetTop - rulerPos.value.posY;\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nconst removeRuler = async () => {\r\n  imgSet_img_list.value = false;\r\n  activeRuler.value = 'None';\r\n  await initGetRulerWidthHeight();\r\n}\r\n\r\nconst refreshRuler = (element: HTMLElement, rulerSize: any, ruler: any) => {\r\n  if (typeof rulerSize === 'object') rulerSize = rulerSize.value;\r\n  if (document.getElementById('rulerTitle') !== null) element.removeChild(document.getElementById('rulerTitle'))\r\n\r\n  let tmp\r\n  if (imagePageType.value === 'PLT') {\r\n    tmp = Number(rulerXResolution.value) * zoomRatio.value;\r\n  } else if (imagePageType.value === 'RBC') {\r\n    tmp = ((Number(rulerXResolution.value) / 10) * 4) * zoomRatio.value;\r\n  } else {\r\n    tmp = ((Number(rulerXResolution.value) / 10) * 4) * zoomRatio.value;\r\n  }\r\n\r\n  const rSize = rulerSize > 1 ? 1 + (tmp * (rulerSize - 1)) : 1;\r\n\r\n  if (imagePageType.value === 'PLT') {\r\n    rulerWidth.value = (rulerSize * 0.001) / Number(rulerXResolution.value) * zoomRatio.value * rSize;\r\n  } else if (imagePageType.value === 'RBC') {\r\n    rulerWidth.value = (rulerSize * 0.001) / ((Number(rulerXResolution.value) / 10) * 4) * zoomRatio.value * rSize;\r\n  } else {\r\n    rulerWidth.value = (rulerSize * 0.001) / ((Number(rulerXResolution.value) / 10) * 4) * zoomRatio.value * rSize;\r\n  }\r\n\r\n  const titleElement = document.createElement('div')\r\n  titleElement.id = 'rulerTitle';\r\n  titleElement.style.color = '#212121';\r\n  titleElement.style.fontSize = '16px';\r\n  titleElement.style.display = 'flex';\r\n  titleElement.style.position = 'relative';\r\n  titleElement.style.alignItems = 'center';\r\n  titleElement.style.justifyContent = 'center';\r\n  titleElement.style.flexDirection = 'column';\r\n\r\n  if (ruler.id === 'line' || ruler === 'Line') {\r\n    titleElement.innerHTML =\r\n        '<div class=\"rulerTitleWrapper\">' + rulerSize + ' μm' + '</div>' +\r\n        '<svg width=\"' + rulerWidth.value + '\" height=\"' + rulerWidth.value +'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"rbcRulerDiv\">' +\r\n        '<line x1=\"0%\" y1=\"50%\" x2=\"100%\" y2=\"50%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"0%\" y1=\"60%\" x2=\"0%\" y2=\"40%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"100%\" y1=\"60%\" x2=\"100%\" y2=\"40%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '</svg>'\r\n    element.appendChild(titleElement)\r\n\r\n  } else if (ruler.id === 'cross' || ruler === 'Cross') {\r\n    titleElement.innerHTML = '<div class=\"rulerTitleWrapper\">' + rulerSize + ' μm' + '</div>' +\r\n        '<svg width=\"' + rulerWidth.value + '\" height=\"' + rulerWidth.value +'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"rbcRulerDiv\">' +\r\n        '<line x1=\"0%\" y1=\"50%\" x2=\"100%\" y2=\"50%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"0%\" y1=\"60%\" x2=\"0%\" y2=\"40%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"100%\" y1=\"60%\" x2=\"100%\" y2=\"40%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"50%\" y1=\"0%\" x2=\"50%\" y2=\"100%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"60%\" y1=\"0%\" x2=\"40%\" y2=\"0%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"60%\" y1=\"100%\" x2=\"40%\" y2=\"100%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement);\r\n\r\n  } else if (ruler.id === 'circle' || ruler === 'Circle') {\r\n    titleElement.innerHTML = '<div class=\"rulerTitleWrapper\">' + rulerSize + ' μm' + '</div>' +\r\n        '<svg width=\"' + rulerWidth.value + '\" height=\"' + rulerWidth.value + '\" xmlns=\"http://www.w3.org/2000/svg\" class=\"rbcRulerDiv\">' +\r\n        '<circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"#212121\" fill=\"transparent\" stroke-width=\"5%\" opacity=\"1\"  />' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement)\r\n  } else {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      const divtilingViewer = document.getElementById('tiling-viewer_img_list')\r\n      divtilingViewer?.removeChild(rulerOverlay)\r\n    }\r\n  }\r\n};\r\n\r\nconst handleReCenterRuler = () => {\r\n  const rulerOverlay = document.getElementById('rulerOverlay');\r\n  rulerOverlay.style.transition = `left 0.5s ease-in-out, top 0.5s ease-in-out`;\r\n  if (!rulerOverlay) return;\r\n  rulerOverlay.style.left = (viewer.value.container.clientWidth / 2) + 'px';\r\n  rulerOverlay.style.top = (viewer.value.container.clientHeight / 2) + 'px';\r\n\r\n  const handleTransitionEnd = () => {\r\n    rulerOverlay.style.transition = 'none';\r\n    rulerOverlay.removeEventListener('transitionend', handleTransitionEnd);\r\n  }\r\n\r\n  rulerOverlay.addEventListener('transitionend', handleTransitionEnd);\r\n\r\n  rulerPos.value.prevPosX = rulerOverlay.offsetLeft;\r\n  rulerPos.value.prevPosY = rulerOverlay.offsetTop;\r\n  rulerPos.value.left = rulerOverlay.offsetLeft - rulerPos.value.prevPosX;\r\n  rulerPos.value.top = rulerOverlay.offsetTop - rulerPos.value.prevPosY;\r\n  handleRulerWidth();\r\n}\r\n\r\nconst handleRulerWidth = () => {\r\n  const isPLT = imagePageType.value === 'PLT';\r\n  const isRBC = imagePageType.value === 'RBC';\r\n\r\n  const baseResolution = isPLT\r\n    ? Number(rulerXResolution.value)\r\n    : (Number(rulerXResolution.value) / 10) * 4;\r\n  const tmp = baseResolution * zoomRatio.value;\r\n\r\n  const rSize = rulerSize.value > 5 ? 1 + (tmp * (rulerSize.value - 5)) : 1;\r\n\r\n  rulerWidth.value = (rulerSize.value * 0.001) / (baseResolution * zoomRatio.value * rSize);\r\n}\r\n\r\n// Zoom\r\nconst onClickZoom = () => {\r\n  isMagnifyingGlass.value = !isMagnifyingGlass.value;\r\n  if (!isMagnifyingGlass.value) {\r\n    const existingMagCanvas = document.getElementById('magCanvas');\r\n    if (existingMagCanvas) viewer.value.element.removeChild(existingMagCanvas);\r\n  }\r\n}\r\n\r\nconst initGetRulerWidthHeight = async () => {\r\n  const filePath = 'D:\\\\UIMD_Data\\\\Backend_INI'\r\n  const fileName = window.MACHINE_VERSION === '100a' ? 'Teaching_Config_100A' : 'Teaching_Config';\r\n  try {\r\n    const result: any = await readFileTxt(`path=${filePath}&filename=${fileName}`);\r\n    const iniFileData = result.data.data;\r\n    const xResolutionPattern = /X_RESOLUTION\\s*=\\s*(.+)/;\r\n    rulerXResolution.value = iniFileData.match(xResolutionPattern)[1] ?? rulerXResolution.value;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"button\", {\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (toggleViewer('lowMag'))),\n            class: _normalizeClass([\"tab-btn_img_list\", { 'active': activeTab.value === 'lowMag', 'inactive': activeTab.value !== 'lowMag'}])\n          }, \"Low magnification \", 2),\n          _createElementVNode(\"button\", {\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (toggleViewer('malaria'))),\n            class: _normalizeClass([\"tab-btn_img_list\", { 'active': activeTab.value === 'malaria', 'inactive': activeTab.value !== 'malaria' }])\n          }, \"Malaria \", 2)\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _withDirectives(_createElementVNode(\"button\", {\n            class: \"darkButton\",\n            onClick: imgSetOpen\n          }, \"IMG Setting\", 512), [\n            [_vShow, activeTab.value !== 'malaria']\n          ]),\n          _withDirectives(_createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'sun'] }),\n              _createElementVNode(\"span\", null, \"Brightness \" + _toDisplayString(imgBrightness.value), 1),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"range\",\n                min: \"50\",\n                max: \"120\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((imgBrightness).value = $event)),\n                onInput: changeImgBrightness\n              }, null, 544), [\n                [_vModelText, imgBrightness.value]\n              ]),\n              _createElementVNode(\"button\", {\n                class: \"resetBtn\",\n                onClick: brightnessReset\n              }, \"Brightness Reset\")\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'palette'] }),\n              _createElementVNode(\"span\", null, \"RGB [ \" + _toDisplayString(`${imageRgb.value[0]} , ${imageRgb.value[1]}, ${imageRgb.value[2]}`) + \" ]\", 1),\n              _createElementVNode(\"div\", _hoisted_5, [\n                _cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"R\", -1)),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                  onInput: changeImageRgb\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[0]]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_6, [\n                _cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"G\", -1)),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                  onInput: changeImageRgb\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[1]]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_7, [\n                _cache[10] || (_cache[10] = _createElementVNode(\"label\", null, \"B\", -1)),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                  onInput: changeImageRgb\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[2]]\n                ])\n              ]),\n              _createElementVNode(\"button\", {\n                class: \"resetBtn\",\n                onClick: rgbReset\n              }, \"RGB Reset\")\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'th'] }),\n              _cache[11] || (_cache[11] = _createElementVNode(\"span\", null, \"Grid\", -1)),\n              _createVNode(_component_font_awesome_icon, {\n                icon: isGrid.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                onClick: onClickGrid\n              }, null, 8, [\"icon\"])\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'ruler'] }),\n                _cache[12] || (_cache[12] = _createElementVNode(\"span\", null, \"Ruler\", -1)),\n                (activeRuler.value !== 'None')\n                  ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                      key: 0,\n                      onClick: handleReCenterRuler,\n                      icon: ['fas', 'arrows-to-dot'],\n                      class: \"hoverSizeAction cursorPointer\"\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _createElementVNode(\"div\", _hoisted_8, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(rulers), (ruler) => {\n                  return (_openBlock(), _createElementBlock(\"button\", {\n                    class: _normalizeClass([\"tab-ruler-btn_img_list\", { 'active': activeRuler.value === ruler.text, 'inactive': activeRuler.value !== ruler.text}]),\n                    onClick: ($event: any) => (onClickRuler(ruler)),\n                    key: ruler.id\n                  }, _toDisplayString(ruler.text), 11, _hoisted_9))\n                }), 128))\n              ])\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'magnifying-glass'] }),\n              _cache[13] || (_cache[13] = _createElementVNode(\"span\", null, \"Zoom\", -1)),\n              _createVNode(_component_font_awesome_icon, {\n                icon: isMagnifyingGlass.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                onClick: onClickZoom\n              }, null, 8, [\"icon\"])\n            ])\n          ], 512), [\n            [_vShow, imgSet_img_list.value]\n          ])\n        ], 512)\n      ]),\n      _createElementVNode(\"div\", _hoisted_10, [\n        (activeTab.value === 'malaria')\n          ? (_openBlock(), _createBlock(Malaria, {\n              key: 0,\n              selectItems: __props.selectItems\n            }, null, 8, [\"selectItems\"]))\n          : (activeTab.value !== 'malaria' && tileExist.value)\n            ? (_openBlock(), _createElementBlock(\"div\", {\n                key: 1,\n                ref_key: \"tilingViewerLayer\",\n                ref: tilingViewerLayer,\n                id: \"tiling-viewer_img_list\",\n                onContextmenu: _withModifiers(rbcClassRightClick, [\"prevent\"])\n              }, null, 544))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _cache[14] || (_cache[14] = [\n                _createElementVNode(\"span\", null, \"Tile does not exist.\", -1)\n              ])))\n      ])\n    ]),\n    (showSelect.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"rbc-select-box\",\n          style: _normalizeStyle({ left: `${selectBoxX.value}px`, top: `${selectBoxY.value}px` })\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rightClickItem.value], (classList, outerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                  key: innerIndex,\n                  class: \"categories\"\n                }, [\n                  _createElementVNode(\"ul\", _hoisted_12, [\n                    _createElementVNode(\"li\", null, _toDisplayString(category.categoryNm), 1)\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_13, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, {\n                        key: `${outerIndex}-${innerIndex}-${classIndex}`\n                      }, [\n                        (classInfo.classNm !== 'Poikilocyte')\n                          ? (_openBlock(), _createElementBlock(\"li\", {\n                              key: 0,\n                              onClick: ($event: any) => (moveRbcClassEvent(category.categoryId, classInfo.classId, classInfo.classNm))\n                            }, [\n                              _createElementVNode(\"span\", null, _toDisplayString(classInfo?.classNm), 1)\n                            ], 8, _hoisted_14))\n                          : _createCommentVNode(\"\", true),\n                        (classInfo.classNm === 'Basophilic Stippling')\n                          ? (_openBlock(), _createElementBlock(\"li\", {\n                              key: 1,\n                              onClick: _cache[6] || (_cache[6] = ($event: any) => (moveRbcClassEvent('05', '03', 'Malaria')))\n                            }, _cache[15] || (_cache[15] = [\n                              _createElementVNode(\"span\", null, \"Malaria\", -1)\n                            ])))\n                          : _createCommentVNode(\"\", true)\n                      ], 64))\n                    }), 128))\n                  ])\n                ], 512)), [\n                  [_vShow, category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body']\n                ])\n              }), 128)),\n              _createElementVNode(\"div\", _hoisted_15, [\n                _cache[17] || (_cache[17] = _createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n                  _createElementVNode(\"li\", null, \"Others\")\n                ], -1)),\n                _createElementVNode(\"ul\", _hoisted_16, [\n                  _createElementVNode(\"li\", {\n                    onClick: _cache[7] || (_cache[7] = ($event: any) => (moveRbcClassEvent('04', '01', 'Platelet')))\n                  }, _cache[16] || (_cache[16] = [\n                    _createElementVNode(\"span\", null, \"Platelets\", -1)\n                  ]))\n                ])\n              ])\n            ], 64))\n          }), 128))\n        ], 4))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"rbc-container imgList\">\r\n    <div class=\"btn-container_img_list\">\r\n      <div>\r\n        <button\r\n            @click=\"toggleViewer('lowMag')\"\r\n            class=\"tab-btn_img_list\"\r\n            :class=\"{ 'active': activeTab === 'lowMag', 'inactive': activeTab !== 'lowMag'}\"\r\n        >Low magnification\r\n        </button>\r\n        <button\r\n            @click=\"toggleViewer('malaria')\"\r\n            class=\"tab-btn_img_list\"\r\n            :class=\"{ 'active': activeTab === 'malaria', 'inactive': activeTab !== 'malaria' }\"\r\n        >Malaria\r\n        </button>\r\n      </div>\r\n      <div class='btn-imgsetbox_img_list' ref=\"imgSetWrap\">\r\n        <button class=\"darkButton\" @click=\"imgSetOpen\" v-show=\"activeTab !== 'malaria'\">IMG Setting</button>\r\n        <div class=\"imgSet_img_list\" v-show=\"imgSet_img_list\">\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'sun']\"/>\r\n            <span>Brightness {{ imgBrightness }}</span>\r\n            <input\r\n                type=\"range\"\r\n                min=\"50\"\r\n                max=\"120\"\r\n                v-model=\"imgBrightness\"\r\n                @input=\"changeImgBrightness\"\r\n            />\r\n            <button class=\"resetBtn\" @click=\"brightnessReset\">Brightness Reset</button>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'palette']\"/>\r\n            <span>RGB [ {{ `${imageRgb[0]} , ${imageRgb[1]}, ${imageRgb[2]}` }} ]</span>\r\n            <div class=\"flex-align-center\">\r\n              <label>R</label>\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[0]\"\r\n                  @input=\"changeImageRgb\"\r\n              />\r\n            </div>\r\n            <div class=\"flex-align-center\">\r\n              <label>G</label>\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[1]\"\r\n                  @input=\"changeImageRgb\"\r\n              />\r\n            </div>\r\n            <div class=\"flex-align-center\">\r\n              <label>B</label>\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[2]\"\r\n                  @input=\"changeImageRgb\"\r\n              />\r\n            </div>\r\n            <button class=\"resetBtn\" @click=\"rgbReset\">RGB Reset</button>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'th']\"/>\r\n            <span>Grid</span>\r\n            <font-awesome-icon\r\n                :icon=\"isGrid ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                @click=\"onClickGrid\"\r\n            />\r\n          </div>\r\n          <!-- <div>\r\n            <font-awesome-icon :icon=\"['fas', 'crop']\"/>\r\n            <span>Crop</span>\r\n            <font-awesome-icon\r\n              :icon=\"isCrop? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              @click=\"onClickCrop\"\r\n            />\r\n          </div> -->\r\n          <div>\r\n\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'ruler']\"/>\r\n              <span>Ruler</span>\r\n              <font-awesome-icon v-if=\"activeRuler !== 'None'\" @click=\"handleReCenterRuler\" :icon=\"['fas', 'arrows-to-dot']\" class=\"hoverSizeAction cursorPointer\" />\r\n            </div>\r\n\r\n            <div class=\"ruler_box_img_list\">\r\n              <button\r\n                  class=\"tab-ruler-btn_img_list\"\r\n                  @click=\"onClickRuler(ruler)\"\r\n                  v-for=\"ruler in rulers\"\r\n                  :key=\"ruler.id\"\r\n                  :class=\"{ 'active': activeRuler === ruler.text, 'inactive': activeRuler !== ruler.text}\"\r\n              >{{ ruler.text }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'magnifying-glass']\"/>\r\n            <span>Zoom</span>\r\n            <font-awesome-icon\r\n                :icon=\"isMagnifyingGlass ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                @click=\"onClickZoom\"\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tiling-viewer_img_list-box_img_list\">\r\n      <Malaria v-if=\"activeTab === 'malaria'\" :selectItems=\"selectItems\"/>\r\n      <div v-else-if=\"activeTab !== 'malaria' && tileExist\" ref=\"tilingViewerLayer\" id=\"tiling-viewer_img_list\" @contextmenu.prevent=\"rbcClassRightClick\"></div>\r\n      <div v-else>\r\n        <span>Tile does not exist.</span>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div v-if=\"showSelect\" class=\"rbc-select-box\" :style=\"{ left: `${selectBoxX}px`, top: `${selectBoxY}px` }\">\r\n    <template v-for=\"(classList, outerIndex) in [rightClickItem]\" :key=\"outerIndex\">\r\n      <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n        <div class=\"categories\" v-show=\"category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body'\">\r\n          <ul class=\"categoryNm\">\r\n            <li>{{ category.categoryNm }}</li>\r\n          </ul>\r\n          <ul class=\"classNmRbc\">\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"classInfo.classNm !== 'Poikilocyte'\" @click=\"moveRbcClassEvent(category.categoryId, classInfo.classId, classInfo.classNm)\">\r\n                <span>{{ classInfo?.classNm }}</span>\r\n              </li>\r\n\r\n              <li v-if=\"classInfo.classNm === 'Basophilic Stippling'\" @click=\"moveRbcClassEvent('05', '03', 'Malaria')\">\r\n                <span>Malaria</span>\r\n              </li>\r\n\r\n            </template>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li @click=\"moveRbcClassEvent('04', '01', 'Platelet')\">\r\n            <span>Platelets</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    </template>\r\n  </div>\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, nextTick, onMounted, ref, watch} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport {rulers} from '@/common/defines/constants/rbc';\r\nimport { DIR_NAME } from \"@/common/defines/constants/settings\";\r\nimport Malaria from './Malaria.vue';\r\nimport {readDziFile, readFileTxt, readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {openseadragonPrefixUrl} from \"@/common/lib/utils/assetUtils\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst props = defineProps(['rbcInfo', 'selectItems', 'type', 'classInfoArr', 'isBefore']);\r\nconst activeTab = ref('lowMag');\r\n\r\nlet viewer: any = ref<any>(null);\r\nconst imgSet_img_list = ref(false);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst isGrid = ref(false);\r\nconst isMagnifyingGlass = ref(false);\r\nconst ruler = ref(null);\r\nconst activeRuler = ref<'None' | 'Line' | 'Cross' | 'Circle'>('None');\r\nconst showSelect = ref<any>(false);\r\nconst rulerXResolution = ref(0.000560);\r\nconst rulerPos = ref({\r\n  prevPosX: 0,\r\n  prevPosY: 0,\r\n  posX: 0,\r\n  posY: 0,\r\n  left: 0,\r\n  top: 0,\r\n  width: 50,\r\n  height: 50\r\n});\r\nconst rulerSize = ref(5);\r\nconst rulerWidth = ref(0);\r\nconst viewBoxWH = ref(150);\r\nconst tilingViewerLayer = ref(null);\r\nconst tileExist = ref(true);\r\nconst newItemClassInfoArr = ref<any>([]);\r\n\r\nconst store = useStore();\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst classInfoArr = ref<any>([]);\r\nconst canvasOverlay = ref<any>(null);\r\nconst drawPath = ref<any>([]);\r\nconst moveRbcClass = ref<any>([]);\r\nconst selectBoxX = ref(0);\r\nconst selectBoxY = ref(0);\r\nconst emits = defineEmits();\r\nconst rightClickItem = ref<any>([]);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst classInfoArrNewReData = computed(() => store.state.commonModule.classInfoArr);\r\nconst rbcImagePageNumber = computed(() => store.state.commonModule.rbcImagePageNumber);\r\nconst canvasCurrentHeight = ref('0');\r\nconst canvasCurrentWitdh = ref('0');\r\nconst fileNameResultArr = ref<any>([]);\r\nconst notCanvasClick = ref(false);\r\nconst imagePageType = ref<'RBC' | 'PLT'>('RBC');\r\nconst zoomRatio = ref(0);\r\nconst maxNumberOfLines = ref(330);\r\n\r\nonMounted(async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { rbcImagePageNumber: 0 });\r\n  await nextTick();\r\n  await initElement();\r\n  await initGetRulerWidthHeight();\r\n  document.addEventListener('click', closeSelectBox);\r\n  rightClickItem.value = !props.selectItems.rbcInfo.rbcClass ? props.selectItems.rbcInfo : props.selectItems.rbcInfo.rbcClass;\r\n});\r\n\r\nconst dziWidthHeight = async (imageFileName: any): Promise<any> => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const urlImage = `${path}/${props.selectItems.slotId}/02_RBC_Image/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({filePath: urlImage});\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\n\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return {fileName, width: Number(width), height: Number(height), tileSize: Number(tileSize)}\r\n}\r\n\r\nconst moveRbcClassEvent = async (categoryId: string, classId: string, classNm: string) => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  if (existingOverlays.length === 0) {\r\n    showErrorAlert('Nothing has been selected');\r\n    return;\r\n  }\r\n  // categoryId에 해당하는 객체를 찾음\r\n  let category = rbcInfoPathAfter.value.find((item: any) => item.categoryId === categoryId);\r\n\r\n  // categoryId에 해당하는 객체가 없으면 새로 추가\r\n  if (!category) {\r\n    category = {\r\n      categoryId: categoryId,\r\n      classInfo: []\r\n    };\r\n    rbcInfoPathAfter.value.push(category);\r\n  }\r\n  let newAsrr = [];\r\n  for (const moveRbcClassItem of moveRbcClass.value) {\r\n    for (const argument of rbcInfoPathAfter.value) {\r\n      // 기존 부분 삭제\r\n      if (moveRbcClassItem.categoryId === argument.categoryId) {\r\n        const foundElementIndex = argument.classInfo.findIndex((el: any) => String(el.index) === moveRbcClassItem.index);\r\n        if (foundElementIndex !== -1) {\r\n          newAsrr.push({\r\n            categoryId: categoryId,\r\n            classNm: classNm,\r\n            classId: classId,\r\n            posX: moveRbcClassItem.posX,\r\n            posY: moveRbcClassItem.posY,\r\n            width: moveRbcClassItem.width,\r\n            height: moveRbcClassItem.height,\r\n            index: String(moveRbcClassItem.index)\r\n          });\r\n          argument.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n      }\r\n      //기존 부분을 li 클릭 한 곳으로 이동\r\n      if (argument.categoryId === categoryId) {\r\n        argument.classInfo.push({\r\n          classNm: classNm,\r\n          classId: classId,\r\n          posX: moveRbcClassItem.posX,\r\n          posY: moveRbcClassItem.posY,\r\n          width: moveRbcClassItem.width,\r\n          height: moveRbcClassItem.height,\r\n          index: String(moveRbcClassItem.index)\r\n        })\r\n      }\r\n    }\r\n  }\r\n  await removeDiv();\r\n  await rbcInfoPathAfterJsonCreate(newAsrr);\r\n  await drawRbcMarker(classInfoArr.value);\r\n\r\n}\r\n\r\nconst removeDiv = async () => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  const overlaysArray = Array.from(existingOverlays); // HTMLCollection을 배열로 변환\r\n\r\n  // 모든 오버레이 제거\r\n  overlaysArray.forEach(overlay => {\r\n    viewer.value.removeOverlay(overlay);\r\n  });\r\n\r\n  showSelect.value = false;\r\n};\r\n\r\n\r\nconst rbcInfoPathAfterJsonCreate = async (jsonData: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url = `${path}/${props.selectItems?.slotId}/${DIR_NAME.RBC_CLASS}/${props.selectItems?.slotId}_new_${rbcImagePageNumber.value}.json`;\r\n  const response = await readJsonFile({fullPath: url});\r\n  let compareData = [];\r\n\r\n  if (response.data !== 'not file') {\r\n    const url = `${path}/${props.selectItems?.slotId}/${DIR_NAME.RBC_CLASS}/${props.selectItems?.slotId}_new_${rbcImagePageNumber.value}.json`;\r\n    const response = await readJsonFile({fullPath: url});\r\n    compareData = [...response.data, ...jsonData];\r\n  } else {\r\n    compareData = jsonData;\r\n  }\r\n\r\n  const jsonString = JSON.stringify(compareData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `${props.selectItems?.slotId}_new_${rbcImagePageNumber.value}.json`);\r\n  const filePath = `${path}/${props.selectItems?.slotId}/${DIR_NAME.RBC_CLASS}/${props.selectItems?.slotId}_new_${rbcImagePageNumber.value}.json`\r\n  try {\r\n\r\n    const response = await fetch(`${apiBaseUrl}/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    await response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nconst closeSelectBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.rbc-select-box');\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    showSelect.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\n\r\nwatch(() => props.classInfoArr, (newData) => {\r\n  newItemClassInfoArr.value = newData;\r\n\r\n  if (newData.length === 0) {\r\n    removeDiv();\r\n    removeRbcMarker();\r\n    return;\r\n  }\r\n\r\n  // 모든 <ol> 요소를 선택하고, data-class-nm 값을 배열로 수집\r\n  const olElements = document.querySelectorAll('ol.overlayElement');\r\n\r\n  // newData 배열에서 존재하는 data-class-nm 값을 수집\r\n  const validClassNmSet = new Set(newData.map((el: any) => el.classNm));\r\n\r\n  olElements.forEach(el => {\r\n    const classNm = el.getAttribute('data-class-nm');\r\n\r\n    // data-class-nm이 newData에 존재하지 않으면 해당 <ol> 요소를 제거\r\n    if (!validClassNmSet.has(classNm)) {\r\n      console.log('Removing <ol> with data-class-nm:', classNm);\r\n      viewer.value.removeOverlay(el);\r\n    }\r\n  });\r\n\r\n  // rbcMarker 함수 호출\r\n  rbcMarker(newData, rbcImagePageNumber.value);\r\n}, {deep: true});\r\n\r\n\r\nwatch(classInfoArrNewReData, async (newItem, oldItem) => {\r\n  if (rbcReData.value) {\r\n    if (newItem.length === 0) {\r\n      removeDiv();\r\n      removeRbcMarker();\r\n      return;\r\n    }\r\n    await rbcMarker(newItem, rbcImagePageNumber.value);\r\n    await store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n    await store.dispatch('commonModule/setCommonInfo', {classInfoArr: []});\r\n    return;\r\n  }\r\n\r\n}, {deep: true})\r\n\r\nconst rbcClassRightClick = (event: MouseEvent) => {\r\n  if (props.isBefore || classInfoArr.value.length === 0) {\r\n    return;\r\n  }\r\n\r\n  showSelect.value = true;\r\n\r\n  if (event.currentTarget instanceof HTMLElement) {\r\n    selectBoxX.value = event.clientX;\r\n    selectBoxY.value = event.clientY - 300;\r\n  }\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst rbcMarker = async (newItem: any, imgNum: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const url_new = `${path}/${props.selectItems.slotId}/${DIR_NAME.RBC_CLASS}/${props.selectItems.slotId}_new_${rbcImagePageNumber.value}.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/${DIR_NAME.RBC_CLASS}/${props.selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[imgNum].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            String(el.index) === String(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let sss = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: String(newRbcData.index),\r\n          }\r\n          rbcItem.classInfo.push(sss);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[imgNum].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[imgNum].rbcClassList;\r\n  }\r\n  classInfoArr.value = newItem;\r\n\r\n  if (newItem.length === 0) {\r\n    removeRbcMarker();\r\n  } else {\r\n    await drawRbcMarker(newItem); // 변경된 항목으로 마커 다시 그리기\r\n  }\r\n}\r\n\r\n\r\nwatch(() => props.selectItems, async (newItem) => {\r\n  await nextTick();\r\n  const tilingViewerLayer = document.getElementById('tiling-viewer_img_list');\r\n  if (tilingViewerLayer) {\r\n    tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n    // OpenSeadragon 인스턴스가 존재하면 초기화하지 않고 캔버스만 업데이트\r\n    if (viewer.value) {\r\n      viewer.value.destroy(); // 기존 뷰어 인스턴스 파괴\r\n    }\r\n\r\n    activeTab.value = 'lowMag';\r\n    await initElement();\r\n  }\r\n\r\n});\r\n\r\n// const rbc\r\n\r\nconst removeRbcMarker = () => {\r\n  const canvas = canvasOverlay.value;\r\n  if (!canvas) {\r\n    console.error('Canvas element를 찾을 수 없습니다.');\r\n    return null;\r\n  }\r\n\r\n  const ctx = canvas.getContext('2d');\r\n  if (!ctx) {\r\n    console.error('2D context를 가져올 수 없습니다.');\r\n    return null;\r\n  }\r\n\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.beginPath();\r\n  drawPath.value = [];\r\n  return ctx;\r\n};\r\n\r\n\r\nconst drawRbcMarker = async (classInfoArr: any) => {\r\n  // json rbcInfoPathAfter.value 로 그림 그리는곳\r\n  const colors: any = {\r\n    'Normal': 'red',\r\n    'Macrocyte': '#ff4600',\r\n    'Microcyte': '#4C0290',\r\n\r\n    'Hyperchromic': 'FF0090',\r\n    'Hypochromic': '#4C0290',\r\n\r\n    'Poikilocyte': 'orange',\r\n    'Target Cell': 'navy',\r\n    'Burr Cell': 'purple',\r\n    'Acanthocyte': '#1E90FF',\r\n    'Ovalocyte': '#800080',\r\n    'Schistocyte': 'magenta',\r\n    'Sickle Cell': '#3CB371',\r\n    'Stomatocyte': '#FFFF00',\r\n    'TearDrop Cell': '#4682B4',\r\n    'Spherocyte': '#FF6347',\r\n\r\n    'Howell-Jolly Body': '#FF4500',\r\n    'Basophilic Stippling': '#DDA0DD',\r\n    'Malaria': 'black',\r\n    'Platelet': '#C71585',\r\n  };\r\n\r\n  const ctx = removeRbcMarker(); // canvas 초기화\r\n  if (!ctx) {\r\n    console.error('Canvas context 초기화 실패');\r\n    return;\r\n  }\r\n\r\n  // classInfoArr -> input 에서 체크된 값\r\n  // rbcInfoPathAfter -> json 데이터\r\n  // 여기서 새로 추가 된 index 로 있나 없나 따지고 after 에서 있으면 비포에서는 보여주지않는다.\r\n  classInfoArr.forEach((info: any) => {\r\n    rbcInfoPathAfter.value.forEach((category: any) => {\r\n      category.classInfo.forEach((classItem: any) => {\r\n        // 기존 비교 항목\r\n        if (classItem.classId === info.classId && category.categoryId === info.categoryId) {\r\n          ctx.lineWidth = 3;\r\n          ctx.strokeStyle = `${colors[info.classNm] || 'black'}`;\r\n          let rectPath = new Path2D();\r\n          let width: number;\r\n          let height: number;\r\n          let classItemPosX: number;\r\n          let classItemPosY: number;\r\n\r\n          if (classItem?.width) {\r\n            width = classItem.width;\r\n            height = classItem.height;\r\n            classItemPosX = classItem.posX;\r\n            classItemPosY = classItem.posY;\r\n          } else {\r\n            width = Number(classItem.x2) - Number(classItem.x1);\r\n            height = Number(classItem.y2) - Number(classItem.y1);\r\n            classItemPosX = Number(classItem.x1);\r\n            classItemPosY = Number(classItem.y1);\r\n          }\r\n\r\n          let ddrr = {\r\n            categoryId: info.categoryId,\r\n            classNm: info.classNm,\r\n            classId: info.classId,\r\n            posX: classItemPosX,\r\n            posY: classItemPosY,\r\n            width: width,\r\n            height: height,\r\n            index: String(classItem.index),\r\n          };\r\n          rectPath.rect(classItemPosX, classItemPosY, width, height);\r\n          drawPath.value.push(ddrr);\r\n          ctx.stroke(rectPath);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  await store.dispatch('commonModule/setCommonInfo', {resetRbcArr: true});\r\n};\r\n\r\n\r\nconst initElement = async () => {\r\n  if (props.selectItems.slotId === undefined) {\r\n    return;\r\n  }\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  try {\r\n    const folderPath = `${path}/${props.selectItems.slotId}/${DIR_NAME.RBC_IMAGE}`;\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n    if (tilesInfo.length !== 0) {\r\n      viewer.value = OpenSeadragon({\r\n        id: \"tiling-viewer_img_list\",\r\n        animationTime: 0.4,\r\n        navigatorSizeRatio: 0.25,\r\n        showNavigator: true,\r\n        sequenceMode: true,\r\n        defaultZoomLevel: 1,\r\n        prefixUrl: openseadragonPrefixUrl(apiBaseUrl),\r\n        tileSources: tilesInfo,\r\n        showReferenceStrip: false,\r\n        gestureSettingsMouse: {clickToZoom: false},\r\n        minZoomLevel: 1, // 최소 확대 레벨 설정\r\n        zoomPerScroll: 1.2, // 스크롤 확대 비율 설정\r\n        viewportMargins: {top: 0, left: 0, bottom: 0, right: 0}, // 뷰포트 여백 설정\r\n        visibilityRatio: 1.0 // 이미지를 뷰포트에 맞추기 위한 비율 설정\r\n      });\r\n\r\n\r\n      const initialMaxZoomLevel = tilesInfo[0]?.maxZoomLevel || 15;\r\n      viewer.value.viewport.maxZoomLevel = initialMaxZoomLevel;\r\n\r\n      new OpenSeadragon.MouseTracker({\r\n        element: viewer.value.element,\r\n        moveHandler: function (event) {\r\n          const existingMagCanvas = document.getElementById('magCanvas');\r\n          if (existingMagCanvas) {\r\n            viewer.value.element.removeChild(existingMagCanvas);\r\n          }\r\n\r\n          if (!isMagnifyingGlass.value) {\r\n            return;\r\n          }\r\n\r\n          const {canvas} = viewer.value.drawer;\r\n          const magCanvas = document.createElement('canvas');\r\n          const magCtx = magCanvas.getContext('2d');\r\n          canvasOverlay.value = magCanvas;\r\n          if (magCtx) {\r\n            const magWidth = 200;\r\n            const magHeight = 200;\r\n            const zoomLevel = 5;\r\n\r\n            magCanvas.id = 'magCanvas';\r\n            magCanvas.width = magWidth;\r\n            magCanvas.height = magHeight;\r\n            magCanvas.style.position = 'absolute';\r\n            magCanvas.style.left = `${event.position.x - magWidth / 2}px`;\r\n            magCanvas.style.top = `${event.position.y - magHeight / 2}px`;\r\n            magCanvas.style.border = '1px solid';\r\n            magCanvas.style.borderRadius = '50%';\r\n            magCanvas.style.width = `${magWidth}px`;\r\n            magCanvas.style.height = `${magHeight}px`;\r\n            magCanvas.style.zIndex = '0';\r\n\r\n            viewer.value.element.appendChild(magCanvas);\r\n\r\n            // 줌을 위한 확대된 부분을 정확히 잘라내기 위해 drawImage 메서드 수정\r\n            magCtx.drawImage(\r\n                canvas,\r\n                event.position.x - (magWidth / 2 / zoomLevel),\r\n                event.position.y - (magHeight / 2 / zoomLevel),\r\n                magWidth / zoomLevel,\r\n                magHeight / zoomLevel,\r\n                0,\r\n                0,\r\n                magWidth,\r\n                magHeight\r\n            );\r\n\r\n            magCanvas.style.visibility = event.position.y <= 0 || event.position.x <= 0 ? 'hidden' : 'visible';\r\n          }\r\n        },\r\n      });\r\n\r\n\r\n      // 캔버스 오버레이 생성 및 추가\r\n      const canvas = document.createElement('canvas');\r\n      const overlay = viewer.value.addOverlay({\r\n        element: canvas,\r\n        location: new OpenSeadragon.Rect(0, 0, 1, 1), // 캔버스가 뷰어 전체를 덮도록 설정\r\n      });\r\n      canvas.id = 'myCanvas';\r\n      canvasOverlay.value = canvas;\r\n\r\n      viewer.value.addHandler('open', function (event: any) {\r\n\r\n        // 캔버스 크기를 조정\r\n        canvas.width = event.source.Image.Size.Width;\r\n        canvas.height = event.source.Image.Size.Height;\r\n      });\r\n\r\n      const fullPageButton = viewer.value.buttons.buttons.find((button: any) => button.tooltip === 'Toggle full page');\r\n\r\n      if (fullPageButton) {\r\n        fullPageButton.element.addEventListener('click', async () => {\r\n          if (viewer.value.isFullPage()) {\r\n            await document.exitFullscreen();\r\n            viewer.value.setFullPage(false);\r\n          } else {\r\n            viewer.value.setFullPage(true);\r\n          }\r\n        });\r\n      }\r\n\r\n      viewer.value.addHandler('full-page', async (event: any) => {\r\n        if (!event.fullPage) {\r\n          viewer.value.element.style.backgroundColor = '';\r\n          await document.documentElement.requestFullscreen();\r\n        } else {\r\n          viewer.value.element.style.backgroundColor = 'black';\r\n        }\r\n      })\r\n\r\n      viewer.value.addHandler('page', async (event: any) => {\r\n        const pageIndex = event.page;\r\n        const maxZoomLevel = tilesInfo[pageIndex]?.maxZoomLevel || 15;\r\n        const notCanvasClick = !fileNameResultArr.value[pageIndex].includes('RBC_Image');\r\n        viewer.value.viewport.maxZoomLevel = maxZoomLevel;\r\n        if (!notCanvasClick) {\r\n          imagePageType.value = 'RBC';\r\n          maxNumberOfLines.value = 330;\r\n          await store.dispatch('commonModule/setCommonInfo', { rbcImagePageNumber: pageIndex });\r\n        } else {\r\n          imagePageType.value = 'PLT';\r\n          maxNumberOfLines.value = 1000;\r\n        }\r\n\r\n        await removeRuler();\r\n        drawRuler(ruler);\r\n        emits('notCanvasClick', notCanvasClick);\r\n        // 페이지가 변경될 때 오버레이를 다시 추가\r\n        if (canvas.parentElement !== viewer.value.container) {\r\n          viewer.value.addOverlay({\r\n            element: canvas,\r\n            location: new OpenSeadragon.Rect(0, 0, 1, 1),\r\n          });\r\n        }\r\n        emits('unChecked');\r\n      });\r\n\r\n      viewer.value.addHandler('zoom', () => {\r\n        if (activeRuler.value === 'None') return;\r\n        drawRuler(activeRuler.value);\r\n      });\r\n\r\n      viewer.value.addHandler('canvas-click', async (event: any) => {\r\n        //\r\n        if (!event.originalEvent.ctrlKey) {\r\n          await removeDiv();\r\n        }\r\n        if (!event.originalEvent.shiftKey) { // 쉬프트 키를 누르지 않았을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n          for (const item of drawPath.value) {\r\n            const itemPos = item;\r\n            const width = itemPos.width; // 아이템의 너비\r\n            const height = itemPos.height; // 아이템의 높이\r\n\r\n            if (\r\n                canvasPos.x >= Number(itemPos.posX) && canvasPos.x <= (Number(itemPos.posX) + width) &&\r\n                canvasPos.y >= Number(itemPos.posY) && canvasPos.y <= (Number(itemPos.posY) + height)\r\n            ) {\r\n              const categoryId = item.categoryId;\r\n              const color = 'lightgreen'; // 연한 연두색\r\n              if (event.originalEvent.ctrlKey) { // 컨트롤 키를 눌렀을 때\r\n                // 기존의 오버레이가 클릭된 위치에 있는지 확인\r\n                const existingOverlay = document.querySelector(`.overlayElement[data-class-posX=\"${itemPos.posX}\"][data-class-posY=\"${itemPos.posY}\"]`);\r\n                if (existingOverlay) {\r\n                  // 클릭된 위치에 이미 오버레이가 있으면 새로 추가하지 않음\r\n                  return;\r\n                }\r\n\r\n                moveRbcClass.value.push(item)\r\n                const element = document.createElement('ol');\r\n                element.className = 'overlayElement';\r\n                element.id = 'overlayElement';\r\n                element.setAttribute('data-category-id', categoryId);\r\n                element.setAttribute('data-class-nm', item.classNm);\r\n                element.setAttribute('data-class-posY', itemPos.posY);\r\n                element.setAttribute('data-class-posX', itemPos.posX);\r\n                element.style.width = `${item.width}px`;\r\n                element.style.backgroundColor = color;\r\n                element.style.height = `${item.height}px`;\r\n                element.style.position = 'absolute';\r\n                element.style.opacity = '0.5';\r\n\r\n                const posX = parseFloat(itemPos.posX);\r\n                const posY = parseFloat(itemPos.posY);\r\n                const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                viewer.value.addOverlay({\r\n                  element: element,\r\n                  location: overlayRect\r\n                });\r\n              } else {\r\n\r\n                if (\r\n                    canvasPos.x >= Number(itemPos.posX) && canvasPos.x <= (Number(itemPos.posX) + width) &&\r\n                    canvasPos.y >= Number(itemPos.posY) && canvasPos.y <= (Number(itemPos.posY) + height)\r\n                ) {\r\n                  // 클릭된 아이템 처리\r\n                  const categoryId = item.categoryId;\r\n                  const color = 'lightgreen'; // 연한 연두색\r\n                  const classInfo = rbcInfoPathAfter.value.find((category: any) => category.categoryId === categoryId)?.classInfo.find((classItem: any) => classItem.index === item.index);\r\n                  if (classInfo) {\r\n                    moveRbcClass.value = [item];\r\n                    const existingOverlay = document.getElementById('overlayElement');\r\n                    if (existingOverlay) {\r\n                      viewer.value.removeOverlay(existingOverlay);\r\n                    }\r\n\r\n                    const previousOverlay = document.querySelector(`.overlayElement[data-category-id=\"${categoryId}\"][data-class-nm=\"${item.classNm}\"]`);\r\n                    if (previousOverlay) {\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.updateOverlay(previousOverlay, overlayRect);\r\n                    } else {\r\n\r\n                      const element = document.createElement('ol');\r\n                      element.className = 'overlayElement';\r\n                      element.id = 'overlayElement';\r\n                      element.setAttribute('data-category-id', categoryId);\r\n                      element.setAttribute('data-class-nm', item.classNm);\r\n                      element.style.width = `${item.width}px`;\r\n                      element.style.backgroundColor = color;\r\n                      element.style.height = `${item.height}px`;\r\n                      element.style.position = 'absolute';\r\n                      element.style.opacity = '0.5';\r\n\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(Number(posX), Number(posY), Number(item.width), Number(item.height)); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.addOverlay({\r\n                        element: element,\r\n                        location: overlayRect\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        } else { // 쉬프트 키를 눌렀을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n          // 함수: 클릭 위치가 아이템 위치와 겹치는지 확인\r\n          const isItemSelected = (item: any) => {\r\n            const width = item.width;\r\n            const height = item.height;\r\n            return (\r\n                canvasPos.x >= Number(item.posX) && canvasPos.x <= (Number(item.posX) + width) &&\r\n                canvasPos.y >= Number(item.posY) && canvasPos.y <= (Number(item.posY) + height)\r\n            );\r\n          };\r\n\r\n          // 선택된 아이템의 classNm 저장\r\n          let selectItm = '';\r\n          for (const item of drawPath.value) {\r\n            if (item.classNm !== \"Normal\" && isItemSelected(item)) {\r\n              selectItm = item.classNm;\r\n              break; // 하나의 아이템만 선택됨\r\n            }\r\n          }\r\n\r\n          // 선택된 아이템의 classNm에 해당하는 모든 아이템 처리\r\n          for (const item of drawPath.value) {\r\n            if (item.classNm !== \"Normal\" && selectItm === item.classNm) {\r\n              moveRbcClass.value.push(item);\r\n\r\n              const element = document.createElement('ol');\r\n              element.className = 'overlayElement';\r\n              element.id = 'overlayElement';\r\n              element.setAttribute('data-category-id', item.categoryId);\r\n              element.setAttribute('data-class-nm', item.classNm);\r\n              element.style.width = `${item.width}px`; // 픽셀 단위 추가\r\n              element.style.backgroundColor = 'lightgreen';\r\n              element.style.height = `${item.height}px`; // 픽셀 단위 추가\r\n              element.style.position = 'absolute';\r\n              element.style.opacity = '0.5';\r\n\r\n              const posX = parseFloat(item.posX);\r\n              const posY = parseFloat(item.posY);\r\n              const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, item.width, item.height);\r\n              viewer.value.addOverlay({\r\n                element: element,\r\n                location: overlayRect\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n\r\n      });\r\n\r\n\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n// const drawOverlays = () => {\r\n//   const overlays = drawPath.value; // drawPath에 있는 아이템들을 오버레이로 추가\r\n//   overlays.forEach((item: any) => {\r\n//     const element = document.createElement('div');\r\n//     element.className = 'overlayElement';\r\n//     element.style.background = 'rgba(255, 0, 0, 0.5)'; // 예시 스타일\r\n//     viewer.value?.addOverlay({\r\n//       element: element,\r\n//       location: new OpenSeadragon.Rect(item.x, item.y, item.width, item.height)\r\n//     });\r\n//   });\r\n// };\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    tileExist.value = false;\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n    fileNameResultArr.value = [];\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n\r\n        const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n        fileNameResultArr.value.push(fileNameResult)\r\n        const {width, height, tileSize} = await dziWidthHeight(fileNameResult)\r\n\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: \"jpg\",\r\n            Overlap: \"1\",\r\n            TileSize: tileSize,\r\n            Size: {\r\n              Width: width,\r\n              Height: height\r\n            },\r\n          },\r\n          maxZoomLevel: fileName.includes('RBC') ? 15 : 170,\r\n        });\r\n\r\n        canvasCurrentWitdh.value = width;\r\n        canvasCurrentHeight.value = height;\r\n      }\r\n    }\r\n    tileExist.value = true;\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Low magnification and Malaria tab\r\nconst toggleViewer = (viewerType: string) => {\r\n  switch (viewerType) {\r\n    case 'lowMag':\r\n      activeTab.value = 'lowMag';\r\n      break;\r\n    case 'malaria':\r\n      activeTab.value = 'malaria';\r\n      imgSet_img_list.value = false;\r\n      break;\r\n  }\r\n\r\n  if (activeTab.value !== 'malaria') {\r\n    initElement();\r\n    emits('notCanvasClick', false);\r\n  }\r\n};\r\n\r\n\r\n// Img setting\r\nconst imgSetOpen = () => {\r\n  imgSet_img_list.value = !imgSet_img_list.value;\r\n}\r\n\r\n\r\n// Brightness\r\nconst changeImgBrightness = (event: any) => {\r\n  const brightness = event?.target?.value;\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `\r\n      opacity(0.9)\r\n      drop-shadow(0 0 10px rgb(${red}, ${green}, ${blue}))\r\n      brightness(${brightness}%)\r\n    `;\r\n  }\r\n};\r\n\r\n\r\n// RGB\r\nconst changeImageRgb = () => {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = imgBrightness.value;\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n  const rgbValue = `rgb(${red}, ${green}, ${blue})`;\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `\r\n      opacity(0.9)\r\n      drop-shadow(0 0 0 ${rgbValue})\r\n      brightness(${brightness}%)\r\n    `;\r\n  }\r\n}\r\n\r\nconst rgbReset = () => {\r\n  const brightness = imgBrightness.value;\r\n  imageRgb.value = [0, 0, 0];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `\r\n      opacity(0.9)\r\n      drop-shadow(0 0 10px rgb(0,0,0))\r\n      brightness(${brightness}%)\r\n    `;\r\n  }\r\n};\r\n\r\nconst brightnessReset = () => {\r\n  imgBrightness.value = 100;\r\n  changeImageRgb();\r\n}\r\n\r\n\r\n// Grid\r\nconst onClickGrid = () => {\r\n  isGrid.value = !isGrid.value;\r\n  viewer.value.addHandler('zoom', drawLines);\r\n  if (isGrid.value) drawLines();\r\n  else removeGridLines();\r\n}\r\n\r\nconst drawLines = () => {\r\n  removeGridLines();\r\n  if (isGrid.value) {\r\n    const imageHeight = viewer.value.world.getItemAt(0).getContentSize().y;\r\n    const imageWidth = viewer.value.world.getItemAt(0).getContentSize().x;\r\n    const zoom = viewer.value.viewport.getZoom();\r\n\r\n    // 1칸 당 5μm로 고정\r\n    const numberOfLines = Math.round(maxNumberOfLines.value / zoom);\r\n\r\n    const minGap = Math.min(imageWidth, imageHeight) / numberOfLines;\r\n\r\n    for (let i = 1; i < numberOfLines; i++) {\r\n      const linePosition = i * minGap;\r\n\r\n      drawLine(linePosition, 0, 1, imageHeight, 'rgba(128, 128, 128, 0.2)'); // 세로선\r\n      drawLine(0, linePosition, imageWidth, 1, 'rgba(128, 128, 128, 0.2)'); // 가로선\r\n    }\r\n  }\r\n};\r\n\r\nconst drawLine = (x: number, y: number, width: number, height: number, color: string) => {\r\n  const lineElement = document.createElement('div');\r\n  lineElement.className = 'grid-line';\r\n  lineElement.style.position = 'absolute';\r\n  lineElement.style.left = `${x}px`;\r\n  lineElement.style.top = `${y}px`;\r\n  lineElement.style.width = `${width}px`;\r\n  lineElement.style.height = `${height}px`;\r\n  lineElement.style.background = color;\r\n  lineElement.style.userSelect = 'none';\r\n  lineElement.style.pointerEvents = 'none';\r\n  viewer.value.container.appendChild(lineElement);\r\n};\r\n\r\nconst removeGridLines = () => {\r\n  const gridLines = document.querySelectorAll('.grid-line');\r\n  gridLines.forEach(line => line.remove());\r\n};\r\n\r\n\r\n// Ruler\r\nconst onClickRuler = (ruler: any) => {\r\n  switch (ruler.text) {\r\n    case 'None':\r\n      activeRuler.value = 'None';\r\n      break;\r\n    case 'Line':\r\n      activeRuler.value = 'Line';\r\n      break;\r\n    case 'Cross':\r\n      activeRuler.value = 'Cross';\r\n      break;\r\n    case 'Circle':\r\n      activeRuler.value = 'Circle';\r\n      break;\r\n  }\r\n  drawRuler(ruler);\r\n}\r\n\r\nconst drawRuler = (ruler: any) => {\r\n  const divtilingViewer = document.getElementById('tiling-viewer_img_list');\r\n  zoomRatio.value = viewer.value.viewport.viewportToImageZoom(viewer.value.viewport.getZoom());\r\n\r\n  if (divtilingViewer instanceof HTMLElement) {\r\n    const rulerOverlay = document.getElementById('rulerOverlay');\r\n    if (rulerOverlay instanceof HTMLElement) {\r\n      divtilingViewer.removeChild(rulerOverlay);\r\n    }\r\n\r\n    const element = document.createElement('div');\r\n    element.id = 'rulerOverlay';\r\n    element.style.position = 'absolute';\r\n    element.style.display = 'flex';\r\n    element.style.justifyContent = 'center';\r\n    element.style.alignItems = 'center';\r\n    element.style.width = 0;\r\n    element.style.height = 0;\r\n    element.style.zIndex = '9999999';\r\n\r\n    if (rulerPos.value.left === 0) {\r\n      element.style.left = (viewer.value.container.clientWidth / 2) - (rulerWidth.value / 2) + 'px';\r\n    } else {\r\n      element.style.left = (rulerPos.value.left) + 'px';\r\n    }\r\n    if (rulerPos.value.top === 0) {\r\n      element.style.top = (viewer.value.container.clientHeight / 2) - (rulerWidth.value / 2) + 'px';\r\n    } else {\r\n      element.style.top = (rulerPos.value.top) + 'px';\r\n    }\r\n    if (rulerPos.value.left < 0) rulerPos.value.left = 0;\r\n    if (rulerPos.value.top < 0) rulerPos.value.top = 0;\r\n\r\n    refreshRuler(element, rulerSize, ruler);\r\n    divtilingViewer.appendChild(element);\r\n\r\n    let isPress = false;\r\n\r\n    element.onmousedown = function (e) {\r\n      rulerPos.value.prevPosX = e.clientX;\r\n      rulerPos.value.prevPosY = e.clientY;\r\n\r\n      if (rulerPos.value.left <= 30) rulerPos.value.left = 31;\r\n      if (rulerPos.value.top <= 80) rulerPos.value.top = 81;\r\n\r\n      isPress = true;\r\n    };\r\n\r\n    element.onmouseup = function () {\r\n      isPress = false;\r\n    };\r\n\r\n    element.onwheel = function (e) {\r\n      if (e.deltaY < 0) {\r\n        if (rulerSize.value < 20) {\r\n          refreshRuler(element, ++rulerSize.value, ruler);\r\n        }\r\n      } else {\r\n        if (rulerSize.value > 1) {\r\n          refreshRuler(element, --rulerSize.value, ruler);\r\n        }\r\n      }\r\n    };\r\n\r\n    const parent = document.getElementById('tiling-viewer_img_list');\r\n\r\n    if (parent instanceof HTMLElement) {\r\n      parent.onmousemove = function (e) {\r\n        if (!isPress) return;\r\n\r\n        rulerPos.value.posX = rulerPos.value.prevPosX - e.clientX;\r\n        rulerPos.value.posY = rulerPos.value.prevPosY - e.clientY;\r\n\r\n        rulerPos.value.prevPosX = e.clientX;\r\n        rulerPos.value.prevPosY = e.clientY;\r\n\r\n        element.style.left = (element.offsetLeft - rulerPos.value.posX) + 'px';\r\n        element.style.top = (element.offsetTop - rulerPos.value.posY) + 'px';\r\n\r\n        rulerPos.value.left = element.offsetLeft - rulerPos.value.posX;\r\n        rulerPos.value.top = element.offsetTop - rulerPos.value.posY;\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nconst removeRuler = async () => {\r\n  imgSet_img_list.value = false;\r\n  activeRuler.value = 'None';\r\n  await initGetRulerWidthHeight();\r\n}\r\n\r\nconst refreshRuler = (element: HTMLElement, rulerSize: any, ruler: any) => {\r\n  if (typeof rulerSize === 'object') rulerSize = rulerSize.value;\r\n  if (document.getElementById('rulerTitle') !== null) element.removeChild(document.getElementById('rulerTitle'))\r\n\r\n  let tmp\r\n  if (imagePageType.value === 'PLT') {\r\n    tmp = Number(rulerXResolution.value) * zoomRatio.value;\r\n  } else if (imagePageType.value === 'RBC') {\r\n    tmp = ((Number(rulerXResolution.value) / 10) * 4) * zoomRatio.value;\r\n  } else {\r\n    tmp = ((Number(rulerXResolution.value) / 10) * 4) * zoomRatio.value;\r\n  }\r\n\r\n  const rSize = rulerSize > 1 ? 1 + (tmp * (rulerSize - 1)) : 1;\r\n\r\n  if (imagePageType.value === 'PLT') {\r\n    rulerWidth.value = (rulerSize * 0.001) / Number(rulerXResolution.value) * zoomRatio.value * rSize;\r\n  } else if (imagePageType.value === 'RBC') {\r\n    rulerWidth.value = (rulerSize * 0.001) / ((Number(rulerXResolution.value) / 10) * 4) * zoomRatio.value * rSize;\r\n  } else {\r\n    rulerWidth.value = (rulerSize * 0.001) / ((Number(rulerXResolution.value) / 10) * 4) * zoomRatio.value * rSize;\r\n  }\r\n\r\n  const titleElement = document.createElement('div')\r\n  titleElement.id = 'rulerTitle';\r\n  titleElement.style.color = '#212121';\r\n  titleElement.style.fontSize = '16px';\r\n  titleElement.style.display = 'flex';\r\n  titleElement.style.position = 'relative';\r\n  titleElement.style.alignItems = 'center';\r\n  titleElement.style.justifyContent = 'center';\r\n  titleElement.style.flexDirection = 'column';\r\n\r\n  if (ruler.id === 'line' || ruler === 'Line') {\r\n    titleElement.innerHTML =\r\n        '<div class=\"rulerTitleWrapper\">' + rulerSize + ' μm' + '</div>' +\r\n        '<svg width=\"' + rulerWidth.value + '\" height=\"' + rulerWidth.value +'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"rbcRulerDiv\">' +\r\n        '<line x1=\"0%\" y1=\"50%\" x2=\"100%\" y2=\"50%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"0%\" y1=\"60%\" x2=\"0%\" y2=\"40%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"100%\" y1=\"60%\" x2=\"100%\" y2=\"40%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '</svg>'\r\n    element.appendChild(titleElement)\r\n\r\n  } else if (ruler.id === 'cross' || ruler === 'Cross') {\r\n    titleElement.innerHTML = '<div class=\"rulerTitleWrapper\">' + rulerSize + ' μm' + '</div>' +\r\n        '<svg width=\"' + rulerWidth.value + '\" height=\"' + rulerWidth.value +'\" xmlns=\"http://www.w3.org/2000/svg\" class=\"rbcRulerDiv\">' +\r\n        '<line x1=\"0%\" y1=\"50%\" x2=\"100%\" y2=\"50%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"0%\" y1=\"60%\" x2=\"0%\" y2=\"40%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"100%\" y1=\"60%\" x2=\"100%\" y2=\"40%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"50%\" y1=\"0%\" x2=\"50%\" y2=\"100%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"60%\" y1=\"0%\" x2=\"40%\" y2=\"0%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '<line x1=\"60%\" y1=\"100%\" x2=\"40%\" y2=\"100%\" stroke=\"#212121\" stroke-width=\"5%\"/>' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement);\r\n\r\n  } else if (ruler.id === 'circle' || ruler === 'Circle') {\r\n    titleElement.innerHTML = '<div class=\"rulerTitleWrapper\">' + rulerSize + ' μm' + '</div>' +\r\n        '<svg width=\"' + rulerWidth.value + '\" height=\"' + rulerWidth.value + '\" xmlns=\"http://www.w3.org/2000/svg\" class=\"rbcRulerDiv\">' +\r\n        '<circle cx=\"50%\" cy=\"50%\" r=\"50%\" stroke=\"#212121\" fill=\"transparent\" stroke-width=\"5%\" opacity=\"1\"  />' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement)\r\n  } else {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      const divtilingViewer = document.getElementById('tiling-viewer_img_list')\r\n      divtilingViewer?.removeChild(rulerOverlay)\r\n    }\r\n  }\r\n};\r\n\r\nconst handleReCenterRuler = () => {\r\n  const rulerOverlay = document.getElementById('rulerOverlay');\r\n  rulerOverlay.style.transition = `left 0.5s ease-in-out, top 0.5s ease-in-out`;\r\n  if (!rulerOverlay) return;\r\n  rulerOverlay.style.left = (viewer.value.container.clientWidth / 2) + 'px';\r\n  rulerOverlay.style.top = (viewer.value.container.clientHeight / 2) + 'px';\r\n\r\n  const handleTransitionEnd = () => {\r\n    rulerOverlay.style.transition = 'none';\r\n    rulerOverlay.removeEventListener('transitionend', handleTransitionEnd);\r\n  }\r\n\r\n  rulerOverlay.addEventListener('transitionend', handleTransitionEnd);\r\n\r\n  rulerPos.value.prevPosX = rulerOverlay.offsetLeft;\r\n  rulerPos.value.prevPosY = rulerOverlay.offsetTop;\r\n  rulerPos.value.left = rulerOverlay.offsetLeft - rulerPos.value.prevPosX;\r\n  rulerPos.value.top = rulerOverlay.offsetTop - rulerPos.value.prevPosY;\r\n  handleRulerWidth();\r\n}\r\n\r\nconst handleRulerWidth = () => {\r\n  const isPLT = imagePageType.value === 'PLT';\r\n  const isRBC = imagePageType.value === 'RBC';\r\n\r\n  const baseResolution = isPLT\r\n    ? Number(rulerXResolution.value)\r\n    : (Number(rulerXResolution.value) / 10) * 4;\r\n  const tmp = baseResolution * zoomRatio.value;\r\n\r\n  const rSize = rulerSize.value > 5 ? 1 + (tmp * (rulerSize.value - 5)) : 1;\r\n\r\n  rulerWidth.value = (rulerSize.value * 0.001) / (baseResolution * zoomRatio.value * rSize);\r\n}\r\n\r\n// Zoom\r\nconst onClickZoom = () => {\r\n  isMagnifyingGlass.value = !isMagnifyingGlass.value;\r\n  if (!isMagnifyingGlass.value) {\r\n    const existingMagCanvas = document.getElementById('magCanvas');\r\n    if (existingMagCanvas) viewer.value.element.removeChild(existingMagCanvas);\r\n  }\r\n}\r\n\r\nconst initGetRulerWidthHeight = async () => {\r\n  const filePath = 'D:\\\\UIMD_Data\\\\Backend_INI'\r\n  const fileName = window.MACHINE_VERSION === '100a' ? 'Teaching_Config_100A' : 'Teaching_Config';\r\n  try {\r\n    const result: any = await readFileTxt(`path=${filePath}&filename=${fileName}`);\r\n    const iniFileData = result.data.data;\r\n    const xResolutionPattern = /X_RESOLUTION\\s*=\\s*(.+)/;\r\n    rulerXResolution.value = iniFileData.match(xResolutionPattern)[1] ?? rulerXResolution.value;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n","import script from \"./rbcImageList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcImageList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcMenu\" }\nconst _hoisted_2 = { class: \"menuIco\" }\nconst _hoisted_3 = { class: \"menuIco\" }\nconst _hoisted_4 = { class: \"menuIco\" }\nconst _hoisted_5 = { class: \"wbcMenuBottom\" }\nconst _hoisted_6 = [\"disabled\"]\nconst _hoisted_7 = [\"disabled\"]\n\nimport {\r\n  computed,\r\n  getCurrentInstance,\r\n  onBeforeMount,\r\n  onMounted,\r\n  onUnmounted,\r\n  ref,\r\n  watch\r\n} from \"vue\";\r\nimport router from \"@/router\";\r\n\r\nimport {\r\n  clearPcIpState,\r\n  pageUpDownRunnIngApi,\r\n  updatePcIpStateApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {useGetRunningInfoByIdQuery} from \"@/gql/useQueries\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'classInfoMenu',\n  props: ['isNext', 'changeSlideByLisUpload'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref<any>('bm');\r\nconst selectItems = ref<any>(null);\r\nconst resData = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst route = useRoute();\r\nconst orderClass = ref<any>([]);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst isButtonDisabled = ref(false);\r\nlet timeoutId: number | undefined = undefined;\r\nconst pageMoveDeleteStop = ref(false);\r\nconst props = __props;\r\nconst ipAddress = ref<any>('');\r\nconst isLoading = ref(true);\r\nconst keepPage = ref('');\r\nlet socketTimeoutId: number | undefined = undefined; // 타이머 ID 저장\r\nconst testType = computed(() => store.state.commonModule.testType);\r\nconst dbListDataFirstNum = computed(() => store.state.commonModule.dbListDataFirstNum);\r\nconst dbListDataLastNum = computed(() => store.state.commonModule.dbListDataLastNum);\r\n\r\nwatch(props.isNext, (newVal) => {\r\n  if (newVal) {\r\n    moveWbc('down')\r\n  }\r\n});\r\n\r\nwatch(() => props.changeSlideByLisUpload, (newVal) => {\r\n  moveWbc('up');\r\n})\r\n\r\nonBeforeMount(async () => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n  await getDetailRunningInfo();\r\n  isLoading.value = false;\r\n  const keepPageType = projectType.value === 'bm' ? 'bmKeepPage' : 'keepPage';\r\n  keepPage.value = JSON.parse(JSON.stringify(sessionStorage.getItem(keepPageType)));\r\n})\r\n\r\nonMounted(async () => {\r\n  pageMoveDeleteStop.value = true;\r\n  const ip = await getDeviceIpApi();\r\n  ipAddress.value = ip.data;\r\n});\r\n\r\nonUnmounted(async () => {\r\n  if (pageMoveDeleteStop.value) {\r\n    await deleteConnectionStatus();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n})\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const { result, loading, error } = useGetRunningInfoByIdQuery(\r\n        { id: Number(selectedSampleId.value) },\r\n        { fetchPolicy: 'no-cache' }\r\n    );\r\n\r\n    watch(result, (newValue) => {\r\n      if (newValue) {\r\n\r\n        // newValue가 존재하면 해당 데이터를 처리\r\n        store.dispatch('slideDataModule/updateSlideData', newValue?.getRunningInfoByIdGQL);\r\n\r\n        const result = newValue?.getRunningInfoByIdGQL;\r\n        selectItems.value = result;\r\n\r\n        store.dispatch('commonModule/setCommonInfo', { testType: selectItems.value.testType });\r\n\r\n        resData.value = result;\r\n      } else {\r\n        console.log('No result');\r\n      }\r\n    });\r\n\r\n\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n    selectItems.value = null;\r\n    resData.value = null;\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst deleteConnectionStatus = async () => {\r\n  const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n  const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n  const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n  const req = `oldPcIp=${ipAddress.value}&dayQuery=${dayQuery}`\r\n  await clearPcIpState(req)\r\n      .then(response => {\r\n        delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n      }).catch(error => {\r\n        console.error('2 err', error)\r\n      });\r\n}\r\n\r\nconst upDownBlockAccess = async (selectItems: any) => {\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const req = `oldPcIp=${ipAddress.value}&newEntityId=${resData.value?.id}&newPcIp=${ipAddress.value}&dayQuery=${dayQuery}`;\r\n\r\n    await updatePcIpStateApi(req).then(response => {\r\n      delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n    }).catch(error => {\r\n      console.error('3 err', error)\r\n    });\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\nconst delayedEmit = (type: string, payload: string, delay: number) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path);\r\n  pageMoveDeleteStop.value = false;\r\n}\r\n\r\nasync function pageUpDownRunnIng(id: number, step: string, type: string) {\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal, searchType} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const startDay = searchText === '' ? startDate : '';\r\n    const endDay = searchText === '' ? endDate : '';\r\n    const barcodeNo = searchType === 'barcodeNo' ? searchText : undefined;\r\n    const reqParams = [\r\n      `id=${id}`,\r\n      `type=${type}`,\r\n      `dayQuery=${dayQuery}`,\r\n      `title=${wbcInfo}`,\r\n      `startDay=${startDay}`,\r\n      `endDay=${endDay}`\r\n    ];\r\n\r\n    if (barcodeNo) {\r\n      reqParams.push(`barcodeNo=${barcodeNo}`);\r\n    }\r\n\r\n    if (nrCount) {\r\n      reqParams.push(`nrCount=${nrCount}`);\r\n    }\r\n\r\n    if (testType && testType !== '00') {\r\n      reqParams.push(`testType=${testType}`);\r\n    }\r\n\r\n    const req = reqParams.join('&');\r\n    const res = await pageUpDownRunnIngApi(req);\r\n\r\n    if (res.data !== null) {\r\n      resData.value = res.data;\r\n      const result = await getDeviceIpApi();\r\n      if(res.data.pcIp !== result.data && res.data.lock_status){\r\n        return;\r\n      }\r\n      await store.dispatch('slideDataModule/updateSlideData', res.data);\r\n      await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(res.data?.id)});\r\n\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst moveWbc = async (direction: any) => {\r\n  if (direction === 'up') {\r\n    if (dbListDataFirstNum.value === selectItems.value?.id) {\r\n      showAlert.value = true;\r\n      alertType.value = 'success';\r\n      alertMessage.value = 'This is the first page. Navigation to other pages is not possible.';\r\n      return;\r\n    }\r\n  } else {\r\n    if (dbListDataLastNum.value === selectItems.value?.id) {\r\n      showAlert.value = true;\r\n      alertType.value = 'success';\r\n      alertMessage.value = 'This is the last page. Navigation to other pages is not possible.';\r\n      return;\r\n    }\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n  if (timeoutId !== undefined) {\r\n    clearTimeout(timeoutId);\r\n  }\r\n  isButtonDisabled.value = true; // 버튼 비활성화\r\n  await getOrderClass(); // 클래스 정보를 업데이트\r\n  await processNextDbIndex(direction, selectItems.value?.id);\r\n\r\n  timeoutId = window.setTimeout(() => {\r\n    isButtonDisabled.value = false;\r\n  }, 700);\r\n\r\n};\r\n\r\nconst processNextDbIndex = async (direction: any, id: number) => {\r\n  const res: any = await pageUpDownRunnIng(id, '1', direction);\r\n  if (resData.value?.lock_status) {\r\n    showAlert.value = true;\r\n    alertType.value = 'success';\r\n    alertMessage.value = 'Someone else is editing.';\r\n    return;\r\n  }else{\r\n    await handleDataResponse(res?.id, res);\r\n  }\r\n};\r\n\r\nconst handleDataResponse = async (dbId: any, res: any) => {\r\n  if (!resData.value) return;\r\n  selectItems.value = resData.value;\r\n\r\n  const resClassInfo = resData.value?.wbcInfoAfter.length === 0 ? resData.value?.wbcInfo?.wbcInfo[0] : resData.value?.wbcInfoAfter;\r\n  await updateUpDown(resClassInfo, resData.value);\r\n};\r\n\r\nconst updateUpDown = async (selectWbc: any, selectItemsNewVal: any) => {\r\n  if ((projectType.value === 'pb' && selectItems.value?.testType === '01' && isActive(\"/databaseRbc\")) || (!keepPage.value || keepPage.value === \"false\")) {\r\n    pageGo('/databaseDetail');\r\n  }\r\n  emits('refreshClass', selectItemsNewVal);\r\n  pageMoveDeleteStop.value = true;\r\n  await upDownBlockAccess(selectItemsNewVal);\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst lisCbcClick = () => {\r\n  //\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: !cbcLayer.value});\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", null, [\n        (['bm', 'pb'].includes(projectType.value))\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              (projectType.value !== 'pb' || (testType.value === '04' && projectType.value === 'pb'))\n                ? (_openBlock(), _createElementBlock(\"li\", {\n                    key: 0,\n                    class: _normalizeClass({ onRight: isActive(projectType.value === 'bm' ? '/databaseWhole' : '/databaseRbc') }),\n                    onClick: _cache[0] || (_cache[0] = ($event: any) => (pageGo(projectType.value === 'bm' ? '/databaseWhole' : '/databaseRbc')))\n                  }, [\n                    _createElementVNode(\"p\", _hoisted_2, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'virus'] })\n                    ]),\n                    _createElementVNode(\"p\", null, _toDisplayString(projectType.value === 'bm' ? 'WHOLE' : 'RBC'), 1)\n                  ], 2))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", {\n                class: _normalizeClass({ \"onRight\": isActive(\"/databaseDetail\") }),\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (pageGo('/databaseDetail')))\n              }, [\n                _createElementVNode(\"p\", _hoisted_3, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'disease'] })\n                ]),\n                _createElementVNode(\"p\", null, _toDisplayString(projectType.value === 'bm' ? 'BM CELL' : 'WBC'), 1)\n              ], 2),\n              (!isLoading.value)\n                ? (_openBlock(), _createElementBlock(\"li\", {\n                    key: 1,\n                    class: _normalizeClass({ \"onRight\": isActive(\"/report\") }),\n                    onClick: _cache[2] || (_cache[2] = ($event: any) => (pageGo('/report')))\n                  }, [\n                    _createElementVNode(\"p\", _hoisted_4, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'clipboard'] })\n                    ]),\n                    _cache[5] || (_cache[5] = _createElementVNode(\"p\", null, \"REPORT\", -1))\n                  ], 2))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          : _createCommentVNode(\"\", true)\n      ]),\n      (projectType.value !== 'bm')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            onClick: lisCbcClick,\n            class: _normalizeClass({ \"onRight\": cbcLayer.value, \"cbcLi\": true })\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'desktop'] }),\n            _cache[6] || (_cache[6] = _createElementVNode(\"p\", null, \"LIS-CBC\", -1))\n          ], 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[3] || (_cache[3] = ($event: any) => (moveWbc('up'))),\n          disabled: isButtonDisabled.value\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-up'] })\n        ], 8, _hoisted_6),\n        _createElementVNode(\"button\", {\n          onClick: _cache[4] || (_cache[4] = ($event: any) => (moveWbc('down'))),\n          disabled: isButtonDisabled.value\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-down'] })\n        ], 8, _hoisted_7)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"wbcMenu\">\r\n    <ul>\r\n\r\n      <template v-if=\"['bm', 'pb'].includes(projectType)\">\r\n        <li\r\n            :class=\"{ onRight: isActive(projectType === 'bm' ? '/databaseWhole' : '/databaseRbc') }\"\r\n            @click=\"pageGo(projectType === 'bm' ? '/databaseWhole' : '/databaseRbc')\"\r\n            v-if=\"projectType !== 'pb' || (testType === '04' && projectType === 'pb')\"\r\n        >\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'virus']\"/>\r\n          </p>\r\n          <p>{{ projectType === 'bm' ? 'WHOLE' : 'RBC' }}</p>\r\n        </li>\r\n        <li :class='{ \"onRight\": isActive(\"/databaseDetail\") }' @click=\"pageGo('/databaseDetail')\">\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'disease']\"/>\r\n          </p>\r\n          <p>{{ projectType === 'bm' ? 'BM CELL' : 'WBC' }}</p>\r\n        </li>\r\n        <li v-if=\"!isLoading\" :class='{ \"onRight\": isActive(\"/report\") }' @click=\"pageGo('/report')\">\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'clipboard']\"/>\r\n          </p>\r\n          <p>REPORT</p>\r\n        </li>\r\n      </template>\r\n\r\n    </ul>\r\n    <div @click=\"lisCbcClick\" :class='{ \"onRight\": cbcLayer, \"cbcLi\": true }' v-if=\"projectType !== 'bm'\">\r\n      <font-awesome-icon :icon=\"['fas', 'desktop']\"/>\r\n      <p>LIS-CBC</p>\r\n    </div>\r\n    <div class=\"wbcMenuBottom\">\r\n      <button @click=\"moveWbc('up')\" :disabled=\"isButtonDisabled\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-up']\"/>\r\n      </button>\r\n      <button @click=\"moveWbc('down')\" :disabled=\"isButtonDisabled\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-down']\"/>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {\r\n  computed,\r\n  defineEmits,\r\n  defineProps,\r\n  getCurrentInstance,\r\n  onBeforeMount,\r\n  onMounted,\r\n  onUnmounted,\r\n  ref,\r\n  watch\r\n} from \"vue\";\r\nimport router from \"@/router\";\r\n\r\nimport {\r\n  clearPcIpState,\r\n  pageUpDownRunnIngApi,\r\n  updatePcIpStateApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {useGetRunningInfoByIdQuery} from \"@/gql/useQueries\";\r\n\r\nconst emits = defineEmits();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref<any>('bm');\r\nconst selectItems = ref<any>(null);\r\nconst resData = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst route = useRoute();\r\nconst orderClass = ref<any>([]);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst isButtonDisabled = ref(false);\r\nlet timeoutId: number | undefined = undefined;\r\nconst pageMoveDeleteStop = ref(false);\r\nconst props = defineProps(['isNext', 'changeSlideByLisUpload']);\r\nconst ipAddress = ref<any>('');\r\nconst isLoading = ref(true);\r\nconst keepPage = ref('');\r\nlet socketTimeoutId: number | undefined = undefined; // 타이머 ID 저장\r\nconst testType = computed(() => store.state.commonModule.testType);\r\nconst dbListDataFirstNum = computed(() => store.state.commonModule.dbListDataFirstNum);\r\nconst dbListDataLastNum = computed(() => store.state.commonModule.dbListDataLastNum);\r\n\r\nwatch(props.isNext, (newVal) => {\r\n  if (newVal) {\r\n    moveWbc('down')\r\n  }\r\n});\r\n\r\nwatch(() => props.changeSlideByLisUpload, (newVal) => {\r\n  moveWbc('up');\r\n})\r\n\r\nonBeforeMount(async () => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n  await getDetailRunningInfo();\r\n  isLoading.value = false;\r\n  const keepPageType = projectType.value === 'bm' ? 'bmKeepPage' : 'keepPage';\r\n  keepPage.value = JSON.parse(JSON.stringify(sessionStorage.getItem(keepPageType)));\r\n})\r\n\r\nonMounted(async () => {\r\n  pageMoveDeleteStop.value = true;\r\n  const ip = await getDeviceIpApi();\r\n  ipAddress.value = ip.data;\r\n});\r\n\r\nonUnmounted(async () => {\r\n  if (pageMoveDeleteStop.value) {\r\n    await deleteConnectionStatus();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n})\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const { result, loading, error } = useGetRunningInfoByIdQuery(\r\n        { id: Number(selectedSampleId.value) },\r\n        { fetchPolicy: 'no-cache' }\r\n    );\r\n\r\n    watch(result, (newValue) => {\r\n      if (newValue) {\r\n\r\n        // newValue가 존재하면 해당 데이터를 처리\r\n        store.dispatch('slideDataModule/updateSlideData', newValue?.getRunningInfoByIdGQL);\r\n\r\n        const result = newValue?.getRunningInfoByIdGQL;\r\n        selectItems.value = result;\r\n\r\n        store.dispatch('commonModule/setCommonInfo', { testType: selectItems.value.testType });\r\n\r\n        resData.value = result;\r\n      } else {\r\n        console.log('No result');\r\n      }\r\n    });\r\n\r\n\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n    selectItems.value = null;\r\n    resData.value = null;\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst deleteConnectionStatus = async () => {\r\n  const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n  const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n  const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n  const req = `oldPcIp=${ipAddress.value}&dayQuery=${dayQuery}`\r\n  await clearPcIpState(req)\r\n      .then(response => {\r\n        delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n      }).catch(error => {\r\n        console.error('2 err', error)\r\n      });\r\n}\r\n\r\nconst upDownBlockAccess = async (selectItems: any) => {\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const req = `oldPcIp=${ipAddress.value}&newEntityId=${resData.value?.id}&newPcIp=${ipAddress.value}&dayQuery=${dayQuery}`;\r\n\r\n    await updatePcIpStateApi(req).then(response => {\r\n      delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n    }).catch(error => {\r\n      console.error('3 err', error)\r\n    });\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\nconst delayedEmit = (type: string, payload: string, delay: number) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path);\r\n  pageMoveDeleteStop.value = false;\r\n}\r\n\r\nasync function pageUpDownRunnIng(id: number, step: string, type: string) {\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal, searchType} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const startDay = searchText === '' ? startDate : '';\r\n    const endDay = searchText === '' ? endDate : '';\r\n    const barcodeNo = searchType === 'barcodeNo' ? searchText : undefined;\r\n    const reqParams = [\r\n      `id=${id}`,\r\n      `type=${type}`,\r\n      `dayQuery=${dayQuery}`,\r\n      `title=${wbcInfo}`,\r\n      `startDay=${startDay}`,\r\n      `endDay=${endDay}`\r\n    ];\r\n\r\n    if (barcodeNo) {\r\n      reqParams.push(`barcodeNo=${barcodeNo}`);\r\n    }\r\n\r\n    if (nrCount) {\r\n      reqParams.push(`nrCount=${nrCount}`);\r\n    }\r\n\r\n    if (testType && testType !== '00') {\r\n      reqParams.push(`testType=${testType}`);\r\n    }\r\n\r\n    const req = reqParams.join('&');\r\n    const res = await pageUpDownRunnIngApi(req);\r\n\r\n    if (res.data !== null) {\r\n      resData.value = res.data;\r\n      const result = await getDeviceIpApi();\r\n      if(res.data.pcIp !== result.data && res.data.lock_status){\r\n        return;\r\n      }\r\n      await store.dispatch('slideDataModule/updateSlideData', res.data);\r\n      await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(res.data?.id)});\r\n\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst moveWbc = async (direction: any) => {\r\n  if (direction === 'up') {\r\n    if (dbListDataFirstNum.value === selectItems.value?.id) {\r\n      showAlert.value = true;\r\n      alertType.value = 'success';\r\n      alertMessage.value = 'This is the first page. Navigation to other pages is not possible.';\r\n      return;\r\n    }\r\n  } else {\r\n    if (dbListDataLastNum.value === selectItems.value?.id) {\r\n      showAlert.value = true;\r\n      alertType.value = 'success';\r\n      alertMessage.value = 'This is the last page. Navigation to other pages is not possible.';\r\n      return;\r\n    }\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n  if (timeoutId !== undefined) {\r\n    clearTimeout(timeoutId);\r\n  }\r\n  isButtonDisabled.value = true; // 버튼 비활성화\r\n  await getOrderClass(); // 클래스 정보를 업데이트\r\n  await processNextDbIndex(direction, selectItems.value?.id);\r\n\r\n  timeoutId = window.setTimeout(() => {\r\n    isButtonDisabled.value = false;\r\n  }, 700);\r\n\r\n};\r\n\r\nconst processNextDbIndex = async (direction: any, id: number) => {\r\n  const res: any = await pageUpDownRunnIng(id, '1', direction);\r\n  if (resData.value?.lock_status) {\r\n    showAlert.value = true;\r\n    alertType.value = 'success';\r\n    alertMessage.value = 'Someone else is editing.';\r\n    return;\r\n  }else{\r\n    await handleDataResponse(res?.id, res);\r\n  }\r\n};\r\n\r\nconst handleDataResponse = async (dbId: any, res: any) => {\r\n  if (!resData.value) return;\r\n  selectItems.value = resData.value;\r\n\r\n  const resClassInfo = resData.value?.wbcInfoAfter.length === 0 ? resData.value?.wbcInfo?.wbcInfo[0] : resData.value?.wbcInfoAfter;\r\n  await updateUpDown(resClassInfo, resData.value);\r\n};\r\n\r\nconst updateUpDown = async (selectWbc: any, selectItemsNewVal: any) => {\r\n  if ((projectType.value === 'pb' && selectItems.value?.testType === '01' && isActive(\"/databaseRbc\")) || (!keepPage.value || keepPage.value === \"false\")) {\r\n    pageGo('/databaseDetail');\r\n  }\r\n  emits('refreshClass', selectItemsNewVal);\r\n  pageMoveDeleteStop.value = true;\r\n  await upDownBlockAccess(selectItemsNewVal);\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst lisCbcClick = () => {\r\n  //\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: !cbcLayer.value});\r\n}\r\n\r\n</script>\r\n","import script from \"./classInfoMenu.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfoMenu.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const ywmcLisPostSendApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.lisSend.ywmcLisPostSend, request);\r\n}\r\n\r\nexport const ywmcSaveCommentPostSendApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.lisSend.saveComment, request);\r\n}\r\n\r\nexport const ywmcCbcCheckApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.lisSend.ywmcCbcCheck, `${request}`, true);\r\n};\r\n\r\nexport const cbcImgGetApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.lisSend.cbcImgGet, `${request}`, true);\r\n};","import {ywmcCbcCheckApi, ywmcLisPostSendApi} from \"@/common/api/service/lisSend/lisSend\";\r\nimport {createCbcFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport axios from \"axios\";\r\n\r\nexport const ywmcCbcDataLoad = async (barcodeNo: string, cbcCodeList: any) => {\r\n    const url = ` http://128.9.1.11/spo/CpSVL?target_command=ihes.spo.cp.cmd.RetrieveUimdURLCMD&smp_no=${barcodeNo}`;\r\n    // const url = ` http://128.9.2.30/spo/CpSVL?target_command=ihes.spo.cp.cmd.RetrieveUimdURLCMD&smp_no=000032237250`;\r\n    const cbcData:any = await axios.get(url);\r\n    // const cbcData: any = (await ywmcCbcCheckApi(req)).data;\r\n    const cbcWorkList: any = [];\r\n    console.log(cbcData);\r\n    // 최신 날짜 찾기\r\n    const latestDate = cbcData.reduce((latest: string, item: any) => {\r\n        return item.exam_ymd_unit > latest ? item.exam_ymd_unit : latest;\r\n    }, cbcData.exam_ymd_unit);\r\n\r\n    // 최신 날짜에 해당하는 데이터만 필터링\r\n    const latestCbcData = cbcData.filter((item: any) => item.exam_ymd_unit === latestDate);\r\n    const slip = cbcData.find((el: any) => {return el.slip.trim() === 'H3'}) === undefined ? 'H1' : 'H3';\r\n    latestCbcData.forEach(function (data: any) {\r\n        cbcCodeList.forEach(function (cbcCode: any) {\r\n            if (cbcCode?.classCd === data?.exam_cd.trim()) {\r\n                const obj = {\r\n                    classNm: cbcCode.fullNm,\r\n                    count: data?.text_rslt + data?.numeric_rslt,\r\n                    unit: data?.unit,\r\n                    textVal: data?.text_rslt,\r\n                    numVal: data?.numeric_rslt,\r\n                    spc: data?.spc,\r\n                    day: data?.exam_ymd_unit,\r\n                };\r\n                cbcWorkList.push(obj);\r\n            }\r\n        });\r\n    });\r\n\r\n    const parms = {\r\n        filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${barcodeNo}.txt`,\r\n        data: cbcWorkList,\r\n    };\r\n    await createCbcFile(parms);\r\n    return { data: cbcWorkList, cbcDataVal: cbcData , slip: slip};\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const lisSendYwmc = async (data: any) => {\r\n    const res = await ywmcLisPostSendApi(data);\r\n    if (res) {\r\n        return 'Update successful';\r\n    } else {\r\n        return 'Lis Send Fail';\r\n    }\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"cbcDiv\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loaderBackground cbc\"\n}\nconst _hoisted_3 = { class: \"titleCbc\" }\nconst _hoisted_4 = { class: \"flex-column-align-start ml10\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"fs08\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"fs08\"\n}\nconst _hoisted_7 = {\n  key: 1,\n  class: \"cbcPopUpContainer\"\n}\nconst _hoisted_8 = { class: \"flex-justify-between\" }\nconst _hoisted_9 = { class: \"cbcPopUpWrapper\" }\nconst _hoisted_10 = [\"onClick\"]\nconst _hoisted_11 = {\n  key: 1,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_12 = { class: \"cbcTable\" }\nconst _hoisted_13 = {\n  key: 2,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_14 = { class: \"cbcTable\" }\nconst _hoisted_15 = { key: 0 }\nconst _hoisted_16 = {\n  key: 3,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_17 = { class: \"cbcTable\" }\nconst _hoisted_18 = { key: 4 }\n\nimport {xml2json} from 'xml-js';\r\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {readFileEUCKR, readFileTxt, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {\r\n  createCbcFile,\r\n  fileSearchApi,\r\n  fileSysClean,\r\n  fileSysCopy, fileSysExistsFile,\r\n  getFolders\r\n} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getCbcCodeList, getCbcPathData, inhaCbc} from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport {parseDateString} from \"@/common/helpers/lisCbc\";\r\nimport {ywmcCbcDataLoad} from \"@/common/helpers/lisCbc/ywmcCbcLis\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'lisCbc',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst props = __props;\r\nconst cbcWorkList = ref<any>([]);\r\nconst cbcPatientNo = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst cbcSex = ref('');\r\nconst loading = ref(false);\r\n\r\nconst cbcAge = ref('');\r\nconst hosName = ref('');\r\nconst cbcFilePathSetArr: any = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst cbcCodeList = ref<any>([]);\r\nconst selectItemsVal = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst cbcPopup = ref(false);\r\nconst cbcDataList = ref<any>([]);\r\nconst firstCbcDatafilename = ref('');\r\nconst datachoice = ref(false);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slip = ref('');\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nwatch(props.selectItems, async (newVal) => {\r\n  selectItemsVal.value = newVal;\r\n  cbcFilePathSetArr.value = await getCbcPathData();\r\n  cbcCodeList.value = await getCbcCodeList();\r\n  if (datachoice.value) {\r\n    return\r\n  }\r\n  await initCbcData(selectItemsVal.value);\r\n}, {deep: true});\r\n\r\nonMounted(async () => {\r\n  if (props.selectItems) {\r\n    firstCbcDatafilename.value = props.selectItems.barcodeNo;\r\n  }\r\n  datachoice.value = false;\r\n  selectItemsVal.value = props.selectItems;\r\n  cbcFilePathSetArr.value = await getCbcPathData();\r\n  cbcCodeList.value = await getCbcCodeList();\r\n  if (cbcFilePathSetArr.value && cbcFilePathSetArr.value !== '') {\r\n    await initCbcData(selectItemsVal.value);\r\n  }\r\n});\r\n\r\nconst crcCbcDataLoad = async () => {\r\n  await cbcDataProcess();\r\n  if (cbcDataList.value.length === 0) {\r\n    return;\r\n  }\r\n  const latestFile = cbcDataList.value.reduce((latest: any, currentFile: any) => {\r\n    const currentDate: any = parseDateString(currentFile);\r\n    const latestDate: any = parseDateString(latest);\r\n\r\n    // 현재 파일의 날짜가 더 최신이면 그 파일을 선택\r\n    return currentDate > latestDate ? currentFile : latest;\r\n  });\r\n  firstCbcDatafilename.value = `${latestFile.split('.')[0]}`;\r\n}\r\n\r\nconst cbcListOpen = async () => {\r\n  cbcPopup.value = !cbcPopup.value;\r\n  await cbcDataProcess();\r\n}\r\n\r\nconst cbcDataChoice = async (item: string) => {\r\n  datachoice.value = true;\r\n  firstCbcDatafilename.value = `${item.split('.')[0]}`;\r\n  await crcCbcDataLoad();\r\n  await commonCbc(`${item.split('.')[0]}`);\r\n  await updateCbcData();\r\n  cbcPopup.value = false;\r\n}\r\n\r\nconst cbcDataListClose = () => {\r\n  cbcPopup.value = false;\r\n}\r\n\r\nconst cbcDataProcess = async () => {\r\n  if (!props.selectItems) {\r\n    return\r\n  }\r\n  const foldersPath = `folderPath=${cbcFilePathSetArr.value}`;\r\n  const cbcDataArr = await getFolders(foldersPath);\r\n  let filterCbcDataArr: any = [];\r\n  if (Array.isArray(cbcDataArr)) {\r\n    filterCbcDataArr = cbcDataArr.filter((item) => {\r\n      return item.split('_')[0] === props.selectItems.barcodeNo\r\n    });\r\n  }\r\n  cbcDataList.value = filterCbcDataArr;\r\n}\r\n\r\nconst initCbcData = async (newVal: any) => {\r\n  loading.value = true;\r\n  switch (siteCd.value) {\r\n      // 서울 성모 cbc - 외부 url 진행 - 파일 없음\r\n    case HOSPITAL_SITE_CD_BY_NAME['서울성모병원']:\r\n      await cmcSeoulCbc(newVal);\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['고대안암병원']:\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['인천길병원']:\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['삼광의료재단']:\r\n      /** Todo 작업 필요 */\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['인하대병원']:\r\n      await inhaCbcLoad(); // 병원 전산팀 url 사용\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['SD의학연구소']:\r\n      await crcCbcDataLoad();\r\n      await commonCbc(firstCbcDatafilename.value);\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['원주기독병원']:\r\n      await cbcYwmcDataMatching();// 원주기독은 디비 접근해서 작업함\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['NONE']:\r\n    case HOSPITAL_SITE_CD_BY_NAME['UIMD']:\r\n      // await uimdTestUrlSend();\r\n      await crcCbcDataLoad();\r\n      await commonCbc(firstCbcDatafilename.value);\r\n      break;\r\n      // CBC 공통\r\n    default:\r\n      await commonCbc(firstCbcDatafilename.value);\r\n      break;\r\n  }\r\n  await updateCbcData();\r\n}\r\n\r\nconst updateCbcData = async () => {\r\n  if (selectItemsVal.value) {\r\n    selectItemsVal.value.cbcPatientNo = cbcPatientNo.value;\r\n    selectItemsVal.value.cbcPatientNm = cbcPatientNm.value;\r\n    selectItemsVal.value.cbcSex = cbcSex.value;\r\n    selectItemsVal.value.cbcAge = cbcAge.value;\r\n    selectItemsVal.value.hosName = hosName.value;\r\n    const req = {\r\n      cbcPatientNo: cbcPatientNo.value,\r\n      cbcPatientNm: cbcPatientNm.value,\r\n      cbcSex: cbcSex.value,\r\n      cbcAge: cbcAge.value,\r\n      hosName: hosName.value\r\n    };\r\n    const updatedRuningInfo = {...slideData.value, ...req}\r\n    await updateRunningApiPost([updatedRuningInfo]);\r\n  }\r\n}\r\n\r\nconst cbcYwmcDataMatching = async () => {\r\n  const {data, cbcDataVal, slip: slipVal} = await ywmcCbcDataLoad(props?.selectItems?.barcodeNo, cbcCodeList.value);\r\n  cbcWorkList.value = data;\r\n  cbcPatientNo.value = cbcDataVal?.pt_no;\r\n  cbcPatientNm.value = cbcDataVal?.pt_nm;\r\n  cbcSex.value = cbcDataVal?.sex;\r\n  cbcAge.value = cbcDataVal?.age;\r\n  loading.value = false;\r\n  slip.value = slipVal;\r\n}\r\n\r\nconst inhaCbcLoad = async () => {\r\n  const {\r\n    cbcWorkList: cbcWorkListVal,\r\n    errMessage,\r\n    cbcPatientNo: cbcPatientNoVal,\r\n    cbcPatientNm: cbcPatientNmVal,\r\n    cbcSex: cbcSexVal,\r\n    cbcAge: cbcAgeVal,\r\n    loading: loadingVal,\r\n  } = await inhaCbc(cbcFilePathSetArr.value, props.selectItems, cbcCodeList.value, 'cbcRead');\r\n  if (errMessage !== '') {\r\n    showSuccessAlert(errMessage);\r\n  }\r\n  cbcWorkList.value = cbcWorkListVal;\r\n  cbcPatientNo.value = cbcPatientNoVal;\r\n  cbcPatientNm.value = cbcPatientNmVal;\r\n  cbcSex.value = cbcSexVal;\r\n  cbcAge.value = cbcAgeVal;\r\n  loading.value = loadingVal;\r\n}\r\n\r\n\r\nconst commonCbc = async (firstCbcDatafilename: string) => {\r\n  if (cbcFilePathSetArr.value === '') {\r\n    showErrorAlert(MESSAGES.UPLOAD_PLEASE_CBC);\r\n    return;\r\n  }\r\n  if (cbcFilePathSetArr.value.includes(\"http\")) { // url\r\n    const params = {\r\n      url: cbcFilePathSetArr.value,\r\n      barcodeNo: props.selectItems.barcodeNo,\r\n      userId: userModuleDataGet.value.userId,\r\n      deviceBarcode: deviceSerialNm.value\r\n    }\r\n    const url = params.url + '?' +\r\n        'barcodeNo=' + params.barcodeNo + '&' +\r\n        'deviceBarcode=' + deviceSerialNm.value + '&' +\r\n        'userid=' + params.userId\r\n\r\n    await axios.get(url).then(async function (result) {\r\n      const msg: any = await readH7File(result.data);\r\n      cbcWorkList.value = [];\r\n      msg.data?.segments.forEach(function (cbcSegment: any) {\r\n        if (cbcSegment.name.trim() === 'OBX') {\r\n          cbcCodeList.value.forEach(function (cbcCode: any) {\r\n            if (cbcCode.classCd === cbcSegment.fields[3].value[0][0].value[0]) {\r\n              var obj = {\r\n                classNm: cbcCode.cd,\r\n                count: cbcSegment.fields[5].value[0][0].value[0],\r\n                unit: cbcSegment.fields[6].value[0][0].value[0]\r\n              }\r\n              cbcWorkList.value.push(obj)\r\n            }\r\n          })\r\n\r\n        } else if (cbcSegment.name.trim() === 'PID') {\r\n          cbcPatientNo.value = cbcSegment.fields[1].value[0][0].value[0]\r\n          cbcPatientNm.value = cbcSegment.fields[4].value[0][0].value[0]\r\n          cbcSex.value = cbcSegment.fields[6].value[0][0].value[0]\r\n          cbcAge.value = cbcSegment.fields[7].value[0][0].value[0];\r\n        }\r\n      })\r\n      loading.value = false;\r\n    }).catch(function (err) {\r\n      console.error(err.message)\r\n      loading.value = false;\r\n    })\r\n  } else { // 파일\r\n    await fileData(firstCbcDatafilename);\r\n  }\r\n  const parms = {\r\n    filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n    data: cbcWorkList.value,\r\n  };\r\n  await createCbcFile(parms);\r\n}\r\n\r\nconst fileData = async (firstCbcDatafilename: string) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n\r\n  const fileSysExistsFileParms = {\r\n    directoryPath: `${cbcFilePathSetArr.value}`,\r\n    keyword: props.selectItems?.barcodeNo\r\n  };\r\n  let fileListName = '';\r\n  let filePath = '';\r\n  const isExistsFile = await fileSysExistsFile(fileSysExistsFileParms);\r\n  if (isExistsFile.data === \"NoFile\") {\r\n    const fileSearchApiPram = `directoryPath=${path}\\\\${props.selectItems?.slotId}&searchString=${props.selectItems?.barcodeNo}`\r\n    try {\r\n      const response = await fileSearchApi(fileSearchApiPram);\r\n      if (response.data && Array.isArray(response.data) && response.data.length > 0) {\r\n        fileListName = response.data[0].split('.')[0];\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching file list:', error);\r\n    }\r\n    filePath = `${path}\\\\${props.selectItems?.slotId}`;\r\n  } else {\r\n    fileListName = firstCbcDatafilename;\r\n    filePath = cbcFilePathSetArr.value\r\n  }\r\n  const readFileTxtRes: any = await readFileEUCKR(`path=${filePath}&filename=${fileListName}`);\r\n\r\n  if (readFileTxtRes.data.success) {\r\n    const fileParams = {\r\n      source: `${cbcFilePathSetArr.value}\\\\${firstCbcDatafilename}.hl7`,\r\n      destination: `${path}\\\\${props.selectItems?.slotId}`,\r\n    };\r\n    const fileSysCleanParams = {\r\n      directoryPath: `${cbcFilePathSetArr.value}`,\r\n      keyword: props.selectItems?.barcodeNo\r\n    }\r\n    await fileSysCopy(fileParams);\r\n    await fileSysClean(fileSysCleanParams);\r\n    const msg: any = await readH7File(readFileTxtRes.data.data);\r\n    cbcWorkList.value = [];\r\n    console.log(msg?.data?.segments)\r\n    msg?.data?.segments?.forEach((cbcSegment: any) => {\r\n      if (cbcSegment.name.trim() === 'OBX') {\r\n        cbcCodeList.value.forEach((cbcCode: any) => {\r\n          const classCd = cbcSegment?.fields?.[2]?.value?.[0]?.[0]?.value?.[0];\r\n          const count = cbcSegment?.fields?.[4]?.value?.[0]?.[0]?.value?.[0] || \"0\";\r\n          const unit = cbcSegment?.fields?.[2]?.value?.[0]?.[0]?.value?.[0].match(/%/g)?.[0] || \"\";\r\n\r\n          // 클래스 코드가 일치하는 경우\r\n          if (cbcCode.classCd === classCd) {\r\n            // 중복 확인: 이미 동일한 classNm이 있는지 확인\r\n            const isDuplicate = cbcWorkList.value.some(\r\n                (item: any) => item.classNm === cbcCode.fullNm\r\n            );\r\n\r\n            // 중복이 아닐 경우에만 추가\r\n            if (!isDuplicate) {\r\n              const obj = {\r\n                classNm: cbcCode.fullNm,\r\n                count: count,\r\n                unit\r\n              };\r\n              cbcWorkList.value.push(obj);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      else if(cbcSegment.name.trim() === 'FLG'){\r\n        console.log('asas')\r\n        const flgNm = cbcSegment?.fields?.[2]?.value?.[0]?.[0]?.value?.[0];\r\n        const obj = {\r\n          classNm: 'FLG',\r\n          count: flgNm,\r\n          unit: '',\r\n        };\r\n        cbcWorkList.value.push(obj);\r\n      }\r\n      else if (cbcSegment.name.trim() === 'PID') {\r\n        cbcPatientNo.value = cbcSegment.fields[1].value[0][0].value[0]\r\n        cbcPatientNm.value = cbcSegment.fields[4].value[0][0].value[0]\r\n        cbcSex.value = cbcSegment.fields[6].value[0][0].value[0]\r\n        cbcAge.value = cbcSegment.fields[7].value[0][0].value[0];\r\n        hosName.value = cbcSegment?.fields[10]?.value[0][0]?.value[0];\r\n      }\r\n    });\r\n\r\n    loading.value = false;  // 로딩 상태 종료\r\n  } else {\r\n    console.error(readFileTxtRes.data.message);\r\n    loading.value = false;\r\n  }\r\n}\r\n\r\nconst uimdTestUrlSend = async () => {\r\n  await axios.get(cbcFilePathSetArr.value).then(async function (result) {\r\n    cbcWorkList.value = result.data.data.data;\r\n    loading.value = false;\r\n  });\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst cmcSeoulCbc = async (newVal: any) => {\r\n  let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\n  axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n    params: {\r\n      submit_id: 'TRLII00124',\r\n      business_id: 'li',\r\n      instcd: '012',\r\n      bcno: newVal.barcodeNo\r\n    },\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }).then(function (result) {\r\n    const xml = result.data?.data;\r\n    const json = JSON.parse(xml2json(xml, {compact: true}));\r\n    cbcWorkList.value = json.root.spcworklist.worklist;\r\n    const parms = {\r\n      filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n      data: cbcWorkList.value,\r\n    };\r\n    createCbcFile(parms);\r\n    loading.value = false;\r\n  }).catch(function (err) {\r\n    console.error(err.message)\r\n    loading.value = false;\r\n  })\r\n}\r\n\r\nconst kuahGilHosCbc = async () => {\r\n  const readFileTxtRes: any = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}`);\r\n\r\n  if (readFileTxtRes.data.success) {\r\n    let cbcDataArray = JSON.parse(JSON.stringify(readFileTxtRes.data.data));\r\n    // 검체번호, 검사일시, 환자번호, 환자명, 성별, 나이, 그래프 데이터 제외\r\n    const excludedTitles = [\r\n      'SPC_NO', 'BLCL_DT', 'PT_NO', 'PT_NM', 'SEX', 'AGE',\r\n      'SCAT_WDF', 'SCAT_WNR', 'DIST_RBC', 'DIST_WDF(FSC)', 'DIST_PLT'\r\n    ];\r\n    cbcDataArray = cbcDataArray.split('\\n');\r\n\r\n    cbcDataArray.forEach((cbcData: any) => {\r\n      const [title, value] = cbcData.split('\\t').map((item: any) => item.trim());\r\n\r\n      if (!excludedTitles.includes(title.trim())) {\r\n        const unit = title.includes('%') ? '%' : '';\r\n        cbcWorkList.value.push({classNm: title, count: value, unit: unit});\r\n      } else {\r\n        switch (title) {\r\n          case 'PT_NO':\r\n            cbcPatientNo.value = value;\r\n            break;\r\n          case 'PT_NM':\r\n            cbcPatientNm.value = value;\r\n            break;\r\n          case 'SEX':\r\n            cbcSex.value = value;\r\n            break;\r\n          case 'AGE':\r\n            cbcAge.value = value;\r\n            break;\r\n        }\r\n      }\r\n    });\r\n    const parameter = {\r\n      filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n      data: cbcWorkList.value,\r\n    };\r\n    await createCbcFile(parameter);\r\n  }\r\n  loading.value = false;\r\n}\r\n\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response: any = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: originalDb,\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (response) {\r\n      //\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (loading.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[0] || (_cache[0] = [\n          _createElementVNode(\"div\", { class: \"loader\" }, null, -1),\n          _createElementVNode(\"p\", { class: \"loadingText\" }, \"Loading...\", -1)\n        ])))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"h1\", _hoisted_3, [\n      _cache[3] || (_cache[3] = _createElementVNode(\"span\", null, \"CBC + DIFF\", -1)),\n      _createElementVNode(\"div\", _hoisted_4, [\n        (cbcWorkList.value[0]?.day)\n          ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, \"exam_ymd_unit : \" + _toDisplayString(cbcWorkList.value[0]?.day), 1))\n          : _createCommentVNode(\"\", true),\n        (slip.value !== '')\n          ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"slip : \" + _toDisplayString(slip.value), 1))\n          : _createCommentVNode(\"\", true)\n      ]),\n      (siteCd.value === _unref(HOSPITAL_SITE_CD_BY_NAME)['SD의학연구소'] || siteCd.value === '')\n        ? (_openBlock(), _createElementBlock(\"span\", {\n            key: 0,\n            class: \"ml10\",\n            onClick: cbcListOpen\n          }, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'rectangle-list'],\n              class: \"cursorPointer\"\n            })\n          ]))\n        : _createCommentVNode(\"\", true),\n      (cbcPopup.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n            _createElementVNode(\"div\", _hoisted_8, [\n              _cache[1] || (_cache[1] = _createElementVNode(\"p\", null, null, -1)),\n              _cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"List\", -1)),\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'xmark'],\n                style: {\"color\":\"#ffffff\"},\n                onClick: cbcDataListClose,\n                class: \"cbcDataListCloseBtn\"\n              })\n            ]),\n            _createElementVNode(\"ul\", _hoisted_9, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcDataList.value, (item, idx) => {\n                return (_openBlock(), _createElementBlock(\"li\", {\n                  key: idx,\n                  onClick: ($event: any) => (cbcDataChoice(item)),\n                  class: \"cbcPopUpItem\"\n                }, _toDisplayString(item), 9, _hoisted_10))\n              }), 128))\n            ])\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (siteCd.value ==='0002' && cbcWorkList.value.length !== 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n          _createElementVNode(\"table\", _hoisted_12, [\n            _cache[4] || (_cache[4] = _createElementVNode(\"colgroup\", null, [\n              _createElementVNode(\"col\", { width: \"50%\" }),\n              _createElementVNode(\"col\", { width: \"50%\" })\n            ], -1)),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.tclsscrnnm._cdata), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.inptrslt._cdata), 1)\n              ]))\n            }), 128))\n          ])\n        ]))\n      : (siteCd.value ==='0007' && cbcWorkList.value.length !== 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n            _createElementVNode(\"table\", _hoisted_14, [\n              _cache[5] || (_cache[5] = _createElementVNode(\"colgroup\", null, [\n                _createElementVNode(\"col\", { width: \"50%\" }),\n                _createElementVNode(\"col\", { width: \"50%\" })\n              ], -1)),\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n                return (_openBlock(), _createElementBlock(\"tr\", {\n                  key: cbcItem.id\n                }, [\n                  _createElementVNode(\"td\", null, _toDisplayString(cbcItem.classNm), 1),\n                  _createElementVNode(\"td\", null, [\n                    _createTextVNode(_toDisplayString(cbcItem.count) + \" \", 1),\n                    (cbcItem.cham !=='')\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_15, \" (\" + _toDisplayString(cbcItem.cham) + \") \", 1))\n                      : _createCommentVNode(\"\", true),\n                    _createTextVNode(\" \" + _toDisplayString(cbcItem.unit), 1)\n                  ])\n                ]))\n              }), 128))\n            ])\n          ]))\n        : (cbcWorkList.value.length !== 0)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n              _createElementVNode(\"table\", _hoisted_17, [\n                _cache[6] || (_cache[6] = _createElementVNode(\"colgroup\", null, [\n                  _createElementVNode(\"col\", { width: \"50%\" }),\n                  _createElementVNode(\"col\", { width: \"50%\" })\n                ], -1)),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", {\n                    key: cbcItem.id\n                  }, [\n                    _createElementVNode(\"td\", null, _toDisplayString(cbcItem.classNm), 1),\n                    _createElementVNode(\"td\", null, _toDisplayString(cbcItem.count) + \" \" + _toDisplayString(cbcItem.unit), 1)\n                  ]))\n                }), 128))\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n    (cbcWorkList.value.length === 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, \" No Data \"))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"cbcDiv\">\r\n    <div class=\"loaderBackground cbc\" v-if=\"loading\">\r\n      <div class=\"loader\"></div>\r\n      <p class=\"loadingText\">Loading...</p>\r\n    </div>\r\n    <h1 class=\"titleCbc\"><span>CBC + DIFF</span>\r\n      <div class=\"flex-column-align-start ml10\">\r\n        <p class=\"fs08\" v-if=\"cbcWorkList[0]?.day\">exam_ymd_unit : {{ cbcWorkList[0]?.day }}</p>\r\n        <p class=\"fs08\" v-if=\"slip !== ''\">slip : {{ slip }}</p>\r\n      </div>\r\n\r\n      <span class=\"ml10\" v-if=\"siteCd === HOSPITAL_SITE_CD_BY_NAME['SD의학연구소'] || siteCd === ''\" @click=\"cbcListOpen\">\r\n        <font-awesome-icon :icon=\"['fas', 'rectangle-list']\" class=\"cursorPointer\"/>\r\n      </span>\r\n      <div v-if=\"cbcPopup\" class=\"cbcPopUpContainer\">\r\n\r\n        <div class=\"flex-justify-between\">\r\n          <p></p>\r\n          <h3>List</h3>\r\n          <!--          <button type=\"button\" >-->\r\n          <font-awesome-icon :icon=\"['fas', 'xmark']\" style=\"color: #ffffff;\" @click=\"cbcDataListClose\"\r\n                             class=\"cbcDataListCloseBtn\"/>\r\n          <!--          </button>-->\r\n        </div>\r\n\r\n        <ul class=\"cbcPopUpWrapper\">\r\n          <li v-for=\"(item, idx) in cbcDataList\" :key=\"idx\" @click=\"cbcDataChoice(item)\" class=\"cbcPopUpItem\">\r\n            {{ item }}\r\n          </li>\r\n        </ul>\r\n\r\n      </div>\r\n    </h1>\r\n    <div v-if=\"siteCd ==='0002' && cbcWorkList.length !== 0\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <colgroup>\r\n          <col width=\"50%\"/>\r\n          <col width=\"50%\"/>\r\n        </colgroup>\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.tclsscrnnm._cdata }}</td>\r\n          <td>{{ cbcItem.inptrslt._cdata }}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-else-if=\"siteCd ==='0007' && cbcWorkList.length !== 0\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <colgroup>\r\n          <col width=\"50%\"/>\r\n          <col width=\"50%\"/>\r\n        </colgroup>\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.classNm }}</td>\r\n          <td>\r\n            {{ cbcItem.count }}\r\n            <span v-if=\"cbcItem.cham !==''\">\r\n              ({{ cbcItem.cham }})\r\n            </span>\r\n            {{ cbcItem.unit }}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n\r\n    <div v-else-if=\"cbcWorkList.length !== 0\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <colgroup>\r\n          <col width=\"50%\"/>\r\n          <col width=\"50%\"/>\r\n        </colgroup>\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.classNm }}</td>\r\n          <td>\r\n            {{ cbcItem.count }} {{ cbcItem.unit }}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-if=\"cbcWorkList.length === 0\">\r\n      No Data\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {xml2json} from 'xml-js';\r\nimport {computed, defineProps, onMounted, ref, watch} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {readFileEUCKR, readFileTxt, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {\r\n  createCbcFile,\r\n  fileSearchApi,\r\n  fileSysClean,\r\n  fileSysCopy, fileSysExistsFile,\r\n  getFolders\r\n} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getCbcCodeList, getCbcPathData, inhaCbc} from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport {parseDateString} from \"@/common/helpers/lisCbc\";\r\nimport {ywmcCbcDataLoad} from \"@/common/helpers/lisCbc/ywmcCbcLis\";\r\n\r\nconst store = useStore();\r\nconst props = defineProps(['selectItems']);\r\nconst cbcWorkList = ref<any>([]);\r\nconst cbcPatientNo = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst cbcSex = ref('');\r\nconst loading = ref(false);\r\n\r\nconst cbcAge = ref('');\r\nconst hosName = ref('');\r\nconst cbcFilePathSetArr: any = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst cbcCodeList = ref<any>([]);\r\nconst selectItemsVal = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst cbcPopup = ref(false);\r\nconst cbcDataList = ref<any>([]);\r\nconst firstCbcDatafilename = ref('');\r\nconst datachoice = ref(false);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slip = ref('');\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nwatch(props.selectItems, async (newVal) => {\r\n  selectItemsVal.value = newVal;\r\n  cbcFilePathSetArr.value = await getCbcPathData();\r\n  cbcCodeList.value = await getCbcCodeList();\r\n  if (datachoice.value) {\r\n    return\r\n  }\r\n  await initCbcData(selectItemsVal.value);\r\n}, {deep: true});\r\n\r\nonMounted(async () => {\r\n  if (props.selectItems) {\r\n    firstCbcDatafilename.value = props.selectItems.barcodeNo;\r\n  }\r\n  datachoice.value = false;\r\n  selectItemsVal.value = props.selectItems;\r\n  cbcFilePathSetArr.value = await getCbcPathData();\r\n  cbcCodeList.value = await getCbcCodeList();\r\n  if (cbcFilePathSetArr.value && cbcFilePathSetArr.value !== '') {\r\n    await initCbcData(selectItemsVal.value);\r\n  }\r\n});\r\n\r\nconst crcCbcDataLoad = async () => {\r\n  await cbcDataProcess();\r\n  if (cbcDataList.value.length === 0) {\r\n    return;\r\n  }\r\n  const latestFile = cbcDataList.value.reduce((latest: any, currentFile: any) => {\r\n    const currentDate: any = parseDateString(currentFile);\r\n    const latestDate: any = parseDateString(latest);\r\n\r\n    // 현재 파일의 날짜가 더 최신이면 그 파일을 선택\r\n    return currentDate > latestDate ? currentFile : latest;\r\n  });\r\n  firstCbcDatafilename.value = `${latestFile.split('.')[0]}`;\r\n}\r\n\r\nconst cbcListOpen = async () => {\r\n  cbcPopup.value = !cbcPopup.value;\r\n  await cbcDataProcess();\r\n}\r\n\r\nconst cbcDataChoice = async (item: string) => {\r\n  datachoice.value = true;\r\n  firstCbcDatafilename.value = `${item.split('.')[0]}`;\r\n  await crcCbcDataLoad();\r\n  await commonCbc(`${item.split('.')[0]}`);\r\n  await updateCbcData();\r\n  cbcPopup.value = false;\r\n}\r\n\r\nconst cbcDataListClose = () => {\r\n  cbcPopup.value = false;\r\n}\r\n\r\nconst cbcDataProcess = async () => {\r\n  if (!props.selectItems) {\r\n    return\r\n  }\r\n  const foldersPath = `folderPath=${cbcFilePathSetArr.value}`;\r\n  const cbcDataArr = await getFolders(foldersPath);\r\n  let filterCbcDataArr: any = [];\r\n  if (Array.isArray(cbcDataArr)) {\r\n    filterCbcDataArr = cbcDataArr.filter((item) => {\r\n      return item.split('_')[0] === props.selectItems.barcodeNo\r\n    });\r\n  }\r\n  cbcDataList.value = filterCbcDataArr;\r\n}\r\n\r\nconst initCbcData = async (newVal: any) => {\r\n  loading.value = true;\r\n  switch (siteCd.value) {\r\n      // 서울 성모 cbc - 외부 url 진행 - 파일 없음\r\n    case HOSPITAL_SITE_CD_BY_NAME['서울성모병원']:\r\n      await cmcSeoulCbc(newVal);\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['고대안암병원']:\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['인천길병원']:\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['삼광의료재단']:\r\n      /** Todo 작업 필요 */\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['인하대병원']:\r\n      await inhaCbcLoad(); // 병원 전산팀 url 사용\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['SD의학연구소']:\r\n      await crcCbcDataLoad();\r\n      await commonCbc(firstCbcDatafilename.value);\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['원주기독병원']:\r\n      await cbcYwmcDataMatching();// 원주기독은 디비 접근해서 작업함\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['NONE']:\r\n    case HOSPITAL_SITE_CD_BY_NAME['UIMD']:\r\n      // await uimdTestUrlSend();\r\n      await crcCbcDataLoad();\r\n      await commonCbc(firstCbcDatafilename.value);\r\n      break;\r\n      // CBC 공통\r\n    default:\r\n      await commonCbc(firstCbcDatafilename.value);\r\n      break;\r\n  }\r\n  await updateCbcData();\r\n}\r\n\r\nconst updateCbcData = async () => {\r\n  if (selectItemsVal.value) {\r\n    selectItemsVal.value.cbcPatientNo = cbcPatientNo.value;\r\n    selectItemsVal.value.cbcPatientNm = cbcPatientNm.value;\r\n    selectItemsVal.value.cbcSex = cbcSex.value;\r\n    selectItemsVal.value.cbcAge = cbcAge.value;\r\n    selectItemsVal.value.hosName = hosName.value;\r\n    const req = {\r\n      cbcPatientNo: cbcPatientNo.value,\r\n      cbcPatientNm: cbcPatientNm.value,\r\n      cbcSex: cbcSex.value,\r\n      cbcAge: cbcAge.value,\r\n      hosName: hosName.value\r\n    };\r\n    const updatedRuningInfo = {...slideData.value, ...req}\r\n    await updateRunningApiPost([updatedRuningInfo]);\r\n  }\r\n}\r\n\r\nconst cbcYwmcDataMatching = async () => {\r\n  const {data, cbcDataVal, slip: slipVal} = await ywmcCbcDataLoad(props?.selectItems?.barcodeNo, cbcCodeList.value);\r\n  cbcWorkList.value = data;\r\n  cbcPatientNo.value = cbcDataVal?.pt_no;\r\n  cbcPatientNm.value = cbcDataVal?.pt_nm;\r\n  cbcSex.value = cbcDataVal?.sex;\r\n  cbcAge.value = cbcDataVal?.age;\r\n  loading.value = false;\r\n  slip.value = slipVal;\r\n}\r\n\r\nconst inhaCbcLoad = async () => {\r\n  const {\r\n    cbcWorkList: cbcWorkListVal,\r\n    errMessage,\r\n    cbcPatientNo: cbcPatientNoVal,\r\n    cbcPatientNm: cbcPatientNmVal,\r\n    cbcSex: cbcSexVal,\r\n    cbcAge: cbcAgeVal,\r\n    loading: loadingVal,\r\n  } = await inhaCbc(cbcFilePathSetArr.value, props.selectItems, cbcCodeList.value, 'cbcRead');\r\n  if (errMessage !== '') {\r\n    showSuccessAlert(errMessage);\r\n  }\r\n  cbcWorkList.value = cbcWorkListVal;\r\n  cbcPatientNo.value = cbcPatientNoVal;\r\n  cbcPatientNm.value = cbcPatientNmVal;\r\n  cbcSex.value = cbcSexVal;\r\n  cbcAge.value = cbcAgeVal;\r\n  loading.value = loadingVal;\r\n}\r\n\r\n\r\nconst commonCbc = async (firstCbcDatafilename: string) => {\r\n  if (cbcFilePathSetArr.value === '') {\r\n    showErrorAlert(MESSAGES.UPLOAD_PLEASE_CBC);\r\n    return;\r\n  }\r\n  if (cbcFilePathSetArr.value.includes(\"http\")) { // url\r\n    const params = {\r\n      url: cbcFilePathSetArr.value,\r\n      barcodeNo: props.selectItems.barcodeNo,\r\n      userId: userModuleDataGet.value.userId,\r\n      deviceBarcode: deviceSerialNm.value\r\n    }\r\n    const url = params.url + '?' +\r\n        'barcodeNo=' + params.barcodeNo + '&' +\r\n        'deviceBarcode=' + deviceSerialNm.value + '&' +\r\n        'userid=' + params.userId\r\n\r\n    await axios.get(url).then(async function (result) {\r\n      const msg: any = await readH7File(result.data);\r\n      cbcWorkList.value = [];\r\n      msg.data?.segments.forEach(function (cbcSegment: any) {\r\n        if (cbcSegment.name.trim() === 'OBX') {\r\n          cbcCodeList.value.forEach(function (cbcCode: any) {\r\n            if (cbcCode.classCd === cbcSegment.fields[3].value[0][0].value[0]) {\r\n              var obj = {\r\n                classNm: cbcCode.cd,\r\n                count: cbcSegment.fields[5].value[0][0].value[0],\r\n                unit: cbcSegment.fields[6].value[0][0].value[0]\r\n              }\r\n              cbcWorkList.value.push(obj)\r\n            }\r\n          })\r\n\r\n        } else if (cbcSegment.name.trim() === 'PID') {\r\n          cbcPatientNo.value = cbcSegment.fields[1].value[0][0].value[0]\r\n          cbcPatientNm.value = cbcSegment.fields[4].value[0][0].value[0]\r\n          cbcSex.value = cbcSegment.fields[6].value[0][0].value[0]\r\n          cbcAge.value = cbcSegment.fields[7].value[0][0].value[0];\r\n        }\r\n      })\r\n      loading.value = false;\r\n    }).catch(function (err) {\r\n      console.error(err.message)\r\n      loading.value = false;\r\n    })\r\n  } else { // 파일\r\n    await fileData(firstCbcDatafilename);\r\n  }\r\n  const parms = {\r\n    filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n    data: cbcWorkList.value,\r\n  };\r\n  await createCbcFile(parms);\r\n}\r\n\r\nconst fileData = async (firstCbcDatafilename: string) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n\r\n  const fileSysExistsFileParms = {\r\n    directoryPath: `${cbcFilePathSetArr.value}`,\r\n    keyword: props.selectItems?.barcodeNo\r\n  };\r\n  let fileListName = '';\r\n  let filePath = '';\r\n  const isExistsFile = await fileSysExistsFile(fileSysExistsFileParms);\r\n  if (isExistsFile.data === \"NoFile\") {\r\n    const fileSearchApiPram = `directoryPath=${path}\\\\${props.selectItems?.slotId}&searchString=${props.selectItems?.barcodeNo}`\r\n    try {\r\n      const response = await fileSearchApi(fileSearchApiPram);\r\n      if (response.data && Array.isArray(response.data) && response.data.length > 0) {\r\n        fileListName = response.data[0].split('.')[0];\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching file list:', error);\r\n    }\r\n    filePath = `${path}\\\\${props.selectItems?.slotId}`;\r\n  } else {\r\n    fileListName = firstCbcDatafilename;\r\n    filePath = cbcFilePathSetArr.value\r\n  }\r\n  const readFileTxtRes: any = await readFileEUCKR(`path=${filePath}&filename=${fileListName}`);\r\n\r\n  if (readFileTxtRes.data.success) {\r\n    const fileParams = {\r\n      source: `${cbcFilePathSetArr.value}\\\\${firstCbcDatafilename}.hl7`,\r\n      destination: `${path}\\\\${props.selectItems?.slotId}`,\r\n    };\r\n    const fileSysCleanParams = {\r\n      directoryPath: `${cbcFilePathSetArr.value}`,\r\n      keyword: props.selectItems?.barcodeNo\r\n    }\r\n    await fileSysCopy(fileParams);\r\n    await fileSysClean(fileSysCleanParams);\r\n    const msg: any = await readH7File(readFileTxtRes.data.data);\r\n    cbcWorkList.value = [];\r\n    console.log(msg?.data?.segments)\r\n    msg?.data?.segments?.forEach((cbcSegment: any) => {\r\n      if (cbcSegment.name.trim() === 'OBX') {\r\n        cbcCodeList.value.forEach((cbcCode: any) => {\r\n          const classCd = cbcSegment?.fields?.[2]?.value?.[0]?.[0]?.value?.[0];\r\n          const count = cbcSegment?.fields?.[4]?.value?.[0]?.[0]?.value?.[0] || \"0\";\r\n          const unit = cbcSegment?.fields?.[2]?.value?.[0]?.[0]?.value?.[0].match(/%/g)?.[0] || \"\";\r\n\r\n          // 클래스 코드가 일치하는 경우\r\n          if (cbcCode.classCd === classCd) {\r\n            // 중복 확인: 이미 동일한 classNm이 있는지 확인\r\n            const isDuplicate = cbcWorkList.value.some(\r\n                (item: any) => item.classNm === cbcCode.fullNm\r\n            );\r\n\r\n            // 중복이 아닐 경우에만 추가\r\n            if (!isDuplicate) {\r\n              const obj = {\r\n                classNm: cbcCode.fullNm,\r\n                count: count,\r\n                unit\r\n              };\r\n              cbcWorkList.value.push(obj);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      else if(cbcSegment.name.trim() === 'FLG'){\r\n        console.log('asas')\r\n        const flgNm = cbcSegment?.fields?.[2]?.value?.[0]?.[0]?.value?.[0];\r\n        const obj = {\r\n          classNm: 'FLG',\r\n          count: flgNm,\r\n          unit: '',\r\n        };\r\n        cbcWorkList.value.push(obj);\r\n      }\r\n      else if (cbcSegment.name.trim() === 'PID') {\r\n        cbcPatientNo.value = cbcSegment.fields[1].value[0][0].value[0]\r\n        cbcPatientNm.value = cbcSegment.fields[4].value[0][0].value[0]\r\n        cbcSex.value = cbcSegment.fields[6].value[0][0].value[0]\r\n        cbcAge.value = cbcSegment.fields[7].value[0][0].value[0];\r\n        hosName.value = cbcSegment?.fields[10]?.value[0][0]?.value[0];\r\n      }\r\n    });\r\n\r\n    loading.value = false;  // 로딩 상태 종료\r\n  } else {\r\n    console.error(readFileTxtRes.data.message);\r\n    loading.value = false;\r\n  }\r\n}\r\n\r\nconst uimdTestUrlSend = async () => {\r\n  await axios.get(cbcFilePathSetArr.value).then(async function (result) {\r\n    cbcWorkList.value = result.data.data.data;\r\n    loading.value = false;\r\n  });\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst cmcSeoulCbc = async (newVal: any) => {\r\n  let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\n  axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n    params: {\r\n      submit_id: 'TRLII00124',\r\n      business_id: 'li',\r\n      instcd: '012',\r\n      bcno: newVal.barcodeNo\r\n    },\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }).then(function (result) {\r\n    const xml = result.data?.data;\r\n    const json = JSON.parse(xml2json(xml, {compact: true}));\r\n    cbcWorkList.value = json.root.spcworklist.worklist;\r\n    const parms = {\r\n      filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n      data: cbcWorkList.value,\r\n    };\r\n    createCbcFile(parms);\r\n    loading.value = false;\r\n  }).catch(function (err) {\r\n    console.error(err.message)\r\n    loading.value = false;\r\n  })\r\n}\r\n\r\nconst kuahGilHosCbc = async () => {\r\n  const readFileTxtRes: any = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}`);\r\n\r\n  if (readFileTxtRes.data.success) {\r\n    let cbcDataArray = JSON.parse(JSON.stringify(readFileTxtRes.data.data));\r\n    // 검체번호, 검사일시, 환자번호, 환자명, 성별, 나이, 그래프 데이터 제외\r\n    const excludedTitles = [\r\n      'SPC_NO', 'BLCL_DT', 'PT_NO', 'PT_NM', 'SEX', 'AGE',\r\n      'SCAT_WDF', 'SCAT_WNR', 'DIST_RBC', 'DIST_WDF(FSC)', 'DIST_PLT'\r\n    ];\r\n    cbcDataArray = cbcDataArray.split('\\n');\r\n\r\n    cbcDataArray.forEach((cbcData: any) => {\r\n      const [title, value] = cbcData.split('\\t').map((item: any) => item.trim());\r\n\r\n      if (!excludedTitles.includes(title.trim())) {\r\n        const unit = title.includes('%') ? '%' : '';\r\n        cbcWorkList.value.push({classNm: title, count: value, unit: unit});\r\n      } else {\r\n        switch (title) {\r\n          case 'PT_NO':\r\n            cbcPatientNo.value = value;\r\n            break;\r\n          case 'PT_NM':\r\n            cbcPatientNm.value = value;\r\n            break;\r\n          case 'SEX':\r\n            cbcSex.value = value;\r\n            break;\r\n          case 'AGE':\r\n            cbcAge.value = value;\r\n            break;\r\n        }\r\n      }\r\n    });\r\n    const parameter = {\r\n      filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n      data: cbcWorkList.value,\r\n    };\r\n    await createCbcFile(parameter);\r\n  }\r\n  loading.value = false;\r\n}\r\n\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response: any = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: originalDb,\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (response) {\r\n      //\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./lisCbc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./lisCbc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, unref as _unref, Fragment as _Fragment, createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"topClintInfo\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { key: 1 }\nconst _hoisted_4 = { key: 2 }\nconst _hoisted_5 = { key: 0 }\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = { key: 4 }\nconst _hoisted_8 = { key: 5 }\nconst _hoisted_9 = { key: 6 }\n\nimport {watch, ref, onMounted, computed, onBeforeMount, reactive} from 'vue';\r\nimport {getDateTimeYYYYMMDDHHmmss} from \"@/common/lib/utils/dateUtils\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport Tooltip from \"@/components/commonUi/Tooltip.vue\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'detailHeader',\n  props: ['testType', 'barcodeNo', 'cbcPatientNo', 'patientName', 'hospitalName', 'cbcPatientName', 'cbcSex', 'cbcAge', 'analyzedDttm', 'slideData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst emits = __emit;\r\nconst store = useStore();\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\nconst projectBm = ref(false);\r\nconst tooltipVisible = reactive({\r\n  slideStatus: false,\r\n})\r\nconst slideStatus = ref('');\r\nconst slideStatusDesc = ref('');\r\nwatch(() => props.slideData, (newSlideData) => {\r\n  if (!newSlideData.cbcPatientNm || newSlideData.cbcPatientNm === '' || newSlideData.cbcPatientNm !== newSlideData.patientNm) {\r\n    emits('updateSlideDataByCBCData', newSlideData);\r\n  }\r\n})\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n})\r\nonMounted(async () => {\r\n  const path = pbiaRootDir.value;\r\n  const folderPath = !projectBm.value ? '01_WBC_Classification' : '04_BM_Classification';\r\n  const url_new = `${path}/${slideData.value.slotId}/${folderPath}/Slide_Condition.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  slideStatus.value = response_new?.data?.condition;\r\n  slideStatusDesc.value = response_new?.data?.description;\r\n})\r\nconst tooltipVisibleFunc = (type: 'slideStatus', visible: boolean) => {\r\n  tooltipVisible[type] = visible;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"ul\", null, [\n      _createElementVNode(\"li\", null, _toDisplayString(__props.testType), 1),\n      (__props.barcodeNo)\n        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_2, _toDisplayString(__props.barcodeNo), 1))\n        : _createCommentVNode(\"\", true),\n      (__props.analyzedDttm)\n        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_3, _toDisplayString(_unref(getDateTimeYYYYMMDDHHmmss)(__props.analyzedDttm)), 1))\n        : _createCommentVNode(\"\", true),\n      (__props.cbcPatientNo)\n        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_4, _toDisplayString(__props.cbcPatientNo), 1))\n        : _createCommentVNode(\"\", true),\n      (__props.cbcPatientName || __props.patientName)\n        ? (_openBlock(), _createElementBlock(_Fragment, { key: 3 }, [\n            (__props.cbcPatientName)\n              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_5, _toDisplayString(__props.cbcPatientName), 1))\n              : (__props.patientName)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_6, _toDisplayString(__props.patientName), 1))\n                : _createCommentVNode(\"\", true)\n          ], 64))\n        : _createCommentVNode(\"\", true),\n      (__props.cbcSex)\n        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_7, _toDisplayString(__props.cbcSex), 1))\n        : _createCommentVNode(\"\", true),\n      (__props.cbcAge)\n        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_8, _toDisplayString(__props.cbcAge), 1))\n        : _createCommentVNode(\"\", true),\n      (__props.hospitalName)\n        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_9, _toDisplayString(__props.hospitalName), 1))\n        : _createCommentVNode(\"\", true),\n      (slideStatus.value)\n        ? (_openBlock(), _createElementBlock(\"li\", {\n            key: 7,\n            class: \"slideStatus\",\n            onMouseenter: _cache[0] || (_cache[0] = ($event: any) => (tooltipVisibleFunc('slideStatus', true))),\n            onMouseleave: _cache[1] || (_cache[1] = ($event: any) => (tooltipVisibleFunc('slideStatus', false)))\n          }, [\n            _createTextVNode(\" Slide Condition : \" + _toDisplayString(slideStatus.value) + \" \", 1),\n            _createVNode(Tooltip, {\n              isVisible: tooltipVisible.slideStatus,\n              className: \"mb08\",\n              position: \"bottom\",\n              type: \"\",\n              message: `${slideStatusDesc.value}`\n            }, null, 8, [\"isVisible\", \"message\"])\n          ], 32))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"topClintInfo\">\r\n    <ul>\r\n      <li>{{ testType }}</li>\r\n      <li v-if=\"barcodeNo\">{{ barcodeNo }}</li>\r\n      <li v-if=\"analyzedDttm\">{{ getDateTimeYYYYMMDDHHmmss(analyzedDttm) }}</li>\r\n      <li v-if=\"cbcPatientNo\">{{ cbcPatientNo }}</li>\r\n      <template v-if=\"cbcPatientName || patientName\">\r\n        <li v-if=\"cbcPatientName\">{{ cbcPatientName }}</li>\r\n        <li v-else-if=\"patientName\">{{ patientName }}</li>\r\n      </template>\r\n      <li v-if=\"cbcSex\">{{ cbcSex }}</li>\r\n      <li v-if=\"cbcAge\">{{ cbcAge }}</li>\r\n      <li v-if=\"hospitalName\">{{ hospitalName }}</li>\r\n      <li v-if=\"slideStatus\" class=\"slideStatus\"\r\n          @mouseenter=\"tooltipVisibleFunc('slideStatus', true)\"\r\n          @mouseleave=\"tooltipVisibleFunc('slideStatus', false)\"\r\n      >\r\n        Slide Condition : {{ slideStatus }}\r\n        <Tooltip :isVisible=\"tooltipVisible.slideStatus\" className=\"mb08\" position=\"bottom\" type=\"\"\r\n                 :message=\"`${slideStatusDesc}`\"/>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {defineProps, watch, defineEmits, ref, onMounted, computed, onBeforeMount, reactive} from 'vue';\r\nimport {getDateTimeYYYYMMDDHHmmss} from \"@/common/lib/utils/dateUtils\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport Tooltip from \"@/components/commonUi/Tooltip.vue\";\r\n\r\nconst props = defineProps(['testType', 'barcodeNo', 'cbcPatientNo', 'patientName', 'hospitalName', 'cbcPatientName', 'cbcSex', 'cbcAge', 'analyzedDttm', 'slideData']);\r\nconst emits = defineEmits();\r\nconst store = useStore();\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\nconst projectBm = ref(false);\r\nconst tooltipVisible = reactive({\r\n  slideStatus: false,\r\n})\r\nconst slideStatus = ref('');\r\nconst slideStatusDesc = ref('');\r\nwatch(() => props.slideData, (newSlideData) => {\r\n  if (!newSlideData.cbcPatientNm || newSlideData.cbcPatientNm === '' || newSlideData.cbcPatientNm !== newSlideData.patientNm) {\r\n    emits('updateSlideDataByCBCData', newSlideData);\r\n  }\r\n})\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n})\r\nonMounted(async () => {\r\n  const path = pbiaRootDir.value;\r\n  const folderPath = !projectBm.value ? '01_WBC_Classification' : '04_BM_Classification';\r\n  const url_new = `${path}/${slideData.value.slotId}/${folderPath}/Slide_Condition.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  slideStatus.value = response_new?.data?.condition;\r\n  slideStatusDesc.value = response_new?.data?.description;\r\n})\r\nconst tooltipVisibleFunc = (type: 'slideStatus', visible: boolean) => {\r\n  tooltipVisible[type] = visible;\r\n}\r\n\r\n</script>","import script from \"./detailHeader.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./detailHeader.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"wbcContent\"\n}\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport RbcClass from \"./rbcClass.vue\";\r\nimport RbcImageList from \"./rbcImageList/rbcImageList.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport { getTestTypeText } from \"@/common/lib/utils/conversionDataUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport DetailHeader from \"@/views/datebase/commponent/detail/detailHeader.vue\";\r\nimport {useGetRunningInfoByIdQuery} from \"@/gql/useQueries\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'listDetailRbc',\n  setup(__props) {\n\r\nconst selectItems = ref<any>({});\r\nconst store = useStore();\r\nconst rbcInfo = ref(null);\r\nconst classInfoArr = ref<any>([]);\r\nconst allCheckClear = ref<boolean>(false);\r\nconst isBefore = ref(false);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst isLoading = ref(false);\r\nconst allUnCheck = ref(false);\r\nconst notCanvasClickVal = ref(false);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nonMounted(async () => {\r\n  isLoading.value = false;\r\n  await getDetailRunningInfo();\r\n  await initData();\r\n});\r\n\r\nconst initData = async () => {\r\n  rbcInfo.value = selectItems.value;\r\n}\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    selectItems.value = slideData.value;\r\n  } catch (e) {\r\n    console.error(e);\r\n    selectItems.value = null;\r\n  }\r\n  isLoading.value = true;\r\n}\r\n\r\nconst isBeforeUpdate = (val: boolean) => {\r\n  isBefore.value = val;\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  rbcInfo.value = data;\r\n  selectItems.value = data;\r\n  allCheckClear.value = !allCheckClear.value;\r\n  await store.dispatch('commonModule/setCommonInfo', { rbcImagePageNumber: 0 });\r\n}\r\n\r\nconst classInfoArrUpdate = (data: any) => {\r\n  classInfoArr.value = data;\r\n}\r\n\r\nconst classInfoArrUpdateRe = async (data: any) => {\r\n  const { result, loading, error } = useGetRunningInfoByIdQuery(\r\n      { id: Number(selectedSampleId.value) },\r\n      { fetchPolicy: 'no-cache' }\r\n  );\r\n\r\n  watch(result, (newValue) => {\r\n    if (newValue) {\r\n      // newValue가 존재하면 해당 데이터를 처리\r\n      store.dispatch('slideDataModule/updateSlideData', newValue?.getRunningInfoByIdGQL);\r\n      console.log('listDetailRbc', newValue?.getRunningInfoByIdGQL)\r\n      const result = newValue?.getRunningInfoByIdGQL;\r\n\r\n      store.dispatch('commonModule/setCommonInfo', { testType: selectItems.value.testType });\r\n\r\n      selectItems.value = result;\r\n      rbcInfo.value = result;\r\n      let newData: any = [];\r\n      newData = data;\r\n      store.dispatch('commonModule/setCommonInfo', {classInfoArr: newData});\r\n    } else {\r\n      console.log('No result');\r\n    }\r\n  });\r\n\r\n\r\n\r\n}\r\n\r\nconst unChecked = () => {\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\nconst notCanvasClick = (val: any) => {\r\n  notCanvasClickVal.value = val;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    (isLoading.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createVNode(DetailHeader, {\n            testType: _unref(getTestTypeText)(selectItems.value?.testType),\n            barcodeNo: selectItems.value?.barcodeNo,\n            cbcPatientNo: selectItems.value?.cbcPatientNo,\n            patientName: selectItems.value?.patientName,\n            hospitalName: selectItems.value?.hosName,\n            cbcPatientName: selectItems.value?.cbcPatientNm,\n            cbcSex: selectItems.value?.cbcSex,\n            cbcAge: selectItems.value?.cbcAge,\n            analyzedDttm: selectItems.value?.analyzedDttm\n          }, null, 8, [\"testType\", \"barcodeNo\", \"cbcPatientNo\", \"patientName\", \"hospitalName\", \"cbcPatientName\", \"cbcSex\", \"cbcAge\", \"analyzedDttm\"]),\n          (cbcLayer.value)\n            ? (_openBlock(), _createBlock(LisCbc, {\n                key: 0,\n                selectItems: selectItems.value\n              }, null, 8, [\"selectItems\"]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass('databaseWbcRight shadowBox pos-relative' + (cbcLayer.value ? ' cbcLayer' : ''))\n          }, [\n            _createVNode(RbcClass, {\n              allUnCheck: allUnCheck.value,\n              onIsBeforeUpdate: isBeforeUpdate,\n              onClassInfoArrUpdate: classInfoArrUpdate,\n              onClassInfoArrUpdateRe: classInfoArrUpdateRe,\n              type: \"listTable\",\n              allCheckClear: allCheckClear.value,\n              rbcInfo: rbcInfo.value,\n              notCanvasClickVal: notCanvasClickVal.value\n            }, null, 8, [\"allUnCheck\", \"allCheckClear\", \"rbcInfo\", \"notCanvasClickVal\"])\n          ], 2),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass('databaseWbcLeft' + (cbcLayer.value ? ' cbcLayer' : ''))\n          }, [\n            _createVNode(RbcImageList, {\n              onNotCanvasClick: notCanvasClick,\n              onUnChecked: unChecked,\n              isBefore: isBefore.value,\n              classInfoArr: classInfoArr.value,\n              selectItems: selectItems.value,\n              type: \"listTable\",\n              rbcInfo: rbcInfo.value\n            }, null, 8, [\"isBefore\", \"classInfoArr\", \"selectItems\", \"rbcInfo\"])\n          ], 2)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n\r\n  <div class=\"wbcContent\" v-if=\"isLoading\">\r\n    <DetailHeader\r\n        :testType=\"getTestTypeText(selectItems?.testType)\"\r\n        :barcodeNo=\"selectItems?.barcodeNo\"\r\n        :cbcPatientNo=\"selectItems?.cbcPatientNo\"\r\n        :patientName=\"selectItems?.patientName\"\r\n        :hospitalName=\"selectItems?.hosName\"\r\n        :cbcPatientName=\"selectItems?.cbcPatientNm\"\r\n        :cbcSex=\"selectItems?.cbcSex\"\r\n        :cbcAge=\"selectItems?.cbcAge\"\r\n        :analyzedDttm=\"selectItems?.analyzedDttm\"\r\n    />\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div :class=\"'databaseWbcRight shadowBox pos-relative' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <RbcClass :allUnCheck=\"allUnCheck\" @isBeforeUpdate=\"isBeforeUpdate\" @classInfoArrUpdate=\"classInfoArrUpdate\"\r\n                @classInfoArrUpdateRe=\"classInfoArrUpdateRe\" type='listTable'\r\n                :allCheckClear=\"allCheckClear\" :rbcInfo=\"rbcInfo\"\r\n                :notCanvasClickVal=\"notCanvasClickVal\"\r\n      />\r\n    </div>\r\n\r\n    <div :class=\"'databaseWbcLeft' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <RbcImageList @notCanvasClick=\"notCanvasClick\" @unChecked=\"unChecked\" :isBefore=\"isBefore\" :classInfoArr=\"classInfoArr\" :selectItems=\"selectItems\" type='listTable' :rbcInfo=\"rbcInfo\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport RbcClass from \"./rbcClass.vue\";\r\nimport RbcImageList from \"./rbcImageList/rbcImageList.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport { getTestTypeText } from \"@/common/lib/utils/conversionDataUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport DetailHeader from \"@/views/datebase/commponent/detail/detailHeader.vue\";\r\nimport {useGetRunningInfoByIdQuery} from \"@/gql/useQueries\";\r\n\r\nconst selectItems = ref<any>({});\r\nconst store = useStore();\r\nconst rbcInfo = ref(null);\r\nconst classInfoArr = ref<any>([]);\r\nconst allCheckClear = ref<boolean>(false);\r\nconst isBefore = ref(false);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst isLoading = ref(false);\r\nconst allUnCheck = ref(false);\r\nconst notCanvasClickVal = ref(false);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nonMounted(async () => {\r\n  isLoading.value = false;\r\n  await getDetailRunningInfo();\r\n  await initData();\r\n});\r\n\r\nconst initData = async () => {\r\n  rbcInfo.value = selectItems.value;\r\n}\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    selectItems.value = slideData.value;\r\n  } catch (e) {\r\n    console.error(e);\r\n    selectItems.value = null;\r\n  }\r\n  isLoading.value = true;\r\n}\r\n\r\nconst isBeforeUpdate = (val: boolean) => {\r\n  isBefore.value = val;\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  rbcInfo.value = data;\r\n  selectItems.value = data;\r\n  allCheckClear.value = !allCheckClear.value;\r\n  await store.dispatch('commonModule/setCommonInfo', { rbcImagePageNumber: 0 });\r\n}\r\n\r\nconst classInfoArrUpdate = (data: any) => {\r\n  classInfoArr.value = data;\r\n}\r\n\r\nconst classInfoArrUpdateRe = async (data: any) => {\r\n  const { result, loading, error } = useGetRunningInfoByIdQuery(\r\n      { id: Number(selectedSampleId.value) },\r\n      { fetchPolicy: 'no-cache' }\r\n  );\r\n\r\n  watch(result, (newValue) => {\r\n    if (newValue) {\r\n      // newValue가 존재하면 해당 데이터를 처리\r\n      store.dispatch('slideDataModule/updateSlideData', newValue?.getRunningInfoByIdGQL);\r\n      console.log('listDetailRbc', newValue?.getRunningInfoByIdGQL)\r\n      const result = newValue?.getRunningInfoByIdGQL;\r\n\r\n      store.dispatch('commonModule/setCommonInfo', { testType: selectItems.value.testType });\r\n\r\n      selectItems.value = result;\r\n      rbcInfo.value = result;\r\n      let newData: any = [];\r\n      newData = data;\r\n      store.dispatch('commonModule/setCommonInfo', {classInfoArr: newData});\r\n    } else {\r\n      console.log('No result');\r\n    }\r\n  });\r\n\r\n\r\n\r\n}\r\n\r\nconst unChecked = () => {\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\nconst notCanvasClick = (val: any) => {\r\n  notCanvasClickVal.value = val;\r\n}\r\n\r\n</script>\r\n","import script from \"./listDetailRbc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listDetailRbc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\nexport const BUSINESS_ID = 'li'\r\n// 병원 코드\r\nexport const INST_CD = '012'\r\n// 장비 코드 (LIS등록)\r\nexport const EQMT_CD = 'H59'\r\n\r\nexport const CbcWbcTestCdList_0002 = [{\r\n    id: '01', title: 'NS', name: 'Neutrophil-Segmented', cd: 'LHR10501'\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', cd: 'LHR10507'\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', cd: 'LHR10508'\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', cd: 'LHR10509'\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', cd: 'LHR10503'\r\n}, {\r\n    id: '61', title: 'LR', name: 'Reactive lymphocyte', cd: 'LHR10544'\r\n}, {\r\n    id: '62', title: 'LA', name: 'Abnormal lymphocyte', cd: 'LHR10543'\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', cd: 'LHR10504'\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', cd: 'LHR10505'\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', cd: 'LHR10506'\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', cd: 'LHR10510'\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', cd: 'LHR10517'\r\n}]\r\n\r\n\r\n\r\n\r\n","export const removeDuplicatesById = (items: any) => {\r\n    const seenIds = new Set();\r\n    return items.filter((item: any) => {\r\n        if (!seenIds.has(item.id)) {\r\n            seenIds.add(String(item.id));\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nimport { ref, onMounted, watch } from 'vue';\r\n\r\n// Props 정의: 메시지, 위치, 표시 시간\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ToastNotification',\n  props: {\r\n  message: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  duration: {\r\n    type: Number,\r\n    default: 3000, // 표시될 시간 (기본 3초)\r\n  },\r\n  position: {\r\n    type: String,\r\n    default: 'bottom-right', // 기본 위치: 우측 하단\r\n  },\r\n  messageType: {\r\n    type: String,\r\n  }\r\n},\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\nconst visible = ref(true);\r\n\r\nonMounted(() => {\r\n  // duration 이후에 visible 값을 false로 변경하여 컴포넌트 숨김\r\n  setTimeout(() => {\r\n    visible.value = false;\r\n  }, props.duration);\r\n});\r\n\r\nwatch(props, (newProps) => {\r\n  // props 값이 변경되면 다시 표시 후 사라짐\r\n  visible.value = true;\r\n  setTimeout(() => {\r\n    visible.value = false;\r\n  }, newProps.duration);\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (visible.value)\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass([\"toast-notification\", [__props.position, __props.messageType]])\n      }, [\n        _createElementVNode(\"p\", null, _toDisplayString(__props.message), 1)\n      ], 2))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})","<template>\r\n  <div v-if=\"visible\" class=\"toast-notification\" :class=\"[position, messageType]\">\r\n    <p>{{ message }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, watch, defineProps } from 'vue';\r\n\r\n// Props 정의: 메시지, 위치, 표시 시간\r\nconst props = defineProps({\r\n  message: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  duration: {\r\n    type: Number,\r\n    default: 3000, // 표시될 시간 (기본 3초)\r\n  },\r\n  position: {\r\n    type: String,\r\n    default: 'bottom-right', // 기본 위치: 우측 하단\r\n  },\r\n  messageType: {\r\n    type: String,\r\n  }\r\n});\r\n\r\nconst visible = ref(true);\r\n\r\nonMounted(() => {\r\n  // duration 이후에 visible 값을 false로 변경하여 컴포넌트 숨김\r\n  setTimeout(() => {\r\n    visible.value = false;\r\n  }, props.duration);\r\n});\r\n\r\nwatch(props, (newProps) => {\r\n  // props 값이 변경되면 다시 표시 후 사라짐\r\n  visible.value = true;\r\n  setTimeout(() => {\r\n    visible.value = false;\r\n  }, newProps.duration);\r\n});\r\n</script>\r\n","import script from \"./ToastNotification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ToastNotification.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers, vShow as _vShow, createStaticVNode as _createStaticVNode } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = {\n  key: 1,\n  class: \"mt10\",\n  style: {\"height\":\"209.5px\"}\n}\nconst _hoisted_3 = {\n  key: 2,\n  class: \"mt10\",\n  style: {\"height\":\"209.5px\"}\n}\nconst _hoisted_4 = { class: \"mt10 mb10 flex-justify-between\" }\nconst _hoisted_5 = { class: \"wbcClassInfoLeft\" }\nconst _hoisted_6 = { class: \"leftWbcInfo\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"memoModal\"\n}\nconst _hoisted_8 = { class: \"wbcClassScroll\" }\nconst _hoisted_9 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_10 = [\"onClick\"]\nconst _hoisted_11 = { style: {\"display\":\"flex\",\"justify-content\":\"space-evenly\"} }\nconst _hoisted_12 = { class: \"grayText w20 text-left\" }\nconst _hoisted_13 = { class: \"grayText w50 text-left\" }\nconst _hoisted_14 = { style: {\"display\":\"flex\",\"justify-content\":\"space-evenly\"} }\nconst _hoisted_15 = { class: \"wbcClassDbDiv classTotalColor\" }\nconst _hoisted_16 = { class: \"nth1Child\" }\nconst _hoisted_17 = { class: \"classInfoWbc\" }\nconst _hoisted_18 = { class: \"w20 text-left\" }\nconst _hoisted_19 = { class: \"classInfoWbc\" }\nconst _hoisted_20 = { class: \"w20 text-left\" }\nconst _hoisted_21 = { key: 0 }\nconst _hoisted_22 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_23 = [\"onClick\"]\nconst _hoisted_24 = { class: \"grayText\" }\nconst _hoisted_25 = { key: 1 }\nconst _hoisted_26 = [\"onClick\"]\nconst _hoisted_27 = {\n  class: \"categoryNm\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_28 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_29 = {\n  class: \"w-fit\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_30 = { style: {\"width\":\"29%\"} }\nconst _hoisted_31 = {\n  key: 0,\n  class: \"mb10 liTitle\"\n}\nconst _hoisted_32 = {\n  class: \"grayText\",\n  style: {\"cursor\":\"default\",\"padding-left\":\"-20px\"}\n}\nconst _hoisted_33 = {\n  class: \"degree\",\n  style: {\"width\":\"27%\"}\n}\nconst _hoisted_34 = {\n  key: 0,\n  class: \"mb10 liTitle\"\n}\nconst _hoisted_35 = {\n  key: 2,\n  class: \"memoModal bottom text-left staticMemoModal\"\n}\n\nimport {\r\n  computed,\r\n  nextTick,\r\n  onBeforeMount,\r\n  onMounted,\r\n  onUnmounted,\r\n  ref,\r\n  watch\r\n} from 'vue';\r\nimport {getBarcodeDetailImageUrl} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {crcOptionGet, getWbcCustomClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport { DIR_NAME } from \"@/common/defines/constants/settings\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {useStore} from \"vuex\";\r\nimport {MESSAGES, MSG } from \"@/common/defines/constants/constantMessageText\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {\r\n  getOrderClassApi,\r\n  putOrderClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\n\r\nimport moment from 'moment';\r\nimport {BUSINESS_ID, CbcWbcTestCdList_0002, EQMT_CD, INST_CD} from \"@/common/defines/constants/lis\";\r\nimport axios from \"axios\";\r\nimport {xml2json} from \"xml-js\";\r\nimport {createCbcFile, createDirectory, createFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {\r\n  createH17,\r\n  readH7Message,\r\n  readNoFlagHl7Message\r\n} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\nimport {removeDuplicatesById} from \"@/common/lib/utils/removeDuplicateIds\";\r\nimport {\r\n  incheonGilPercentChange,\r\n  incheonStMaryPercentChange,\r\n  inhaPercentChange,\r\n  seoulStMaryPercentChange\r\n} from \"@/common/helpers/common/classPercent\";\r\nimport {\r\n  getCbcCodeList,\r\n  getCbcPathData, getLisPathData,\r\n  getLisWbcRbcData,\r\n  inhaCbc,\r\n  inhaDataSend,\r\n} from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {isObjectEmpty} from \"@/common/lib/utils/validators\";\r\nimport Tooltip from \"@/components/commonUi/Tooltip.vue\";\r\nimport { TooltipClassInfoType } from \"@/common/type/tooltipType\";\r\nimport {\r\n  cbcUpdateMutation,\r\n  gqlGenericUpdate,\r\n  memoUpdateMutation, useUpdateRunningInfoMutation\r\n} from '@/gql/mutation/slideData';\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'classInfo',\n  props: ['wbcInfo', 'selectItems', 'type', 'isCommitChanged', 'classCompareShow', 'isAllClassesChecked'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst emits = __emit;\r\nconst router = useRouter();\r\nconst showLISUploadButton = ref(true);\r\nconst selectItems = ref(props.selectItems);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nconst barcodeImg = ref('');\r\nconst userId = ref('');\r\nconst wbcMemo = ref('');\r\nconst memoModal = ref(false);\r\nconst wbcInfoVal = ref<any>([]);\r\nconst wbcInfoAfterVal = ref<any>([]);\r\nconst wbcInfoBeforeVal = ref<any>([]);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\n\r\nconst toggleLock = ref(false);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst orderClass = ref<any>([]);\r\nconst projectBm = ref(false);\r\nconst totalBeforeCount = ref(0);\r\nconst totalAfterCount = ref(0);\r\nconst okMessageType = ref('');\r\nconst lisCodeWbcArr = ref<any>([]);\r\nconst lisFilePathSetArr = ref<any>([]);\r\nconst customClassArr = ref<any>([]);\r\nconst barCodeImageShowError = ref(false);\r\nconst submittedScreen = ref(false);\r\nconst lisBtnColor = ref(false);\r\nconst cbcFilePathSetArr = ref('');\r\nconst cbcCodeList = ref<any>([]);\r\nconst lisCodeWbcArrApp = ref<any>([]);\r\nconst lisCodeRbcArrApp = ref<any>([]);\r\nconst lisHotKey = ref('');\r\nconst crcConnect = ref(false);\r\nconst isHotKeyPressed = ref(false);\r\nconst tooltipVisible = ref<TooltipClassInfoType>({\r\n  barcodeCopy: false,\r\n  memo: false,\r\n  confirm: false,\r\n  classMoveLock: false,\r\n  beforeCountPercent: false,\r\n  afterCountPercent: false,\r\n  lisUpload: false,\r\n})\r\n\r\nonBeforeMount(async () => {\r\n  barCodeImageShowError.value = false;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  const crcOptionApi = await crcOptionGet();\r\n  if (crcOptionApi.data.length !== 0) {\r\n    crcConnect.value = crcOptionApi.data[0].crcConnect;\r\n  }\r\n\r\n})\r\n\r\nonMounted(async () => {\r\n  window.removeEventListener('keydown', handleKeyDown);\r\n  window.removeEventListener('keyup', handleKeyUp);\r\n  window.addEventListener('keydown', handleKeyDown);\r\n  window.addEventListener('keyup', handleKeyUp);\r\n  await nextTick();\r\n  await getOrderClass();\r\n  await getCustomClass();\r\n  await mountedMethod();\r\n\r\n  if (!projectBm.value) {\r\n    const {lisCodeWbcArr, lisCodeRbcArr} = await getLisWbcRbcData();\r\n    lisCodeWbcArrApp.value = lisCodeWbcArr;\r\n    lisCodeRbcArrApp.value = lisCodeRbcArr;\r\n    const {lisFilePathSetArr: lisFilePathSetArrVar, lisHotKey: lisHotKeyVal} = await getLisPathData();\r\n    lisFilePathSetArr.value = lisFilePathSetArrVar;\r\n    lisHotKey.value = lisHotKeyVal;\r\n    cbcFilePathSetArr.value = await getCbcPathData();\r\n    cbcCodeList.value = await getCbcCodeList();\r\n  }\r\n  barCodeImageShowError.value = false;\r\n\r\n  // if (!showLISUploadAfterCheckingAll.value) {\r\n  //   showLISUploadButton.value = true;\r\n  // } else {\r\n  //   showLISUploadButton.value = props.isAllClassesChecked;\r\n  // }\r\n})\r\n\r\nonUnmounted(() => {\r\n  window.removeEventListener('keydown', handleKeyDown);\r\n  window.removeEventListener('keyup', handleKeyUp);\r\n})\r\n\r\n// watch(() => props.isAllClassesChecked, () => {\r\n//\r\n//   if (!showLISUploadAfterCheckingAll.value) {\r\n//     showLISUploadButton.value = true;\r\n//   } else {\r\n//     showLISUploadButton.value = props.isAllClassesChecked;\r\n//   }\r\n// })\r\n\r\nwatch(() => props.isCommitChanged, () => {\r\n  selectItems.value.submitState = 'Submit';\r\n})\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => props.wbcInfo, (newItem) => {\r\n  window.removeEventListener('keydown', handleKeyDown);\r\n  window.removeEventListener('keyup', handleKeyUp);\r\n  window.addEventListener('keydown', handleKeyDown);\r\n  window.addEventListener('keyup', handleKeyUp);\r\n  if (Object.keys(newItem).length !== 0) {\r\n    beforeAfterChange(newItem)\r\n    wbcMemo.value = props.selectItems?.wbcMemo;\r\n    const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n    barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems?.slotId, DIR_NAME.BARCODE);\r\n    store.dispatch('commonModule/setCommonInfo', {testType: props.selectItems.testType});\r\n  }\r\n});\r\n\r\nconst handleKeyDown = (event: KeyboardEvent) => {\r\n  if (router.currentRoute.value.path === '/report') return;\r\n  const keyName = event.key;\r\n\r\n  if (!isHotKeyPressed.value && keyName.toUpperCase() === lisHotKey.value.toUpperCase()) {\r\n    event.preventDefault(); // 기본 동작 방지\r\n    isHotKeyPressed.value = true; // 한 번만 실행되도록 설정\r\n    uploadLis();\r\n  }\r\n};\r\n\r\nconst handleKeyUp = (event: KeyboardEvent) => {\r\n  if (router.currentRoute.value.path === '/report') return;\r\n  if (isHotKeyPressed.value) {\r\n    isHotKeyPressed.value = false; // 키를 떼면 다시 실행 가능\r\n  }\r\n};\r\n\r\nconst mountedMethod = async () => {\r\n  if (isObjectEmpty(props.selectItems)) return;\r\n\r\n  if ((inhaTestCode.value === '' && siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원'])) {\r\n    await inhaCbc(cbcFilePathSetArr.value, props.selectItems, cbcCodeList.value, 'lisUpload');\r\n  }\r\n  wbcMemo.value = props.selectItems?.wbcMemo;\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems?.slotId, DIR_NAME.BARCODE);\r\n  if (props.selectItems?.submitState) {\r\n    lisBtnColor.value = props.selectItems.submitState === 'lisCbc';\r\n  }\r\n\r\n}\r\n\r\nconst lisModalOpen = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = MESSAGES.IDS_MSG_UPLOAD_LIS;\r\n  okMessageType.value = 'lisCbc';\r\n}\r\n\r\nconst goClass = (id: any) => {\r\n  emits('scrollEvent', id)\r\n}\r\n\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  if (!toggleLock.value) return;\r\n\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n    updateOriginalDb();\r\n  }\r\n};\r\n\r\n\r\nconst toggleLockEvent = () => {\r\n  toggleLock.value = !toggleLock.value;\r\n}\r\n\r\nconst barcodeCopy = async () => {\r\n  const textarea = document.createElement('textarea');\r\n  textarea.value = props.selectItems.barcodeNo;\r\n  document.body.appendChild(textarea);\r\n  textarea.select();\r\n  document.execCommand('copy');\r\n  document.body.removeChild(textarea);\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  showToast(MESSAGES.TOAST_MSG_BAR_CODE_SUCCESS);\r\n}\r\n\r\nconst commitConfirmed = () => {\r\n  submittedScreen.value = true;\r\n  showConfirm.value = true;\r\n  confirmMessage.value = MESSAGES.IDS_MSG_CONFIRM_SLIDE;\r\n  okMessageType.value = 'commit';\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  if (okMessageType.value === 'commit') {\r\n    onCommit();\r\n  } else {\r\n    uploadLis();\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst uploadLis = async () => {\r\n  switch (siteCd.value) {\r\n    case HOSPITAL_SITE_CD_BY_NAME['서울성모병원']:\r\n      cmcSeoulLisAndCbcDataGet();\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['인하대병원']:\r\n      await inhaDataSendLoad();\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['인천길병원']:\r\n      await gilDataSendLoad();\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['고대안암병원']:\r\n      godaeAnamDataSendLoad();\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['NONE']:\r\n    case HOSPITAL_SITE_CD_BY_NAME['UIMD']:\r\n      await uimdTestCbcLisDataGet();\r\n      // lisLastStep();\r\n      break;\r\n  }\r\n}\r\n\r\nconst uimdTestCbcLisDataGet = async () => {\r\n  // 서울 성모 테스트 코드\r\n  const codeList = CbcWbcTestCdList_0002;\r\n  const {wbcInfoAfter} = props.selectItems ?? {};\r\n  let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n  // cbc 결과 조회\r\n  axios.get(`${apiBaseUrl}/cbc/liveTest`, {   // UIMD 백엔드 xml 테스트 코드 : http://192.168.0.131:3002/api/cbc/liveTest\r\n    params: {\r\n      baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live',\r\n      submit_id: 'TRLII00124',\r\n      business_id: 'li',\r\n      instcd: '012', // 병원 코드\r\n    },\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }).then(async function (resultCbc) {\r\n    // 결과 처리 코드\r\n    const xml = resultCbc.data.trim(); // 불필요한 공백 제거\r\n    const cbcJson = JSON.parse(xml2json(xml, {compact: true}));\r\n    const cbcWorkList = cbcJson.root.spcworklist.worklist;\r\n    const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n\r\n    // LHR100는 WBC를 뜻함 -> 평화이즈 데이터를 WBC로 변경하는 과정\r\n    const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n      return item.testcd._cdata === 'LHR100'\r\n    })\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      wbcItem.testcd = ''\r\n      // testcd 없음 필드 자체에 추가 하는 로직\r\n      codeList.forEach(function (code) {\r\n        if (String(wbcItem.id) === String(code.id)) {\r\n          wbcItem.testcd = code.cd\r\n        }\r\n      })\r\n    })\r\n    // five diff push\r\n    let wbcTemp: any = [];\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n        if (wbcItem.testcd === fiveDiffItem) {\r\n          wbcTemp.push({\r\n            testcd: wbcItem.testcd,\r\n            percent: wbcItem.percent,\r\n            name: wbcItem.name,\r\n          })\r\n        } else {\r\n          if ((Number(wbcItem.count) > 0) && wbcItem.testcd !== '') {\r\n            wbcTemp.push({\r\n              testcd: wbcItem.testcd,\r\n              percent: wbcItem.percent,\r\n              name: wbcItem.name,\r\n            })\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    // 중복제거\r\n    const uniqueItems = new Set(wbcTemp.map((item: any) => item.testcd));\r\n    wbcTemp = Array.from(uniqueItems).map(testcd => wbcTemp.find((item: any) => item.testcd === testcd));\r\n\r\n    const totalPercentRounded = wbcTemp\r\n        .filter((item: any) => item.name !== \"Neutrophil\")\r\n        .map((item: any) => Math.round(parseFloat(item.percent)))\r\n        .reduce((sum: any, percent: any) => sum + percent, 0);\r\n    const updatedWbcTemp = wbcTemp.map((item: any) =>\r\n        item.name === \"Neutrophil\"\r\n            ? {...item, percent: 100 - totalPercentRounded}\r\n            : {...item, percent: Math.round(parseFloat(item.percent))}\r\n    );\r\n    wbcTemp = updatedWbcTemp;\r\n\r\n    // neutrophil-seg\r\n    const nsPercentItem = wbcTemp.filter((item: any) => item.testcd === 'LHR10501');\r\n\r\n    // ANC insert LHR10599=> ANC 계산\r\n    if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n      const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2);\r\n      wbcTemp.push({\r\n        testcd: 'LHR10599',\r\n        percent: ancResult,\r\n        name: 'ANC 계산'\r\n      })\r\n    }\r\n\r\n    const localTime = moment().local();\r\n    const updatedItem = {\r\n      submitState: 'lisCbc',\r\n      submitOfDate: localTime.format(),\r\n      submitUserId: userModuleDataGet.value.userId,\r\n    };\r\n    lisBtnColor.value = true;\r\n    const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n    await gqlGenericUpdate(cbcUpdateMutation,{\r\n      id: updatedRuningInfo.id,\r\n      submitState: updatedRuningInfo.submitState,\r\n      submitOfDate: updatedRuningInfo.submitOfDate,\r\n      submitUserId: updatedRuningInfo.submitUserId,\r\n    });\r\n    await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n\r\n  }).catch(function (err) {\r\n    console.error('error.config', err.config)\r\n    showErrorAlert(err.message);\r\n  });\r\n}\r\n\r\nconst cmcSeoulLisAndCbcDataGet = () => {\r\n  const codeList = CbcWbcTestCdList_0002;\r\n  const {barcodeNo, wbcInfoAfter} = props.selectItems ?? {};\r\n  let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n  // cbc 결과 조회\r\n  axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n    params: {\r\n      submit_id: 'TRLII00124',\r\n      business_id: 'li',\r\n      instcd: '012', // 병원 코드\r\n      bcno: barcodeNo,\r\n      baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\n    },\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }).then(async function (resultCbc) {\r\n    // 결과 처리 코드\r\n    const xml = resultCbc.data.data.trim(); // 불필요한 공백 제거\r\n    const cbcJson = JSON.parse(xml2json(xml, {compact: true}));\r\n    const cbcWorkList = cbcJson.root.spcworklist.worklist;\r\n    const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n    // LHR100는 WBC를 뜻함 -> 평화이즈 데이터를 WBC로 변경하는 과정\r\n    const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n      return item.testcd._cdata === 'LHR100'\r\n    })\r\n\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      wbcItem.testcd = ''\r\n      // testcd 없음 필드 자체에 추가 하는 로직\r\n      codeList.forEach(function (code) {\r\n        if (String(wbcItem.id) === String(code.id)) {\r\n          wbcItem.testcd = code.cd\r\n        }\r\n      })\r\n    })\r\n\r\n    // five diff push\r\n    let wbcTemp: any = [];\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n        if (wbcItem.testcd === fiveDiffItem) {\r\n          wbcTemp.push({\r\n            testcd: wbcItem.testcd,\r\n            percent: wbcItem.percent,\r\n          })\r\n        } else {\r\n          if ((Number(wbcItem.count) > 0) && wbcItem.testcd !== '') {\r\n            wbcTemp.push({\r\n              testcd: wbcItem.testcd,\r\n              percent: wbcItem.percent,\r\n            })\r\n          }\r\n        }\r\n      })\r\n    })\r\n    // 중복제거\r\n    const uniqueItems = new Set(wbcTemp.map((item: any) => item.testcd));\r\n    wbcTemp = Array.from(uniqueItems).map(testcd => wbcTemp.find((item: any) => item.testcd === testcd));\r\n    // 뉴트로필 외 반올림 뉴트로필 100기준 정수로 재 계산\r\n    const totalPercentRounded = wbcTemp\r\n        .filter((item: any) => item.name !== \"Neutrophil\")\r\n        .map((item: any) => Math.round(parseFloat(item.percent)))\r\n        .reduce((sum: any, percent: any) => sum + percent, 0);\r\n    const updatedWbcTemp = wbcTemp.map((item: any) =>\r\n        item.name === \"Neutrophil\"\r\n            ? {...item, percent: 100 - totalPercentRounded}\r\n            : {...item, percent: Math.round(parseFloat(item.percent))}\r\n    );\r\n    wbcTemp = updatedWbcTemp;\r\n\r\n    // neutrophil-seg ANC 계산을 위해서 전체 다 뉴트로필로 변경 전체 개수를 측정 하기 위해서\r\n    const nsPercentItem = wbcTemp.filter((item: any) => item.testcd === 'LHR10501');\r\n\r\n    // ANC insert LHR10599=> ANC 계산\r\n    if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n      const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2);\r\n      wbcTemp.push({\r\n        testcd: 'LHR10599',\r\n        percent: ancResult,\r\n        name: 'ANC 계산'\r\n      })\r\n    }\r\n    const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\CBCLookUP\\\\${barcodeNo}.txt`;\r\n    const paramsLisCopyLogData = {\r\n      filePath,\r\n      data: {\r\n        cbcJson,\r\n        cbcWorkList\r\n      },\r\n    };\r\n    await createCbcFile(paramsLisCopyLogData);\r\n    // 유저 체크\r\n    checkUserAuth(userModuleDataGet.value.employeeNo).then(function (isUserAuth) {\r\n      if (isUserAuth === 'succ') {\r\n        const params = {\r\n          empNo: userModuleDataGet.value.employeeNo,\r\n          barcodeNo: barcodeNo,\r\n          wbcInfo: wbcTemp\r\n        }\r\n        const now = new Date();\r\n        const year = `${now.getFullYear()}`;\r\n        let month = `${now.getMonth() + 1}`;\r\n        if (month.length === 1) {\r\n          month = `0${month}`;\r\n        }\r\n        let day = `${now.getDate()}`;\r\n        if (day.length === 1) {\r\n          day = `0${day}`;\r\n        }\r\n\r\n        const separator1 = String.fromCharCode(23); // '\\u0017'\r\n        const separator2 = String.fromCharCode(23, 23); // '\\u0017\\u0017'\r\n        const terminator = String.fromCharCode(3); // '\\u0003'\r\n        const paramsResult = params.wbcInfo\r\n            .filter((wbcItem: any) => wbcItem.testcd !== null && wbcItem.testcd !== '')\r\n            .map((wbcItem: any) => `${wbcItem.testcd}${separator1}${wbcItem.percent}${separator2}${year}${month}${day}${terminator}`)\r\n            .join('');\r\n\r\n        // LIS 최종 업로드 Report\r\n        const newparams = {\r\n          submit_id: 'TXLII00101',\r\n          business_id: BUSINESS_ID,\r\n          ex_interface: `${params.empNo}|${INST_CD}`,\r\n          instcd: INST_CD,\r\n          userid: params.empNo,\r\n          eqmtcd: EQMT_CD,\r\n          bcno: params.barcodeNo,\r\n          result: paramsResult,\r\n          testcont: 'MANUAL DIFFERENTIAL COUNT RESULT',\r\n          testcontcd: '01',\r\n          execdeptcd: 'H1',\r\n          baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\n        }\r\n        axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n          params: newparams,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        }).then(async function (result) {\r\n          const xml = result.data.data;\r\n          const json = JSON.parse(xml2json(xml, {compact: true}));\r\n          const resultFlag = json.root.ResultFlag.resultflag._text;\r\n          const paramsDataCbcLisLog = {\r\n            empNo: userModuleDataGet.value.employeeNo,\r\n            barcodeNo,\r\n            wbcTemp,\r\n            frontendSendData: newparams,\r\n            processSendData: paramsResult,\r\n            uimdDefaultData: wbcInfoAfter,\r\n            nsPercentItem,\r\n            cbcJson,\r\n            cbcWorkList,\r\n          };\r\n          const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\LISFinalReport\\\\${barcodeNo}.txt`;\r\n          const paramsLisCopyLogData = {\r\n            filePath,\r\n            data: {\r\n              frontendData: paramsDataCbcLisLog,\r\n              lisLastReportVal: result,\r\n            },\r\n          };\r\n          await createCbcFile(paramsLisCopyLogData);\r\n          if (resultFlag === 'Y') {\r\n            const localTime = moment().local();\r\n            // lisCbc 등록 후 list 테이블에서 로우 색상 변경 코드\r\n            const updatedItem = {\r\n              submitState: 'lisCbc',\r\n              submitOfDate: localTime.format(),\r\n              submitUserId: userModuleDataGet.value.userId,\r\n            };\r\n            lisBtnColor.value = true;\r\n            const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n            await gqlGenericUpdate(cbcUpdateMutation,{\r\n              id: updatedRuningInfo.id,\r\n              submitState: updatedRuningInfo.submitState,\r\n              submitOfDate: updatedRuningInfo.submitOfDate,\r\n              submitUserId: updatedRuningInfo.submitUserId,\r\n            });\r\n            await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n\r\n          } else {\r\n            const index = json.root.ResultFlag.error2._text.indexOf('!');  // '!'의 위치를 찾음\r\n            const result = index !== -1 ? json.root.ResultFlag.error2._text.substring(0, index + 1) : json.root.ResultFlag.error2._text;\r\n            const errText = json.root.ResultFlag.error2._text === '1' ? 'LIS 전송이 실패 했습니다.' : result;\r\n            showErrorAlert(errText);\r\n          }\r\n        }).catch(function (err) {\r\n          showErrorAlert(err.message);\r\n        })\r\n      } else {\r\n        showErrorAlert(MESSAGES.IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID);\r\n      }\r\n    })\r\n  }).catch(function (err) {\r\n    console.error('error.config', err.config)\r\n    showErrorAlert(err.message);\r\n  });\r\n}\r\n\r\nconst lisLastStep = () => {\r\n  otherDataSend();\r\n}\r\n\r\nconst godaeAnamDataSendLoad = () => {\r\n  const goDaeData = goDae();\r\n  lisFileUrlCreate(goDaeData);\r\n}\r\n\r\nconst gilDataSendLoad = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(`path=${url}`);\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems?.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: incheonGilPercentChange(props.selectItems?.wbcInfoAfter, props.selectItems?.wbcInfo.totalCount),\r\n      result: lisCodeWbcArrApp.value,\r\n    };\r\n    const res = await readNoFlagHl7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: `${lisFilePathSetArr.value}\\\\${props.selectItems.barcodeNo}.hl7`,\r\n          msg: res,\r\n        }\r\n        try {\r\n          await createH17(data);\r\n          toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n          showToast(MESSAGES.IDS_MSG_SUCCESS);\r\n          const localTime = moment().local();\r\n          const updatedItem = {\r\n            submitState: 'lisCbc',\r\n            submitOfDate: localTime.format(),\r\n            submitUserId: userModuleDataGet.value.userId,\r\n          };\r\n          lisBtnColor.value = true;\r\n\r\n          const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n          await gqlGenericUpdate(cbcUpdateMutation,{\r\n            id: updatedRuningInfo.id,\r\n            submitState: updatedRuningInfo.submitState,\r\n            submitOfDate: updatedRuningInfo.submitOfDate,\r\n            submitUserId: updatedRuningInfo.submitUserId,\r\n          });\r\n          await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n          emits('uploadLisChangeSlide', HOSPITAL_SITE_CD_BY_NAME['인천길병원']);\r\n\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data.message);\r\n        }\r\n      } else { // url\r\n        await sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst inhaDataSendLoad = async () => {\r\n  await inhaCbc(cbcFilePathSetArr.value, props.selectItems, cbcCodeList.value, 'lisUpload');\r\n  const {\r\n    errMessage,\r\n    lisBtnColor: lisBtnColorVal\r\n  } = await inhaDataSend(props.selectItems?.wbcInfoAfter, props.selectItems?.rbcInfoAfter, props.selectItems?.barcodeNo, lisFilePathSetArr.value, inhaTestCode.value, lisCodeWbcArrApp.value, lisCodeRbcArrApp.value, props.selectItems, userModuleDataGet.value.id)\r\n  if (errMessage !== '') {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast(errMessage);\r\n  }\r\n  lisBtnColor.value = lisBtnColorVal || false;\r\n}\r\n\r\nconst otherDataSend = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(`path=${url}`);\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems?.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: props.selectItems?.wbcInfoAfter,\r\n      result: lisCodeWbcArrApp.value,\r\n    };\r\n    const res = await readH7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: `${lisFilePathSetArr.value}\\\\${props.selectItems.barcodeNo}.hl7`,\r\n          msg: res,\r\n        }\r\n        try {\r\n          await createH17(data);\r\n          toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n          showToast(MESSAGES.IDS_MSG_SUCCESS);\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data.message);\r\n        }\r\n      } else { // url\r\n        await sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst goDae = (): string => {\r\n  let data = `H|\\\\^&||||||||||P||${props.selectItems?.barcodeNo}\\n`;\r\n  let seq = 0;\r\n  let kumcMergePercent = 0;\r\n  let kumcBandPercent = 0;\r\n  // 누적 백분율 계산\r\n  props.selectItems?.wbcInfoAfter.forEach((wbcItem: any) => {\r\n    if (['02', '03', '04', '10'].includes(wbcItem.id)) {\r\n      kumcMergePercent += Number(wbcItem.percent);\r\n    }\r\n    if (wbcItem.id === '72') {\r\n      kumcBandPercent = Number(wbcItem.percent);\r\n    }\r\n  });\r\n\r\n  // 백분율 조정\r\n  if (kumcMergePercent > 0 && kumcBandPercent < 6) {\r\n    const updateItem = (id: string, newPercent: string) => {\r\n      const item = props.selectItems?.wbcInfoAfter.find((item: any) => item.id === id);\r\n      if (item) {\r\n        item.percent = newPercent;\r\n      }\r\n    };\r\n\r\n    updateItem('71', (Number(props.selectItems?.wbcInfoAfter.find((item: any) => item.id === '71')?.percent) + kumcBandPercent).toString());\r\n    updateItem('72', '0');\r\n  }\r\n\r\n  // 데이터 생성\r\n  const appendData = (lisCode: any, wbcItem: any) => {\r\n    if (lisCode.LIS_CD !== '') {\r\n      if (['01', '71', '05', '07', '08', '09'].includes(wbcItem.id) || Number(wbcItem.percent) > 0) {\r\n        data += `R|${++seq}|^^^^${lisCode.LIS_CD}|${wbcItem.count}|||||||^${userModuleDataGet.value.name}\\n`;\r\n        data += `R|${++seq}|^^^^${lisCode.LIS_CD}%|${wbcItem.percent}|%||||||^${userModuleDataGet.value.name}\\n`;\r\n      }\r\n    }\r\n  };\r\n\r\n  lisCodeWbcArr.value.forEach((lisCode: any) => {\r\n    props.selectItems?.wbcInfoAfter.forEach((wbcItem: any) => {\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        appendData(lisCode, wbcItem);\r\n      }\r\n    });\r\n  });\r\n\r\n  return data += 'L|1|N';\r\n};\r\n\r\n\r\nconst lisFileUrlCreate = async (data: any) => {\r\n  // 파일 경로와 파라미터 설정\r\n  const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\LIS_IA\\\\${props.selectItems?.barcodeNo}.txt`;\r\n  const parmsLisCopy = {filePath, data};\r\n\r\n  // CBC 파일 생성\r\n  await createCbcFile(parmsLisCopy);\r\n\r\n  // URL이 아닌 경우, 로컬 파일 작업 수행\r\n  if (!lisFilePathSetArr.value.includes(\"http\")) {\r\n    const url = lisFilePathSetArr.value;\r\n\r\n    const fileCreateRes = await createDirectory(`path=${url}`);\r\n    if (fileCreateRes) {\r\n      const fileParams = {\r\n        path: url,\r\n        filename: `${props.selectItems?.barcodeNo}.lst2msg`,\r\n        content: data,\r\n      };\r\n\r\n      // 파일 생성\r\n      const fileRes = await createFile(fileParams);\r\n      if (fileRes) {\r\n        // 실행 정보 업데이트\r\n        const localTime = moment().local();\r\n        const updatedItem = {\r\n          submitState: 'lisCbc',\r\n          submitOfDate: localTime.format(),\r\n          submitUserId: userModuleDataGet.value.userId,\r\n        };\r\n        const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n        await gqlGenericUpdate(cbcUpdateMutation,{\r\n          id: updatedRuningInfo.id,\r\n          submitState: updatedRuningInfo.submitState,\r\n          submitOfDate: updatedRuningInfo.submitOfDate,\r\n          submitUserId: updatedRuningInfo.submitUserId,\r\n        });\r\n\r\n        await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n        toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n        showToast(MESSAGES.IDS_MSG_SUCCESS);\r\n\r\n        // 알림이 없을 경우 다음 페이지로 이동\r\n        if (!showAlert.value) {\r\n          emits('nextPage');\r\n        }\r\n      } else {\r\n        // 파일 생성 오류 시 알림 표시\r\n        showErrorAlert('lisCbc file err');\r\n      }\r\n    }\r\n  } else {\r\n    // URL로 설정된 경우 메시지 전송\r\n    await sendLisMessage(data);\r\n  }\r\n};\r\n\r\nconst sendLisMessage = async (data: any) => {\r\n  const body = {\r\n    barcodeNo: props.selectItems?.barcodeNo,\r\n    userId: userModuleDataGet.value.name,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: data,\r\n    baseUrl: lisFilePathSetArr.value,\r\n  };\r\n  try {\r\n    let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    const result = await axios.post(`${apiBaseUrl}/cbc/executePostCurl`, body);\r\n    if (result.data.errorCode === 'E000') {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n      showToast(MESSAGES.IDS_MSG_SUCCESS);\r\n\r\n    } else {\r\n      showErrorAlert(result.data.errorMessage);\r\n    }\r\n  } catch (err: any) {\r\n    showErrorAlert(err.message);\r\n  }\r\n};\r\n\r\n\r\nconst checkUserAuth = async (empNo: any) => {\r\n  return new Promise((succ, fail) => {\r\n    if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원']) {\r\n      let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n      axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n        params: {\r\n          submit_id: 'TRLII00104',\r\n          business_id: 'li',\r\n          instcd: '012', // 병원 코드\r\n          userid: empNo,\r\n          baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\n        },\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      }).then(function (result) {\r\n        const xml = result.data.data;\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        const userNm = json.root.getUsernm.usernm._text;\r\n        if (userNm === null || userNm === '') {\r\n          succ('fail')\r\n        } else {\r\n          succ('succ')\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        console.error('checkUserAuth :' + err.message)\r\n        fail(new Error(err.message))\r\n      })\r\n\r\n    }\r\n  })\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n  const localTime = moment().local();\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.userId,\r\n  };\r\n\r\n  const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n  await gqlGenericUpdate(cbcUpdateMutation,{\r\n    id: updatedRuningInfo.id,\r\n    submitState: updatedRuningInfo.submitState,\r\n    submitOfDate: updatedRuningInfo.submitOfDate,\r\n    submitUserId: updatedRuningInfo.submitUserId,\r\n  });\r\n\r\n  await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n  selectItems.value.submitState = 'Submit';\r\n  emits('submitStateChanged', 'Submit');\r\n}\r\n\r\n\r\nconst memoChange = async () => {\r\n  const enterAppliedWbcMemo = wbcMemo.value.replaceAll('\\r\\n', '<br>');\r\n  const updatedItem = {\r\n    wbcMemo: enterAppliedWbcMemo\r\n  }\r\n  const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n  const res = await gqlGenericUpdate(memoUpdateMutation, {\r\n    id: updatedRuningInfo.id,\r\n    wbcMemo: updatedRuningInfo.wbcMemo,\r\n    rbcMemo: updatedRuningInfo.rbcMemo,\r\n  });\r\n\r\n  await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n\r\n\r\n  if (res && res?.data?.updateRunningInfoGQL[0].length !== 0) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast('Success');\r\n    wbcMemo.value = updatedRuningInfo.wbcMemo;\r\n  }\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoOpen = () => {\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst getStringValue = (title: string): string => {\r\n  if (title === 'Artifact(Smudge)' && siteCd.value === HOSPITAL_SITE_CD_BY_NAME['고대안암병원']) {\r\n    return \"Artifact\";\r\n  } else {\r\n    return title;\r\n  }\r\n};\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst beforeAfterChange = async (newItem: any) => {\r\n  await getOrderClass();\r\n  const filteredItems: any = slideData.value;\r\n  selectItems.value = filteredItems;\r\n  const customClassItems = selectItems.value.wbcInfoAfter.filter((item: any) => 90 <= Number(item.id) && Number(item.id) <= 95);\r\n  selectItems.value.wbcInfoAfter = newItem;\r\n\r\n  const availableCustomClassArr = customClassArr.value.filter((item: any) => item.abbreviation !== '' && item.fullNm !== '')\r\n  let wbcBeforeInfo = removeDuplicatesById(selectItems.value.wbcInfo.wbcInfo[0] || [])\r\n  let wbcAfterInfo = removeDuplicatesById(selectItems.value?.wbcInfoAfter || filteredItems.wbcInfo.wbcInfo[0] || []);\r\n\r\n  wbcBeforeInfo = removeDuplicatesById(wbcBeforeInfo);\r\n  wbcAfterInfo = removeDuplicatesById(wbcAfterInfo);\r\n\r\n\r\n  // customClass가 있는 상태에서 첫 진입 시\r\n  if (availableCustomClassArr.length > 0 && customClassItems.length === 0) {\r\n    for (const customClassItem of availableCustomClassArr) {\r\n      if (wbcAfterInfo.find((beforeItem: any) => beforeItem.id != customClassItem.customNum)) {\r\n        const customItem = {\r\n          id: String(customClassItem.customNum),\r\n          name: customClassItem.fullNm,\r\n          count: '0',\r\n          title: customClassItem.abbreviation,\r\n          images: [],\r\n        }\r\n        wbcBeforeInfo.push(customItem)\r\n        wbcAfterInfo.push(customItem);\r\n      }\r\n    }\r\n  } else if (availableCustomClassArr.length > 0 && customClassItems.length > 0) {\r\n    for (const customClassItem of customClassItems) {\r\n      if (wbcAfterInfo.find((item: any) => item.id != customClassItem.id)) {\r\n        const customItem = {\r\n          id: String(customClassItem.id),\r\n          name: customClassItem.name,\r\n          count: '0',\r\n          title: customClassItem.title,\r\n          images: [],\r\n        }\r\n\r\n        wbcBeforeInfo.push(customItem)\r\n        wbcAfterInfo.push(customClassItem)\r\n      }\r\n    }\r\n  }\r\n\r\n  wbcBeforeInfo = wbcBeforeInfo.reduce((acc: any, current: any) => {\r\n    if (!acc.some((item: any) => String(item.id) === String(current.id))) {\r\n      acc.push(current);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  wbcAfterInfo = wbcAfterInfo.reduce((acc: any, current: any) => {\r\n    if (!acc.some((item: any) => String(item.id) === String(current.id))) {\r\n      acc.push(current);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  const wbcBeforeArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  const wbcAfterArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n\r\n  wbcInfoAfterVal.value = wbcAfterInfo;\r\n  wbcInfoBeforeVal.value = wbcBeforeInfo;\r\n  const wbcInfoAfterValForTotalCount = filterByTitle(wbcAfterInfo, 'wbc');\r\n  const wbcInfoBeforeValForTotalCount = filterByTitle(wbcBeforeInfo, 'wbc');\r\n\r\n  totalCountSet('before', wbcInfoBeforeValForTotalCount);\r\n  totalCountSet('after', wbcInfoAfterValForTotalCount);\r\n\r\n  // totalCount, percent - 따로\r\n  for (const item of wbcInfoBeforeValForTotalCount) {\r\n    createPercent(item, totalBeforeCount.value)\r\n  }\r\n\r\n  for (const item of wbcInfoAfterValForTotalCount) {\r\n    createPercent(item, totalAfterCount.value)\r\n  }\r\n\r\n  const projectType = projectBm.value ? 'bm' : 'pb';\r\n\r\n  if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원']) {\r\n    wbcInfoBeforeVal.value = seoulStMaryPercentChange(wbcInfoBeforeValForTotalCount, wbcInfoBeforeVal.value);\r\n    wbcInfoAfterVal.value = seoulStMaryPercentChange(wbcInfoAfterValForTotalCount, wbcInfoAfterVal.value);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n    wbcInfoAfterVal.value = await inhaPercentChange(selectItems.value, wbcInfoAfterVal.value);\r\n    wbcInfoBeforeVal.value = await inhaPercentChange(selectItems.value, wbcInfoBeforeVal.value);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천성모병원']) {\r\n    wbcInfoAfterVal.value = incheonStMaryPercentChange(projectType, wbcInfoAfterVal.value);\r\n    wbcInfoBeforeVal.value = incheonStMaryPercentChange(selectItems.value, wbcInfoBeforeVal.value);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n    wbcInfoAfterVal.value = incheonGilPercentChange(wbcInfoAfterVal.value, props.selectItems?.wbcInfo.totalCount);\r\n    wbcInfoBeforeVal.value = incheonGilPercentChange(wbcInfoBeforeVal.value, props.selectItems?.wbcInfo.totalCount);\r\n  }\r\n\r\n  wbcInfoVal.value = [];\r\n\r\n  wbcInfoAfterVal.value = sortWbcInfo(wbcInfoAfterVal.value, wbcAfterArr);\r\n  wbcInfoBeforeVal.value = sortWbcInfo(wbcInfoBeforeVal.value, wbcBeforeArr);\r\n\r\n  for (const [index, beforeItem] of wbcInfoBeforeVal.value.entries()) {\r\n    const afterItem = wbcInfoAfterVal.value[index]\r\n\r\n    if (!afterItem) continue;\r\n    const isChanged = isBeforeAfterChanged(beforeItem, afterItem);\r\n    const item = {\r\n      id: beforeItem.id,\r\n      name: beforeItem.name,\r\n      title: beforeItem.title,\r\n      count: {before: beforeItem.count, after: afterItem.count},\r\n      images: {before: beforeItem.images, after: afterItem.images},\r\n      percent: {before: beforeItem.percent, after: afterItem.percent},\r\n      isChanged\r\n    }\r\n    wbcInfoVal.value.push(item);\r\n  }\r\n\r\n}\r\n\r\n/** Before, After 이미지들이 같은지 비교 */\r\nconst isBeforeAfterChanged = (beforeItem: any, afterItem: any) => {\r\n  if (Number(beforeItem.count) !== Number(afterItem.count)) return true;\r\n\r\n  const sortedBeforeImages = beforeItem.images.slice().map((item: any) => item.fileName);\r\n  const sortedAfterImages = afterItem.images.slice().map((item: any) => item.fileName);\r\n\r\n  const beforeSet = new Set(sortedBeforeImages);\r\n  const afterSet = new Set(sortedAfterImages);\r\n\r\n  if (beforeSet.size !== afterSet.size) {\r\n    return true;\r\n  } else {\r\n    const areEqual = [...beforeSet].every(fileName => afterSet.has(fileName));\r\n    if (areEqual) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nconst filterByTitle = (wbcInfoArr: any, isNonWbc: 'wbc' | 'nonWbc') => {\r\n  const titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\n  if (isNonWbc === 'nonWbc') {\r\n    return wbcInfoArr.filter((item: any) => titleArr.includes(item.title));\r\n  }\r\n\r\n  return wbcInfoArr.filter((item: any) => !titleArr.includes(item.title));\r\n}\r\n\r\nconst createPercent = (item: any, totalCount: any) => {\r\n  if (projectBm.value && item.title !== 'OT') {\r\n    const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n    item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n  } else {\r\n    // 인하대일 경우 percent 재계산 X\r\n    if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n      return;\r\n    }\r\n\r\n    const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n    if (!targetArray.includes(item.title)) {\r\n      const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n      item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n    }\r\n  }\r\n}\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst totalCountSet = (showType: string, wbcInfoChangeVal: any) => {\r\n  if (showType === 'before') {\r\n    totalBeforeCount.value = 0;\r\n  } else if (showType === 'after') {\r\n    totalAfterCount.value = 0;\r\n  }\r\n\r\n  wbcInfoChangeVal.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        showType === 'before' ? totalBeforeCount.value += Number(item.count) : totalAfterCount.value += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      const titleInArray = targetArray.includes(item.title);\r\n      if (!titleInArray) {\r\n        showType === 'before' ? totalBeforeCount.value += Number(item.count) : totalAfterCount.value += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function updateOriginalDb() {\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify([...wbcInfoAfterVal.value]));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      if (projectBm.value) {\r\n        if (image.title !== 'OT') {\r\n          totalCount += 1\r\n        }\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n        if (!targetArray.includes(image.title)) {\r\n          totalCount += 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n\r\n    createPercent(item, totalCount);\r\n    const projectType = projectBm.value ? 'bm' : 'pb';\r\n\r\n    if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원']) {\r\n      wbcInfoAfterVal.value = seoulStMaryPercentChange(clonedWbcInfo, wbcInfoAfterVal.value);\r\n    } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n      wbcInfoAfterVal.value = inhaPercentChange(selectItems.value, wbcInfoAfterVal.value);\r\n    } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천성모병원']) {\r\n      wbcInfoAfterVal.value = incheonStMaryPercentChange(projectType, wbcInfoAfterVal.value);\r\n    } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n      wbcInfoAfterVal.value = incheonGilPercentChange(wbcInfoAfterVal.value, props.selectItems?.wbcInfo.totalCount);\r\n    }\r\n  });\r\n\r\n  // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n  selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: [...wbcInfoAfterVal.value]});\r\n\r\n\r\n  const sortArr = sortWbcInfo(orderClass.value, wbcInfoVal.value);\r\n  sortArr.forEach((item: any, index: any) => {\r\n    item.orderIdx = index;\r\n  });\r\n\r\n  // originalDb 업데이트\r\n\r\n  if (slideData.value) {\r\n    slideData.value.wbcInfoAfter = clonedWbcInfo;\r\n  }\r\n\r\n  await putOrderClassApi(sortArr);\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(slideData.value);\r\n\r\n  emits('classOrderChanged')\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: []});\r\n}\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n    await gqlGenericUpdate(useUpdateRunningInfoMutation, {\r\n      id: originalDb.id,\r\n      isNormal: originalDb.isNormal,\r\n      abnormalClassInfo: originalDb.abnormalClassInfo,\r\n      pcIp: originalDb.pcIp,\r\n      lock_status: originalDb.lock_status,\r\n      wbcInfoAfter: originalDb.wbcInfoAfter,\r\n      submitState: originalDb.submitState,\r\n    });\r\n    await store.dispatch('slideDataModule/updateSlideData', originalDb);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst getCustomClass = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    customClassArr.value = result.data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst onImageError = () => {\r\n  barCodeImageShowError.value = true;\r\n}\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\r\nconst tooltipVisibleFunc = (type: keyof TooltipClassInfoType, visible: boolean) => {\r\n  tooltipVisible.value[type] = visible;\r\n}\r\n\r\nconst toastPosition = (siteCd: string) => {\r\n  if (siteCd === '0019') return 'center';\r\n  return 'top';\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (__props.type !== 'report' && !barCodeImageShowError.value && siteCd.value !== _unref(HOSPITAL_SITE_CD_BY_NAME)['고대구로병원'])\n      ? (_openBlock(), _createElementBlock(\"img\", {\n          key: 0,\n          class: \"mt10\",\n          onError: onImageError,\n          src: barcodeImg.value\n        }, null, 40, _hoisted_1))\n      : (__props.type !== 'report' && barCodeImageShowError.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2))\n        : (__props.type !== 'report')\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3))\n          : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"h3\", _hoisted_5, _toDisplayString(wbcClassTileChange()), 1),\n      _createElementVNode(\"ul\", _hoisted_6, [\n        _createElementVNode(\"li\", {\n          class: \"pos-relative\",\n          onMouseenter: _cache[0] || (_cache[0] = ($event: any) => (tooltipVisibleFunc('barcodeCopy', true))),\n          onMouseleave: _cache[1] || (_cache[1] = ($event: any) => (tooltipVisibleFunc('barcodeCopy', false)))\n        }, [\n          _createVNode(_component_font_awesome_icon, {\n            onClick: barcodeCopy,\n            icon: ['fas', 'copy'],\n            class: \"hoverSizeAction\"\n          }),\n          _createVNode(Tooltip, {\n            isVisible: tooltipVisible.value.barcodeCopy,\n            className: \"mb08\",\n            position: \"top\",\n            type: \"\",\n            message: _unref(MSG).TOOLTIP.BARCODE_COPY\n          }, null, 8, [\"isVisible\", \"message\"])\n        ], 32),\n        (__props.type !== 'report')\n          ? (_openBlock(), _createElementBlock(\"li\", {\n              key: 0,\n              class: \"pos-relative\",\n              onMouseenter: _cache[3] || (_cache[3] = ($event: any) => (tooltipVisibleFunc('memo', true))),\n              onMouseleave: _cache[4] || (_cache[4] = ($event: any) => (tooltipVisibleFunc('memo', false)))\n            }, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'comment-dots'],\n                onClick: memoOpen,\n                class: \"hoverSizeAction\"\n              }),\n              _createVNode(Tooltip, {\n                isVisible: tooltipVisible.value.memo,\n                className: \"mb08\",\n                position: \"top\",\n                type: \"\",\n                message: _unref(MSG).TOOLTIP.MEMO\n              }, null, 8, [\"isVisible\", \"message\"]),\n              (memoModal.value)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                    _withDirectives(_createElementVNode(\"textarea\", {\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((wbcMemo).value = $event))\n                    }, null, 512), [\n                      [_vModelText, wbcMemo.value]\n                    ]),\n                    _createElementVNode(\"button\", {\n                      class: \"memoModalBtn\",\n                      onClick: memoChange\n                    }, \"OK\"),\n                    _createElementVNode(\"button\", {\n                      class: \"memoModalBtn\",\n                      onClick: memoCancel\n                    }, \"CANCEL\")\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 32))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"li\", {\n          onClick: commitConfirmed,\n          class: _normalizeClass([\"pos-relative\", {'submitted': selectItems.value?.submitState === 'Submit',}]),\n          onMouseenter: _cache[5] || (_cache[5] = ($event: any) => (tooltipVisibleFunc('confirm', true))),\n          onMouseleave: _cache[6] || (_cache[6] = ($event: any) => (tooltipVisibleFunc('confirm', false)))\n        }, [\n          _createVNode(_component_font_awesome_icon, {\n            icon: ['fas', 'square-check'],\n            class: \"hoverSizeAction\"\n          }),\n          _createVNode(Tooltip, {\n            isVisible: tooltipVisible.value.confirm,\n            className: \"mb08\",\n            position: \"top\",\n            type: \"\",\n            message: _unref(MSG).TOOLTIP.CONFIRM\n          }, null, 8, [\"isVisible\", \"message\"])\n        ], 34),\n        (!crcConnect.value && showLISUploadButton.value)\n          ? (_openBlock(), _createElementBlock(\"li\", {\n              key: 1,\n              onClick: lisModalOpen,\n              class: _normalizeClass([\"pos-relative\", {'submitted': selectItems.value?.submitState === 'lisCbc' || lisBtnColor.value,}]),\n              onMouseenter: _cache[7] || (_cache[7] = ($event: any) => (tooltipVisibleFunc('lisUpload', true))),\n              onMouseleave: _cache[8] || (_cache[8] = ($event: any) => (tooltipVisibleFunc('lisUpload', false)))\n            }, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'upload'],\n                class: \"hoverSizeAction\"\n              }),\n              _createVNode(Tooltip, {\n                isVisible: tooltipVisible.value.lisUpload,\n                className: \"mb08\",\n                position: \"top\",\n                type: \"\",\n                message: _unref(MSG).TOOLTIP.LIS_UPLOAD\n              }, null, 8, [\"isVisible\", \"message\"])\n            ], 34))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"li\", {\n          class: \"pos-relative\",\n          onMouseenter: _cache[9] || (_cache[9] = ($event: any) => (tooltipVisibleFunc('classMoveLock', true))),\n          onMouseleave: _cache[10] || (_cache[10] = ($event: any) => (tooltipVisibleFunc('classMoveLock', false)))\n        }, [\n          (!toggleLock.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 0,\n                icon: ['fas', 'lock'],\n                onClick: toggleLockEvent,\n                class: \"hoverSizeAction\"\n              }))\n            : _createCommentVNode(\"\", true),\n          (toggleLock.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 1,\n                icon: ['fas', 'lock-open'],\n                onClick: toggleLockEvent,\n                class: \"hoverSizeAction\"\n              }))\n            : _createCommentVNode(\"\", true),\n          _createVNode(Tooltip, {\n            isVisible: tooltipVisible.value.classMoveLock,\n            className: \"mb08\",\n            position: \"top\",\n            type: \"\",\n            message: _unref(MSG).TOOLTIP.CLASS_MOVE\n          }, null, 8, [\"isVisible\", \"message\"])\n        ], 32)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _cache[17] || (_cache[17] = _createStaticVNode(\"<ul class=\\\"nth1Child classAttribute\\\"><li>Class</li><li class=\\\"wbcTitleText\\\"><p class=\\\"firstP\\\">Before</p><p>(Count | Percent)</p></li><li class=\\\"wbcTitleText\\\"><p class=\\\"firstP\\\">After</p><p>(Count | Percent)</p></li></ul>\", 1)),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoVal.value, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"wbcClassDbDiv\",\n          draggable: \"true\",\n          onDragstart: ($event: any) => (startDrag(idx, $event)),\n          onDragover: _cache[11] || (_cache[11] = _withModifiers(() => {}, [\"prevent\"])),\n          onDrop: ($event: any) => (drop(idx, $event))\n        }, [\n          (shouldRenderCategory(item.title))\n            ? (_openBlock(), _createElementBlock(\"ul\", {\n                key: 0,\n                class: _normalizeClass({'nth1Child': true, 'cursorMove': toggleLock.value}),\n                onClick: ($event: any) => (goClass(item.id)),\n                title: \"BLUE text: changed element\"\n              }, [\n                _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1),\n                _createElementVNode(\"li\", _hoisted_11, [\n                  _createElementVNode(\"span\", _hoisted_12, _toDisplayString(Number(item.count.before) || 0), 1),\n                  _createElementVNode(\"span\", _hoisted_13, _toDisplayString(Number(item?.percent.before) ? item?.percent.before + '%' : '0'), 1)\n                ]),\n                _createElementVNode(\"li\", _hoisted_14, [\n                  _createElementVNode(\"span\", {\n                    class: _normalizeClass(['w20', 'text-left', item.isChanged && 'blueText'])\n                  }, _toDisplayString(Number(item?.count.after) || 0), 3),\n                  _createElementVNode(\"span\", {\n                    class: _normalizeClass(['w50', 'text-left', item.isChanged && 'blueText'])\n                  }, _toDisplayString(Number(item?.percent.after) ? item?.percent.after + '%' : '0'), 3)\n                ])\n              ], 10, _hoisted_10))\n            : _createCommentVNode(\"\", true)\n        ], 40, _hoisted_9))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_15, [\n        _createElementVNode(\"ul\", _hoisted_16, [\n          _cache[16] || (_cache[16] = _createElementVNode(\"li\", null, \"Total\", -1)),\n          _createElementVNode(\"li\", _hoisted_17, [\n            _createElementVNode(\"span\", _hoisted_18, _toDisplayString(Number(totalBeforeCount.value) || 0), 1),\n            _cache[14] || (_cache[14] = _createElementVNode(\"span\", { class: \"w50 text-left\" }, \"100%\", -1))\n          ]),\n          _createElementVNode(\"li\", _hoisted_19, [\n            _createElementVNode(\"span\", _hoisted_20, _toDisplayString(Number(totalAfterCount.value) || 0), 1),\n            _cache[15] || (_cache[15] = _createElementVNode(\"span\", { class: \"w50 text-left\" }, \"100%\", -1))\n          ])\n        ])\n      ]),\n      (projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoVal.value, (item, idx) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: item.id,\n                class: \"wbcClassDbDiv mb20\",\n                draggable: \"true\",\n                onDragstart: ($event: any) => (startDrag(idx, $event)),\n                onDragover: _cache[12] || (_cache[12] = _withModifiers(() => {}, [\"prevent\"])),\n                onDrop: ($event: any) => (drop(idx, $event))\n              }, [\n                (item?.title === 'OT')\n                  ? (_openBlock(), _createElementBlock(\"ul\", {\n                      key: 0,\n                      class: \"nth1Child\",\n                      onClick: ($event: any) => (goClass(item.id))\n                    }, [\n                      _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1),\n                      _createElementVNode(\"li\", _hoisted_24, _toDisplayString(Number(item?.count.before) || 0), 1),\n                      _createElementVNode(\"li\", {\n                        class: _normalizeClass(item.isChanged && 'blueText')\n                      }, _toDisplayString(Number(item?.count.after) || 0), 3)\n                    ], 8, _hoisted_23))\n                  : _createCommentVNode(\"\", true)\n              ], 40, _hoisted_22))\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true),\n      (!projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filterByTitle(wbcInfoVal.value, 'nonWbc'), (nWbcItem, outerIndex) => {\n              return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                key: outerIndex,\n                class: \"categories\",\n                onClick: ($event: any) => (goClass(nWbcItem.id))\n              }, [\n                _createElementVNode(\"ul\", _hoisted_27, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_28, \"non-WBC\"))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", _hoisted_29, _toDisplayString(getStringValue(nWbcItem.name)), 1)\n                ]),\n                _createElementVNode(\"ul\", _hoisted_30, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_31))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", _hoisted_32, _toDisplayString(Number(nWbcItem?.count.before) || 0), 1)\n                ]),\n                _createElementVNode(\"ul\", _hoisted_33, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_34))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", {\n                    class: _normalizeClass(nWbcItem.isChanged && 'blueText'),\n                    style: {\"cursor\":\"default\"}\n                  }, _toDisplayString(Number(nWbcItem?.count.after) || 0), 3)\n                ])\n              ], 8, _hoisted_26)), [\n                [_vShow, selectItems.value?.siteCd !== '0006' && nWbcItem?.title !== 'SM']\n              ])\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true),\n      (_unref(router).currentRoute.value.path === '/report')\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, [\n            _withDirectives(_createElementVNode(\"textarea\", {\n              class: \"staticTextArea\",\n              \"onUpdate:modelValue\": _cache[13] || (_cache[13] = ($event: any) => ((wbcMemo).value = $event))\n            }, null, 512), [\n              [_vModelText, wbcMemo.value]\n            ]),\n            _createElementVNode(\"button\", {\n              class: \"memoModalBtn\",\n              onClick: memoChange\n            }, \"Save\")\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 3,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (toastMessage.value)\n      ? (_openBlock(), _createBlock(ToastNotification, {\n          key: 4,\n          message: toastMessage.value,\n          messageType: toastMessageType.value,\n          duration: 1500,\n          position: toastPosition(siteCd.value)\n        }, null, 8, [\"message\", \"messageType\", \"position\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 5,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <img class=\"mt10\" v-if=\"type !== 'report' && !barCodeImageShowError && siteCd !== HOSPITAL_SITE_CD_BY_NAME['고대구로병원']\" @error=\"onImageError\" :src=\"barcodeImg\"/>\r\n  <div class=\"mt10\" v-else-if=\"type !== 'report' && barCodeImageShowError\" style=\"height: 209.5px;\"></div>\r\n  <div class=\"mt10\" v-else-if=\"type !== 'report'\" style=\"height: 209.5px;\"></div>\r\n  <div class=\"mt10 mb10 flex-justify-between\">\r\n    <h3 class=\"wbcClassInfoLeft\">{{ wbcClassTileChange() }}</h3>\r\n\r\n    <ul class=\"leftWbcInfo\">\r\n      <li\r\n          class=\"pos-relative\"\r\n          @mouseenter=\"tooltipVisibleFunc('barcodeCopy', true)\"\r\n          @mouseleave=\"tooltipVisibleFunc('barcodeCopy', false)\"\r\n      >\r\n        <font-awesome-icon @click=\"barcodeCopy\" :icon=\"['fas', 'copy']\" class=\"hoverSizeAction\" />\r\n        <Tooltip :isVisible=\"tooltipVisible.barcodeCopy\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.BARCODE_COPY\" />\r\n      </li>\r\n\r\n      <li\r\n          v-if=\"type !== 'report'\"\r\n          class=\"pos-relative\"\r\n          @mouseenter=\"tooltipVisibleFunc('memo', true)\"\r\n          @mouseleave=\"tooltipVisibleFunc('memo', false)\"\r\n      >\r\n        <font-awesome-icon :icon=\"['fas', 'comment-dots']\" @click=\"memoOpen\" class=\"hoverSizeAction\" />\r\n        <Tooltip :isVisible=\"tooltipVisible.memo\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.MEMO\" />\r\n        <div v-if=\"memoModal\" class=\"memoModal\">\r\n          <textarea v-model=\"wbcMemo\"></textarea>\r\n          <button class=\"memoModalBtn\" @click=\"memoChange\">OK</button>\r\n          <button class=\"memoModalBtn\" @click=\"memoCancel\">CANCEL</button>\r\n        </div>\r\n      </li>\r\n      <li\r\n          @click=\"commitConfirmed\"\r\n          class=\"pos-relative\"\r\n          :class=\"{'submitted': selectItems?.submitState === 'Submit',}\"\r\n          @mouseenter=\"tooltipVisibleFunc('confirm', true)\"\r\n          @mouseleave=\"tooltipVisibleFunc('confirm', false)\"\r\n      >\r\n        <font-awesome-icon :icon=\"['fas', 'square-check']\" class=\"hoverSizeAction\" />\r\n        <Tooltip :isVisible=\"tooltipVisible.confirm\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.CONFIRM\" />\r\n      </li>\r\n      <li\r\n          v-if=\"!crcConnect && showLISUploadButton\"\r\n          @click=\"lisModalOpen\"\r\n          class=\"pos-relative\"\r\n          :class=\"{'submitted': selectItems?.submitState === 'lisCbc' || lisBtnColor,}\"\r\n          @mouseenter=\"tooltipVisibleFunc('lisUpload', true)\"\r\n          @mouseleave=\"tooltipVisibleFunc('lisUpload', false)\"\r\n      >\r\n        <font-awesome-icon :icon=\"['fas', 'upload']\" class=\"hoverSizeAction\" />\r\n        <Tooltip :isVisible=\"tooltipVisible.lisUpload\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.LIS_UPLOAD\" />\r\n      </li>\r\n      <li\r\n          class=\"pos-relative\"\r\n          @mouseenter=\"tooltipVisibleFunc('classMoveLock', true)\"\r\n          @mouseleave=\"tooltipVisibleFunc('classMoveLock', false)\"\r\n      >\r\n        <font-awesome-icon :icon=\"['fas', 'lock']\" v-if=\"!toggleLock\" @click=\"toggleLockEvent\" class=\"hoverSizeAction\" />\r\n        <font-awesome-icon :icon=\"['fas', 'lock-open']\" v-if=\"toggleLock\" @click=\"toggleLockEvent\" class=\"hoverSizeAction\" />\r\n        <Tooltip :isVisible=\"tooltipVisible.classMoveLock\" className=\"mb08\" position=\"top\" type=\"\" :message=\"MSG.TOOLTIP.CLASS_MOVE\" />\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"wbcClassScroll\">\r\n    <ul class=\"nth1Child classAttribute\">\r\n      <li>Class</li>\r\n      <li class=\"wbcTitleText\">\r\n        <p class=\"firstP\">Before</p>\r\n        <p>(Count | Percent)</p>\r\n      </li>\r\n      <li class=\"wbcTitleText\">\r\n        <p class=\"firstP\">After</p>\r\n        <p>(Count | Percent)</p>\r\n      </li>\r\n    </ul>\r\n    <div\r\n        v-for=\"(item, idx) in wbcInfoVal\"\r\n        :key=\"item.id\"\r\n        class=\"wbcClassDbDiv\"\r\n        draggable=\"true\"\r\n        @dragstart=\"startDrag(idx, $event)\"\r\n        @dragover.prevent\r\n        @drop=\"drop(idx, $event)\"\r\n    >\r\n      <ul :class=\"{'nth1Child': true, 'cursorMove': toggleLock}\" v-if=\"shouldRenderCategory(item.title)\"\r\n          @click=\"goClass(item.id)\" title=\"BLUE text: changed element\">\r\n        <li>{{ item?.name }}</li>\r\n        <li style=\"display: flex; justify-content: space-evenly;\">\r\n          <span class=\"grayText w20 text-left\">{{ Number(item.count.before) || 0 }}</span>\r\n          <span class=\"grayText w50 text-left\">{{\r\n              Number(item?.percent.before) ? item?.percent.before + '%' : '0'\r\n            }}</span>\r\n        </li>\r\n        <li style=\"display: flex; justify-content: space-evenly;\">\r\n          <span :class=\"['w20', 'text-left', item.isChanged && 'blueText']\">{{ Number(item?.count.after) || 0 }}</span>\r\n          <span :class=\"['w50', 'text-left', item.isChanged && 'blueText']\">{{\r\n              Number(item?.percent.after) ? item?.percent.after + '%' : '0'\r\n            }}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"wbcClassDbDiv classTotalColor\">\r\n      <ul class=\"nth1Child\">\r\n        <li>Total</li>\r\n        <li class=\"classInfoWbc\">\r\n          <span class=\"w20 text-left\">{{ Number(totalBeforeCount) || 0 }}</span>\r\n          <span class=\"w50 text-left\">100%</span>\r\n        </li>\r\n        <li class=\"classInfoWbc\">\r\n          <span class=\"w20 text-left\">{{ Number(totalAfterCount) || 0 }}</span>\r\n          <span class=\"w50 text-left\">100%</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div v-if=\"projectBm\">\r\n      <div\r\n          v-for=\"(item, idx) in wbcInfoVal\"\r\n          :key=\"item.id\"\r\n          class=\"wbcClassDbDiv mb20\"\r\n          draggable=\"true\"\r\n          @dragstart=\"startDrag(idx, $event)\"\r\n          @dragover.prevent\r\n          @drop=\"drop(idx, $event)\"\r\n      >\r\n        <ul class=\"nth1Child\" v-if=\"item?.title === 'OT'\" @click=\"goClass(item.id)\">\r\n          <li>{{ item?.name }}</li>\r\n          <li class=\"grayText\">{{ Number(item?.count.before) || 0 }}</li>\r\n          <li :class=\"item.isChanged && 'blueText'\">{{ Number(item?.count.after) || 0 }}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"!projectBm\">\r\n      <template v-for=\"(nWbcItem, outerIndex) in filterByTitle(wbcInfoVal, 'nonWbc')\" :key=\"outerIndex\">\r\n        <div class=\"categories\" v-show=\"selectItems?.siteCd !== '0006' && nWbcItem?.title !== 'SM'\"\r\n             @click=\"goClass(nWbcItem.id)\">\r\n          <ul class=\"categoryNm\" style=\"cursor: default;\">\r\n            <li class=\"mb10 liTitle\" v-if=\"outerIndex === 0\" style=\"cursor: default;\">non-WBC</li>\r\n            <li class=\"w-fit\" style=\"cursor: default;\">{{ getStringValue(nWbcItem.name) }}</li>\r\n          </ul>\r\n          <ul style=\"width: 29%;\">\r\n            <li class=\"mb10 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n            <li class=\"grayText\" style=\"cursor: default; padding-left: -20px;\">{{\r\n                Number(nWbcItem?.count.before) || 0\r\n              }}\r\n            </li>\r\n          </ul>\r\n          <ul class=\"degree\" style=\"width: 27%\">\r\n            <li class=\"mb10 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n            <li :class=\"nWbcItem.isChanged && 'blueText'\" style=\"cursor: default;\">{{\r\n                Number(nWbcItem?.count.after) || 0\r\n              }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n    </div>\r\n    <div class=\"memoModal bottom text-left staticMemoModal\" v-if=\"router.currentRoute.value.path === '/report'\">\r\n      <textarea class=\"staticTextArea\" v-model=\"wbcMemo\"></textarea>\r\n      <button class=\"memoModalBtn\" @click=\"memoChange\">Save</button>\r\n    </div>\r\n  </div>\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <ToastNotification\r\n      v-if=\"toastMessage\"\r\n      :message=\"toastMessage\"\r\n      :messageType=\"toastMessageType\"\r\n      :duration=\"1500\"\r\n      :position=\"toastPosition(siteCd)\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {\r\n  computed,\r\n  defineEmits,\r\n  defineProps,\r\n  nextTick,\r\n  onBeforeMount,\r\n  onMounted,\r\n  onUnmounted,\r\n  ref,\r\n  watch\r\n} from 'vue';\r\nimport {getBarcodeDetailImageUrl} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {crcOptionGet, getWbcCustomClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport { DIR_NAME } from \"@/common/defines/constants/settings\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {useStore} from \"vuex\";\r\nimport {MESSAGES, MSG } from \"@/common/defines/constants/constantMessageText\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {\r\n  getOrderClassApi,\r\n  putOrderClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\n\r\nconst props = defineProps(['wbcInfo', 'selectItems', 'type', 'isCommitChanged', 'classCompareShow', 'isAllClassesChecked']);\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst emits = defineEmits();\r\nimport moment from 'moment';\r\nimport {BUSINESS_ID, CbcWbcTestCdList_0002, EQMT_CD, INST_CD} from \"@/common/defines/constants/lis\";\r\nimport axios from \"axios\";\r\nimport {xml2json} from \"xml-js\";\r\nimport {createCbcFile, createDirectory, createFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {\r\n  createH17,\r\n  readH7Message,\r\n  readNoFlagHl7Message\r\n} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\nimport {removeDuplicatesById} from \"@/common/lib/utils/removeDuplicateIds\";\r\nimport {\r\n  incheonGilPercentChange,\r\n  incheonStMaryPercentChange,\r\n  inhaPercentChange,\r\n  seoulStMaryPercentChange\r\n} from \"@/common/helpers/common/classPercent\";\r\nimport {\r\n  getCbcCodeList,\r\n  getCbcPathData, getLisPathData,\r\n  getLisWbcRbcData,\r\n  inhaCbc,\r\n  inhaDataSend,\r\n} from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {isObjectEmpty} from \"@/common/lib/utils/validators\";\r\nimport Tooltip from \"@/components/commonUi/Tooltip.vue\";\r\nimport { TooltipClassInfoType } from \"@/common/type/tooltipType\";\r\nimport {\r\n  cbcUpdateMutation,\r\n  gqlGenericUpdate,\r\n  memoUpdateMutation, useUpdateRunningInfoMutation\r\n} from '@/gql/mutation/slideData';\r\n\r\nconst router = useRouter();\r\nconst showLISUploadButton = ref(true);\r\nconst selectItems = ref(props.selectItems);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nconst barcodeImg = ref('');\r\nconst userId = ref('');\r\nconst wbcMemo = ref('');\r\nconst memoModal = ref(false);\r\nconst wbcInfoVal = ref<any>([]);\r\nconst wbcInfoAfterVal = ref<any>([]);\r\nconst wbcInfoBeforeVal = ref<any>([]);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\n\r\nconst toggleLock = ref(false);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst orderClass = ref<any>([]);\r\nconst projectBm = ref(false);\r\nconst totalBeforeCount = ref(0);\r\nconst totalAfterCount = ref(0);\r\nconst okMessageType = ref('');\r\nconst lisCodeWbcArr = ref<any>([]);\r\nconst lisFilePathSetArr = ref<any>([]);\r\nconst customClassArr = ref<any>([]);\r\nconst barCodeImageShowError = ref(false);\r\nconst submittedScreen = ref(false);\r\nconst lisBtnColor = ref(false);\r\nconst cbcFilePathSetArr = ref('');\r\nconst cbcCodeList = ref<any>([]);\r\nconst lisCodeWbcArrApp = ref<any>([]);\r\nconst lisCodeRbcArrApp = ref<any>([]);\r\nconst lisHotKey = ref('');\r\nconst crcConnect = ref(false);\r\nconst isHotKeyPressed = ref(false);\r\nconst tooltipVisible = ref<TooltipClassInfoType>({\r\n  barcodeCopy: false,\r\n  memo: false,\r\n  confirm: false,\r\n  classMoveLock: false,\r\n  beforeCountPercent: false,\r\n  afterCountPercent: false,\r\n  lisUpload: false,\r\n})\r\n\r\nonBeforeMount(async () => {\r\n  barCodeImageShowError.value = false;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  const crcOptionApi = await crcOptionGet();\r\n  if (crcOptionApi.data.length !== 0) {\r\n    crcConnect.value = crcOptionApi.data[0].crcConnect;\r\n  }\r\n\r\n})\r\n\r\nonMounted(async () => {\r\n  window.removeEventListener('keydown', handleKeyDown);\r\n  window.removeEventListener('keyup', handleKeyUp);\r\n  window.addEventListener('keydown', handleKeyDown);\r\n  window.addEventListener('keyup', handleKeyUp);\r\n  await nextTick();\r\n  await getOrderClass();\r\n  await getCustomClass();\r\n  await mountedMethod();\r\n\r\n  if (!projectBm.value) {\r\n    const {lisCodeWbcArr, lisCodeRbcArr} = await getLisWbcRbcData();\r\n    lisCodeWbcArrApp.value = lisCodeWbcArr;\r\n    lisCodeRbcArrApp.value = lisCodeRbcArr;\r\n    const {lisFilePathSetArr: lisFilePathSetArrVar, lisHotKey: lisHotKeyVal} = await getLisPathData();\r\n    lisFilePathSetArr.value = lisFilePathSetArrVar;\r\n    lisHotKey.value = lisHotKeyVal;\r\n    cbcFilePathSetArr.value = await getCbcPathData();\r\n    cbcCodeList.value = await getCbcCodeList();\r\n  }\r\n  barCodeImageShowError.value = false;\r\n\r\n  // if (!showLISUploadAfterCheckingAll.value) {\r\n  //   showLISUploadButton.value = true;\r\n  // } else {\r\n  //   showLISUploadButton.value = props.isAllClassesChecked;\r\n  // }\r\n})\r\n\r\nonUnmounted(() => {\r\n  window.removeEventListener('keydown', handleKeyDown);\r\n  window.removeEventListener('keyup', handleKeyUp);\r\n})\r\n\r\n// watch(() => props.isAllClassesChecked, () => {\r\n//\r\n//   if (!showLISUploadAfterCheckingAll.value) {\r\n//     showLISUploadButton.value = true;\r\n//   } else {\r\n//     showLISUploadButton.value = props.isAllClassesChecked;\r\n//   }\r\n// })\r\n\r\nwatch(() => props.isCommitChanged, () => {\r\n  selectItems.value.submitState = 'Submit';\r\n})\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => props.wbcInfo, (newItem) => {\r\n  window.removeEventListener('keydown', handleKeyDown);\r\n  window.removeEventListener('keyup', handleKeyUp);\r\n  window.addEventListener('keydown', handleKeyDown);\r\n  window.addEventListener('keyup', handleKeyUp);\r\n  if (Object.keys(newItem).length !== 0) {\r\n    beforeAfterChange(newItem)\r\n    wbcMemo.value = props.selectItems?.wbcMemo;\r\n    const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n    barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems?.slotId, DIR_NAME.BARCODE);\r\n    store.dispatch('commonModule/setCommonInfo', {testType: props.selectItems.testType});\r\n  }\r\n});\r\n\r\nconst handleKeyDown = (event: KeyboardEvent) => {\r\n  if (router.currentRoute.value.path === '/report') return;\r\n  const keyName = event.key;\r\n\r\n  if (!isHotKeyPressed.value && keyName.toUpperCase() === lisHotKey.value.toUpperCase()) {\r\n    event.preventDefault(); // 기본 동작 방지\r\n    isHotKeyPressed.value = true; // 한 번만 실행되도록 설정\r\n    uploadLis();\r\n  }\r\n};\r\n\r\nconst handleKeyUp = (event: KeyboardEvent) => {\r\n  if (router.currentRoute.value.path === '/report') return;\r\n  if (isHotKeyPressed.value) {\r\n    isHotKeyPressed.value = false; // 키를 떼면 다시 실행 가능\r\n  }\r\n};\r\n\r\nconst mountedMethod = async () => {\r\n  if (isObjectEmpty(props.selectItems)) return;\r\n\r\n  if ((inhaTestCode.value === '' && siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원'])) {\r\n    await inhaCbc(cbcFilePathSetArr.value, props.selectItems, cbcCodeList.value, 'lisUpload');\r\n  }\r\n  wbcMemo.value = props.selectItems?.wbcMemo;\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems?.slotId, DIR_NAME.BARCODE);\r\n  if (props.selectItems?.submitState) {\r\n    lisBtnColor.value = props.selectItems.submitState === 'lisCbc';\r\n  }\r\n\r\n}\r\n\r\nconst lisModalOpen = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = MESSAGES.IDS_MSG_UPLOAD_LIS;\r\n  okMessageType.value = 'lisCbc';\r\n}\r\n\r\nconst goClass = (id: any) => {\r\n  emits('scrollEvent', id)\r\n}\r\n\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  if (!toggleLock.value) return;\r\n\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n    updateOriginalDb();\r\n  }\r\n};\r\n\r\n\r\nconst toggleLockEvent = () => {\r\n  toggleLock.value = !toggleLock.value;\r\n}\r\n\r\nconst barcodeCopy = async () => {\r\n  const textarea = document.createElement('textarea');\r\n  textarea.value = props.selectItems.barcodeNo;\r\n  document.body.appendChild(textarea);\r\n  textarea.select();\r\n  document.execCommand('copy');\r\n  document.body.removeChild(textarea);\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  showToast(MESSAGES.TOAST_MSG_BAR_CODE_SUCCESS);\r\n}\r\n\r\nconst commitConfirmed = () => {\r\n  submittedScreen.value = true;\r\n  showConfirm.value = true;\r\n  confirmMessage.value = MESSAGES.IDS_MSG_CONFIRM_SLIDE;\r\n  okMessageType.value = 'commit';\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  if (okMessageType.value === 'commit') {\r\n    onCommit();\r\n  } else {\r\n    uploadLis();\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst uploadLis = async () => {\r\n  switch (siteCd.value) {\r\n    case HOSPITAL_SITE_CD_BY_NAME['서울성모병원']:\r\n      cmcSeoulLisAndCbcDataGet();\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['인하대병원']:\r\n      await inhaDataSendLoad();\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['인천길병원']:\r\n      await gilDataSendLoad();\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['고대안암병원']:\r\n      godaeAnamDataSendLoad();\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['NONE']:\r\n    case HOSPITAL_SITE_CD_BY_NAME['UIMD']:\r\n      await uimdTestCbcLisDataGet();\r\n      // lisLastStep();\r\n      break;\r\n  }\r\n}\r\n\r\nconst uimdTestCbcLisDataGet = async () => {\r\n  // 서울 성모 테스트 코드\r\n  const codeList = CbcWbcTestCdList_0002;\r\n  const {wbcInfoAfter} = props.selectItems ?? {};\r\n  let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n  // cbc 결과 조회\r\n  axios.get(`${apiBaseUrl}/cbc/liveTest`, {   // UIMD 백엔드 xml 테스트 코드 : http://192.168.0.131:3002/api/cbc/liveTest\r\n    params: {\r\n      baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live',\r\n      submit_id: 'TRLII00124',\r\n      business_id: 'li',\r\n      instcd: '012', // 병원 코드\r\n    },\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }).then(async function (resultCbc) {\r\n    // 결과 처리 코드\r\n    const xml = resultCbc.data.trim(); // 불필요한 공백 제거\r\n    const cbcJson = JSON.parse(xml2json(xml, {compact: true}));\r\n    const cbcWorkList = cbcJson.root.spcworklist.worklist;\r\n    const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n\r\n    // LHR100는 WBC를 뜻함 -> 평화이즈 데이터를 WBC로 변경하는 과정\r\n    const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n      return item.testcd._cdata === 'LHR100'\r\n    })\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      wbcItem.testcd = ''\r\n      // testcd 없음 필드 자체에 추가 하는 로직\r\n      codeList.forEach(function (code) {\r\n        if (String(wbcItem.id) === String(code.id)) {\r\n          wbcItem.testcd = code.cd\r\n        }\r\n      })\r\n    })\r\n    // five diff push\r\n    let wbcTemp: any = [];\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n        if (wbcItem.testcd === fiveDiffItem) {\r\n          wbcTemp.push({\r\n            testcd: wbcItem.testcd,\r\n            percent: wbcItem.percent,\r\n            name: wbcItem.name,\r\n          })\r\n        } else {\r\n          if ((Number(wbcItem.count) > 0) && wbcItem.testcd !== '') {\r\n            wbcTemp.push({\r\n              testcd: wbcItem.testcd,\r\n              percent: wbcItem.percent,\r\n              name: wbcItem.name,\r\n            })\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    // 중복제거\r\n    const uniqueItems = new Set(wbcTemp.map((item: any) => item.testcd));\r\n    wbcTemp = Array.from(uniqueItems).map(testcd => wbcTemp.find((item: any) => item.testcd === testcd));\r\n\r\n    const totalPercentRounded = wbcTemp\r\n        .filter((item: any) => item.name !== \"Neutrophil\")\r\n        .map((item: any) => Math.round(parseFloat(item.percent)))\r\n        .reduce((sum: any, percent: any) => sum + percent, 0);\r\n    const updatedWbcTemp = wbcTemp.map((item: any) =>\r\n        item.name === \"Neutrophil\"\r\n            ? {...item, percent: 100 - totalPercentRounded}\r\n            : {...item, percent: Math.round(parseFloat(item.percent))}\r\n    );\r\n    wbcTemp = updatedWbcTemp;\r\n\r\n    // neutrophil-seg\r\n    const nsPercentItem = wbcTemp.filter((item: any) => item.testcd === 'LHR10501');\r\n\r\n    // ANC insert LHR10599=> ANC 계산\r\n    if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n      const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2);\r\n      wbcTemp.push({\r\n        testcd: 'LHR10599',\r\n        percent: ancResult,\r\n        name: 'ANC 계산'\r\n      })\r\n    }\r\n\r\n    const localTime = moment().local();\r\n    const updatedItem = {\r\n      submitState: 'lisCbc',\r\n      submitOfDate: localTime.format(),\r\n      submitUserId: userModuleDataGet.value.userId,\r\n    };\r\n    lisBtnColor.value = true;\r\n    const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n    await gqlGenericUpdate(cbcUpdateMutation,{\r\n      id: updatedRuningInfo.id,\r\n      submitState: updatedRuningInfo.submitState,\r\n      submitOfDate: updatedRuningInfo.submitOfDate,\r\n      submitUserId: updatedRuningInfo.submitUserId,\r\n    });\r\n    await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n\r\n  }).catch(function (err) {\r\n    console.error('error.config', err.config)\r\n    showErrorAlert(err.message);\r\n  });\r\n}\r\n\r\nconst cmcSeoulLisAndCbcDataGet = () => {\r\n  const codeList = CbcWbcTestCdList_0002;\r\n  const {barcodeNo, wbcInfoAfter} = props.selectItems ?? {};\r\n  let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n  // cbc 결과 조회\r\n  axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n    params: {\r\n      submit_id: 'TRLII00124',\r\n      business_id: 'li',\r\n      instcd: '012', // 병원 코드\r\n      bcno: barcodeNo,\r\n      baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\n    },\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }).then(async function (resultCbc) {\r\n    // 결과 처리 코드\r\n    const xml = resultCbc.data.data.trim(); // 불필요한 공백 제거\r\n    const cbcJson = JSON.parse(xml2json(xml, {compact: true}));\r\n    const cbcWorkList = cbcJson.root.spcworklist.worklist;\r\n    const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n    // LHR100는 WBC를 뜻함 -> 평화이즈 데이터를 WBC로 변경하는 과정\r\n    const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n      return item.testcd._cdata === 'LHR100'\r\n    })\r\n\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      wbcItem.testcd = ''\r\n      // testcd 없음 필드 자체에 추가 하는 로직\r\n      codeList.forEach(function (code) {\r\n        if (String(wbcItem.id) === String(code.id)) {\r\n          wbcItem.testcd = code.cd\r\n        }\r\n      })\r\n    })\r\n\r\n    // five diff push\r\n    let wbcTemp: any = [];\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n        if (wbcItem.testcd === fiveDiffItem) {\r\n          wbcTemp.push({\r\n            testcd: wbcItem.testcd,\r\n            percent: wbcItem.percent,\r\n          })\r\n        } else {\r\n          if ((Number(wbcItem.count) > 0) && wbcItem.testcd !== '') {\r\n            wbcTemp.push({\r\n              testcd: wbcItem.testcd,\r\n              percent: wbcItem.percent,\r\n            })\r\n          }\r\n        }\r\n      })\r\n    })\r\n    // 중복제거\r\n    const uniqueItems = new Set(wbcTemp.map((item: any) => item.testcd));\r\n    wbcTemp = Array.from(uniqueItems).map(testcd => wbcTemp.find((item: any) => item.testcd === testcd));\r\n    // 뉴트로필 외 반올림 뉴트로필 100기준 정수로 재 계산\r\n    const totalPercentRounded = wbcTemp\r\n        .filter((item: any) => item.name !== \"Neutrophil\")\r\n        .map((item: any) => Math.round(parseFloat(item.percent)))\r\n        .reduce((sum: any, percent: any) => sum + percent, 0);\r\n    const updatedWbcTemp = wbcTemp.map((item: any) =>\r\n        item.name === \"Neutrophil\"\r\n            ? {...item, percent: 100 - totalPercentRounded}\r\n            : {...item, percent: Math.round(parseFloat(item.percent))}\r\n    );\r\n    wbcTemp = updatedWbcTemp;\r\n\r\n    // neutrophil-seg ANC 계산을 위해서 전체 다 뉴트로필로 변경 전체 개수를 측정 하기 위해서\r\n    const nsPercentItem = wbcTemp.filter((item: any) => item.testcd === 'LHR10501');\r\n\r\n    // ANC insert LHR10599=> ANC 계산\r\n    if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n      const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2);\r\n      wbcTemp.push({\r\n        testcd: 'LHR10599',\r\n        percent: ancResult,\r\n        name: 'ANC 계산'\r\n      })\r\n    }\r\n    const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\CBCLookUP\\\\${barcodeNo}.txt`;\r\n    const paramsLisCopyLogData = {\r\n      filePath,\r\n      data: {\r\n        cbcJson,\r\n        cbcWorkList\r\n      },\r\n    };\r\n    await createCbcFile(paramsLisCopyLogData);\r\n    // 유저 체크\r\n    checkUserAuth(userModuleDataGet.value.employeeNo).then(function (isUserAuth) {\r\n      if (isUserAuth === 'succ') {\r\n        const params = {\r\n          empNo: userModuleDataGet.value.employeeNo,\r\n          barcodeNo: barcodeNo,\r\n          wbcInfo: wbcTemp\r\n        }\r\n        const now = new Date();\r\n        const year = `${now.getFullYear()}`;\r\n        let month = `${now.getMonth() + 1}`;\r\n        if (month.length === 1) {\r\n          month = `0${month}`;\r\n        }\r\n        let day = `${now.getDate()}`;\r\n        if (day.length === 1) {\r\n          day = `0${day}`;\r\n        }\r\n\r\n        const separator1 = String.fromCharCode(23); // '\\u0017'\r\n        const separator2 = String.fromCharCode(23, 23); // '\\u0017\\u0017'\r\n        const terminator = String.fromCharCode(3); // '\\u0003'\r\n        const paramsResult = params.wbcInfo\r\n            .filter((wbcItem: any) => wbcItem.testcd !== null && wbcItem.testcd !== '')\r\n            .map((wbcItem: any) => `${wbcItem.testcd}${separator1}${wbcItem.percent}${separator2}${year}${month}${day}${terminator}`)\r\n            .join('');\r\n\r\n        // LIS 최종 업로드 Report\r\n        const newparams = {\r\n          submit_id: 'TXLII00101',\r\n          business_id: BUSINESS_ID,\r\n          ex_interface: `${params.empNo}|${INST_CD}`,\r\n          instcd: INST_CD,\r\n          userid: params.empNo,\r\n          eqmtcd: EQMT_CD,\r\n          bcno: params.barcodeNo,\r\n          result: paramsResult,\r\n          testcont: 'MANUAL DIFFERENTIAL COUNT RESULT',\r\n          testcontcd: '01',\r\n          execdeptcd: 'H1',\r\n          baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\n        }\r\n        axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n          params: newparams,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        }).then(async function (result) {\r\n          const xml = result.data.data;\r\n          const json = JSON.parse(xml2json(xml, {compact: true}));\r\n          const resultFlag = json.root.ResultFlag.resultflag._text;\r\n          const paramsDataCbcLisLog = {\r\n            empNo: userModuleDataGet.value.employeeNo,\r\n            barcodeNo,\r\n            wbcTemp,\r\n            frontendSendData: newparams,\r\n            processSendData: paramsResult,\r\n            uimdDefaultData: wbcInfoAfter,\r\n            nsPercentItem,\r\n            cbcJson,\r\n            cbcWorkList,\r\n          };\r\n          const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\LISFinalReport\\\\${barcodeNo}.txt`;\r\n          const paramsLisCopyLogData = {\r\n            filePath,\r\n            data: {\r\n              frontendData: paramsDataCbcLisLog,\r\n              lisLastReportVal: result,\r\n            },\r\n          };\r\n          await createCbcFile(paramsLisCopyLogData);\r\n          if (resultFlag === 'Y') {\r\n            const localTime = moment().local();\r\n            // lisCbc 등록 후 list 테이블에서 로우 색상 변경 코드\r\n            const updatedItem = {\r\n              submitState: 'lisCbc',\r\n              submitOfDate: localTime.format(),\r\n              submitUserId: userModuleDataGet.value.userId,\r\n            };\r\n            lisBtnColor.value = true;\r\n            const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n            await gqlGenericUpdate(cbcUpdateMutation,{\r\n              id: updatedRuningInfo.id,\r\n              submitState: updatedRuningInfo.submitState,\r\n              submitOfDate: updatedRuningInfo.submitOfDate,\r\n              submitUserId: updatedRuningInfo.submitUserId,\r\n            });\r\n            await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n\r\n          } else {\r\n            const index = json.root.ResultFlag.error2._text.indexOf('!');  // '!'의 위치를 찾음\r\n            const result = index !== -1 ? json.root.ResultFlag.error2._text.substring(0, index + 1) : json.root.ResultFlag.error2._text;\r\n            const errText = json.root.ResultFlag.error2._text === '1' ? 'LIS 전송이 실패 했습니다.' : result;\r\n            showErrorAlert(errText);\r\n          }\r\n        }).catch(function (err) {\r\n          showErrorAlert(err.message);\r\n        })\r\n      } else {\r\n        showErrorAlert(MESSAGES.IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID);\r\n      }\r\n    })\r\n  }).catch(function (err) {\r\n    console.error('error.config', err.config)\r\n    showErrorAlert(err.message);\r\n  });\r\n}\r\n\r\nconst lisLastStep = () => {\r\n  otherDataSend();\r\n}\r\n\r\nconst godaeAnamDataSendLoad = () => {\r\n  const goDaeData = goDae();\r\n  lisFileUrlCreate(goDaeData);\r\n}\r\n\r\nconst gilDataSendLoad = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(`path=${url}`);\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems?.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: incheonGilPercentChange(props.selectItems?.wbcInfoAfter, props.selectItems?.wbcInfo.totalCount),\r\n      result: lisCodeWbcArrApp.value,\r\n    };\r\n    const res = await readNoFlagHl7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: `${lisFilePathSetArr.value}\\\\${props.selectItems.barcodeNo}.hl7`,\r\n          msg: res,\r\n        }\r\n        try {\r\n          await createH17(data);\r\n          toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n          showToast(MESSAGES.IDS_MSG_SUCCESS);\r\n          const localTime = moment().local();\r\n          const updatedItem = {\r\n            submitState: 'lisCbc',\r\n            submitOfDate: localTime.format(),\r\n            submitUserId: userModuleDataGet.value.userId,\r\n          };\r\n          lisBtnColor.value = true;\r\n\r\n          const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n          await gqlGenericUpdate(cbcUpdateMutation,{\r\n            id: updatedRuningInfo.id,\r\n            submitState: updatedRuningInfo.submitState,\r\n            submitOfDate: updatedRuningInfo.submitOfDate,\r\n            submitUserId: updatedRuningInfo.submitUserId,\r\n          });\r\n          await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n          emits('uploadLisChangeSlide', HOSPITAL_SITE_CD_BY_NAME['인천길병원']);\r\n\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data.message);\r\n        }\r\n      } else { // url\r\n        await sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst inhaDataSendLoad = async () => {\r\n  await inhaCbc(cbcFilePathSetArr.value, props.selectItems, cbcCodeList.value, 'lisUpload');\r\n  const {\r\n    errMessage,\r\n    lisBtnColor: lisBtnColorVal\r\n  } = await inhaDataSend(props.selectItems?.wbcInfoAfter, props.selectItems?.rbcInfoAfter, props.selectItems?.barcodeNo, lisFilePathSetArr.value, inhaTestCode.value, lisCodeWbcArrApp.value, lisCodeRbcArrApp.value, props.selectItems, userModuleDataGet.value.id)\r\n  if (errMessage !== '') {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast(errMessage);\r\n  }\r\n  lisBtnColor.value = lisBtnColorVal || false;\r\n}\r\n\r\nconst otherDataSend = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(`path=${url}`);\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems?.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: props.selectItems?.wbcInfoAfter,\r\n      result: lisCodeWbcArrApp.value,\r\n    };\r\n    const res = await readH7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: `${lisFilePathSetArr.value}\\\\${props.selectItems.barcodeNo}.hl7`,\r\n          msg: res,\r\n        }\r\n        try {\r\n          await createH17(data);\r\n          toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n          showToast(MESSAGES.IDS_MSG_SUCCESS);\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data.message);\r\n        }\r\n      } else { // url\r\n        await sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst goDae = (): string => {\r\n  let data = `H|\\\\^&||||||||||P||${props.selectItems?.barcodeNo}\\n`;\r\n  let seq = 0;\r\n  let kumcMergePercent = 0;\r\n  let kumcBandPercent = 0;\r\n  // 누적 백분율 계산\r\n  props.selectItems?.wbcInfoAfter.forEach((wbcItem: any) => {\r\n    if (['02', '03', '04', '10'].includes(wbcItem.id)) {\r\n      kumcMergePercent += Number(wbcItem.percent);\r\n    }\r\n    if (wbcItem.id === '72') {\r\n      kumcBandPercent = Number(wbcItem.percent);\r\n    }\r\n  });\r\n\r\n  // 백분율 조정\r\n  if (kumcMergePercent > 0 && kumcBandPercent < 6) {\r\n    const updateItem = (id: string, newPercent: string) => {\r\n      const item = props.selectItems?.wbcInfoAfter.find((item: any) => item.id === id);\r\n      if (item) {\r\n        item.percent = newPercent;\r\n      }\r\n    };\r\n\r\n    updateItem('71', (Number(props.selectItems?.wbcInfoAfter.find((item: any) => item.id === '71')?.percent) + kumcBandPercent).toString());\r\n    updateItem('72', '0');\r\n  }\r\n\r\n  // 데이터 생성\r\n  const appendData = (lisCode: any, wbcItem: any) => {\r\n    if (lisCode.LIS_CD !== '') {\r\n      if (['01', '71', '05', '07', '08', '09'].includes(wbcItem.id) || Number(wbcItem.percent) > 0) {\r\n        data += `R|${++seq}|^^^^${lisCode.LIS_CD}|${wbcItem.count}|||||||^${userModuleDataGet.value.name}\\n`;\r\n        data += `R|${++seq}|^^^^${lisCode.LIS_CD}%|${wbcItem.percent}|%||||||^${userModuleDataGet.value.name}\\n`;\r\n      }\r\n    }\r\n  };\r\n\r\n  lisCodeWbcArr.value.forEach((lisCode: any) => {\r\n    props.selectItems?.wbcInfoAfter.forEach((wbcItem: any) => {\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        appendData(lisCode, wbcItem);\r\n      }\r\n    });\r\n  });\r\n\r\n  return data += 'L|1|N';\r\n};\r\n\r\n\r\nconst lisFileUrlCreate = async (data: any) => {\r\n  // 파일 경로와 파라미터 설정\r\n  const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\LIS_IA\\\\${props.selectItems?.barcodeNo}.txt`;\r\n  const parmsLisCopy = {filePath, data};\r\n\r\n  // CBC 파일 생성\r\n  await createCbcFile(parmsLisCopy);\r\n\r\n  // URL이 아닌 경우, 로컬 파일 작업 수행\r\n  if (!lisFilePathSetArr.value.includes(\"http\")) {\r\n    const url = lisFilePathSetArr.value;\r\n\r\n    const fileCreateRes = await createDirectory(`path=${url}`);\r\n    if (fileCreateRes) {\r\n      const fileParams = {\r\n        path: url,\r\n        filename: `${props.selectItems?.barcodeNo}.lst2msg`,\r\n        content: data,\r\n      };\r\n\r\n      // 파일 생성\r\n      const fileRes = await createFile(fileParams);\r\n      if (fileRes) {\r\n        // 실행 정보 업데이트\r\n        const localTime = moment().local();\r\n        const updatedItem = {\r\n          submitState: 'lisCbc',\r\n          submitOfDate: localTime.format(),\r\n          submitUserId: userModuleDataGet.value.userId,\r\n        };\r\n        const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n        await gqlGenericUpdate(cbcUpdateMutation,{\r\n          id: updatedRuningInfo.id,\r\n          submitState: updatedRuningInfo.submitState,\r\n          submitOfDate: updatedRuningInfo.submitOfDate,\r\n          submitUserId: updatedRuningInfo.submitUserId,\r\n        });\r\n\r\n        await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n        toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n        showToast(MESSAGES.IDS_MSG_SUCCESS);\r\n\r\n        // 알림이 없을 경우 다음 페이지로 이동\r\n        if (!showAlert.value) {\r\n          emits('nextPage');\r\n        }\r\n      } else {\r\n        // 파일 생성 오류 시 알림 표시\r\n        showErrorAlert('lisCbc file err');\r\n      }\r\n    }\r\n  } else {\r\n    // URL로 설정된 경우 메시지 전송\r\n    await sendLisMessage(data);\r\n  }\r\n};\r\n\r\nconst sendLisMessage = async (data: any) => {\r\n  const body = {\r\n    barcodeNo: props.selectItems?.barcodeNo,\r\n    userId: userModuleDataGet.value.name,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: data,\r\n    baseUrl: lisFilePathSetArr.value,\r\n  };\r\n  try {\r\n    let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    const result = await axios.post(`${apiBaseUrl}/cbc/executePostCurl`, body);\r\n    if (result.data.errorCode === 'E000') {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n      showToast(MESSAGES.IDS_MSG_SUCCESS);\r\n\r\n    } else {\r\n      showErrorAlert(result.data.errorMessage);\r\n    }\r\n  } catch (err: any) {\r\n    showErrorAlert(err.message);\r\n  }\r\n};\r\n\r\n\r\nconst checkUserAuth = async (empNo: any) => {\r\n  return new Promise((succ, fail) => {\r\n    if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원']) {\r\n      let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n      axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n        params: {\r\n          submit_id: 'TRLII00104',\r\n          business_id: 'li',\r\n          instcd: '012', // 병원 코드\r\n          userid: empNo,\r\n          baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\n        },\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      }).then(function (result) {\r\n        const xml = result.data.data;\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        const userNm = json.root.getUsernm.usernm._text;\r\n        if (userNm === null || userNm === '') {\r\n          succ('fail')\r\n        } else {\r\n          succ('succ')\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        console.error('checkUserAuth :' + err.message)\r\n        fail(new Error(err.message))\r\n      })\r\n\r\n    }\r\n  })\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n  const localTime = moment().local();\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.userId,\r\n  };\r\n\r\n  const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n  await gqlGenericUpdate(cbcUpdateMutation,{\r\n    id: updatedRuningInfo.id,\r\n    submitState: updatedRuningInfo.submitState,\r\n    submitOfDate: updatedRuningInfo.submitOfDate,\r\n    submitUserId: updatedRuningInfo.submitUserId,\r\n  });\r\n\r\n  await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n  selectItems.value.submitState = 'Submit';\r\n  emits('submitStateChanged', 'Submit');\r\n}\r\n\r\n\r\nconst memoChange = async () => {\r\n  const enterAppliedWbcMemo = wbcMemo.value.replaceAll('\\r\\n', '<br>');\r\n  const updatedItem = {\r\n    wbcMemo: enterAppliedWbcMemo\r\n  }\r\n  const updatedRuningInfo = {...slideData.value, ...updatedItem};\r\n  const res = await gqlGenericUpdate(memoUpdateMutation, {\r\n    id: updatedRuningInfo.id,\r\n    wbcMemo: updatedRuningInfo.wbcMemo,\r\n    rbcMemo: updatedRuningInfo.rbcMemo,\r\n  });\r\n\r\n  await store.dispatch('slideDataModule/updateSlideData', updatedRuningInfo);\r\n\r\n\r\n  if (res && res?.data?.updateRunningInfoGQL[0].length !== 0) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast('Success');\r\n    wbcMemo.value = updatedRuningInfo.wbcMemo;\r\n  }\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoOpen = () => {\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst getStringValue = (title: string): string => {\r\n  if (title === 'Artifact(Smudge)' && siteCd.value === HOSPITAL_SITE_CD_BY_NAME['고대안암병원']) {\r\n    return \"Artifact\";\r\n  } else {\r\n    return title;\r\n  }\r\n};\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nconst beforeAfterChange = async (newItem: any) => {\r\n  await getOrderClass();\r\n  const filteredItems: any = slideData.value;\r\n  selectItems.value = filteredItems;\r\n  const customClassItems = selectItems.value.wbcInfoAfter.filter((item: any) => 90 <= Number(item.id) && Number(item.id) <= 95);\r\n  selectItems.value.wbcInfoAfter = newItem;\r\n\r\n  const availableCustomClassArr = customClassArr.value.filter((item: any) => item.abbreviation !== '' && item.fullNm !== '')\r\n  let wbcBeforeInfo = removeDuplicatesById(selectItems.value.wbcInfo.wbcInfo[0] || [])\r\n  let wbcAfterInfo = removeDuplicatesById(selectItems.value?.wbcInfoAfter || filteredItems.wbcInfo.wbcInfo[0] || []);\r\n\r\n  wbcBeforeInfo = removeDuplicatesById(wbcBeforeInfo);\r\n  wbcAfterInfo = removeDuplicatesById(wbcAfterInfo);\r\n\r\n\r\n  // customClass가 있는 상태에서 첫 진입 시\r\n  if (availableCustomClassArr.length > 0 && customClassItems.length === 0) {\r\n    for (const customClassItem of availableCustomClassArr) {\r\n      if (wbcAfterInfo.find((beforeItem: any) => beforeItem.id != customClassItem.customNum)) {\r\n        const customItem = {\r\n          id: String(customClassItem.customNum),\r\n          name: customClassItem.fullNm,\r\n          count: '0',\r\n          title: customClassItem.abbreviation,\r\n          images: [],\r\n        }\r\n        wbcBeforeInfo.push(customItem)\r\n        wbcAfterInfo.push(customItem);\r\n      }\r\n    }\r\n  } else if (availableCustomClassArr.length > 0 && customClassItems.length > 0) {\r\n    for (const customClassItem of customClassItems) {\r\n      if (wbcAfterInfo.find((item: any) => item.id != customClassItem.id)) {\r\n        const customItem = {\r\n          id: String(customClassItem.id),\r\n          name: customClassItem.name,\r\n          count: '0',\r\n          title: customClassItem.title,\r\n          images: [],\r\n        }\r\n\r\n        wbcBeforeInfo.push(customItem)\r\n        wbcAfterInfo.push(customClassItem)\r\n      }\r\n    }\r\n  }\r\n\r\n  wbcBeforeInfo = wbcBeforeInfo.reduce((acc: any, current: any) => {\r\n    if (!acc.some((item: any) => String(item.id) === String(current.id))) {\r\n      acc.push(current);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  wbcAfterInfo = wbcAfterInfo.reduce((acc: any, current: any) => {\r\n    if (!acc.some((item: any) => String(item.id) === String(current.id))) {\r\n      acc.push(current);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  const wbcBeforeArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  const wbcAfterArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n\r\n  wbcInfoAfterVal.value = wbcAfterInfo;\r\n  wbcInfoBeforeVal.value = wbcBeforeInfo;\r\n  const wbcInfoAfterValForTotalCount = filterByTitle(wbcAfterInfo, 'wbc');\r\n  const wbcInfoBeforeValForTotalCount = filterByTitle(wbcBeforeInfo, 'wbc');\r\n\r\n  totalCountSet('before', wbcInfoBeforeValForTotalCount);\r\n  totalCountSet('after', wbcInfoAfterValForTotalCount);\r\n\r\n  // totalCount, percent - 따로\r\n  for (const item of wbcInfoBeforeValForTotalCount) {\r\n    createPercent(item, totalBeforeCount.value)\r\n  }\r\n\r\n  for (const item of wbcInfoAfterValForTotalCount) {\r\n    createPercent(item, totalAfterCount.value)\r\n  }\r\n\r\n  const projectType = projectBm.value ? 'bm' : 'pb';\r\n\r\n  if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원']) {\r\n    wbcInfoBeforeVal.value = seoulStMaryPercentChange(wbcInfoBeforeValForTotalCount, wbcInfoBeforeVal.value);\r\n    wbcInfoAfterVal.value = seoulStMaryPercentChange(wbcInfoAfterValForTotalCount, wbcInfoAfterVal.value);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n    wbcInfoAfterVal.value = await inhaPercentChange(selectItems.value, wbcInfoAfterVal.value);\r\n    wbcInfoBeforeVal.value = await inhaPercentChange(selectItems.value, wbcInfoBeforeVal.value);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천성모병원']) {\r\n    wbcInfoAfterVal.value = incheonStMaryPercentChange(projectType, wbcInfoAfterVal.value);\r\n    wbcInfoBeforeVal.value = incheonStMaryPercentChange(selectItems.value, wbcInfoBeforeVal.value);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n    wbcInfoAfterVal.value = incheonGilPercentChange(wbcInfoAfterVal.value, props.selectItems?.wbcInfo.totalCount);\r\n    wbcInfoBeforeVal.value = incheonGilPercentChange(wbcInfoBeforeVal.value, props.selectItems?.wbcInfo.totalCount);\r\n  }\r\n\r\n  wbcInfoVal.value = [];\r\n\r\n  wbcInfoAfterVal.value = sortWbcInfo(wbcInfoAfterVal.value, wbcAfterArr);\r\n  wbcInfoBeforeVal.value = sortWbcInfo(wbcInfoBeforeVal.value, wbcBeforeArr);\r\n\r\n  for (const [index, beforeItem] of wbcInfoBeforeVal.value.entries()) {\r\n    const afterItem = wbcInfoAfterVal.value[index]\r\n\r\n    if (!afterItem) continue;\r\n    const isChanged = isBeforeAfterChanged(beforeItem, afterItem);\r\n    const item = {\r\n      id: beforeItem.id,\r\n      name: beforeItem.name,\r\n      title: beforeItem.title,\r\n      count: {before: beforeItem.count, after: afterItem.count},\r\n      images: {before: beforeItem.images, after: afterItem.images},\r\n      percent: {before: beforeItem.percent, after: afterItem.percent},\r\n      isChanged\r\n    }\r\n    wbcInfoVal.value.push(item);\r\n  }\r\n\r\n}\r\n\r\n/** Before, After 이미지들이 같은지 비교 */\r\nconst isBeforeAfterChanged = (beforeItem: any, afterItem: any) => {\r\n  if (Number(beforeItem.count) !== Number(afterItem.count)) return true;\r\n\r\n  const sortedBeforeImages = beforeItem.images.slice().map((item: any) => item.fileName);\r\n  const sortedAfterImages = afterItem.images.slice().map((item: any) => item.fileName);\r\n\r\n  const beforeSet = new Set(sortedBeforeImages);\r\n  const afterSet = new Set(sortedAfterImages);\r\n\r\n  if (beforeSet.size !== afterSet.size) {\r\n    return true;\r\n  } else {\r\n    const areEqual = [...beforeSet].every(fileName => afterSet.has(fileName));\r\n    if (areEqual) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nconst filterByTitle = (wbcInfoArr: any, isNonWbc: 'wbc' | 'nonWbc') => {\r\n  const titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\n  if (isNonWbc === 'nonWbc') {\r\n    return wbcInfoArr.filter((item: any) => titleArr.includes(item.title));\r\n  }\r\n\r\n  return wbcInfoArr.filter((item: any) => !titleArr.includes(item.title));\r\n}\r\n\r\nconst createPercent = (item: any, totalCount: any) => {\r\n  if (projectBm.value && item.title !== 'OT') {\r\n    const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n    item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n  } else {\r\n    // 인하대일 경우 percent 재계산 X\r\n    if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n      return;\r\n    }\r\n\r\n    const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n    if (!targetArray.includes(item.title)) {\r\n      const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n      item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n    }\r\n  }\r\n}\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst totalCountSet = (showType: string, wbcInfoChangeVal: any) => {\r\n  if (showType === 'before') {\r\n    totalBeforeCount.value = 0;\r\n  } else if (showType === 'after') {\r\n    totalAfterCount.value = 0;\r\n  }\r\n\r\n  wbcInfoChangeVal.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        showType === 'before' ? totalBeforeCount.value += Number(item.count) : totalAfterCount.value += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      const titleInArray = targetArray.includes(item.title);\r\n      if (!titleInArray) {\r\n        showType === 'before' ? totalBeforeCount.value += Number(item.count) : totalAfterCount.value += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function updateOriginalDb() {\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify([...wbcInfoAfterVal.value]));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      if (projectBm.value) {\r\n        if (image.title !== 'OT') {\r\n          totalCount += 1\r\n        }\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n        if (!targetArray.includes(image.title)) {\r\n          totalCount += 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n\r\n    createPercent(item, totalCount);\r\n    const projectType = projectBm.value ? 'bm' : 'pb';\r\n\r\n    if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원']) {\r\n      wbcInfoAfterVal.value = seoulStMaryPercentChange(clonedWbcInfo, wbcInfoAfterVal.value);\r\n    } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n      wbcInfoAfterVal.value = inhaPercentChange(selectItems.value, wbcInfoAfterVal.value);\r\n    } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천성모병원']) {\r\n      wbcInfoAfterVal.value = incheonStMaryPercentChange(projectType, wbcInfoAfterVal.value);\r\n    } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n      wbcInfoAfterVal.value = incheonGilPercentChange(wbcInfoAfterVal.value, props.selectItems?.wbcInfo.totalCount);\r\n    }\r\n  });\r\n\r\n  // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n  selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: [...wbcInfoAfterVal.value]});\r\n\r\n\r\n  const sortArr = sortWbcInfo(orderClass.value, wbcInfoVal.value);\r\n  sortArr.forEach((item: any, index: any) => {\r\n    item.orderIdx = index;\r\n  });\r\n\r\n  // originalDb 업데이트\r\n\r\n  if (slideData.value) {\r\n    slideData.value.wbcInfoAfter = clonedWbcInfo;\r\n  }\r\n\r\n  await putOrderClassApi(sortArr);\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(slideData.value);\r\n\r\n  emits('classOrderChanged')\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: []});\r\n}\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n    await gqlGenericUpdate(useUpdateRunningInfoMutation, {\r\n      id: originalDb.id,\r\n      isNormal: originalDb.isNormal,\r\n      abnormalClassInfo: originalDb.abnormalClassInfo,\r\n      pcIp: originalDb.pcIp,\r\n      lock_status: originalDb.lock_status,\r\n      wbcInfoAfter: originalDb.wbcInfoAfter,\r\n      submitState: originalDb.submitState,\r\n    });\r\n    await store.dispatch('slideDataModule/updateSlideData', originalDb);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst getCustomClass = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    customClassArr.value = result.data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst onImageError = () => {\r\n  barCodeImageShowError.value = true;\r\n}\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\r\nconst tooltipVisibleFunc = (type: keyof TooltipClassInfoType, visible: boolean) => {\r\n  tooltipVisible.value[type] = visible;\r\n}\r\n\r\nconst toastPosition = (siteCd: string) => {\r\n  if (siteCd === '0019') return 'center';\r\n  return 'top';\r\n}\r\n\r\n</script>","import script from \"./classInfo.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfo.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"mb20\" }\n\nimport {ref} from \"vue\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'PassWordCheck',\n  props: {\r\n  crcPassWord: {\r\n    type: String,\r\n    required: true,\r\n  }\r\n},\n  emits: ['returnPassWordCheck', 'passWordClose'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst emit = __emit;\r\n\r\nconst passWord = ref('');\r\n\r\nconst passWordCheck = () => {\r\n  if (passWord.value === props.crcPassWord) {\r\n    emit('returnPassWordCheck', true);\r\n  } else {\r\n    emit('returnPassWordCheck', false);\r\n  }\r\n}\r\n\r\nconst passWordClose = () => {\r\n  emit('passWordClose')\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"passWordCheckBack\",\n    onClick: passWordClose\n  }, [\n    _createElementVNode(\"div\", {\n      class: \"passWordCheck\",\n      onClick: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"]))\n    }, [\n      _createElementVNode(\"p\", _hoisted_1, [\n        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'lock'] })\n      ]),\n      _cache[2] || (_cache[2] = _createElementVNode(\"p\", { class: \"adminText\" }, \"Admin Password\", -1)),\n      _cache[3] || (_cache[3] = _createElementVNode(\"p\", null, \" Please enter the administrator password. \", -1)),\n      _withDirectives(_createElementVNode(\"input\", {\n        type: \"password\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((passWord).value = $event)),\n        class: \"mt40 lockInput\"\n      }, null, 512), [\n        [_vModelText, passWord.value]\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: passWordCheck,\n        class: \"mt10 lockBtn cursorPointer\"\n      }, \"OK\"),\n      _createElementVNode(\"button\", {\n        onClick: passWordClose,\n        class: \"mt10 noLockBtn cursorPointer\"\n      }, \"Close\")\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"passWordCheckBack\" @click=\"passWordClose\">\r\n    <div class=\"passWordCheck\" @click.stop>\r\n      <p class=\"mb20\">\r\n        <font-awesome-icon :icon=\"['fas', 'lock']\"/>\r\n      </p>\r\n      <p class=\"adminText\">Admin Password</p>\r\n      <p>\r\n        Please enter the administrator password.\r\n      </p>\r\n      <input type=\"password\" v-model=\"passWord\" class=\"mt40 lockInput\"/>\r\n      <button @click=\"passWordCheck\" class=\"mt10 lockBtn cursorPointer\">OK</button>\r\n      <button @click=\"passWordClose\" class=\"mt10 noLockBtn cursorPointer\">Close</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport {defineEmits, defineProps, ref} from \"vue\";\r\n\r\nconst props = defineProps({\r\n  crcPassWord: {\r\n    type: String,\r\n    required: true,\r\n  }\r\n});\r\nconst emit = defineEmits(['returnPassWordCheck', 'passWordClose']);\r\n\r\nconst passWord = ref('');\r\n\r\nconst passWordCheck = () => {\r\n  if (passWord.value === props.crcPassWord) {\r\n    emit('returnPassWordCheck', true);\r\n  } else {\r\n    emit('returnPassWordCheck', false);\r\n  }\r\n}\r\n\r\nconst passWordClose = () => {\r\n  emit('passWordClose')\r\n}\r\n</script>","import script from \"./PassWordCheck.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./PassWordCheck.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"crcPopUpDiv remark\" }\nconst _hoisted_2 = { style: {\"position\":\"relative\",\"height\":\"100%\",\"width\":\"100%\"} }\nconst _hoisted_3 = { class: \"headerRemark topLine\" }\nconst _hoisted_4 = { class: \"remarkDefaultTable\" }\nconst _hoisted_5 = [\"value\"]\nconst _hoisted_6 = { key: 0 }\nconst _hoisted_7 = {\n  key: 1,\n  class: \"text-left\"\n}\nconst _hoisted_8 = { key: 2 }\nconst _hoisted_9 = [\"innerHTML\"]\nconst _hoisted_10 = { key: 4 }\nconst _hoisted_11 = [\"onClick\"]\nconst _hoisted_12 = { key: 5 }\nconst _hoisted_13 = [\"onClick\"]\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = { class: \"mt20 remarkBottomFix\" }\nconst _hoisted_16 = { class: \"text-left fs10 fw-bold mb10\" }\nconst _hoisted_17 = { class: \"remarkBottomBtnGroup mb10\" }\nconst _hoisted_18 = { class: \"flex-justify-between\" }\n\nimport {ref, onBeforeMount, nextTick, computed} from \"vue\";\r\nimport {\r\n  crcRemarkGet,\r\n  createCrcRemarkApi,\r\n  deleteCrcRemarkApi,\r\n  updateCrcRemarkApi,\r\n  crcSearchGet,\r\n  crcRecoGet,\r\n  crcRecoSearchGet,\r\n  createCrcRecoApi,\r\n  deleteCrcRecoApi,\r\n  updateCrcRecoApi,\r\n  crcCommentGet, crcCommentSearchGet, createCrcCommentApi, deleteCrcCommentApi, updateCrcCommentApi // 서치 API 추가\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport PassWordCheck from \"@/components/commonUi/PassWordCheck.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport { useStore } from \"vuex\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'remark',\n  props: {\r\n  crcDefaultMode: {\r\n    type: Boolean,\r\n    required: true,\r\n  },\r\n  type: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  crcPassWord: {\r\n    type: String,\r\n  }\r\n},\n  emits: ['cancel', 'listUpdated'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\nconst store = useStore();\r\nconst emit = __emit;\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst remarkArr = ref<any>([]);\r\nconst selectedItems = ref<number[]>([]);\r\nconst newRemarkCode = ref(\"\");\r\nconst newRemarkContent = ref(\"\");\r\nconst searchType = ref(\"Code\");\r\nconst editIndex = ref<number | null>(null);\r\nconst editedCode = ref(\"\");\r\nconst editedContent = ref(\"\");\r\nconst searchRemark = ref(''); // 검색 필드\r\nconst crcDefaultModeVal = ref(false);\r\nconst crcPassWordVal = ref('');\r\nconst passWordPass = ref(false);\r\nconst passLayout = ref(false);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\nonBeforeMount(async () => {\r\n  crcDefaultModeVal.value = props.crcDefaultMode;\r\n  crcPassWordVal.value = props.crcPassWord || '';\r\n  passWordPass.value = false;\r\n  await loadRemarks('mounted');\r\n})\r\n// 서버로부터 Remark 데이터 로드\r\nconst loadRemarks = async (type?: string) => {\r\n  let response: any = [];\r\n  if (props.type === 'remark') {\r\n    response = await crcRemarkGet();\r\n  } else if (props.type === 'comment') {\r\n    response = await crcCommentGet();\r\n  } else {\r\n    response = await crcRecoGet();\r\n  }\r\n\r\n  remarkArr.value = response?.data || [];\r\n  if (type !== 'mounted') {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast(\"Search completed.\");\r\n  }\r\n};\r\nconst passWordClose= () => {\r\n  passLayout.value = false;\r\n}\r\n\r\nconst returnPassWordCheck = (val: boolean) => {\r\n  if (val) {\r\n    passWordPass.value = true;\r\n    // 패스 체크 모달 닫기\r\n    passLayout.value = false;\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast(\"Admin verification is complete. Please click the button again.\");\r\n  } else {\r\n    passWordPass.value = false;\r\n    // 패스 체크 모달 닫기\r\n    passLayout.value = false;\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast(\"The administrator password is incorrect.\");\r\n  }\r\n}\r\n\r\n// 검색 기능\r\nconst searchRemarkData = async () => {\r\n  try {\r\n    if (searchRemark.value === '') {\r\n      await loadRemarks();\r\n      return\r\n    }\r\n    let searchParam: any = {};\r\n    if (searchType.value === \"Code\") {\r\n      searchParam.code = searchRemark.value;\r\n    } else if (searchType.value === \"Content\") {\r\n      searchParam.remarkAllContent = searchRemark.value;\r\n    }\r\n\r\n    // const response = await crcSearchGet(searchParam);\r\n    let response: any = [];\r\n    if (props.type === 'remark') {\r\n      response = await crcSearchGet(searchParam);\r\n    } else if (props.type === 'comment') {\r\n      response = await crcCommentSearchGet(searchParam);\r\n    } else {\r\n      response = await crcRecoSearchGet(searchParam);\r\n    }\r\n    remarkArr.value = response?.data || [];\r\n\r\n    if (remarkArr.value.length === 0) {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n      showToast(\"No results found.\");\r\n    } else {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n      showToast(\"Search completed.\");\r\n    }\r\n  } catch (error) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast('Search failed.');\r\n    console.error(\"Error during search:\", error);\r\n  }\r\n};\r\n\r\n\r\n// Remark 추가\r\nconst addRemark = async () => {\r\n  if (!newRemarkCode.value || !newRemarkContent.value) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast(\"code와 content를 입력해주세요.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    if (props.type === 'remark') {\r\n      await createCrcRemarkApi({\r\n        code: newRemarkCode.value,\r\n        remarkAllContent: newRemarkContent.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\r\n      });\r\n    } else if (props.type === 'comment') {\r\n      await createCrcCommentApi({\r\n        code: newRemarkCode.value,\r\n        remarkAllContent: newRemarkContent.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\r\n      });\r\n    } else {\r\n      await createCrcRecoApi({\r\n        code: newRemarkCode.value,\r\n        remarkAllContent: newRemarkContent.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\r\n      });\r\n    }\r\n\r\n    newRemarkCode.value = \"\";\r\n    newRemarkContent.value = \"\";\r\n    await loadRemarks();\r\n    await scrollToBottom();\r\n  } catch (error) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast('Failed to add remark')\r\n  }\r\n};\r\n\r\n// Remark 삭제\r\nconst deleteRemark = async (id: number) => {\r\n\r\n  try {\r\n    if (props.type === 'remark') {\r\n      await deleteCrcRemarkApi({id});\r\n    } else if (props.type === 'comment') {\r\n      await deleteCrcCommentApi({id});\r\n    } else {\r\n      await deleteCrcRecoApi({id});\r\n    }\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast('delete Success')\r\n    await loadRemarks();\r\n  } catch (error) {\r\n    console.error(\"Failed to delete remark:\", error);\r\n  }\r\n};\r\n\r\nconst scrollToBottom = async () => {\r\n  await nextTick();\r\n  const scrollContainer = document.querySelector('.crcPopUpDiv.remark');\r\n  if (scrollContainer) {\r\n    scrollContainer.scrollTop = scrollContainer.scrollHeight;\r\n  }\r\n}\r\n\r\n// 편집 시작\r\nconst startEdit = (index: number, item: any) => {\r\n  editIndex.value = index;\r\n  editedCode.value = item.code;\r\n  editedContent.value = item.remarkAllContent.replaceAll('<br>', '\\r\\n');\r\n};\r\n\r\n// 편집 저장\r\nconst saveEdit = async (id: number) => {\r\n  if (!editedCode.value || !editedContent.value) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast(\"코드와 내용을 입력해주세요.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n\r\n    if (props.type === 'remark') {\r\n      await updateCrcRemarkApi([\r\n        {\r\n          id: id,\r\n          code: editedCode.value,\r\n          remarkAllContent: editedContent.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\r\n        },\r\n      ]);\r\n    } else if (props.type === 'comment') {\r\n      await updateCrcCommentApi([\r\n        {\r\n          id: id,\r\n          code: editedCode.value,\r\n          remarkAllContent: editedContent.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\r\n        },\r\n      ]);\r\n    } else {\r\n      await updateCrcRecoApi([\r\n        {\r\n          id: id,\r\n          code: editedCode.value,\r\n          remarkAllContent: editedContent.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\r\n        },\r\n      ]);\r\n    }\r\n    editIndex.value = null;\r\n    await loadRemarks();\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast('save Success')\r\n  } catch (error) {\r\n    console.error(\"Failed to update remark:\", error);\r\n  }\r\n};\r\n\r\n// 편집 취소\r\nconst cancelEdit = () => {\r\n  editIndex.value = null;\r\n};\r\n\r\nconst typeToText = (type: string) => {\r\n  switch (type) {\r\n    case 'reco':\r\n      return 'Recommendation';\r\n    case 'comment':\r\n      return 'Comment';\r\n    case 'remark':\r\n      return 'Remark';\r\n  }\r\n}\r\n\r\n// OK 버튼 클릭 시 처리\r\nconst okSelect = () => {\r\n  const selectedRemarks = remarkArr.value.filter(item => selectedItems.value.includes(item.id));\r\n\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  showToast('Remark Add Success');\r\n  emit(\"listUpdated\", selectedRemarks, props.type);\r\n};\r\n\r\n// CANCEL 버튼 클릭 시 처리\r\nconst cancelSelect = () => {\r\n  emit(\"cancel\");\r\n};\r\n\r\n// 토스트 메시지 표시\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 2000);\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _cache[8] || (_cache[8] = _createElementVNode(\"span\", null, \"Search Type\", -1)),\n          _withDirectives(_createElementVNode(\"select\", {\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((searchType).value = $event))\n          }, _cache[7] || (_cache[7] = [\n            _createElementVNode(\"option\", { value: \"Code\" }, \"Code\", -1),\n            _createElementVNode(\"option\", { value: \"Content\" }, \"Content\", -1)\n          ]), 512), [\n            [_vModelSelect, searchType.value]\n          ]),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((searchRemark).value = $event))\n          }, null, 512), [\n            [_vModelText, searchRemark.value]\n          ]),\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            onClick: searchRemarkData\n          }, \"Search\")\n        ]),\n        _createElementVNode(\"table\", _hoisted_4, [\n          _cache[9] || (_cache[9] = _createElementVNode(\"colgroup\", null, [\n            _createElementVNode(\"col\", { width: \"5%\" }),\n            _createElementVNode(\"col\", { width: \"20%\" }),\n            _createElementVNode(\"col\", { width: \"*\" }),\n            _createElementVNode(\"col\", { width: \"20%\" })\n          ], -1)),\n          _cache[10] || (_cache[10] = _createElementVNode(\"thead\", null, [\n            _createElementVNode(\"tr\", null, [\n              _createElementVNode(\"th\"),\n              _createElementVNode(\"th\", null, \"Name\"),\n              _createElementVNode(\"th\", null, \"Content\"),\n              _createElementVNode(\"th\", null, \"Action\")\n            ])\n          ], -1)),\n          _createElementVNode(\"tbody\", null, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(remarkArr.value, (item, idx) => {\n              return (_openBlock(), _createElementBlock(\"tr\", { key: idx }, [\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"checkbox\",\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((selectedItems).value = $event)),\n                    value: item.id\n                  }, null, 8, _hoisted_5), [\n                    [_vModelCheckbox, selectedItems.value]\n                  ])\n                ]),\n                (editIndex.value === idx)\n                  ? (_openBlock(), _createElementBlock(\"td\", _hoisted_6, [\n                      _withDirectives(_createElementVNode(\"input\", {\n                        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((editedCode).value = $event)),\n                        type: \"text\"\n                      }, null, 512), [\n                        [_vModelText, editedCode.value]\n                      ])\n                    ]))\n                  : (_openBlock(), _createElementBlock(\"td\", _hoisted_7, _toDisplayString(item?.code), 1)),\n                (editIndex.value === idx)\n                  ? (_openBlock(), _createElementBlock(\"td\", _hoisted_8, [\n                      _withDirectives(_createElementVNode(\"textarea\", {\n                        class: \"remarkTextArea table\",\n                        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((editedContent).value = $event)),\n                        maxlength: \"1000\"\n                      }, null, 512), [\n                        [_vModelText, editedContent.value]\n                      ])\n                    ]))\n                  : (_openBlock(), _createElementBlock(\"td\", {\n                      key: 3,\n                      class: \"text-left\",\n                      innerHTML: item?.remarkAllContent\n                    }, null, 8, _hoisted_9)),\n                (editIndex.value === idx)\n                  ? (_openBlock(), _createElementBlock(\"td\", _hoisted_10, [\n                      _createElementVNode(\"button\", {\n                        class: \"crcDefaultBtn\",\n                        onClick: ($event: any) => (saveEdit(item.id))\n                      }, \"Save\", 8, _hoisted_11),\n                      _createElementVNode(\"button\", {\n                        class: \"crcDefaultBtn ml10\",\n                        onClick: cancelEdit\n                      }, \"Cancel\")\n                    ]))\n                  : (_openBlock(), _createElementBlock(\"td\", _hoisted_12, [\n                      _createElementVNode(\"button\", {\n                        onClick: ($event: any) => (startEdit(idx, item))\n                      }, [\n                        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'pen-to-square'] })\n                      ], 8, _hoisted_13),\n                      _createElementVNode(\"button\", {\n                        onClick: ($event: any) => (deleteRemark(item.id)),\n                        class: \"ml10\"\n                      }, [\n                        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'trash'] })\n                      ], 8, _hoisted_14)\n                    ]))\n              ]))\n            }), 128))\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_15, [\n          _createElementVNode(\"p\", _hoisted_16, \"Add New \" + _toDisplayString(typeToText(__props.type)), 1),\n          _createElementVNode(\"div\", _hoisted_17, [\n            _createElementVNode(\"div\", _hoisted_18, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((newRemarkCode).value = $event)),\n                type: \"text\",\n                placeholder: \"code\",\n                class: \"firstInput\"\n              }, null, 512), [\n                [_vModelText, newRemarkCode.value]\n              ]),\n              _createElementVNode(\"button\", {\n                onClick: addRemark,\n                class: \"crcDefaultBtn ml10\"\n              }, \"Add\")\n            ]),\n            _withDirectives(_createElementVNode(\"textarea\", {\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((newRemarkContent).value = $event)),\n              placeholder: \"content\",\n              class: \"remarkTextArea\",\n              maxlength: \"1000\"\n            }, null, 512), [\n              [_vModelText, newRemarkContent.value]\n            ])\n          ]),\n          _createElementVNode(\"div\", null, [\n            _createElementVNode(\"button\", {\n              class: \"crcDefaultBtn\",\n              onClick: okSelect\n            }, \"OK\"),\n            _createElementVNode(\"button\", {\n              onClick: cancelSelect,\n              class: \"ml10 crcDefaultBtn\"\n            }, \"CANCEL\")\n          ])\n        ])\n      ])\n    ]),\n    (toastMessage.value)\n      ? (_openBlock(), _createBlock(ToastNotification, {\n          key: 0,\n          message: toastMessage.value,\n          messageType: toastMessageType.value,\n          duration: 1500,\n          position: \"bottom-right\"\n        }, null, 8, [\"message\", \"messageType\"]))\n      : _createCommentVNode(\"\", true),\n    (passLayout.value)\n      ? (_openBlock(), _createBlock(PassWordCheck, {\n          key: 1,\n          crcPassWord: crcPassWordVal.value,\n          onReturnPassWordCheck: returnPassWordCheck,\n          onPassWordClose: passWordClose\n        }, null, 8, [\"crcPassWord\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"crcPopUpDiv remark\">\r\n    <div style=\"position: relative; height: 100%; width: 100%\">\r\n      <div class=\"headerRemark topLine\">\r\n        <span>Search Type</span>\r\n        <select v-model=\"searchType\">\r\n          <option value=\"Code\">Code</option>\r\n          <option value=\"Content\">Content</option>\r\n        </select>\r\n        <input type=\"text\" v-model=\"searchRemark\"/>\r\n        <!-- Search 버튼에 searchRemark 함수 연결 -->\r\n        <button type=\"button\" @click=\"searchRemarkData\">Search</button>\r\n      </div>\r\n\r\n      <table class=\"remarkDefaultTable\">\r\n        <colgroup>\r\n          <col width=\"5%\"/>\r\n          <col width=\"20%\"/>\r\n          <col width=\"*\"/>\r\n          <col width=\"20%\"/>\r\n        </colgroup>\r\n        <thead>\r\n        <tr>\r\n          <th></th>\r\n          <th>Name</th>\r\n          <th>Content</th>\r\n          <th>Action</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr v-for=\"(item, idx) in remarkArr\" :key=\"idx\">\r\n          <td>\r\n            <input type=\"checkbox\" v-model=\"selectedItems\" :value=\"item.id\"/>\r\n          </td>\r\n\r\n          <!-- 편집 모드인지 확인 -->\r\n          <td v-if=\"editIndex === idx\">\r\n            <input v-model=\"editedCode\" type=\"text\"/>\r\n          </td>\r\n          <td v-else class=\"text-left\">{{ item?.code }}</td>\r\n\r\n          <td v-if=\"editIndex === idx\">\r\n            <textarea class=\"remarkTextArea table\" v-model=\"editedContent\" maxlength=\"1000\" />\r\n          </td>\r\n          <td v-else class=\"text-left\" v-html=\"item?.remarkAllContent\"></td>\r\n\r\n          <td v-if=\"editIndex === idx\">\r\n            <!-- Save 버튼 -->\r\n            <button class=\"crcDefaultBtn\" @click=\"saveEdit(item.id)\">Save</button>\r\n            <button class=\"crcDefaultBtn ml10\" @click=\"cancelEdit\">Cancel</button>\r\n          </td>\r\n          <td v-else>\r\n            <!-- Edit 버튼 -->\r\n            <button @click=\"startEdit(idx, item)\">\r\n              <font-awesome-icon :icon=\"['fas', 'pen-to-square']\"/>\r\n            </button>\r\n            <button @click=\"deleteRemark(item.id)\" class=\"ml10\">\r\n              <font-awesome-icon :icon=\"['fas', 'trash']\"/>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <div class=\"mt20 remarkBottomFix\">\r\n        <p class=\"text-left fs10 fw-bold mb10\">Add New {{ typeToText(type) }}</p>\r\n        <div class=\"remarkBottomBtnGroup mb10\">\r\n          <div class=\"flex-justify-between\">\r\n            <input v-model=\"newRemarkCode\" type=\"text\" placeholder=\"code\" class=\"firstInput\"/>\r\n            <button @click=\"addRemark\" class=\"crcDefaultBtn ml10\">Add</button>\r\n          </div>\r\n          <textarea v-model=\"newRemarkContent\" placeholder=\"content\" class=\"remarkTextArea\" maxlength=\"1000\"></textarea>\r\n        </div>\r\n        <div>\r\n          <button class=\"crcDefaultBtn\" @click=\"okSelect\">OK</button>\r\n          <button @click=\"cancelSelect\" class=\"ml10 crcDefaultBtn\">CANCEL</button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <ToastNotification\r\n      v-if=\"toastMessage\"\r\n      :message=\"toastMessage\"\r\n      :messageType=\"toastMessageType\"\r\n      :duration=\"1500\"\r\n      position=\"bottom-right\"\r\n  />\r\n  <PassWordCheck v-if=\"passLayout\" :crcPassWord=\"crcPassWordVal\" @returnPassWordCheck=\"returnPassWordCheck\" @passWordClose=\"passWordClose\"/>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, defineEmits, onBeforeMount, nextTick, computed} from \"vue\";\r\nimport {\r\n  crcRemarkGet,\r\n  createCrcRemarkApi,\r\n  deleteCrcRemarkApi,\r\n  updateCrcRemarkApi,\r\n  crcSearchGet,\r\n  crcRecoGet,\r\n  crcRecoSearchGet,\r\n  createCrcRecoApi,\r\n  deleteCrcRecoApi,\r\n  updateCrcRecoApi,\r\n  crcCommentGet, crcCommentSearchGet, createCrcCommentApi, deleteCrcCommentApi, updateCrcCommentApi // 서치 API 추가\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport PassWordCheck from \"@/components/commonUi/PassWordCheck.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst props = defineProps({\r\n  crcDefaultMode: {\r\n    type: Boolean,\r\n    required: true,\r\n  },\r\n  type: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  crcPassWord: {\r\n    type: String,\r\n  }\r\n});\r\n\r\nconst store = useStore();\r\nconst emit = defineEmits(['cancel', 'listUpdated']);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst remarkArr = ref<any>([]);\r\nconst selectedItems = ref<number[]>([]);\r\nconst newRemarkCode = ref(\"\");\r\nconst newRemarkContent = ref(\"\");\r\nconst searchType = ref(\"Code\");\r\nconst editIndex = ref<number | null>(null);\r\nconst editedCode = ref(\"\");\r\nconst editedContent = ref(\"\");\r\nconst searchRemark = ref(''); // 검색 필드\r\nconst crcDefaultModeVal = ref(false);\r\nconst crcPassWordVal = ref('');\r\nconst passWordPass = ref(false);\r\nconst passLayout = ref(false);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\nonBeforeMount(async () => {\r\n  crcDefaultModeVal.value = props.crcDefaultMode;\r\n  crcPassWordVal.value = props.crcPassWord || '';\r\n  passWordPass.value = false;\r\n  await loadRemarks('mounted');\r\n})\r\n// 서버로부터 Remark 데이터 로드\r\nconst loadRemarks = async (type?: string) => {\r\n  let response: any = [];\r\n  if (props.type === 'remark') {\r\n    response = await crcRemarkGet();\r\n  } else if (props.type === 'comment') {\r\n    response = await crcCommentGet();\r\n  } else {\r\n    response = await crcRecoGet();\r\n  }\r\n\r\n  remarkArr.value = response?.data || [];\r\n  if (type !== 'mounted') {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast(\"Search completed.\");\r\n  }\r\n};\r\nconst passWordClose= () => {\r\n  passLayout.value = false;\r\n}\r\n\r\nconst returnPassWordCheck = (val: boolean) => {\r\n  if (val) {\r\n    passWordPass.value = true;\r\n    // 패스 체크 모달 닫기\r\n    passLayout.value = false;\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast(\"Admin verification is complete. Please click the button again.\");\r\n  } else {\r\n    passWordPass.value = false;\r\n    // 패스 체크 모달 닫기\r\n    passLayout.value = false;\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast(\"The administrator password is incorrect.\");\r\n  }\r\n}\r\n\r\n// 검색 기능\r\nconst searchRemarkData = async () => {\r\n  try {\r\n    if (searchRemark.value === '') {\r\n      await loadRemarks();\r\n      return\r\n    }\r\n    let searchParam: any = {};\r\n    if (searchType.value === \"Code\") {\r\n      searchParam.code = searchRemark.value;\r\n    } else if (searchType.value === \"Content\") {\r\n      searchParam.remarkAllContent = searchRemark.value;\r\n    }\r\n\r\n    // const response = await crcSearchGet(searchParam);\r\n    let response: any = [];\r\n    if (props.type === 'remark') {\r\n      response = await crcSearchGet(searchParam);\r\n    } else if (props.type === 'comment') {\r\n      response = await crcCommentSearchGet(searchParam);\r\n    } else {\r\n      response = await crcRecoSearchGet(searchParam);\r\n    }\r\n    remarkArr.value = response?.data || [];\r\n\r\n    if (remarkArr.value.length === 0) {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n      showToast(\"No results found.\");\r\n    } else {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n      showToast(\"Search completed.\");\r\n    }\r\n  } catch (error) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast('Search failed.');\r\n    console.error(\"Error during search:\", error);\r\n  }\r\n};\r\n\r\n\r\n// Remark 추가\r\nconst addRemark = async () => {\r\n  if (!newRemarkCode.value || !newRemarkContent.value) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast(\"code와 content를 입력해주세요.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    if (props.type === 'remark') {\r\n      await createCrcRemarkApi({\r\n        code: newRemarkCode.value,\r\n        remarkAllContent: newRemarkContent.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\r\n      });\r\n    } else if (props.type === 'comment') {\r\n      await createCrcCommentApi({\r\n        code: newRemarkCode.value,\r\n        remarkAllContent: newRemarkContent.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\r\n      });\r\n    } else {\r\n      await createCrcRecoApi({\r\n        code: newRemarkCode.value,\r\n        remarkAllContent: newRemarkContent.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\r\n      });\r\n    }\r\n\r\n    newRemarkCode.value = \"\";\r\n    newRemarkContent.value = \"\";\r\n    await loadRemarks();\r\n    await scrollToBottom();\r\n  } catch (error) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast('Failed to add remark')\r\n  }\r\n};\r\n\r\n// Remark 삭제\r\nconst deleteRemark = async (id: number) => {\r\n\r\n  try {\r\n    if (props.type === 'remark') {\r\n      await deleteCrcRemarkApi({id});\r\n    } else if (props.type === 'comment') {\r\n      await deleteCrcCommentApi({id});\r\n    } else {\r\n      await deleteCrcRecoApi({id});\r\n    }\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast('delete Success')\r\n    await loadRemarks();\r\n  } catch (error) {\r\n    console.error(\"Failed to delete remark:\", error);\r\n  }\r\n};\r\n\r\nconst scrollToBottom = async () => {\r\n  await nextTick();\r\n  const scrollContainer = document.querySelector('.crcPopUpDiv.remark');\r\n  if (scrollContainer) {\r\n    scrollContainer.scrollTop = scrollContainer.scrollHeight;\r\n  }\r\n}\r\n\r\n// 편집 시작\r\nconst startEdit = (index: number, item: any) => {\r\n  editIndex.value = index;\r\n  editedCode.value = item.code;\r\n  editedContent.value = item.remarkAllContent.replaceAll('<br>', '\\r\\n');\r\n};\r\n\r\n// 편집 저장\r\nconst saveEdit = async (id: number) => {\r\n  if (!editedCode.value || !editedContent.value) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast(\"코드와 내용을 입력해주세요.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n\r\n    if (props.type === 'remark') {\r\n      await updateCrcRemarkApi([\r\n        {\r\n          id: id,\r\n          code: editedCode.value,\r\n          remarkAllContent: editedContent.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\r\n        },\r\n      ]);\r\n    } else if (props.type === 'comment') {\r\n      await updateCrcCommentApi([\r\n        {\r\n          id: id,\r\n          code: editedCode.value,\r\n          remarkAllContent: editedContent.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\r\n        },\r\n      ]);\r\n    } else {\r\n      await updateCrcRecoApi([\r\n        {\r\n          id: id,\r\n          code: editedCode.value,\r\n          remarkAllContent: editedContent.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>'),\r\n        },\r\n      ]);\r\n    }\r\n    editIndex.value = null;\r\n    await loadRemarks();\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast('save Success')\r\n  } catch (error) {\r\n    console.error(\"Failed to update remark:\", error);\r\n  }\r\n};\r\n\r\n// 편집 취소\r\nconst cancelEdit = () => {\r\n  editIndex.value = null;\r\n};\r\n\r\nconst typeToText = (type: string) => {\r\n  switch (type) {\r\n    case 'reco':\r\n      return 'Recommendation';\r\n    case 'comment':\r\n      return 'Comment';\r\n    case 'remark':\r\n      return 'Remark';\r\n  }\r\n}\r\n\r\n// OK 버튼 클릭 시 처리\r\nconst okSelect = () => {\r\n  const selectedRemarks = remarkArr.value.filter(item => selectedItems.value.includes(item.id));\r\n\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  showToast('Remark Add Success');\r\n  emit(\"listUpdated\", selectedRemarks, props.type);\r\n};\r\n\r\n// CANCEL 버튼 클릭 시 처리\r\nconst cancelSelect = () => {\r\n  emit(\"cancel\");\r\n};\r\n\r\n// 토스트 메시지 표시\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 2000);\r\n};\r\n\r\n</script>\r\n","import script from \"./remark.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./remark.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"codeDiv\" }\nconst _hoisted_2 = { class: \"moDivBox mt20\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"mt20\"\n}\nconst _hoisted_4 = { class: \"crcDivTitle\" }\nconst _hoisted_5 = { class: \"remarkUlList\" }\nconst _hoisted_6 = [\"onUpdate:modelValue\"]\nconst _hoisted_7 = {\n  key: 1,\n  class: \"mt20\"\n}\nconst _hoisted_8 = { class: \"crcDivTitle\" }\nconst _hoisted_9 = { class: \"remarkUlList\" }\nconst _hoisted_10 = [\"onUpdate:modelValue\"]\nconst _hoisted_11 = {\n  key: 2,\n  class: \"mt20\"\n}\nconst _hoisted_12 = { class: \"crcDivTitle\" }\nconst _hoisted_13 = { class: \"remarkUlList\" }\nconst _hoisted_14 = [\"onUpdate:modelValue\"]\nconst _hoisted_15 = { class: \"mt20\" }\n\nimport Remark from \"@/views/datebase/commponent/detail/report/component/remark.vue\";\r\n\r\nimport CrcCompontent from \"@/components/commonUi/crcCompontent.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nimport {computed, nextTick, onBeforeMount, onMounted, ref} from \"vue\";\r\nimport {\r\n  crcDataGet, crcGet, crcOptionGet,\r\n  createCrcDataApi, updateCrcDataApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'crcAdd',\n  props: {\r\n  crcSetArrP: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n  addEditType: {\r\n    type: String,\r\n  },\r\n  editItem: { // 새로운 prop 추가\r\n    type: Object,\r\n    default: () => ({}),\r\n  },\r\n},\n  emits: ['closeIsCrcAdd', 'refresh'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst emit = __emit;\r\n\r\nconst crcDataArr = ref<any>({\r\n  code: '',\r\n  crcContent: {\r\n    wbc: [],\r\n    rbc: [],\r\n    plt: [],\r\n  },\r\n  crcRemark: [],\r\n  crcRecommendation: [],\r\n});\r\n\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst codeVal = ref('');\r\nconst crcSetArr = ref<any>([]);\r\nconst isRemark = ref(false); // Remark 모달 창 열림/닫힘 상태\r\nconst remarkList = ref<any[]>([]); // Remark 리스트 상태\r\nconst recoList = ref<any[]>([]);\r\nconst crcDefaultMode = ref(false);\r\nconst isRecommendation = ref(false);\r\nconst commentList = ref<any[]>([]);\r\nconst crcRemarkCount = ref<any>([]);\r\nconst crcPassWord = ref('');\r\nconst isComment = ref(false);\r\n\r\nonBeforeMount(async () => {\r\n  // crcSetArr 초기화\r\n  crcSetArr.value = JSON.parse(JSON.stringify(props.crcSetArrP));\r\n\r\n  // Edit 모드일 경우 editItem의 값을 초기화\r\n  if (props.addEditType === 'edit') {\r\n    codeVal.value = props.editItem.code; // 코드 값 초기화\r\n\r\n    // 각 유형에 대해 editItem의 crcContent 값을 설정\r\n    const types = ['plt', 'rbc', 'wbc'];\r\n\r\n    types.forEach(type => {\r\n      props.editItem.crcContent[type].forEach(content => {\r\n        const match = crcSetArr.value.find(item => item.crcTitle === content.crcTitle && item.crcType === content.crcType);\r\n        if (match) {\r\n          // crcType이 \"select\"인 경우 val에 값을 넣고, 아닌 경우 crcContent에 값을 매핑\r\n          if (match.crcType === 'select') {\r\n            match.val = content.crcContent; // select인 경우 val에 설정\r\n          } else {\r\n            match.crcContent = content.crcContent; // 나머지 경우 crcContent에 설정\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    // 리마크 초기화\r\n    remarkList.value = props.editItem.crcRemark || [];\r\n    recoList.value = props.editItem.crcRecommendation || [];\r\n    commentList.value = props.editItem.crcComment || [];\r\n    remarkList.value = remarkList.value.map(item => {\r\n      return {\r\n        ...item,\r\n        remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n      };\r\n    });\r\n\r\n    commentList.value = commentList.value.map(item => {\r\n      return {\r\n        ...item,\r\n        remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n      };\r\n    });\r\n\r\n    recoList.value = recoList.value.map(item => {\r\n      return {\r\n        ...item,\r\n        remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n      };\r\n    });\r\n\r\n\r\n  } else {\r\n    crcSetArr.value = (await crcGet()).data;\r\n    for (const argument of crcSetArr.value) {\r\n      if (argument.crcType === 'select') {\r\n        if (!argument?.val) {\r\n          argument.val = argument.crcContent.split(',')[0];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const crcOptionApi = await crcOptionGet();\r\n  if (crcOptionApi.data.length !== 0) {\r\n    crcDefaultMode.value = crcOptionApi.data[0].crcMode;\r\n    crcRemarkCount.value = crcOptionApi.data[0].crcRemarkCount;\r\n    crcPassWord.value = crcOptionApi.data[0].crcPassWord;\r\n  }\r\n});\r\n\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n// 데이터 저장 함수\r\nconst pushCrcData = (dataArray: any, type: any, title: any, content: any, percentText = null, id: any) => {\r\n  const data = {crcTitle: title, crcContent: content, crcType: type, id: id};\r\n\r\n  if (type === 'percent') {\r\n    data.crcPercentText = percentText;\r\n  }\r\n\r\n  dataArray.push(data);\r\n};\r\nconst convertToNewlines = (content: string) => {\r\n  return content.replaceAll('<br>', '\\r\\n');\r\n};\r\n\r\n\r\nconst saveCrcData = async () => {\r\n  if (codeVal.value === '') {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    await showToast('Please enter the code.');\r\n    return;\r\n  }\r\n  for (const argument of crcSetArr.value) {\r\n    const {morphologyType, crcType, crcTitle, crcContent, crcPercentText, val, id} = argument;\r\n    const targetArray = crcDataArr.value.crcContent[morphologyType.toLowerCase()] || [];\r\n\r\n    if (crcType === 'select') {\r\n      pushCrcData(targetArray, crcType, crcTitle, val, null, id);\r\n    } else {\r\n      pushCrcData(targetArray, crcType, crcTitle, crcContent, crcPercentText, id);\r\n    }\r\n\r\n    // targetArray를 다시 crcDataArr에 할당\r\n    crcDataArr.value.crcContent[morphologyType.toLowerCase()] = targetArray;\r\n  }\r\n  crcDataArr.value.code = codeVal.value;\r\n  crcDataArr.value.crcRemark = remarkList.value;\r\n  crcDataArr.value.crcComment = commentList.value;\r\n  crcDataArr.value.crcRecommendation = recoList.value;\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  await showToast('Success');\r\n  await createCrcDataApi(crcDataArr.value);\r\n  emit('refresh');\r\n  emit('closeIsCrcAdd');\r\n};\r\n\r\n\r\nconst updateSelect = (val) => {\r\n  const updatedItem = crcSetArr.value.find(item => item.id === val.id);\r\n  updatedItem.val = val.val;\r\n}\r\n\r\nconst closeIsCrcAddChild = () => {\r\n  emit('closeIsCrcAdd')\r\n}\r\n\r\n// 항목 수정 저장\r\nconst saveEdit = async () => {\r\n  for (const argument of crcSetArr.value) {\r\n    const {morphologyType, crcType, crcTitle, crcContent, crcPercentText, val, id} = argument;\r\n    const targetArray = crcDataArr.value.crcContent[morphologyType.toLowerCase()] || [];\r\n\r\n    if (crcType === 'select') {\r\n      pushCrcData(targetArray, crcType, crcTitle, val, null, id);\r\n    } else {\r\n      pushCrcData(targetArray, crcType, crcTitle, crcContent, crcPercentText, id);\r\n    }\r\n\r\n    // targetArray를 다시 crcDataArr에 할당\r\n    crcDataArr.value.crcContent[morphologyType.toLowerCase()] = targetArray;\r\n  }\r\n  try {\r\n    await updateCrcDataApi([{\r\n      id: props.editItem.id,\r\n      crcRemark: remarkList.value,\r\n      crcRecommendation: recoList.value,\r\n      crcComment: commentList.value,\r\n      crcContent: crcDataArr.value.crcContent,\r\n      code: codeVal.value\r\n    }]); // 수정된 데이터 서버로 전송\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    await showToast('Edit completed.');\r\n    emit('refresh');\r\n    emit('closeIsCrcAdd');\r\n  } catch (error) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    await showToast('Failed to update item');\r\n  }\r\n};\r\n\r\nconst showToast = async (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\r\n\r\nconst listDel = (idx: any, type: string) => {\r\n  if (type === 'remark') {\r\n    remarkList.value.splice(idx, 1);\r\n  } else if (type === 'reco') {\r\n    recoList.value.splice(idx, 1);\r\n  } else if (type === 'comment') {\r\n    commentList.value.splice(idx, 1);\r\n  }\r\n}\r\n\r\nconst openSelect = (type: string) => {\r\n  switch (type) {\r\n    case 'remark':\r\n      isRemark.value = true;\r\n      break;\r\n    case 'comment':\r\n      isComment.value = true;\r\n      break;\r\n    case 'recommendation':\r\n      isRecommendation.value = true;\r\n      break;\r\n  }\r\n}\r\n\r\nconst closeSelect = (type: string) => {\r\n  switch (type) {\r\n    case 'remark':\r\n      isRemark.value = false;\r\n      break;\r\n    case 'comment':\r\n      isComment.value = false;\r\n      break;\r\n    case 'recommendation':\r\n      isRecommendation.value = false;\r\n      break;\r\n  }\r\n}\r\n\r\nconst initializeList = (list: any) => {\r\n  if (list.value.length === 0) {\r\n    list.value.push({\r\n      code: '',\r\n      id: 0,\r\n      remarkAllContent: '',\r\n      remarkContent: '',\r\n    });\r\n  }\r\n};\r\nconst remarkallContentPush = (newList: any, list) => {\r\n  for (const el of newList) {\r\n    if (list.value[0].remarkAllContent.length === 0) {\r\n      list.value[0].remarkAllContent += convertToNewlines(el.remarkAllContent);\r\n    } else {\r\n      list.value[0].remarkAllContent += '\\r\\r'\r\n      list.value[0].remarkAllContent += convertToNewlines(el.remarkAllContent);\r\n    }\r\n  }\r\n}\r\n\r\nconst updateList = (newList: any[], type: string) => {\r\n  initializeList(recoList);\r\n  initializeList(remarkList);\r\n  initializeList(commentList);\r\n\r\n  switch (type) {\r\n    case 'remark':\r\n      remarkallContentPush(newList,remarkList)\r\n      closeSelect('remark');\r\n      break;\r\n    case 'comment':\r\n      remarkallContentPush(newList,commentList)\r\n      closeSelect('comment');\r\n      break;\r\n    case 'reco':\r\n      remarkallContentPush(newList,recoList)\r\n      closeSelect('recommendation');\r\n      break;\r\n  }\r\n}\r\nconst remarkCountReturnCode = (idx: any) => {\r\n  if (crcRemarkCount.value.length === 0) {\r\n    return;\r\n  }\r\n  return crcRemarkCount.value[idx].checked;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", {\n      onClick: closeIsCrcAddChild,\n      class: \"crcAddBack\"\n    }),\n    _createElementVNode(\"div\", {\n      class: \"crcPopUpDiv crcAdd\",\n      onClick: _cache[4] || (_cache[4] = _withModifiers(() => {}, [\"stop\"]))\n    }, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _cache[8] || (_cache[8] = _createElementVNode(\"span\", null, \"Code\", -1)),\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          class: \"codeInput\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((codeVal).value = $event))\n        }, null, 512), [\n          [_vModelText, codeVal.value]\n        ])\n      ]),\n      _createElementVNode(\"div\", null, [\n        _createVNode(CrcCompontent, {\n          items: crcSetArr.value,\n          onUpdateSelect: updateSelect,\n          moType: \"RBC\",\n          pageName: \"report\"\n        }, null, 8, [\"items\"]),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", null, [\n            _createVNode(CrcCompontent, {\n              items: crcSetArr.value,\n              onUpdateSelect: updateSelect,\n              moType: \"WBC\",\n              pageName: \"report\"\n            }, null, 8, [\"items\"])\n          ]),\n          _createElementVNode(\"div\", null, [\n            _createVNode(CrcCompontent, {\n              items: crcSetArr.value,\n              onUpdateSelect: updateSelect,\n              moType: \"PLT\",\n              pageName: \"report\"\n            }, null, 8, [\"items\"])\n          ])\n        ]),\n        (remarkCountReturnCode(0))\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n              _createElementVNode(\"div\", _hoisted_4, [\n                _cache[9] || (_cache[9] = _createElementVNode(\"span\", null, \"Remark\", -1)),\n                _createElementVNode(\"button\", {\n                  class: \"reSelect\",\n                  onClick: _cache[1] || (_cache[1] = ($event: any) => (openSelect('remark')))\n                }, \"Remark Select\")\n              ]),\n              _createElementVNode(\"div\", _hoisted_5, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(remarkList.value, (item, index) => {\n                  return (_openBlock(), _createElementBlock(\"div\", { key: index }, [\n                    _withDirectives(_createElementVNode(\"textarea\", {\n                      \"onUpdate:modelValue\": ($event: any) => ((item.remarkAllContent) = $event)\n                    }, null, 8, _hoisted_6), [\n                      [_vModelText, item.remarkAllContent]\n                    ])\n                  ]))\n                }), 128))\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (remarkCountReturnCode(1))\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n              _createElementVNode(\"div\", _hoisted_8, [\n                _cache[10] || (_cache[10] = _createElementVNode(\"span\", null, \" Comment \", -1)),\n                _createElementVNode(\"button\", {\n                  class: \"reSelect\",\n                  onClick: _cache[2] || (_cache[2] = ($event: any) => (openSelect('comment')))\n                }, \"Comment Select\")\n              ]),\n              _createElementVNode(\"div\", _hoisted_9, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(commentList.value, (item, index) => {\n                  return (_openBlock(), _createElementBlock(\"div\", { key: index }, [\n                    _withDirectives(_createElementVNode(\"textarea\", {\n                      \"onUpdate:modelValue\": ($event: any) => ((item.remarkAllContent) = $event)\n                    }, null, 8, _hoisted_10), [\n                      [_vModelText, item.remarkAllContent]\n                    ])\n                  ]))\n                }), 128))\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (remarkCountReturnCode(2))\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n              _createElementVNode(\"div\", _hoisted_12, [\n                _cache[11] || (_cache[11] = _createElementVNode(\"span\", null, \" Recommendation \", -1)),\n                _createElementVNode(\"button\", {\n                  class: \"reSelect\",\n                  onClick: _cache[3] || (_cache[3] = ($event: any) => (openSelect('recommendation')))\n                }, \"Recommendation Select\")\n              ]),\n              _createElementVNode(\"div\", _hoisted_13, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(recoList.value, (item, index) => {\n                  return (_openBlock(), _createElementBlock(\"div\", { key: index }, [\n                    _withDirectives(_createElementVNode(\"textarea\", {\n                      \"onUpdate:modelValue\": ($event: any) => ((item.remarkAllContent) = $event)\n                    }, null, 8, _hoisted_14), [\n                      [_vModelText, item.remarkAllContent]\n                    ])\n                  ]))\n                }), 128))\n              ])\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_15, [\n        (__props.addEditType === 'add')\n          ? (_openBlock(), _createElementBlock(\"button\", {\n              key: 0,\n              class: \"crcDefaultBtn\",\n              type: \"button\",\n              onClick: saveCrcData\n            }, \"Save\"))\n          : (_openBlock(), _createElementBlock(\"button\", {\n              key: 1,\n              class: \"crcDefaultBtn\",\n              type: \"button\",\n              onClick: saveEdit\n            }, \"Edit\")),\n        _createElementVNode(\"button\", {\n          class: \"crcDefaultBtn ml10\",\n          type: \"button\",\n          onClick: closeIsCrcAddChild\n        }, \"Close\")\n      ])\n    ]),\n    (toastMessage.value)\n      ? (_openBlock(), _createBlock(ToastNotification, {\n          key: 0,\n          message: toastMessage.value,\n          messageType: toastMessageType.value,\n          duration: 1500,\n          position: \"bottom-right\"\n        }, null, 8, [\"message\", \"messageType\"]))\n      : _createCommentVNode(\"\", true),\n    (isRemark.value)\n      ? (_openBlock(), _createBlock(Remark, {\n          key: 1,\n          onCancel: _cache[5] || (_cache[5] = ($event: any) => (closeSelect('remark'))),\n          onListUpdated: updateList,\n          type: \"remark\",\n          crcDefaultMode: crcDefaultMode.value,\n          crcPassWord: crcPassWord.value\n        }, null, 8, [\"crcDefaultMode\", \"crcPassWord\"]))\n      : _createCommentVNode(\"\", true),\n    (isComment.value)\n      ? (_openBlock(), _createBlock(Remark, {\n          key: 2,\n          onCancel: _cache[6] || (_cache[6] = ($event: any) => (closeSelect('comment'))),\n          onListUpdated: updateList,\n          type: \"comment\",\n          crcDefaultMode: crcDefaultMode.value,\n          crcPassWord: crcPassWord.value\n        }, null, 8, [\"crcDefaultMode\", \"crcPassWord\"]))\n      : _createCommentVNode(\"\", true),\n    (isRecommendation.value)\n      ? (_openBlock(), _createBlock(Remark, {\n          key: 3,\n          onCancel: _cache[7] || (_cache[7] = ($event: any) => (closeSelect('recommendation'))),\n          onListUpdated: updateList,\n          type: \"reco\",\n          crcDefaultMode: crcDefaultMode.value,\n          crcPassWord: crcPassWord.value\n        }, null, 8, [\"crcDefaultMode\", \"crcPassWord\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 4,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div @click=\"closeIsCrcAddChild\" class=\"crcAddBack\">\r\n  </div>\r\n  <div class=\"crcPopUpDiv crcAdd\"  @click.stop>\r\n    <div class=\"codeDiv\">\r\n      <span>Code</span>\r\n      <input type=\"text\" class=\"codeInput\" v-model=\"codeVal\"/>\r\n    </div>\r\n    <div>\r\n      <crc-compontent\r\n          :items=\"crcSetArr\"\r\n          @updateSelect=\"updateSelect\"\r\n          moType=\"RBC\"\r\n          pageName=\"report\"\r\n      ></crc-compontent>\r\n\r\n      <div class=\"moDivBox mt20\">\r\n        <div>\r\n          <crc-compontent\r\n              :items=\"crcSetArr\"\r\n              @updateSelect=\"updateSelect\"\r\n              moType=\"WBC\"\r\n              pageName=\"report\"\r\n          ></crc-compontent>\r\n        </div>\r\n\r\n        <div>\r\n          <crc-compontent\r\n              :items=\"crcSetArr\"\r\n              @updateSelect=\"updateSelect\"\r\n              moType=\"PLT\"\r\n              pageName=\"report\"\r\n          ></crc-compontent>\r\n        </div>\r\n      </div>\r\n      <!-- Remark 관련 -->\r\n      <div class=\"mt20\" v-if=\"remarkCountReturnCode(0)\">\r\n        <div class=\"crcDivTitle\">\r\n          <span>Remark</span>\r\n          <button class=\"reSelect\" @click=\"openSelect('remark')\">Remark Select</button>\r\n        </div>\r\n\r\n        <!-- 업데이트된 Remark 리스트를 보여주는 부분 -->\r\n        <div class=\"remarkUlList\">\r\n          <div v-for=\"(item, index) in remarkList\" :key=\"index\">\r\n            <textarea v-model=\"item.remarkAllContent\"></textarea>\r\n            <!--            <button @click=\"listDel(index, 'remark')\">-->\r\n            <!--              <font-awesome-icon :icon=\"['fas', 'trash']\"/>-->\r\n            <!--            </button>-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt20\" v-if=\"remarkCountReturnCode(1)\">\r\n        <div class=\"crcDivTitle\">\r\n          <span> Comment </span>\r\n          <button class=\"reSelect\" @click=\"openSelect('comment')\">Comment Select</button>\r\n        </div>\r\n\r\n        <!-- 업데이트된 Remark 리스트를 보여주는 부분 -->\r\n        <div class=\"remarkUlList\">\r\n          <div v-for=\"(item, index) in commentList\" :key=\"index\">\r\n            <textarea v-model=\"item.remarkAllContent\"></textarea>\r\n            <!--            <button @click=\"listDel(index, 'comment')\">-->\r\n            <!--              <font-awesome-icon :icon=\"['fas', 'trash']\"/>-->\r\n            <!--            </button>-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt20\" v-if=\"remarkCountReturnCode(2)\">\r\n        <div class=\"crcDivTitle\">\r\n          <span> Recommendation </span>\r\n          <button class=\"reSelect\" @click=\"openSelect('recommendation')\">Recommendation Select</button>\r\n        </div>\r\n\r\n        <!-- 업데이트된 Remark 리스트를 보여주는 부분 -->\r\n        <div class=\"remarkUlList\">\r\n          <div v-for=\"(item, index) in recoList\" :key=\"index\">\r\n            <textarea v-model=\"item.remarkAllContent\"></textarea>\r\n            <!--            <button @click=\"listDel(index, 'reco')\">-->\r\n            <!--              <font-awesome-icon :icon=\"['fas', 'trash']\"/>-->\r\n            <!--            </button>-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"mt20\">\r\n      <button class=\"crcDefaultBtn\" type=\"button\" @click=\"saveCrcData\" v-if=\"addEditType === 'add'\">Save</button>\r\n      <button class=\"crcDefaultBtn\" type=\"button\" @click=\"saveEdit\" v-else>Edit</button>\r\n      <button class=\"crcDefaultBtn ml10\" type=\"button\" @click=\"closeIsCrcAddChild\">Close</button>\r\n    </div>\r\n  </div>\r\n  <ToastNotification\r\n      v-if=\"toastMessage\"\r\n      :message=\"toastMessage\"\r\n      :messageType=\"toastMessageType\"\r\n      :duration=\"1500\"\r\n      position=\"bottom-right\"\r\n  />\r\n  <Remark v-if=\"isRemark\" @cancel=\"closeSelect('remark')\" @listUpdated=\"updateList\" type=\"remark\"\r\n          :crcDefaultMode=\"crcDefaultMode\" :crcPassWord=\"crcPassWord\"/>\r\n  <Remark v-if=\"isComment\" @cancel=\"closeSelect('comment')\" @listUpdated=\"updateList\" type=\"comment\"\r\n          :crcDefaultMode=\"crcDefaultMode\" :crcPassWord=\"crcPassWord\"/>\r\n  <Remark v-if=\"isRecommendation\" @cancel=\"closeSelect('recommendation')\" @listUpdated=\"updateList\" type=\"reco\"\r\n          :crcDefaultMode=\"crcDefaultMode\" :crcPassWord=\"crcPassWord\"/>\r\n\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n\r\n\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport Remark from \"@/views/datebase/commponent/detail/report/component/remark.vue\";\r\n\r\nconst props = defineProps({\r\n  crcSetArrP: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n  addEditType: {\r\n    type: String,\r\n  },\r\n  editItem: { // 새로운 prop 추가\r\n    type: Object,\r\n    default: () => ({}),\r\n  },\r\n});\r\nimport CrcCompontent from \"@/components/commonUi/crcCompontent.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nimport {computed, nextTick, onBeforeMount, onMounted, ref} from \"vue\";\r\nimport {\r\n  crcDataGet, crcGet, crcOptionGet,\r\n  createCrcDataApi, updateCrcDataApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\n\r\nconst emit = defineEmits(['closeIsCrcAdd', 'refresh']);\r\n\r\nconst crcDataArr = ref<any>({\r\n  code: '',\r\n  crcContent: {\r\n    wbc: [],\r\n    rbc: [],\r\n    plt: [],\r\n  },\r\n  crcRemark: [],\r\n  crcRecommendation: [],\r\n});\r\n\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst codeVal = ref('');\r\nconst crcSetArr = ref<any>([]);\r\nconst isRemark = ref(false); // Remark 모달 창 열림/닫힘 상태\r\nconst remarkList = ref<any[]>([]); // Remark 리스트 상태\r\nconst recoList = ref<any[]>([]);\r\nconst crcDefaultMode = ref(false);\r\nconst isRecommendation = ref(false);\r\nconst commentList = ref<any[]>([]);\r\nconst crcRemarkCount = ref<any>([]);\r\nconst crcPassWord = ref('');\r\nconst isComment = ref(false);\r\n\r\nonBeforeMount(async () => {\r\n  // crcSetArr 초기화\r\n  crcSetArr.value = JSON.parse(JSON.stringify(props.crcSetArrP));\r\n\r\n  // Edit 모드일 경우 editItem의 값을 초기화\r\n  if (props.addEditType === 'edit') {\r\n    codeVal.value = props.editItem.code; // 코드 값 초기화\r\n\r\n    // 각 유형에 대해 editItem의 crcContent 값을 설정\r\n    const types = ['plt', 'rbc', 'wbc'];\r\n\r\n    types.forEach(type => {\r\n      props.editItem.crcContent[type].forEach(content => {\r\n        const match = crcSetArr.value.find(item => item.crcTitle === content.crcTitle && item.crcType === content.crcType);\r\n        if (match) {\r\n          // crcType이 \"select\"인 경우 val에 값을 넣고, 아닌 경우 crcContent에 값을 매핑\r\n          if (match.crcType === 'select') {\r\n            match.val = content.crcContent; // select인 경우 val에 설정\r\n          } else {\r\n            match.crcContent = content.crcContent; // 나머지 경우 crcContent에 설정\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    // 리마크 초기화\r\n    remarkList.value = props.editItem.crcRemark || [];\r\n    recoList.value = props.editItem.crcRecommendation || [];\r\n    commentList.value = props.editItem.crcComment || [];\r\n    remarkList.value = remarkList.value.map(item => {\r\n      return {\r\n        ...item,\r\n        remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n      };\r\n    });\r\n\r\n    commentList.value = commentList.value.map(item => {\r\n      return {\r\n        ...item,\r\n        remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n      };\r\n    });\r\n\r\n    recoList.value = recoList.value.map(item => {\r\n      return {\r\n        ...item,\r\n        remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n      };\r\n    });\r\n\r\n\r\n  } else {\r\n    crcSetArr.value = (await crcGet()).data;\r\n    for (const argument of crcSetArr.value) {\r\n      if (argument.crcType === 'select') {\r\n        if (!argument?.val) {\r\n          argument.val = argument.crcContent.split(',')[0];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const crcOptionApi = await crcOptionGet();\r\n  if (crcOptionApi.data.length !== 0) {\r\n    crcDefaultMode.value = crcOptionApi.data[0].crcMode;\r\n    crcRemarkCount.value = crcOptionApi.data[0].crcRemarkCount;\r\n    crcPassWord.value = crcOptionApi.data[0].crcPassWord;\r\n  }\r\n});\r\n\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n// 데이터 저장 함수\r\nconst pushCrcData = (dataArray: any, type: any, title: any, content: any, percentText = null, id: any) => {\r\n  const data = {crcTitle: title, crcContent: content, crcType: type, id: id};\r\n\r\n  if (type === 'percent') {\r\n    data.crcPercentText = percentText;\r\n  }\r\n\r\n  dataArray.push(data);\r\n};\r\nconst convertToNewlines = (content: string) => {\r\n  return content.replaceAll('<br>', '\\r\\n');\r\n};\r\n\r\n\r\nconst saveCrcData = async () => {\r\n  if (codeVal.value === '') {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    await showToast('Please enter the code.');\r\n    return;\r\n  }\r\n  for (const argument of crcSetArr.value) {\r\n    const {morphologyType, crcType, crcTitle, crcContent, crcPercentText, val, id} = argument;\r\n    const targetArray = crcDataArr.value.crcContent[morphologyType.toLowerCase()] || [];\r\n\r\n    if (crcType === 'select') {\r\n      pushCrcData(targetArray, crcType, crcTitle, val, null, id);\r\n    } else {\r\n      pushCrcData(targetArray, crcType, crcTitle, crcContent, crcPercentText, id);\r\n    }\r\n\r\n    // targetArray를 다시 crcDataArr에 할당\r\n    crcDataArr.value.crcContent[morphologyType.toLowerCase()] = targetArray;\r\n  }\r\n  crcDataArr.value.code = codeVal.value;\r\n  crcDataArr.value.crcRemark = remarkList.value;\r\n  crcDataArr.value.crcComment = commentList.value;\r\n  crcDataArr.value.crcRecommendation = recoList.value;\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  await showToast('Success');\r\n  await createCrcDataApi(crcDataArr.value);\r\n  emit('refresh');\r\n  emit('closeIsCrcAdd');\r\n};\r\n\r\n\r\nconst updateSelect = (val) => {\r\n  const updatedItem = crcSetArr.value.find(item => item.id === val.id);\r\n  updatedItem.val = val.val;\r\n}\r\n\r\nconst closeIsCrcAddChild = () => {\r\n  emit('closeIsCrcAdd')\r\n}\r\n\r\n// 항목 수정 저장\r\nconst saveEdit = async () => {\r\n  for (const argument of crcSetArr.value) {\r\n    const {morphologyType, crcType, crcTitle, crcContent, crcPercentText, val, id} = argument;\r\n    const targetArray = crcDataArr.value.crcContent[morphologyType.toLowerCase()] || [];\r\n\r\n    if (crcType === 'select') {\r\n      pushCrcData(targetArray, crcType, crcTitle, val, null, id);\r\n    } else {\r\n      pushCrcData(targetArray, crcType, crcTitle, crcContent, crcPercentText, id);\r\n    }\r\n\r\n    // targetArray를 다시 crcDataArr에 할당\r\n    crcDataArr.value.crcContent[morphologyType.toLowerCase()] = targetArray;\r\n  }\r\n  try {\r\n    await updateCrcDataApi([{\r\n      id: props.editItem.id,\r\n      crcRemark: remarkList.value,\r\n      crcRecommendation: recoList.value,\r\n      crcComment: commentList.value,\r\n      crcContent: crcDataArr.value.crcContent,\r\n      code: codeVal.value\r\n    }]); // 수정된 데이터 서버로 전송\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    await showToast('Edit completed.');\r\n    emit('refresh');\r\n    emit('closeIsCrcAdd');\r\n  } catch (error) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    await showToast('Failed to update item');\r\n  }\r\n};\r\n\r\nconst showToast = async (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\r\n\r\nconst listDel = (idx: any, type: string) => {\r\n  if (type === 'remark') {\r\n    remarkList.value.splice(idx, 1);\r\n  } else if (type === 'reco') {\r\n    recoList.value.splice(idx, 1);\r\n  } else if (type === 'comment') {\r\n    commentList.value.splice(idx, 1);\r\n  }\r\n}\r\n\r\nconst openSelect = (type: string) => {\r\n  switch (type) {\r\n    case 'remark':\r\n      isRemark.value = true;\r\n      break;\r\n    case 'comment':\r\n      isComment.value = true;\r\n      break;\r\n    case 'recommendation':\r\n      isRecommendation.value = true;\r\n      break;\r\n  }\r\n}\r\n\r\nconst closeSelect = (type: string) => {\r\n  switch (type) {\r\n    case 'remark':\r\n      isRemark.value = false;\r\n      break;\r\n    case 'comment':\r\n      isComment.value = false;\r\n      break;\r\n    case 'recommendation':\r\n      isRecommendation.value = false;\r\n      break;\r\n  }\r\n}\r\n\r\nconst initializeList = (list: any) => {\r\n  if (list.value.length === 0) {\r\n    list.value.push({\r\n      code: '',\r\n      id: 0,\r\n      remarkAllContent: '',\r\n      remarkContent: '',\r\n    });\r\n  }\r\n};\r\nconst remarkallContentPush = (newList: any, list) => {\r\n  for (const el of newList) {\r\n    if (list.value[0].remarkAllContent.length === 0) {\r\n      list.value[0].remarkAllContent += convertToNewlines(el.remarkAllContent);\r\n    } else {\r\n      list.value[0].remarkAllContent += '\\r\\r'\r\n      list.value[0].remarkAllContent += convertToNewlines(el.remarkAllContent);\r\n    }\r\n  }\r\n}\r\n\r\nconst updateList = (newList: any[], type: string) => {\r\n  initializeList(recoList);\r\n  initializeList(remarkList);\r\n  initializeList(commentList);\r\n\r\n  switch (type) {\r\n    case 'remark':\r\n      remarkallContentPush(newList,remarkList)\r\n      closeSelect('remark');\r\n      break;\r\n    case 'comment':\r\n      remarkallContentPush(newList,commentList)\r\n      closeSelect('comment');\r\n      break;\r\n    case 'reco':\r\n      remarkallContentPush(newList,recoList)\r\n      closeSelect('recommendation');\r\n      break;\r\n  }\r\n}\r\nconst remarkCountReturnCode = (idx: any) => {\r\n  if (crcRemarkCount.value.length === 0) {\r\n    return;\r\n  }\r\n  return crcRemarkCount.value[idx].checked;\r\n}\r\n\r\n</script>","import script from \"./crcAdd.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./crcAdd.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers, withDirectives as _withDirectives, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, createBlock as _createBlock, Teleport as _Teleport } from \"vue\"\n\nconst _hoisted_1 = { class: \"tab-content crcDiv reportCrcDiv\" }\nconst _hoisted_2 = { class: \"text-left mb10\" }\nconst _hoisted_3 = { class: \"crcListContentUl\" }\nconst _hoisted_4 = { class: \"crcListContentHeader\" }\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = [\"value\"]\nconst _hoisted_7 = { class: \"crcListDiv\" }\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = [\"onClick\"]\nconst _hoisted_10 = {\n  key: 0,\n  class: \"crcListBottomLine\"\n}\nconst _hoisted_11 = {\n  key: 0,\n  class: \"crcListRow\"\n}\nconst _hoisted_12 = {\n  key: 1,\n  class: \"crcListRow\"\n}\nconst _hoisted_13 = {\n  key: 2,\n  class: \"crcListRow\"\n}\nconst _hoisted_14 = {\n  key: 3,\n  class: \"mt10\"\n}\nconst _hoisted_15 = [\"innerHTML\"]\nconst _hoisted_16 = {\n  key: 4,\n  class: \"mt10\"\n}\nconst _hoisted_17 = [\"innerHTML\"]\nconst _hoisted_18 = {\n  key: 5,\n  class: \"mt10\"\n}\nconst _hoisted_19 = [\"innerHTML\"]\nconst _hoisted_20 = { class: \"reportDivAdd\" }\n\nimport {crcDataGet, updateCrcDataApi, deleteCrcDataApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {ref, onMounted, nextTick, onBeforeMount} from \"vue\";\r\nimport CrcAdd from \"@/views/datebase/commponent/detail/report/component/crcAdd.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport PassWordCheck from \"@/components/commonUi/PassWordCheck.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\n\r\n// Props 받기\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'crcList',\n  props: {\r\n  crcArr: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n  crcPassWord: {\r\n    type: String,\r\n  }\r\n},\n  emits: ['refresh'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\nconst emit = __emit;\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst delType = ref('');\r\nconst itemId = ref(0);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\n\r\n// CrcAdd 열기/닫기 상태\r\nconst isCrcAdd = ref(false);\r\n// 데이터 배열 초기화\r\nconst crcDataArr = ref<any>([]);\r\n// 선택된 항목 관리\r\nconst selectedItems = ref<number[]>([]);\r\n// 항목별 열림/닫힘 상태 관리\r\nconst isOpen = ref<boolean[]>([]);\r\n// 편집 상태 관리\r\nconst editItem = ref<any>(null); // 현재 편집 중인 항목\r\nconst addEditType = ref('');\r\nconst crcPassWordVal = ref('');\r\nconst passWordPass = ref(false);\r\nconst passLayout = ref(false);\r\n\r\nonBeforeMount(async () => {\r\n  crcPassWordVal.value = props.crcPassWord || '';\r\n})\r\n\r\n// 컴포넌트가 마운트될 때 API 호출 후 데이터 설정\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await loadCrcData();\r\n});\r\nconst hideConfirm = async () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  if (delType.value === 'check') {\r\n    await deleteSelectedItems();\r\n  } else {\r\n    await deleteCrcItem(itemId.value);\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\n// CRC 데이터를 로드하는 함수\r\nconst loadCrcData = async () => {\r\n  const data = (await crcDataGet()).data;\r\n  crcDataArr.value = data;\r\n  // 항목 개수만큼 열림/닫힘 상태 초기화\r\n  isOpen.value = new Array(data.length).fill(false);\r\n};\r\nconst returnPassWordCheck = (val: boolean) => {\r\n  if (val) {\r\n    passWordPass.value = true;\r\n    // 패스 체크 모달 닫기\r\n    passLayout.value = false;\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast(\"Admin verification is complete. Please click the button again.\");\r\n  } else {\r\n    passWordPass.value = false;\r\n    // 패스 체크 모달 닫기\r\n    passLayout.value = false;\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast(\"The administrator password is incorrect.\");\r\n  }\r\n}\r\nconst passWordClose = () => {\r\n  passLayout.value = false;\r\n}\r\n// CrcAdd 열기 함수\r\nconst openCrcAdd = () => {\r\n  isCrcAdd.value = true;\r\n  addEditType.value = 'add';\r\n};\r\n\r\n// CrcAdd 닫기 함수\r\nconst close = () => {\r\n  isCrcAdd.value = false;\r\n};\r\n\r\n// 항목 수정 시작\r\nconst startEdit = (item: any) => {\r\n  isCrcAdd.value = true;\r\n  addEditType.value = 'edit';\r\n  editItem.value = {...item}; // 수정할 항목의 데이터를 editItem에 저장\r\n};\r\n\r\n\r\n// 항목 삭제 함수 (단일 항목 삭제)\r\nconst deleteCrcItem = async (id: number) => {\r\n  try {\r\n    await deleteCrcDataApi({id}); // 서버로 삭제 요청\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast('It s been deleted.')\r\n    await loadCrcData(); // 데이터 새로고침\r\n  } catch (error) {\r\n    console.error(\"Failed to delete item:\", error);\r\n  }\r\n};\r\n\r\nconst deleteRow = (type: string, id?: string | number) => {\r\n  if (type === 'check') {\r\n    if (selectedItems.value.length === 0) {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Please select the item to delete.')\r\n      return;\r\n    }\r\n    delType.value = 'check';\r\n  } else {\r\n    itemId.value = id;\r\n    delType.value = '';\r\n  }\r\n  showConfirm.value = true;\r\n  confirmMessage.value = 'Are you sure you want to delete it?';\r\n}\r\n\r\n// 체크된 항목 삭제\r\nconst deleteSelectedItems = async () => {\r\n  try {\r\n    // 선택된 항목들을 서버에서 삭제\r\n    await Promise.all(selectedItems.value.map(id => deleteCrcDataApi({id})));\r\n    await loadCrcData(); // 데이터 새로고침\r\n    selectedItems.value = []; // 선택된 항목 초기화\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast('It s been deleted.')\r\n  } catch (error) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast('Failed to delete selected items')\r\n    // console.error(\"Failed to delete selected items:\", error);\r\n  }\r\n};\r\n\r\n// 전체 선택/해제\r\nconst selectAll = (event: Event) => {\r\n  const checked = (event.target as HTMLInputElement).checked;\r\n  if (checked) {\r\n    selectedItems.value = crcDataArr.value.map(item => item.id);\r\n  } else {\r\n    selectedItems.value = [];\r\n  }\r\n};\r\n\r\n// 열림/닫힘 토글 함수\r\nconst toggleOpen = (index: number) => {\r\n  isOpen.value[index] = !isOpen.value[index];\r\n};\r\n\r\nconst pageRefresh = () => {\r\n  emit('refresh');\r\n  loadCrcData();\r\n}\r\n\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"button\", {\n          class: \"crcBtn\",\n          onClick: openCrcAdd\n        }, \" Add \"),\n        _createElementVNode(\"button\", {\n          class: \"crcBtn ml10\",\n          onClick: _cache[0] || (_cache[0] = ($event: any) => (deleteRow('check')))\n        }, \" Check Delete \")\n      ]),\n      _createElementVNode(\"ul\", _hoisted_3, [\n        _createElementVNode(\"li\", _hoisted_4, [\n          _createElementVNode(\"input\", {\n            type: \"checkbox\",\n            onChange: _cache[1] || (_cache[1] = ($event: any) => (selectAll($event)))\n          }, null, 32),\n          _cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"All Check\", -1))\n        ]),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(crcDataArr.value, (item, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: index,\n            class: \"crcListContent\"\n          }, [\n            _createElementVNode(\"span\", {\n              class: \"crcListSpan\",\n              onClick: ($event: any) => (toggleOpen(index))\n            }, [\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"checkbox\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((selectedItems).value = $event)),\n                value: item.id,\n                onClick: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"stop\"]))\n              }, null, 8, _hoisted_6), [\n                [_vModelCheckbox, selectedItems.value]\n              ]),\n              _createElementVNode(\"span\", null, _toDisplayString(item.code), 1),\n              _createElementVNode(\"div\", _hoisted_7, [\n                _createElementVNode(\"button\", {\n                  onClick: _withModifiers(($event: any) => (startEdit(item)), [\"stop\"]),\n                  class: \"hoverSizeAction\"\n                }, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'pen-to-square'] })\n                ], 8, _hoisted_8),\n                _createElementVNode(\"button\", {\n                  onClick: _withModifiers(($event: any) => (deleteRow('', item.id)), [\"stop\"]),\n                  class: \"hoverSizeAction\"\n                }, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'trash'] })\n                ], 8, _hoisted_9)\n              ]),\n              _createVNode(_component_font_awesome_icon, {\n                icon: isOpen.value[index] ? ['fas', 'caret-up'] : ['fas', 'sort-down'],\n                class: _normalizeClass(isOpen.value[index] ? ['sortDownBig', 'caret-up'] : ['sortDownBig', 'sort-down'])\n              }, null, 8, [\"icon\", \"class\"])\n            ], 8, _hoisted_5),\n            (isOpen.value[index])\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                  (item.crcContent.rbc && item.crcContent.rbc.length > 0)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n                        _cache[5] || (_cache[5] = _createElementVNode(\"span\", { class: \"smCrcTitle\" }, \"RBC Morphology\", -1)),\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.crcContent.rbc, (rbc) => {\n                          return (_openBlock(), _createElementBlock(\"p\", {\n                            key: rbc.crcTitle\n                          }, _toDisplayString(rbc.crcTitle) + \": \" + _toDisplayString(rbc.crcContent), 1))\n                        }), 128))\n                      ]))\n                    : _createCommentVNode(\"\", true),\n                  (item.crcContent.wbc && item.crcContent.wbc.length > 0)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n                        _cache[6] || (_cache[6] = _createElementVNode(\"span\", { class: \"smCrcTitle\" }, \"WBC Morphology\", -1)),\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.crcContent.wbc, (wbc) => {\n                          return (_openBlock(), _createElementBlock(\"p\", {\n                            key: wbc.crcTitle\n                          }, _toDisplayString(wbc.crcTitle) + \": \" + _toDisplayString(wbc.crcContent), 1))\n                        }), 128))\n                      ]))\n                    : _createCommentVNode(\"\", true),\n                  (item.crcContent.plt && item.crcContent.plt.length > 0)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n                        _cache[7] || (_cache[7] = _createElementVNode(\"span\", { class: \"smCrcTitle\" }, \"PLT Morphology\", -1)),\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.crcContent.plt, (plt) => {\n                          return (_openBlock(), _createElementBlock(\"p\", {\n                            key: plt.crcTitle\n                          }, _toDisplayString(plt.crcTitle) + \": \" + _toDisplayString(plt.crcContent), 1))\n                        }), 128))\n                      ]))\n                    : _createCommentVNode(\"\", true),\n                  (item.crcRemark && item.crcRemark.length > 0)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n                        _cache[8] || (_cache[8] = _createElementVNode(\"span\", { class: \"smCrcTitle\" }, \"Remark\", -1)),\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.crcRemark, (remark) => {\n                          return (_openBlock(), _createElementBlock(\"pre\", {\n                            class: \"pre-wrap\",\n                            key: remark.id,\n                            innerHTML: remark?.remarkAllContent\n                          }, null, 8, _hoisted_15))\n                        }), 128))\n                      ]))\n                    : _createCommentVNode(\"\", true),\n                  (item.crcComment && item.crcComment.length > 0)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n                        _cache[9] || (_cache[9] = _createElementVNode(\"span\", { class: \"smCrcTitle\" }, \"Comment\", -1)),\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.crcComment, (remark) => {\n                          return (_openBlock(), _createElementBlock(\"pre\", {\n                            class: \"pre-wrap\",\n                            key: remark.id,\n                            innerHTML: remark?.remarkAllContent\n                          }, null, 8, _hoisted_17))\n                        }), 128))\n                      ]))\n                    : _createCommentVNode(\"\", true),\n                  (item.crcRecommendation && item.crcRecommendation.length > 0)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                        _cache[10] || (_cache[10] = _createElementVNode(\"span\", { class: \"smCrcTitle\" }, \"Recommendation\", -1)),\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.crcRecommendation, (remark) => {\n                          return (_openBlock(), _createElementBlock(\"pre\", {\n                            class: \"pre-wrap\",\n                            key: remark.id,\n                            innerHTML: remark?.remarkAllContent\n                          }, null, 8, _hoisted_19))\n                        }), 128))\n                      ]))\n                    : _createCommentVNode(\"\", true)\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]))\n        }), 128))\n      ])\n    ]),\n    (_openBlock(), _createBlock(_Teleport, { to: \"body\" }, [\n      _createElementVNode(\"div\", _hoisted_20, [\n        (isCrcAdd.value)\n          ? (_openBlock(), _createBlock(CrcAdd, {\n              key: 0,\n              crcSetArrP: __props.crcArr,\n              onCloseIsCrcAdd: close,\n              onRefresh: pageRefresh,\n              addEditType: addEditType.value,\n              editItem: editItem.value\n            }, null, 8, [\"crcSetArrP\", \"addEditType\", \"editItem\"]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ])),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          type: \"delete\",\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (toastMessage.value)\n      ? (_openBlock(), _createBlock(ToastNotification, {\n          key: 1,\n          message: toastMessage.value,\n          duration: 1500,\n          position: \"bottom-right\"\n        }, null, 8, [\"message\"]))\n      : _createCommentVNode(\"\", true),\n    (passLayout.value)\n      ? (_openBlock(), _createBlock(PassWordCheck, {\n          key: 2,\n          crcPassWord: crcPassWordVal.value,\n          onReturnPassWordCheck: returnPassWordCheck,\n          onPassWordClose: passWordClose\n        }, null, 8, [\"crcPassWord\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"tab-content crcDiv reportCrcDiv\">\r\n    <div class=\"text-left mb10\">\r\n      <button class=\"crcBtn\" @click=\"openCrcAdd\">\r\n        Add\r\n      </button>\r\n      <button class=\"crcBtn ml10\" @click=\"deleteRow('check')\">\r\n        Check Delete\r\n      </button>\r\n    </div>\r\n    <ul class=\"crcListContentUl\">\r\n      <li class=\"crcListContentHeader\">\r\n        <input type=\"checkbox\" @change=\"selectAll($event)\"/>\r\n        <span>All Check</span>\r\n      </li>\r\n\r\n      <!-- 각 crcDataArr의 항목을 출력 -->\r\n      <li v-for=\"(item, index) in crcDataArr\" :key=\"index\" class=\"crcListContent\">\r\n        <span class=\"crcListSpan\" @click=\"toggleOpen(index)\">\r\n            <input type=\"checkbox\" v-model=\"selectedItems\" :value=\"item.id\" @click.stop/>\r\n            <span>{{ item.code }}</span>\r\n            <div class=\"crcListDiv\">\r\n                <button @click.stop=\"startEdit(item)\" class=\"hoverSizeAction\">\r\n                    <font-awesome-icon :icon=\"['fas', 'pen-to-square']\"/>\r\n                </button>\r\n                <button @click.stop=\"deleteRow('', item.id)\" class=\"hoverSizeAction\">\r\n                    <font-awesome-icon :icon=\"['fas', 'trash']\"/>\r\n                </button>\r\n            </div>\r\n          <!-- 아이콘 클릭 시 열림/닫힘 토글 -->\r\n            <font-awesome-icon\r\n                :icon=\"isOpen[index] ? ['fas', 'caret-up'] : ['fas', 'sort-down']\"\r\n                :class=\"isOpen[index] ? ['sortDownBig', 'caret-up'] : ['sortDownBig', 'sort-down']\"\r\n            />\r\n        </span>\r\n\r\n\r\n        <!-- 아래로 열림/닫힘 부분 -->\r\n        <div v-if=\"isOpen[index]\" class=\"crcListBottomLine\">\r\n          <!-- RBC Morphology 출력 -->\r\n          <div v-if=\"item.crcContent.rbc && item.crcContent.rbc.length > 0\" class=\"crcListRow\">\r\n            <span class=\"smCrcTitle\">RBC Morphology</span>\r\n            <p v-for=\"rbc in item.crcContent.rbc\" :key=\"rbc.crcTitle\">\r\n              {{ rbc.crcTitle }}: {{ rbc.crcContent }}\r\n            </p>\r\n          </div>\r\n\r\n          <!-- WBC Morphology 출력 -->\r\n          <div v-if=\"item.crcContent.wbc && item.crcContent.wbc.length > 0\" class=\"crcListRow\">\r\n            <span class=\"smCrcTitle\">WBC Morphology</span>\r\n            <p v-for=\"wbc in item.crcContent.wbc\" :key=\"wbc.crcTitle\">\r\n              {{ wbc.crcTitle }}: {{ wbc.crcContent }}\r\n            </p>\r\n          </div>\r\n\r\n          <!-- PLT Morphology 출력 -->\r\n          <div v-if=\"item.crcContent.plt && item.crcContent.plt.length > 0\" class=\"crcListRow\">\r\n            <span class=\"smCrcTitle\">PLT Morphology</span>\r\n            <p v-for=\"plt in item.crcContent.plt\" :key=\"plt.crcTitle\">\r\n              {{ plt.crcTitle }}: {{ plt.crcContent }}\r\n            </p>\r\n          </div>\r\n\r\n          <!-- Remark 출력 -->\r\n          <div class=\"mt10\" v-if=\"item.crcRemark && item.crcRemark.length > 0\">\r\n            <span class=\"smCrcTitle\">Remark</span>\r\n            <pre class=\"pre-wrap\" v-for=\"remark in item.crcRemark\" :key=\"remark.id\" v-html=\"remark?.remarkAllContent\"></pre>\r\n          </div>\r\n          <div class=\"mt10\" v-if=\"item.crcComment && item.crcComment.length > 0\">\r\n            <span class=\"smCrcTitle\">Comment</span>\r\n            <pre class=\"pre-wrap\" v-for=\"remark in item.crcComment\" :key=\"remark.id\" v-html=\"remark?.remarkAllContent\"></pre>\r\n          </div>\r\n          <div class=\"mt10\" v-if=\"item.crcRecommendation && item.crcRecommendation.length > 0\">\r\n            <span class=\"smCrcTitle\">Recommendation</span>\r\n            <pre class=\"pre-wrap\" v-for=\"remark in item.crcRecommendation\" :key=\"remark.id\" v-html=\"remark?.remarkAllContent\"></pre>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <!-- CrcAdd 컴포넌트 -->\r\n  <Teleport to=\"body\">\r\n    <div class=\"reportDivAdd\">\r\n      <CrcAdd v-if=\"isCrcAdd\" :crcSetArrP=\"crcArr\" @closeIsCrcAdd=\"close\" @refresh=\"pageRefresh\"\r\n              :addEditType=\"addEditType\"\r\n              :editItem=\"editItem\"/>\r\n    </div>\r\n  </Teleport>\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      type=\"delete\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <ToastNotification\r\n      v-if=\"toastMessage\"\r\n      :message=\"toastMessage\"\r\n      :duration=\"1500\"\r\n      position=\"bottom-right\"\r\n  />\r\n  <PassWordCheck v-if=\"passLayout\" :crcPassWord=\"crcPassWordVal\" @returnPassWordCheck=\"returnPassWordCheck\"\r\n                 @passWordClose=\"passWordClose\"/>\r\n\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {crcDataGet, updateCrcDataApi, deleteCrcDataApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {ref, onMounted, nextTick, onBeforeMount} from \"vue\";\r\nimport CrcAdd from \"@/views/datebase/commponent/detail/report/component/crcAdd.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport PassWordCheck from \"@/components/commonUi/PassWordCheck.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\n\r\n// Props 받기\r\nconst props = defineProps({\r\n  crcArr: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n  crcPassWord: {\r\n    type: String,\r\n  }\r\n});\r\n\r\nconst emit = defineEmits(['refresh']);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst delType = ref('');\r\nconst itemId = ref(0);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\n\r\n// CrcAdd 열기/닫기 상태\r\nconst isCrcAdd = ref(false);\r\n// 데이터 배열 초기화\r\nconst crcDataArr = ref<any>([]);\r\n// 선택된 항목 관리\r\nconst selectedItems = ref<number[]>([]);\r\n// 항목별 열림/닫힘 상태 관리\r\nconst isOpen = ref<boolean[]>([]);\r\n// 편집 상태 관리\r\nconst editItem = ref<any>(null); // 현재 편집 중인 항목\r\nconst addEditType = ref('');\r\nconst crcPassWordVal = ref('');\r\nconst passWordPass = ref(false);\r\nconst passLayout = ref(false);\r\n\r\nonBeforeMount(async () => {\r\n  crcPassWordVal.value = props.crcPassWord || '';\r\n})\r\n\r\n// 컴포넌트가 마운트될 때 API 호출 후 데이터 설정\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await loadCrcData();\r\n});\r\nconst hideConfirm = async () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  if (delType.value === 'check') {\r\n    await deleteSelectedItems();\r\n  } else {\r\n    await deleteCrcItem(itemId.value);\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\n// CRC 데이터를 로드하는 함수\r\nconst loadCrcData = async () => {\r\n  const data = (await crcDataGet()).data;\r\n  crcDataArr.value = data;\r\n  // 항목 개수만큼 열림/닫힘 상태 초기화\r\n  isOpen.value = new Array(data.length).fill(false);\r\n};\r\nconst returnPassWordCheck = (val: boolean) => {\r\n  if (val) {\r\n    passWordPass.value = true;\r\n    // 패스 체크 모달 닫기\r\n    passLayout.value = false;\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast(\"Admin verification is complete. Please click the button again.\");\r\n  } else {\r\n    passWordPass.value = false;\r\n    // 패스 체크 모달 닫기\r\n    passLayout.value = false;\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast(\"The administrator password is incorrect.\");\r\n  }\r\n}\r\nconst passWordClose = () => {\r\n  passLayout.value = false;\r\n}\r\n// CrcAdd 열기 함수\r\nconst openCrcAdd = () => {\r\n  isCrcAdd.value = true;\r\n  addEditType.value = 'add';\r\n};\r\n\r\n// CrcAdd 닫기 함수\r\nconst close = () => {\r\n  isCrcAdd.value = false;\r\n};\r\n\r\n// 항목 수정 시작\r\nconst startEdit = (item: any) => {\r\n  isCrcAdd.value = true;\r\n  addEditType.value = 'edit';\r\n  editItem.value = {...item}; // 수정할 항목의 데이터를 editItem에 저장\r\n};\r\n\r\n\r\n// 항목 삭제 함수 (단일 항목 삭제)\r\nconst deleteCrcItem = async (id: number) => {\r\n  try {\r\n    await deleteCrcDataApi({id}); // 서버로 삭제 요청\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast('It s been deleted.')\r\n    await loadCrcData(); // 데이터 새로고침\r\n  } catch (error) {\r\n    console.error(\"Failed to delete item:\", error);\r\n  }\r\n};\r\n\r\nconst deleteRow = (type: string, id?: string | number) => {\r\n  if (type === 'check') {\r\n    if (selectedItems.value.length === 0) {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Please select the item to delete.')\r\n      return;\r\n    }\r\n    delType.value = 'check';\r\n  } else {\r\n    itemId.value = id;\r\n    delType.value = '';\r\n  }\r\n  showConfirm.value = true;\r\n  confirmMessage.value = 'Are you sure you want to delete it?';\r\n}\r\n\r\n// 체크된 항목 삭제\r\nconst deleteSelectedItems = async () => {\r\n  try {\r\n    // 선택된 항목들을 서버에서 삭제\r\n    await Promise.all(selectedItems.value.map(id => deleteCrcDataApi({id})));\r\n    await loadCrcData(); // 데이터 새로고침\r\n    selectedItems.value = []; // 선택된 항목 초기화\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n    showToast('It s been deleted.')\r\n  } catch (error) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast('Failed to delete selected items')\r\n    // console.error(\"Failed to delete selected items:\", error);\r\n  }\r\n};\r\n\r\n// 전체 선택/해제\r\nconst selectAll = (event: Event) => {\r\n  const checked = (event.target as HTMLInputElement).checked;\r\n  if (checked) {\r\n    selectedItems.value = crcDataArr.value.map(item => item.id);\r\n  } else {\r\n    selectedItems.value = [];\r\n  }\r\n};\r\n\r\n// 열림/닫힘 토글 함수\r\nconst toggleOpen = (index: number) => {\r\n  isOpen.value[index] = !isOpen.value[index];\r\n};\r\n\r\nconst pageRefresh = () => {\r\n  emit('refresh');\r\n  loadCrcData();\r\n}\r\n\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\r\n</script>\r\n","import script from \"./crcList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./crcList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { style: {\"list-style\":\"none\",\"padding\":\"0\"} }\nconst _hoisted_2 = { style: {\"font-weight\":\"bold\",\"color\":\"#e63946\"} }\nconst _hoisted_3 = { style: {\"color\":\"#e76f51\"} }\nconst _hoisted_4 = { style: {\"color\":\"#6c757d\"} }\n\nimport { onMounted } from \"vue\";\r\nimport { Chart, BarController, BarElement, PointElement, CategoryScale, LinearScale, Tooltip, Legend, Title, LineController, LineElement } from \"chart.js\";\r\n\r\n// Chart.js 구성 요소 등록\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'cellStatusDashBoard',\n  props: ['autoNomarlCheck'],\n  setup(__props) {\n\r\nChart.register(BarController, BarElement, PointElement, CategoryScale, LinearScale, Tooltip, Legend, Title, LineController, LineElement);\r\n\r\nconst props = __props;\r\n\r\nonMounted(() => {\r\n  // 데이터 설정\r\n  const labels = props.autoNomarlCheck.map(item => item.classNm);\r\n  const normalRangeData = props.autoNomarlCheck.map(item => ({\r\n    x: item.classNm,\r\n    y: [item.normalRangeFirst, item.normalRangeLast] // Floating Bars 범위 설정\r\n  }));\r\n  const dataValues = props.autoNomarlCheck.map(item => item.value);\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: '정상 범위',\r\n        data: normalRangeData,\r\n        backgroundColor: '#007bff',\r\n        borderColor: '#007bff',\r\n        borderWidth: 1,\r\n        barThickness: 30, // 막대 두께 설정\r\n      },\r\n      {\r\n        label: '측정 값',\r\n        data: dataValues,\r\n        type: 'line',\r\n        borderColor: '#1DDDE0',\r\n        backgroundColor: '#1DDDE0',\r\n        borderWidth: 0,\r\n        pointRadius: 3, // 데이터 포인트 크기\r\n        pointBackgroundColor: '#1DDDE0',\r\n      },\r\n    ],\r\n  };\r\n\r\n  // 차트 설정 객체\r\n  const config = {\r\n    type: 'bar',\r\n    data: data,\r\n    options: {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: 'top',\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          grid: {\r\n            display: false, // x축 그리드 숨기기\r\n          },\r\n          ticks: {\r\n            color: '#333',\r\n            font: {\r\n              size: 12,\r\n            },\r\n          },\r\n        },\r\n        y: {\r\n          beginAtZero: true,\r\n          grid: {\r\n            color: 'rgba(200, 200, 200, 0.3)', // y축 그리드 투명도 조절\r\n            borderDash: [5, 5], // 점선 스타일\r\n          },\r\n          ticks: {\r\n            color: '#333',\r\n            font: {\r\n              size: 12,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  // 차트 생성\r\n  new Chart(document.getElementById('abnormalChart') as HTMLCanvasElement, config);\r\n});\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _cache[1] || (_cache[1] = _createElementVNode(\"canvas\", {\n      id: \"abnormalChart\",\n      width: \"400\",\n      height: \"200\",\n      class: \"abnormalChart\"\n    }, null, -1)),\n    _createElementVNode(\"ul\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.autoNomarlCheck, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"li\", {\n          key: idx,\n          class: \"normalCheckList\"\n        }, [\n          _createElementVNode(\"span\", _hoisted_2, _toDisplayString(item.classNm), 1),\n          _cache[0] || (_cache[0] = _createTextVNode(\" 값이 비정상입니다: \")),\n          _createElementVNode(\"span\", _hoisted_3, _toDisplayString(item.value), 1),\n          _createElementVNode(\"small\", _hoisted_4, \"(정상 범위: \" + _toDisplayString(item.normalRangeFirst) + \" - \" + _toDisplayString(item.normalRangeLast) + \")\", 1)\n        ]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <canvas id=\"abnormalChart\" width=\"400\" height=\"200\" class=\"abnormalChart\"></canvas>\r\n\r\n    <!-- 비정상 항목 리스트 -->\r\n    <ul style=\"list-style: none; padding: 0;\">\r\n      <li v-for=\"(item, idx) in autoNomarlCheck\" :key=\"idx\" class=\"normalCheckList\">\r\n        <span style=\"font-weight: bold; color: #e63946;\">{{ item.classNm }}</span> 값이 비정상입니다:\r\n        <span style=\"color: #e76f51;\">{{ item.value }}</span>\r\n        <small style=\"color: #6c757d;\">(정상 범위: {{ item.normalRangeFirst }} - {{ item.normalRangeLast }})</small>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps, onMounted } from \"vue\";\r\nimport { Chart, BarController, BarElement, PointElement, CategoryScale, LinearScale, Tooltip, Legend, Title, LineController, LineElement } from \"chart.js\";\r\n\r\n// Chart.js 구성 요소 등록\r\nChart.register(BarController, BarElement, PointElement, CategoryScale, LinearScale, Tooltip, Legend, Title, LineController, LineElement);\r\n\r\nconst props = defineProps(['autoNomarlCheck']);\r\n\r\nonMounted(() => {\r\n  // 데이터 설정\r\n  const labels = props.autoNomarlCheck.map(item => item.classNm);\r\n  const normalRangeData = props.autoNomarlCheck.map(item => ({\r\n    x: item.classNm,\r\n    y: [item.normalRangeFirst, item.normalRangeLast] // Floating Bars 범위 설정\r\n  }));\r\n  const dataValues = props.autoNomarlCheck.map(item => item.value);\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: '정상 범위',\r\n        data: normalRangeData,\r\n        backgroundColor: '#007bff',\r\n        borderColor: '#007bff',\r\n        borderWidth: 1,\r\n        barThickness: 30, // 막대 두께 설정\r\n      },\r\n      {\r\n        label: '측정 값',\r\n        data: dataValues,\r\n        type: 'line',\r\n        borderColor: '#1DDDE0',\r\n        backgroundColor: '#1DDDE0',\r\n        borderWidth: 0,\r\n        pointRadius: 3, // 데이터 포인트 크기\r\n        pointBackgroundColor: '#1DDDE0',\r\n      },\r\n    ],\r\n  };\r\n\r\n  // 차트 설정 객체\r\n  const config = {\r\n    type: 'bar',\r\n    data: data,\r\n    options: {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: 'top',\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          grid: {\r\n            display: false, // x축 그리드 숨기기\r\n          },\r\n          ticks: {\r\n            color: '#333',\r\n            font: {\r\n              size: 12,\r\n            },\r\n          },\r\n        },\r\n        y: {\r\n          beginAtZero: true,\r\n          grid: {\r\n            color: 'rgba(200, 200, 200, 0.3)', // y축 그리드 투명도 조절\r\n            borderDash: [5, 5], // 점선 스타일\r\n          },\r\n          ticks: {\r\n            color: '#333',\r\n            font: {\r\n              size: 12,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  // 차트 생성\r\n  new Chart(document.getElementById('abnormalChart') as HTMLCanvasElement, config);\r\n});\r\n\r\n</script>\r\n","import script from \"./cellStatusDashBoard.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cellStatusDashBoard.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"resultCode\" }\nconst _hoisted_2 = { class: \"flex-align-center gap14\" }\nconst _hoisted_3 = { class: \"resultImgBody\" }\nconst _hoisted_4 = { class: \"resultImage-split-wrapper\" }\nconst _hoisted_5 = { class: \"resultImg-crcTitle\" }\nconst _hoisted_6 = { class: \"resultImg-crcTitle\" }\nconst _hoisted_7 = { class: \"resultImage-wbcPlt-container\" }\nconst _hoisted_8 = { class: \"resultImgBody\" }\nconst _hoisted_9 = { class: \"resultImage-wrapper\" }\nconst _hoisted_10 = { class: \"resultImg-crcTitle\" }\nconst _hoisted_11 = { class: \"resultImg-crcTitle\" }\nconst _hoisted_12 = { class: \"resultImgBody\" }\nconst _hoisted_13 = { class: \"resultImage-wrapper\" }\nconst _hoisted_14 = { class: \"resultImg-crcTitle\" }\nconst _hoisted_15 = { class: \"resultImg-crcTitle\" }\nconst _hoisted_16 = { class: \"resultImage-remark-container\" }\nconst _hoisted_17 = { key: 0 }\nconst _hoisted_18 = { class: \"resultImage-mainTitle resultImage-mainTitleWithFont\" }\nconst _hoisted_19 = { class: \"fs08 pre-wrap\" }\nconst _hoisted_20 = { key: 1 }\nconst _hoisted_21 = { class: \"resultImage-mainTitle resultImage-mainTitleWithFont\" }\nconst _hoisted_22 = { class: \"fs08 pre-wrap\" }\nconst _hoisted_23 = { key: 2 }\nconst _hoisted_24 = { class: \"resultImage-mainTitle resultImage-mainTitleWithFont\" }\nconst _hoisted_25 = { class: \"fs08 pre-wrap\" }\nconst _hoisted_26 = { class: \"resultImage-wbcImgArea-container\" }\nconst _hoisted_27 = { class: \"resultImage-mainTitle resultImage-mainTitleWithFont\" }\nconst _hoisted_28 = { class: \"resultImage-wbcImgArea-wrapper\" }\nconst _hoisted_29 = { key: 0 }\nconst _hoisted_30 = [\"src\"]\n\nimport {computed, nextTick, onBeforeMount, onMounted, ref, watch} from \"vue\";\r\nimport html2canvas from \"html2canvas\";\r\nimport {cbcImgGetApi, ywmcSaveCommentPostSendApi} from \"@/common/api/service/lisSend/lisSend\";\r\nimport {getCbcCodeList} from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport {lisSendYwmc, ywmcCbcDataLoad} from \"@/common/helpers/lisCbc/ywmcCbcLis\";\r\nimport {useStore} from \"vuex\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'resultImage',\n  props: ['nowCrcData', 'recoList', 'commentList', 'captureAndConvertOk', 'barcodeNo', 'selectWbcImgArr', 'slotId', 'patientNm'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst arrDataWbc = ref<any>([]);\r\nconst arrDataRbc = ref<any>([]);\r\nconst arrDataPlt = ref<any>([]);\r\nconst crcReport = ref<HTMLElement | null>(null);\r\nconst emits = __emit;\r\nconst arrDataRbcLeft = computed(() => arrDataRbc.value.slice(0, 4));\r\nconst arrDataRbcRight = computed(() => arrDataRbc.value.slice(4));\r\nconst arrDataWbcLeft = computed(() => arrDataWbc.value.slice(0, 4));\r\nconst arrDataWbcRight = computed(() => arrDataWbc.value.slice(4));\r\nconst arrDataPltLeft = computed(() => arrDataPlt.value.slice(0, 4));\r\nconst arrDataPltRight = computed(() => arrDataPlt.value.slice(4));\r\nconst nowCrcDataVal = ref([]);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst store = useStore();\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst projectType = ref<any>('');\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\n\r\nwatch(\r\n    () => [arrDataRbc.value, arrDataWbc.value, arrDataPlt.value],\r\n    async () => {\r\n      if (arrDataRbc.value.length && arrDataWbc.value.length && arrDataPlt.value.length) {\r\n        await nextTick();\r\n        await captureAndConvert();\r\n      }\r\n    }\r\n);\r\n\r\nonMounted(async () => {\r\n  await initializeData();\r\n});\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n})\r\n\r\n// 데이터 초기화 함수 정의\r\nconst initializeData = async () => {\r\n  arrDataRbc.value = props.nowCrcData?.crcContent?.rbc || [];\r\n  arrDataWbc.value = props.nowCrcData?.crcContent?.wbc || [];\r\n  arrDataPlt.value = props.nowCrcData?.crcContent?.plt || [];\r\n  nowCrcDataVal.value = props.nowCrcData || [];\r\n};\r\n\r\n\r\nconst captureAndConvert = async () => {\r\n  if (crcReport.value) {\r\n    const canvas = await html2canvas(crcReport.value, {\r\n      useCORS: true, // CORS를 허용하도록 설정\r\n      allowTaint: true // 외부 리소스 사용 허용\r\n    });\r\n    const dataUrl = canvas.toDataURL('image/png');\r\n\r\n    // Base64 문자열을 Blob으로 변환\r\n    const byteString = atob(dataUrl.split(',')[1]);\r\n    const ab = new ArrayBuffer(byteString.length);\r\n    const ia = new Uint8Array(ab);\r\n\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n\r\n    // Blob을 ISO-8859-1로 인코딩하고 16진수로 변환\r\n    const hexString = arrayBufferToHex(ab);\r\n\r\n    // 디버그용 확인\r\n    // console.log(\"Hex String:\", hexString);\r\n\r\n    // 데이터베이스로 저장\r\n    await saveToDatabase(hexString);\r\n    emits('resetBool', true);\r\n  }\r\n};\r\n\r\n\r\nconst getImageDimensions = (hex) => {\r\n  const blob = hexToBlob(hex);\r\n  const url = URL.createObjectURL(blob);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      const width = img.width;\r\n      const height = img.height;\r\n      const size = blob.size; // Blob의 크기 (바이트 단위)\r\n      URL.revokeObjectURL(url); // 메모리 해제\r\n      resolve({width, height, size});\r\n    };\r\n    img.onerror = (error) => {\r\n      URL.revokeObjectURL(url); // 메모리 해제\r\n      reject(error);\r\n    };\r\n    img.src = url;\r\n  });\r\n};\r\n\r\n\r\nconst displayImageFromHex = (hexString: string) => {\r\n  const blob = hexToBlob(hexString);\r\n  const url = URL.createObjectURL(blob);\r\n\r\n  // 이미지 요소 생성\r\n  const img = document.createElement('img');\r\n  img.src = url;\r\n  img.alt = 'Converted Image';\r\n  img.style.maxWidth = '100%'; // 이미지 크기 조정\r\n\r\n  // 이미지 요소를 DOM에 추가\r\n  document.body.appendChild(img);\r\n};\r\n\r\nconst hexToBlob = (hex: string): Blob => {\r\n  const byteNumbers = [];\r\n  for (let i = 0; i < hex.length; i += 2) {\r\n    byteNumbers.push(parseInt(hex.substr(i, 2), 16));\r\n  }\r\n  const byteArray = new Uint8Array(byteNumbers);\r\n  return new Blob([byteArray], {type: 'image/png'}); // 이미지 타입에 맞게 조정\r\n};\r\n\r\n// 어레이버퍼를 ISO-8859-1로 인코딩하고 16진수로 변환하는 함수\r\nconst arrayBufferToHex = (buffer: ArrayBuffer): string => {\r\n  const bytes = new Uint8Array(buffer);\r\n  let hexString = '';\r\n\r\n  for (let i = 0; i < bytes.length; i++) {\r\n    // ISO-8859-1로 인코딩된 바이트를 16진수로 변환\r\n    hexString += ('0' + bytes[i].toString(16)).slice(-2);\r\n  }\r\n\r\n  return hexString;\r\n};\r\n\r\nconst saveToDatabase = async (hexString: string) => {\r\n  // uimd 이미지 테스트 하는 함수 실제 사용 x 이미지 태그로 확인 하고 싶으면 이 함수 사용\r\n  // displayImageFromHex(hexString);\r\n\r\n  // db 저장 로직\r\n  const req = `smp_no=${props.barcodeNo}`;\r\n  const res = (await cbcImgGetApi(req))?.data;\r\n  if (res) {\r\n    // 이미지의 크기, 너비, 높이를 가져오는 비동기 함수 호출\r\n    const {width, height, size}: any = await getImageDimensions(hexString);\r\n    // const {data, cbcDataVal} = await ywmcCbcDataLoad(props?.barcodeNo, await getCbcCodeList());\r\n    const imgData = {\r\n      size: size, // Blob의 크기\r\n      image_rslt: hexString, // 실제 이미지 결과 데이터로 대체\r\n      width: width, // 이미지 너비\r\n      height: height, // 이미지 높이\r\n      rslt_stus: 'F',\r\n      exam_ymd_unit: res[0]?.exam_ymd_unit,\r\n      slip: res[0]?.slip,\r\n      wrk_no: res[0]?.wrk_no,\r\n      exam_cd: res[0]?.exam_cd,\r\n      spc: res[0]?.spc\r\n    };\r\n    const aa = await lisSendYwmc(imgData);\r\n    if(aa === 'Update successful'){\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n      showToast('Success');\r\n    }else{\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Lis fail');\r\n    }\r\n  }\r\n};\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!props.selectWbcImgArr || props.selectWbcImgArr.length === 0) {\r\n    return \"\";\r\n  }\r\n  const slotId = props.slotId || '';\r\n  const folderPath = `${pbiaRootDir.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n\r\n  // 타임스탬프 추가\r\n\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n\r\n\r\n  return url;\r\n}\r\n\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", {\n      class: \"resultImage\",\n      ref_key: \"crcReport\",\n      ref: crcReport\n    }, [\n      _createElementVNode(\"h1\", _hoisted_1, _toDisplayString(__props.nowCrcData.code), 1),\n      _cache[7] || (_cache[7] = _createElementVNode(\"h2\", { class: \"resultImage-mainTitle\" }, \"Information\", -1)),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"h3\", null, _toDisplayString(__props.barcodeNo ?? ''), 1),\n        _createElementVNode(\"h3\", null, _toDisplayString(__props.patientNm ?? ''), 1)\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _cache[0] || (_cache[0] = _createElementVNode(\"h2\", { class: \"resultImage-mainTitle\" }, \"RBC Morphology\", -1)),\n        _createElementVNode(\"ul\", _hoisted_4, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(arrDataRbcLeft.value, (item, idx) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: 'rbc-left' + idx,\n              class: \"flex-justify-start-align-center\"\n            }, [\n              _createElementVNode(\"h3\", _hoisted_5, _toDisplayString(item?.crcTitle), 1),\n              _createElementVNode(\"p\", null, _toDisplayString(item?.crcContent), 1)\n            ]))\n          }), 128)),\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(arrDataRbcRight.value, (item, idx) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: 'rbc-right' + idx,\n              class: \"flex-justify-start-align-center\"\n            }, [\n              _createElementVNode(\"h3\", _hoisted_6, _toDisplayString(item?.crcTitle), 1),\n              _createElementVNode(\"p\", null, _toDisplayString(item?.crcContent), 1)\n            ]))\n          }), 128))\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _createElementVNode(\"div\", _hoisted_8, [\n          _cache[1] || (_cache[1] = _createElementVNode(\"h2\", { class: \"resultImage-mainTitle\" }, \"WBC Morphology\", -1)),\n          _createElementVNode(\"ul\", _hoisted_9, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(arrDataWbcLeft.value, (item, idx) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: 'wbc-left' + idx,\n                class: \"flex-justify-start-align-center\"\n              }, [\n                _createElementVNode(\"h3\", _hoisted_10, _toDisplayString(item?.crcTitle), 1),\n                _createElementVNode(\"p\", null, _toDisplayString(item?.crcContent), 1)\n              ]))\n            }), 128)),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(arrDataWbcRight.value, (item, idx) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: 'wbc-right' + idx,\n                class: \"flex-justify-start-align-center\"\n              }, [\n                _createElementVNode(\"h3\", _hoisted_11, _toDisplayString(item?.crcTitle), 1),\n                _createElementVNode(\"p\", null, _toDisplayString(item?.crcContent), 1)\n              ]))\n            }), 128))\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_12, [\n          _cache[2] || (_cache[2] = _createElementVNode(\"h2\", { class: \"resultImage-mainTitle\" }, \"PLT Morphology\", -1)),\n          _createElementVNode(\"ul\", _hoisted_13, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(arrDataPltLeft.value, (item, idx) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: 'plt-left' + idx,\n                class: \"flex-justify-start-align-center\"\n              }, [\n                _createElementVNode(\"h3\", _hoisted_14, _toDisplayString(item?.crcTitle), 1),\n                _createElementVNode(\"p\", null, _toDisplayString(item?.crcContent), 1)\n              ]))\n            }), 128)),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(arrDataPltRight.value, (item, idx) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: 'plt-right' + idx,\n                class: \"flex-justify-start-align-center\"\n              }, [\n                _createElementVNode(\"h3\", _hoisted_15, _toDisplayString(item?.crcTitle), 1),\n                _createElementVNode(\"p\", null, _toDisplayString(item?.crcContent), 1)\n              ]))\n            }), 128))\n          ])\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_16, [\n        (__props.nowCrcData.crcComment.length !== 0 && __props.nowCrcData.crcComment[0].remarkAllContent.length > 0)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [\n              _createElementVNode(\"h2\", _hoisted_18, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'message'] }),\n                _cache[3] || (_cache[3] = _createElementVNode(\"span\", null, \"Comment\", -1))\n              ]),\n              _createElementVNode(\"pre\", _hoisted_19, _toDisplayString(__props.nowCrcData?.crcComment[0]?.remarkAllContent), 1)\n            ]))\n          : _createCommentVNode(\"\", true),\n        (__props.nowCrcData.crcRecommendation.length !== 0 && __props.nowCrcData.crcRecommendation[0].remarkAllContent.length > 0)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [\n              _createElementVNode(\"h2\", _hoisted_21, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'message'] }),\n                _cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"Recommendation\", -1))\n              ]),\n              _createElementVNode(\"pre\", _hoisted_22, _toDisplayString(__props.nowCrcData?.crcRecommendation[0]?.remarkAllContent), 1)\n            ]))\n          : _createCommentVNode(\"\", true),\n        (__props.nowCrcData.crcRemark.length !== 0 && __props.nowCrcData.crcRemark[0].remarkAllContent.length > 0)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [\n              _createElementVNode(\"h2\", _hoisted_24, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'message'] }),\n                _cache[5] || (_cache[5] = _createElementVNode(\"span\", null, \"Remark\", -1))\n              ]),\n              _createElementVNode(\"pre\", _hoisted_25, _toDisplayString(__props.nowCrcData?.crcRemark[0]?.remarkAllContent), 1)\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_26, [\n        _createElementVNode(\"h2\", _hoisted_27, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'image'] }),\n          _cache[6] || (_cache[6] = _createElementVNode(\"span\", null, \"WBC Images\", -1))\n        ]),\n        _createElementVNode(\"ul\", _hoisted_28, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.selectWbcImgArr, (item) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: item.id\n            }, [\n              (item?.count !== '0' && item?.count !== 0)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [\n                    _createElementVNode(\"img\", {\n                      src: getImageUrl(item.image.fileName, item.item.id, item.item.title, '')\n                    }, null, 8, _hoisted_30)\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ]))\n          }), 128))\n        ])\n      ])\n    ], 512),\n    (toastMessage.value)\n      ? (_openBlock(), _createBlock(ToastNotification, {\n          key: 0,\n          message: toastMessage.value,\n          messageType: toastMessageType.value,\n          duration: 1500,\n          position: \"bottom-right\"\n        }, null, 8, [\"message\", \"messageType\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"resultImage\" ref=\"crcReport\">\r\n    <h1 class=\"resultCode\">{{ nowCrcData.code }}</h1>\r\n    <h2 class=\"resultImage-mainTitle\">Information</h2>\r\n    <div class=\"flex-align-center gap14\">\r\n      <h3>{{ barcodeNo ?? '' }}</h3>\r\n      <h3>{{ patientNm ?? '' }}</h3>\r\n    </div>\r\n\r\n    <div class=\"resultImgBody\">\r\n      <h2 class=\"resultImage-mainTitle\">RBC Morphology</h2>\r\n      <ul class=\"resultImage-split-wrapper\">\r\n        <li v-for=\"(item, idx) in arrDataRbcLeft\" :key=\"'rbc-left' + idx\" class=\"flex-justify-start-align-center\">\r\n          <h3 class=\"resultImg-crcTitle\"> {{ item?.crcTitle }}</h3>\r\n          <p> {{ item?.crcContent }}</p>\r\n        </li>\r\n        <li v-for=\"(item, idx) in arrDataRbcRight\" :key=\"'rbc-right' + idx\" class=\"flex-justify-start-align-center\">\r\n          <h3 class=\"resultImg-crcTitle\"> {{ item?.crcTitle }}</h3>\r\n          <p> {{ item?.crcContent }}</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"resultImage-wbcPlt-container\">\r\n      <div class=\"resultImgBody\">\r\n        <h2 class=\"resultImage-mainTitle\">WBC Morphology</h2>\r\n        <ul class=\"resultImage-wrapper\">\r\n          <li v-for=\"(item, idx) in arrDataWbcLeft\" :key=\"'wbc-left' + idx\" class=\"flex-justify-start-align-center\">\r\n            <h3 class=\"resultImg-crcTitle\"> {{ item?.crcTitle }}</h3>\r\n            <p> {{ item?.crcContent }}</p>\r\n          </li>\r\n          <li v-for=\"(item, idx) in arrDataWbcRight\" :key=\"'wbc-right' + idx\" class=\"flex-justify-start-align-center\">\r\n            <h3 class=\"resultImg-crcTitle\"> {{ item?.crcTitle }}</h3>\r\n            <p> {{ item?.crcContent }}</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div class=\"resultImgBody\">\r\n        <h2 class=\"resultImage-mainTitle\">PLT Morphology</h2>\r\n        <ul class=\"resultImage-wrapper\">\r\n          <li v-for=\"(item, idx) in arrDataPltLeft\" :key=\"'plt-left' + idx\" class=\"flex-justify-start-align-center\" >\r\n            <h3 class=\"resultImg-crcTitle\"> {{ item?.crcTitle }}</h3>\r\n            <p> {{ item?.crcContent }}</p>\r\n          </li>\r\n          <li v-for=\"(item, idx) in arrDataPltRight\" :key=\"'plt-right' + idx\" class=\"flex-justify-start-align-center\" >\r\n            <h3 class=\"resultImg-crcTitle\"> {{ item?.crcTitle }}</h3>\r\n            <p> {{ item?.crcContent }}</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"resultImage-remark-container\">\r\n      <div v-if=\"nowCrcData.crcComment.length !== 0 && nowCrcData.crcComment[0].remarkAllContent.length > 0\">\r\n        <h2 class=\"resultImage-mainTitle resultImage-mainTitleWithFont\">\r\n          <font-awesome-icon :icon=\"['fas', 'message']\" />\r\n          <span>Comment</span>\r\n        </h2>\r\n        <pre class=\"fs08 pre-wrap\">{{ nowCrcData?.crcComment[0]?.remarkAllContent }}</pre>\r\n      </div>\r\n      <div v-if=\"nowCrcData.crcRecommendation.length !== 0 && nowCrcData.crcRecommendation[0].remarkAllContent.length > 0\">\r\n        <h2 class=\"resultImage-mainTitle resultImage-mainTitleWithFont\">\r\n          <font-awesome-icon :icon=\"['fas', 'message']\" />\r\n          <span>Recommendation</span>\r\n        </h2>\r\n        <pre class=\"fs08 pre-wrap\">{{ nowCrcData?.crcRecommendation[0]?.remarkAllContent }}</pre>\r\n      </div>\r\n      <div v-if=\"nowCrcData.crcRemark.length !== 0 && nowCrcData.crcRemark[0].remarkAllContent.length > 0\">\r\n        <h2 class=\"resultImage-mainTitle resultImage-mainTitleWithFont\">\r\n          <font-awesome-icon :icon=\"['fas', 'message']\" />\r\n          <span>Remark</span>\r\n        </h2>\r\n        <pre class=\"fs08 pre-wrap\">{{ nowCrcData?.crcRemark[0]?.remarkAllContent }}</pre>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"resultImage-wbcImgArea-container\">\r\n      <h2 class=\"resultImage-mainTitle resultImage-mainTitleWithFont\">\r\n        <font-awesome-icon :icon=\"['fas', 'image']\" />\r\n        <span>WBC Images</span>\r\n      </h2>\r\n      <ul class=\"resultImage-wbcImgArea-wrapper\">\r\n        <li v-for=\"(item) in selectWbcImgArr\" :key=\"item.id\">\r\n          <div v-if=\"item?.count !== '0' && item?.count !== 0\">\r\n            <img :src=\"getImageUrl(item.image.fileName, item.item.id, item.item.title, '')\"/>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <ToastNotification\r\n      v-if=\"toastMessage\"\r\n      :message=\"toastMessage\"\r\n      :messageType=\"toastMessageType\"\r\n      :duration=\"1500\"\r\n      position=\"bottom-right\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, nextTick, onBeforeMount, onMounted, ref, watch} from \"vue\";\r\nimport html2canvas from \"html2canvas\";\r\nimport {cbcImgGetApi, ywmcSaveCommentPostSendApi} from \"@/common/api/service/lisSend/lisSend\";\r\nimport {getCbcCodeList} from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport {lisSendYwmc, ywmcCbcDataLoad} from \"@/common/helpers/lisCbc/ywmcCbcLis\";\r\nimport {useStore} from \"vuex\";\r\n\r\nconst props = defineProps(['nowCrcData', 'recoList', 'commentList', 'captureAndConvertOk', 'barcodeNo', 'selectWbcImgArr', 'slotId', 'patientNm']);\r\nconst arrDataWbc = ref<any>([]);\r\nconst arrDataRbc = ref<any>([]);\r\nconst arrDataPlt = ref<any>([]);\r\nconst crcReport = ref<HTMLElement | null>(null);\r\nconst emits = defineEmits();\r\nconst arrDataRbcLeft = computed(() => arrDataRbc.value.slice(0, 4));\r\nconst arrDataRbcRight = computed(() => arrDataRbc.value.slice(4));\r\nconst arrDataWbcLeft = computed(() => arrDataWbc.value.slice(0, 4));\r\nconst arrDataWbcRight = computed(() => arrDataWbc.value.slice(4));\r\nconst arrDataPltLeft = computed(() => arrDataPlt.value.slice(0, 4));\r\nconst arrDataPltRight = computed(() => arrDataPlt.value.slice(4));\r\nconst nowCrcDataVal = ref([]);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst store = useStore();\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst projectType = ref<any>('');\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\n\r\nwatch(\r\n    () => [arrDataRbc.value, arrDataWbc.value, arrDataPlt.value],\r\n    async () => {\r\n      if (arrDataRbc.value.length && arrDataWbc.value.length && arrDataPlt.value.length) {\r\n        await nextTick();\r\n        await captureAndConvert();\r\n      }\r\n    }\r\n);\r\n\r\nonMounted(async () => {\r\n  await initializeData();\r\n});\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n})\r\n\r\n// 데이터 초기화 함수 정의\r\nconst initializeData = async () => {\r\n  arrDataRbc.value = props.nowCrcData?.crcContent?.rbc || [];\r\n  arrDataWbc.value = props.nowCrcData?.crcContent?.wbc || [];\r\n  arrDataPlt.value = props.nowCrcData?.crcContent?.plt || [];\r\n  nowCrcDataVal.value = props.nowCrcData || [];\r\n};\r\n\r\n\r\nconst captureAndConvert = async () => {\r\n  if (crcReport.value) {\r\n    const canvas = await html2canvas(crcReport.value, {\r\n      useCORS: true, // CORS를 허용하도록 설정\r\n      allowTaint: true // 외부 리소스 사용 허용\r\n    });\r\n    const dataUrl = canvas.toDataURL('image/png');\r\n\r\n    // Base64 문자열을 Blob으로 변환\r\n    const byteString = atob(dataUrl.split(',')[1]);\r\n    const ab = new ArrayBuffer(byteString.length);\r\n    const ia = new Uint8Array(ab);\r\n\r\n    for (let i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i);\r\n    }\r\n\r\n    // Blob을 ISO-8859-1로 인코딩하고 16진수로 변환\r\n    const hexString = arrayBufferToHex(ab);\r\n\r\n    // 디버그용 확인\r\n    // console.log(\"Hex String:\", hexString);\r\n\r\n    // 데이터베이스로 저장\r\n    await saveToDatabase(hexString);\r\n    emits('resetBool', true);\r\n  }\r\n};\r\n\r\n\r\nconst getImageDimensions = (hex) => {\r\n  const blob = hexToBlob(hex);\r\n  const url = URL.createObjectURL(blob);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      const width = img.width;\r\n      const height = img.height;\r\n      const size = blob.size; // Blob의 크기 (바이트 단위)\r\n      URL.revokeObjectURL(url); // 메모리 해제\r\n      resolve({width, height, size});\r\n    };\r\n    img.onerror = (error) => {\r\n      URL.revokeObjectURL(url); // 메모리 해제\r\n      reject(error);\r\n    };\r\n    img.src = url;\r\n  });\r\n};\r\n\r\n\r\nconst displayImageFromHex = (hexString: string) => {\r\n  const blob = hexToBlob(hexString);\r\n  const url = URL.createObjectURL(blob);\r\n\r\n  // 이미지 요소 생성\r\n  const img = document.createElement('img');\r\n  img.src = url;\r\n  img.alt = 'Converted Image';\r\n  img.style.maxWidth = '100%'; // 이미지 크기 조정\r\n\r\n  // 이미지 요소를 DOM에 추가\r\n  document.body.appendChild(img);\r\n};\r\n\r\nconst hexToBlob = (hex: string): Blob => {\r\n  const byteNumbers = [];\r\n  for (let i = 0; i < hex.length; i += 2) {\r\n    byteNumbers.push(parseInt(hex.substr(i, 2), 16));\r\n  }\r\n  const byteArray = new Uint8Array(byteNumbers);\r\n  return new Blob([byteArray], {type: 'image/png'}); // 이미지 타입에 맞게 조정\r\n};\r\n\r\n// 어레이버퍼를 ISO-8859-1로 인코딩하고 16진수로 변환하는 함수\r\nconst arrayBufferToHex = (buffer: ArrayBuffer): string => {\r\n  const bytes = new Uint8Array(buffer);\r\n  let hexString = '';\r\n\r\n  for (let i = 0; i < bytes.length; i++) {\r\n    // ISO-8859-1로 인코딩된 바이트를 16진수로 변환\r\n    hexString += ('0' + bytes[i].toString(16)).slice(-2);\r\n  }\r\n\r\n  return hexString;\r\n};\r\n\r\nconst saveToDatabase = async (hexString: string) => {\r\n  // uimd 이미지 테스트 하는 함수 실제 사용 x 이미지 태그로 확인 하고 싶으면 이 함수 사용\r\n  // displayImageFromHex(hexString);\r\n\r\n  // db 저장 로직\r\n  const req = `smp_no=${props.barcodeNo}`;\r\n  const res = (await cbcImgGetApi(req))?.data;\r\n  if (res) {\r\n    // 이미지의 크기, 너비, 높이를 가져오는 비동기 함수 호출\r\n    const {width, height, size}: any = await getImageDimensions(hexString);\r\n    // const {data, cbcDataVal} = await ywmcCbcDataLoad(props?.barcodeNo, await getCbcCodeList());\r\n    const imgData = {\r\n      size: size, // Blob의 크기\r\n      image_rslt: hexString, // 실제 이미지 결과 데이터로 대체\r\n      width: width, // 이미지 너비\r\n      height: height, // 이미지 높이\r\n      rslt_stus: 'F',\r\n      exam_ymd_unit: res[0]?.exam_ymd_unit,\r\n      slip: res[0]?.slip,\r\n      wrk_no: res[0]?.wrk_no,\r\n      exam_cd: res[0]?.exam_cd,\r\n      spc: res[0]?.spc\r\n    };\r\n    const aa = await lisSendYwmc(imgData);\r\n    if(aa === 'Update successful'){\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n      showToast('Success');\r\n    }else{\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Lis fail');\r\n    }\r\n  }\r\n};\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!props.selectWbcImgArr || props.selectWbcImgArr.length === 0) {\r\n    return \"\";\r\n  }\r\n  const slotId = props.slotId || '';\r\n  const folderPath = `${pbiaRootDir.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n\r\n  // 타임스탬프 추가\r\n\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n\r\n\r\n  return url;\r\n}\r\n\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n</script>\r\n","import script from \"./resultImage.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./resultImage.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"isAutoCBCMatchingDiv\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = {\n  key: 1,\n  class: \"chooseDiv\"\n}\n\n\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'autoCBCMatching',\n  props: ['isAutoCBCMatchingArr'],\n  emits: ['codeSelect', 'codeClose'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst emit = __emit;\r\n\r\nconst selectCode = (code: string) => {\r\n  emit('codeSelect', code)\r\n//\r\n}\r\n\r\nconst codeCloseChild = () => {\r\n  emit('codeClose')\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[0] || (_cache[0] = _createElementVNode(\"p\", null, \"Choose the code, please. \", -1)),\n    (__props.isAutoCBCMatchingArr.length !== 0)\n      ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.isAutoCBCMatchingArr, (item, idx) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: idx,\n              onClick: ($event: any) => (selectCode(item.code))\n            }, _toDisplayString(item.code), 9, _hoisted_3))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" There are no matching values. \")),\n    _createElementVNode(\"button\", {\n      class: \"chooseBtn\",\n      onClick: codeCloseChild\n    }, \"Close\")\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"isAutoCBCMatchingDiv\">\r\n   <p>Choose the code, please. </p>\r\n    <ul v-if=\"isAutoCBCMatchingArr.length !== 0\">\r\n      <li v-for=\"(item, idx) in isAutoCBCMatchingArr\" :key=\"idx\" @click=\"selectCode(item.code)\">\r\n        {{ item.code }}\r\n      </li>\r\n    </ul>\r\n    <div v-else class=\"chooseDiv\">\r\n      There are no matching values.\r\n    </div>\r\n    <button class=\"chooseBtn\" @click=\"codeCloseChild\">Close</button>\r\n  </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport {defineProps} from \"vue\";\r\n\r\nconst props = defineProps(['isAutoCBCMatchingArr']);\r\nconst emit = defineEmits(['codeSelect', 'codeClose']);\r\n\r\nconst selectCode = (code: string) => {\r\n  emit('codeSelect', code)\r\n//\r\n}\r\n\r\nconst codeCloseChild = () => {\r\n  emit('codeClose')\r\n}\r\n\r\n</script>","import script from \"./autoCBCMatching.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./autoCBCMatching.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"IsWbcImageSelect\" }\nconst _hoisted_2 = { class: \"pos-relative\" }\nconst _hoisted_3 = { key: 0 }\nconst _hoisted_4 = {\n  class: \"mt10\",\n  style: {\"margin-left\":\"4px\"}\n}\nconst _hoisted_5 = { class: \"smallName\" }\nconst _hoisted_6 = [\"src\", \"onClick\"]\n\nimport {computed, onBeforeMount, onMounted, ref} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'wbcImageSelect',\n  props: ['selectItems'],\n  emits: ['closeWbcSelect', 'selectWbcImgSend'],\n  setup(__props, { emit: __emit }) {\n\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst projectType = ref<any>('');\r\nconst store = useStore();\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst props = __props;\r\nconst emit = __emit;\r\nconst selectedImages = ref<string[]>([]);\r\nconst isAllChecked = ref(false);\r\n\r\n\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n})\r\n\r\nconst closeWbcSelectChild = () => {\r\n  emit('closeWbcSelect')\r\n}\r\nconst toggleImageSelection = (image: any, item: any) => {\r\n  if (isImageSelected(image, item)) {\r\n    selectedImages.value = selectedImages.value.filter(\r\n        (selected) => selected.image !== image || selected.item !== item\r\n    );\r\n  } else {\r\n    selectedImages.value.push({image, item});\r\n  }\r\n};\r\n\r\n\r\nconst isImageSelected = (image: any, item: any) => {\r\n  return selectedImages.value.some(\r\n      (selected) => selected.image === image && selected.item === item\r\n  );\r\n};\r\n\r\n\r\nconst toggleSelectAll = () => {\r\n  if (isAllChecked.value) {\r\n    // 모든 이미지 선택\r\n    selectedImages.value = [];\r\n    props.selectItems?.wbcInfoAfter.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        selectedImages.value.push({image, item});\r\n      });\r\n    });\r\n  } else {\r\n    // 선택 초기화\r\n    selectedImages.value = [];\r\n  }\r\n};\r\n\r\n\r\nconst confirmSelection = () => {\r\n  emit('selectWbcImgSend', selectedImages.value);\r\n};\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!props.selectItems?.wbcInfoAfter || props.selectItems?.wbcInfoAfter.length === 0) {\r\n    return \"\";\r\n  }\r\n  const slotId = props.selectItems.slotId || '';\r\n  const folderPath = `${pbiaRootDir.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n\r\n  // 타임스탬프 추가\r\n\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n\r\n\r\n  return url;\r\n}\r\n\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _cache[0] || (_cache[0] = _createElementVNode(\"h1\", { class: \"wbcImageSelect-title\" }, \"WBC images\", -1)),\n      _createElementVNode(\"ul\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.selectItems?.wbcInfoAfter, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            (item?.count !== '0' && item?.count !== 0)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n                  _createElementVNode(\"p\", _hoisted_4, [\n                    _createTextVNode(_toDisplayString(item?.title) + \" \", 1),\n                    _createElementVNode(\"span\", _hoisted_5, \"(\" + _toDisplayString(item.name) + \")\", 1)\n                  ]),\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image, idx) => {\n                    return (_openBlock(), _createElementBlock(\"img\", {\n                      key: idx,\n                      src: getImageUrl(image.fileName, item.id, item.title, ''),\n                      onClick: ($event: any) => (toggleImageSelection(image, item)),\n                      class: _normalizeClass([{ selected: isImageSelected(image, item) }, \"cursorPointer\"])\n                    }, null, 10, _hoisted_6))\n                  }), 128))\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]))\n        }), 128))\n      ])\n    ]),\n    _createElementVNode(\"div\", { class: \"fixedWbcBottom\" }, [\n      _createElementVNode(\"button\", {\n        class: \"crcBtn crcBtnWithBg\",\n        onClick: confirmSelection\n      }, \"Save\"),\n      _createElementVNode(\"button\", {\n        class: \"crcBtn crcBtnWithBg\",\n        onClick: closeWbcSelectChild\n      }, \"Close\")\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"IsWbcImageSelect\">\r\n    <div class=\"pos-relative\">\r\n      <h1 class=\"wbcImageSelect-title\">WBC images</h1>\r\n<!--      <input-->\r\n<!--          type=\"checkbox\"-->\r\n<!--          id=\"selectAll\"-->\r\n<!--          v-model=\"isAllChecked\"-->\r\n<!--          @change=\"toggleSelectAll\"-->\r\n<!--          style=\"width: fit-content\"-->\r\n<!--      />-->\r\n<!--      <label for=\"selectAll\">All Check / Uncheck</label>-->\r\n      <ul>\r\n        <li v-for=\"(item) in selectItems?.wbcInfoAfter\" :key=\"item.id\">\r\n          <div v-if=\"item?.count !== '0' && item?.count !== 0\">\r\n            <p class=\"mt10\" style=\"margin-left: 4px;\">\r\n              {{ item?.title }} <span class=\"smallName\">({{ item.name }})</span>\r\n            </p>\r\n            <template v-for=\"(image, idx) in item.images\" :key=\"idx\">\r\n              <img :src=\"getImageUrl(image.fileName, item.id, item.title, '')\"\r\n                   @click=\"toggleImageSelection(image, item)\"\r\n                   :class=\"{ selected: isImageSelected(image, item) }\"\r\n                   class=\"cursorPointer\"\r\n              />\r\n            </template>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"fixedWbcBottom\">\r\n      <button class=\"crcBtn crcBtnWithBg\" @click=\"confirmSelection\">Save</button>\r\n      <button class=\"crcBtn crcBtnWithBg\" @click=\"closeWbcSelectChild\">Close</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, onBeforeMount, onMounted, ref} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\n\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst projectType = ref<any>('');\r\nconst store = useStore();\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst emit = defineEmits(['closeWbcSelect', 'selectWbcImgSend']);\r\nconst selectedImages = ref<string[]>([]);\r\nconst isAllChecked = ref(false);\r\n\r\n\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n})\r\n\r\nconst closeWbcSelectChild = () => {\r\n  emit('closeWbcSelect')\r\n}\r\nconst toggleImageSelection = (image: any, item: any) => {\r\n  if (isImageSelected(image, item)) {\r\n    selectedImages.value = selectedImages.value.filter(\r\n        (selected) => selected.image !== image || selected.item !== item\r\n    );\r\n  } else {\r\n    selectedImages.value.push({image, item});\r\n  }\r\n};\r\n\r\n\r\nconst isImageSelected = (image: any, item: any) => {\r\n  return selectedImages.value.some(\r\n      (selected) => selected.image === image && selected.item === item\r\n  );\r\n};\r\n\r\n\r\nconst toggleSelectAll = () => {\r\n  if (isAllChecked.value) {\r\n    // 모든 이미지 선택\r\n    selectedImages.value = [];\r\n    props.selectItems?.wbcInfoAfter.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        selectedImages.value.push({image, item});\r\n      });\r\n    });\r\n  } else {\r\n    // 선택 초기화\r\n    selectedImages.value = [];\r\n  }\r\n};\r\n\r\n\r\nconst confirmSelection = () => {\r\n  emit('selectWbcImgSend', selectedImages.value);\r\n};\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!props.selectItems?.wbcInfoAfter || props.selectItems?.wbcInfoAfter.length === 0) {\r\n    return \"\";\r\n  }\r\n  const slotId = props.selectItems.slotId || '';\r\n  const folderPath = `${pbiaRootDir.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n\r\n  // 타임스탬프 추가\r\n\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n\r\n\r\n  return url;\r\n}\r\n\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n</script>","import script from \"./wbcImageSelect.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcImageSelect.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createBlock as _createBlock, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"crcReport\"\n}\nconst _hoisted_2 = { class: \"tabs\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"tab-content crcDiv reportCrcDiv\"\n}\nconst _hoisted_4 = { class: \"text-left crcMenu mb10\" }\nconst _hoisted_5 = { class: \"autocomplete-container ml10\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"autocomplete-list\"\n}\nconst _hoisted_7 = [\"onClick\"]\nconst _hoisted_8 = { class: \"moDivBox mt10\" }\nconst _hoisted_9 = {\n  key: 1,\n  class: \"mt20\"\n}\nconst _hoisted_10 = { class: \"crcDivTitle\" }\nconst _hoisted_11 = { class: \"remarkUlList\" }\nconst _hoisted_12 = [\"onUpdate:modelValue\"]\nconst _hoisted_13 = {\n  key: 2,\n  class: \"mt20\"\n}\nconst _hoisted_14 = { class: \"crcDivTitle\" }\nconst _hoisted_15 = { class: \"remarkUlList\" }\nconst _hoisted_16 = [\"onUpdate:modelValue\"]\nconst _hoisted_17 = {\n  key: 3,\n  class: \"mt20\"\n}\nconst _hoisted_18 = { class: \"crcDivTitle\" }\nconst _hoisted_19 = { class: \"remarkUlList\" }\nconst _hoisted_20 = [\"onUpdate:modelValue\"]\nconst _hoisted_21 = {\n  key: 4,\n  class: \"mt20\"\n}\nconst _hoisted_22 = { class: \"crcDivTitle\" }\nconst _hoisted_23 = { class: \"remarkUlList\" }\nconst _hoisted_24 = {\n  key: 2,\n  class: \"tab-content crcDiv reportCrcDiv dashboard\"\n}\n\nimport {computed, nextTick, onBeforeMount, onMounted, ref} from \"vue\";\r\n\r\nimport CrcCompontent from \"@/components/commonUi/crcCompontent.vue\";\r\nimport CrcList from \"@/views/datebase/commponent/detail/report/component/crcList.vue\";\r\nimport Remark from \"@/views/datebase/commponent/detail/report/component/remark.vue\";\r\nimport {\r\n  crcDataGet,\r\n  crcGet,\r\n  crcOptionGet,\r\n  saveDataCreateApi, saveDataPutDataApi,\r\n  saveDataSlotIdGetApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport {getCbcCodeList, getCbcPathData, getLisPathData} from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport PassWordCheck from \"@/components/commonUi/PassWordCheck.vue\";\r\nimport {updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {cbcDataGet, isAdultNormalCBC, isAutoCBCMatching} from \"@/common/helpers/lisCbc\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport moment from \"moment\";\r\nimport CellStatusDashBoard from \"@/views/datebase/commponent/detail/report/component/cellStatusDashBoard.vue\";\r\nimport ResultImage from \"@/views/datebase/commponent/detail/report/component/resultImage.vue\";\r\nimport {lisSendSD} from \"@/common/helpers/lisCbc/sdCbcLis\";\r\nimport AutoCBCMatching from \"@/views/datebase/commponent/detail/report/component/autoCBCMatching.vue\";\r\nimport WbcImageSelect from \"@/views/datebase/commponent/detail/report/component/wbcImageSelect.vue\";\r\nimport {ywmcCbcDataLoad} from \"@/common/helpers/lisCbc/ywmcCbcLis\";\r\nimport {ywmcSaveCommentPostSendApi} from \"@/common/api/service/lisSend/lisSend\";\r\nimport {RunningInfoCBCType} from \"@/common/api/service/runningInfo/dto/runningInfoDto\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'crcResultCodes',\n  props: {\r\n  crcDataVal: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n  selectItems: {\r\n    type: Array\r\n  }\r\n},\n  setup(__props) {\n\r\nconst crcArr = ref<any>([]);\r\nconst props = __props;\r\nconst store = useStore();\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS)\r\nconst passWordType = ref('');\r\nconst isRemark = ref(false); // Remark 모달 창 열림/닫힘 상태\r\nconst isComment = ref(false);\r\nconst isRecommendation = ref(false);\r\nconst activeTab = ref(1); // 현재 탭 상태\r\nconst remarkList = ref<any[]>([]); // Remark 리스트 상태\r\nconst commentList = ref<any[]>([]);\r\nconst recoList = ref<any[]>([]);\r\nconst isContent = ref(false);\r\nconst crcDataArr = ref<any[]>([]);\r\nconst code = ref('');\r\nconst crcDefaultMode = ref(false);\r\nconst crcPassWord = ref('');\r\nconst trrur = ref(false);\r\nconst crcRemarkCount = ref<any>([]);\r\nconst passWordPass = ref(false);\r\nconst passWordPassLis = ref(false);\r\nconst passLayout = ref(false);\r\nconst crcPassWordVal = ref('');\r\nconst lisTwoMode = ref(false);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst searchText = ref('');\r\nconst showDropdown = ref(false);\r\nconst lisHotKey = ref('');\r\nconst lisFilePathSetArr = ref<any>([]);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nconst submitState = ref(false);\r\nconst morphologyMapping: any = ref({\r\n  RBC: {},\r\n  WBC: {},\r\n  PLT: {},\r\n});\r\nconst cbcCodeList = ref<any>([]);\r\nconst lastChnageInputCrcData = ref<any>([]);\r\nconst autoNomarlCheck = ref<any>([]);\r\nconst nowCrcDataRef = ref<any>([]);\r\nconst captureAndConvertOk = ref(false);\r\nconst isAutoCBCMatchingArr = ref<any>([]);\r\nconst autoCBCMatchingShow = ref(false);\r\nconst IsWbcImageSelect = ref(false);\r\nconst selectWbcImgArr = ref<any>([]);\r\nconst ywmcSlip = ref('H3');\r\nconst cbcFlag = ref('');\r\n\r\nconst selectWbcImgSend = (arr: any) => {\r\n  selectWbcImgArr.value = [];\r\n  selectWbcImgArr.value = arr;\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  showToast('Success');\r\n  IsWbcImageSelect.value = false;\r\n}\r\nonBeforeMount(async () => {\r\n  await nextTick();\r\n\r\n  isContent.value = true;\r\n  if (isContent.value) {\r\n    const saveDataGet: any = await saveDataSlotIdGetApi(props?.selectItems?.slotId);\r\n    const crcSettingData = saveDataGet.data.crcArr;\r\n    const codeVal = saveDataGet.data.code || '';\r\n    const remarkListVal = saveDataGet.data.remarkList || [];\r\n    const commentListVal = saveDataGet.data.commentList || [];\r\n    const recoListVal = saveDataGet.data.recoList || [];\r\n    if (crcSettingData) {\r\n      crcArr.value = crcSettingData;\r\n      code.value = codeVal;\r\n      searchText.value = codeVal;\r\n      remarkList.value = remarkListVal;\r\n      commentList.value = commentListVal;\r\n      recoList.value = recoListVal;\r\n\r\n      // 공통된 map 처리\r\n      [remarkList, commentList, recoList].forEach(list => {\r\n        list.value = list.value.map(item => ({\r\n          ...item,\r\n          remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n        }));\r\n      });\r\n      trrur.value = true;\r\n    } else {\r\n      crcArr.value = (await crcGet()).data;\r\n      trrur.value = true;\r\n      initializeList(recoList);\r\n      initializeList(remarkList);\r\n      initializeList(commentList);\r\n    }\r\n\r\n    crcDataArr.value = (await crcDataGet()).data;\r\n  }\r\n  const crcOptionApi = await crcOptionGet();\r\n  if (crcOptionApi.data.length !== 0) {\r\n    crcDefaultMode.value = crcOptionApi.data[0].crcMode;\r\n    crcRemarkCount.value = crcOptionApi.data[0].crcRemarkCount;\r\n    crcPassWord.value = crcOptionApi.data[0].crcPassWord;\r\n    crcPassWordVal.value = crcOptionApi.data[0].crcPassWord;\r\n    lisTwoMode.value = crcOptionApi.data[0].lisTwoMode;\r\n  }\r\n  const {lisFilePathSetArr: lisFilePathSetArrVar, lisHotKey: lisHotKeyVal} = await getLisPathData();\r\n  lisHotKey.value = lisHotKeyVal;\r\n  lisFilePathSetArr.value = lisFilePathSetArrVar;\r\n  await newMorphMapSet();\r\n});\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await dataAutoComputeLoad();\r\n  submitState.value = props.selectItems?.submitState === 'lisCbc' || props.selectItems?.submitState === 'Submit';\r\n  if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['원주기독병원'] || siteCd.value) {\r\n    const {data, cbcDataVal, slip} = await ywmcCbcDataLoad(props.selectItems?.barcodeNo, await getCbcCodeList());\r\n    ywmcSlip.value = slip;\r\n    cbcFlag.value = '';\r\n\r\n    await updateCbcDataToDatabase({\r\n      cbcPatientNo: cbcDataVal?.pt_no,\r\n      cbcPatientNm: cbcDataVal?.pt_nm,\r\n      cbcSex: cbcDataVal?.sex,\r\n      cbcAge: cbcDataVal?.age,\r\n    })\r\n\r\n    for (const el of data) {\r\n      switch (el.classNm.trim()) {\r\n        case '8HN109GBL_F':\r\n          cbcFlag.value += 'Blasts Flag\\n'\r\n          break;\r\n        case '8HN109G_NRBC_F':\r\n          cbcFlag.value += 'Nucleated RBC Flag\\n'\r\n          break;\r\n        case '8HN109G_ATYP_FRAG':\r\n          cbcFlag.value += 'Atypical Lymphocyte Flag\\n'\r\n          break;\r\n        case '8HN109GIG_F':\r\n          cbcFlag.value += 'Immature Granulocytes Flag\\n'\r\n          break;\r\n      }\r\n    }\r\n  } else {\r\n    ywmcSlip.value = 'H3'; // 원주기독에 독단적인 커스텀마이징 때문에 강제적으로 H3 pbs 기준으로 맞춤..\r\n\r\n  }\r\n\r\n});\r\nconst closeWbcSelect = () => {\r\n  IsWbcImageSelect.value = false;\r\n}\r\nconst dataAutoComputeLoad = async () => {\r\n  cbcCodeList.value = await getCbcCodeList();\r\n  const cbcFilePathSetArr = await getCbcPathData();\r\n  if (cbcFilePathSetArr && cbcFilePathSetArr !== '' && siteCd.value === HOSPITAL_SITE_CD_BY_NAME['SD의학연구소']) {\r\n    const {cbcData, cbcSex, cbcAge} = await cbcDataGet(props?.selectItems?.barcodeNo, cbcCodeList.value);\r\n    autoNomarlCheck.value = await isAdultNormalCBC(cbcData, props?.selectItems?.wbcInfoAfter, props?.selectItems?.rbcInfoAfter, cbcSex, cbcAge);\r\n    const saveDataGet = await saveDataSlotIdGetApi(props?.selectItems?.slotId);\r\n    const crcSettingData = saveDataGet?.data?.crcArr;\r\n    if (!crcSettingData) {\r\n      if (autoNomarlCheck.value.length === 0) {\r\n        selectOption('Normal');\r\n      } else {\r\n        const res = await isAutoCBCMatching(cbcData, cbcSex, cbcAge);\r\n        isAutoCBCMatchingArr.value = res;\r\n        if (isAutoCBCMatchingArr.value.length !== 0) {\r\n          autoCBCMatchingShow.value = true;\r\n        } else {\r\n          autoCBCMatchingShow.value = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst codeSelect = (code: string) => {\r\n  selectOption(code);\r\n  autoCBCMatchingShow.value = false;\r\n}\r\n\r\nconst codeClose = () => {\r\n  autoCBCMatchingShow.value = false;\r\n}\r\n\r\nconst captureAndConvert = async () => {\r\n  captureAndConvertOk.value = true;\r\n}\r\nconst resetBool = () => {\r\n  captureAndConvertOk.value = false;\r\n\r\n}\r\n\r\nconst selectOption = (selectedCode: string) => {\r\n  code.value = selectedCode;   // 선택한 코드를 저장\r\n  searchText.value = selectedCode;  // 검색창에 선택된 코드 표시\r\n  showDropdown.value = false;  // 드롭다운 닫기\r\n  changeCode(selectedCode);\r\n};\r\n\r\nconst hideDropdownWithDelay = () => {\r\n  setTimeout(() => {\r\n    showDropdown.value = false;\r\n  }, 200); // 작은 딜레이 추가\r\n};\r\nconst filteredOptions = computed(() => {\r\n  if (!searchText.value) {\r\n    return crcDataArr.value; // 검색어가 없을 경우 전체 목록 표시\r\n  }\r\n\r\n  // 검색어와 일치하는 코드를 필터링\r\n  return crcDataArr.value.filter(item =>\r\n      item.code.toLowerCase().includes(searchText.value.toLowerCase())\r\n  );\r\n});\r\nconst convertToNewlines = (content: string) => {\r\n  return content.replaceAll('<br>', '\\r\\n');\r\n};\r\n\r\nconst remarkCountReturnCode = (idx: any) => {\r\n  if (crcRemarkCount.value.length === 0) {\r\n    return;\r\n  }\r\n  return crcRemarkCount.value[idx].checked;\r\n}\r\n\r\nlet isHotKeyPressed = false;\r\n\r\nconst handleKeyDown = (event: KeyboardEvent) => {\r\n  const keyName = event.key;\r\n\r\n  if (!isHotKeyPressed && keyName.toUpperCase() === lisHotKey.value.toUpperCase()) {\r\n    event.preventDefault(); // 기본 동작 방지\r\n    isHotKeyPressed = true; // 한 번만 실행되도록 설정\r\n    lisClick();\r\n  }\r\n};\r\n\r\nconst handleKeyUp = (event: KeyboardEvent) => {\r\n  const keyName = event.key;\r\n\r\n  if (keyName.toUpperCase() === lisHotKey.value.toUpperCase()) {\r\n    isHotKeyPressed = false; // 키를 떼면 다시 실행 가능\r\n  }\r\n};\r\n\r\nwindow.addEventListener('keydown', handleKeyDown);\r\nwindow.addEventListener('keyup', handleKeyUp);\r\n\r\nconst lisClick = async () => {\r\n  passWordType.value = 'lisCbc'\r\n  if (!passWordPassLis.value && submitState.value) {\r\n    passLayout.value = true;\r\n    return\r\n  } else {\r\n    await lisStart();\r\n  }\r\n\r\n}\r\nconst updateCrcDataWithCode = (crcSetData: any, nowCrcData: any) => {\r\n  ['plt', 'rbc', 'wbc'].forEach(category => {\r\n    nowCrcData.crcContent[category].forEach((nowItem: any) => {\r\n      // crcSetData -> 셋팅페이지에서 셋팅한 배열들 단일 배열\r\n      const matchingItem = crcSetData.find((setItem: any) => setItem.id === nowItem.id);\r\n      if (matchingItem && matchingItem.crcCode) {\r\n        nowItem.crcTitle = matchingItem.crcCode;\r\n      }\r\n    });\r\n  });\r\n\r\n  return nowCrcData;\r\n};\r\n\r\nconst changeCrcData = (item: any) => {\r\n  const nes = JSON.parse(JSON.stringify(crcArr.value));\r\n  const margeData = nes.findIndex((el: any) => {\r\n    return el.id === item.id\r\n  });\r\n  nes[margeData].val = item.val\r\n  lastChnageInputCrcData.value = nes\r\n}\r\n\r\nconst newMorphMapSet = async () => {\r\n  morphologyMapping.value = {\r\n    RBC: {},\r\n    WBC: {},\r\n    PLT: {},\r\n  };\r\n\r\n  for (const el of crcArr.value) {\r\n    if (!el.crcCode || !el.crcCodeMatching || !el.crcContent) {\r\n      continue;\r\n    }\r\n\r\n    const matchingKeys = el.crcCodeMatching.split(',').map(key => key.trim());\r\n    const contents = el.crcContent.split(',').map(content => content.trim());\r\n\r\n    if (el.morphologyType === 'RBC') {\r\n      // RBC에 새로운 속성 추가\r\n      morphologyMapping.value.RBC[el.crcCode] = {};\r\n      for (let i = 0; i < matchingKeys.length; i++) {\r\n        const key = matchingKeys[i];\r\n        const value = contents[i] ? contents[i] : \"\";\r\n        morphologyMapping.value.RBC[el.crcCode][value] = key;\r\n      }\r\n    } else if (el.morphologyType === 'WBC') {\r\n      // WBC에 새로운 속성 추가\r\n      morphologyMapping.value.WBC[el.crcCode] = {};\r\n      for (let i = 0; i < matchingKeys.length; i++) {\r\n        const key = matchingKeys[i];\r\n        const value = contents[i] ? contents[i] : \"\";\r\n        morphologyMapping.value.WBC[el.crcCode][value] = key;\r\n      }\r\n    } else if (el.morphologyType === 'PLT') {\r\n      // PLT에 새로운 속성 추가\r\n      morphologyMapping.value.PLT[el.crcCode] = {};\r\n      for (let i = 0; i < matchingKeys.length; i++) {\r\n        const key = matchingKeys[i];\r\n        const value = contents[i] ? contents[i] : \"\";\r\n        morphologyMapping.value.PLT[el.crcCode][value] = key;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// crcContent 업데이트 함수\r\nconst updateCrcContent = (crcSetData: any, nowCrcData: any) => {\r\n  ['plt', 'rbc', 'wbc'].forEach(category => {\r\n    nowCrcData.crcContent[category].forEach((nowItem: any) => {\r\n      // text 타입은 변경하지 않고 유지\r\n      if (nowItem.crcType !== 'select' && nowItem.crcContent !== 'Etc') return;\r\n\r\n      // id 기준으로 crcSetData에서 매칭 항목 찾기\r\n      const matchingItem = crcSetData.find((setItem: any) => setItem.id === nowItem.id);\r\n      if (matchingItem && matchingItem.crcCode) {\r\n        const categoryMapping = morphologyMapping.value[matchingItem.morphologyType];\r\n\r\n        // 매핑이 존재하고 crcContent의 값이 매핑에 있으면 crcContent 값으로 변경\r\n        if (categoryMapping && categoryMapping[matchingItem.crcCode]) {\r\n          nowItem.crcContent = categoryMapping[matchingItem.crcCode][nowItem.crcContent] || nowItem.crcContent;\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  return nowCrcData;\r\n};\r\n\r\n\r\nconst lisStart = async () => {\r\n  if (searchText.value === '') {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast('Please enter the code.');\r\n    passWordPassLis.value = false;\r\n    return;\r\n  }\r\n  if (lastChnageInputCrcData.value.length !== 0) {\r\n    crcArr.value = lastChnageInputCrcData.value;\r\n  }\r\n  const crcSetData = crcArr.value;\r\n\r\n  let nowCrcData: any = crcDataArr.value.find((item) => {\r\n    return item.code === code.value\r\n  });\r\n  ['plt', 'rbc', 'wbc'].forEach(category => {\r\n    nowCrcData.crcContent[category].forEach((nowItem: any) => {\r\n      for (const el of crcSetData) {\r\n        if (nowItem.id === el.id) {\r\n          if (el.crcType === 'select') {\r\n            nowItem.crcContent = el.val;\r\n          } else {\r\n            nowItem.crcContent = el.crcContent;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  typeof remarkList.value[0]?.remarkAllContent === \"string\"\r\n      ? remarkList.value[0].remarkAllContent.replace(/\\n/g, \"\\r\")\r\n      : \"\";\r\n  console.log('commentList', commentList.value)\r\n  typeof commentList.value[0]?.remarkAllContent === \"string\"\r\n      ? commentList.value[0].remarkAllContent.replace(/\\n/g, \"\\r\")\r\n      : \"\";\r\n\r\n  typeof recoList.value[0]?.remarkAllContent === \"string\"\r\n      ? recoList.value[0].remarkAllContent.replace(/\\n/g, \"\\r\")\r\n      : \"\";\r\n\r\n  Object.assign(nowCrcData, {\r\n    crcRemark: remarkList.value,\r\n    crcComment: commentList.value,\r\n    crcRecommendation: recoList.value\r\n  });\r\n  nowCrcData = updateCrcDataWithCode(crcSetData, nowCrcData);\r\n  nowCrcData = updateCrcContent(crcSetData, nowCrcData);\r\n\r\n  switch (siteCd.value) {\r\n    case HOSPITAL_SITE_CD_BY_NAME['SD의학연구소']:\r\n      await lisCommonDataWhether(lisSendSD(props.selectItems?.barcodeNo, nowCrcData, lisFilePathSetArr.value));\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['원주기독병원']:\r\n      await yamcSendLisUpdate(nowCrcData);\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['UIMD']:\r\n      await yamcSendLisUpdate(nowCrcData);\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['NONE']:\r\n      await lisCommonDataWhether(lisSendSD(props.selectItems?.barcodeNo, nowCrcData, lisFilePathSetArr.value));\r\n      break;\r\n    default:\r\n      await lisCommonDataWhether(lisSendSD(props.selectItems?.barcodeNo, nowCrcData, lisFilePathSetArr.value));\r\n      break;\r\n  }\r\n}\r\n\r\n\r\nconst yamcSendLisUpdate = async (nowCrcData: any) => {\r\n  nowCrcDataRef.value = nowCrcData;\r\n  await nextTick();\r\n  if (ywmcSlip.value.trim() === 'H3') {\r\n    await captureAndConvert();\r\n  } else {\r\n\r\n    if (cbcFlag.value.length > 60) {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Text is too long');\r\n      return;\r\n    }\r\n\r\n    if (cbcFlag.value.length === 0) {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Please enter CBC flag.');\r\n      return;\r\n    }\r\n\r\n    //props.barcodeNo\r\n    const saveData = {\r\n      tsmp_no: props.selectItems?.barcodeNo,\r\n      text_rslt: cbcFlag.value\r\n    }\r\n    const setDataYWmc = await ywmcSaveCommentPostSendApi(saveData);\r\n    if (setDataYWmc?.code === 201) {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n      showToast('Success');\r\n    } else {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Lis fail');\r\n    }\r\n\r\n  }\r\n}\r\n\r\nconst lisCommonDataWhether = async (lisFunc: any) => {\r\n  const resText = await lisFunc;\r\n  if (resText === 'Success') {\r\n    await commonSucessLis();\r\n  } else {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast('Lis Send Fail');\r\n  }\r\n}\r\n\r\nconst commonSucessLis = async () => {\r\n  if (props.selectItems?.id) {\r\n    const localTime = moment().local();\r\n    const updatedItem = {\r\n      submitState: 'lisCbc',\r\n      submitOfDate: localTime.format(),\r\n      submitUserId: userModuleDataGet.value.userId,\r\n    };\r\n    const updatedRuningInfo = {id: props.selectItems?.id, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, true);\r\n    submitState.value = true;\r\n  }\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  showToast(MESSAGES.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean) => {\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response: any = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo],\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (response) {\r\n      if (!noAlert) {\r\n        toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n        showToast('Success');\r\n      }\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n// const listDel = (idx: any, type: string) => {\r\n//   if (type === 'remark') {\r\n//     remarkList.value.splice(idx, 1);\r\n//   } else if (type === 'reco') {\r\n//     recoList.value.splice(idx, 1);\r\n//   } else if (type === 'comment') {\r\n//     commentList.value.splice(idx, 1);\r\n//   }\r\n// }\r\n\r\nconst openSelect = (type: string) => {\r\n  switch (type) {\r\n    case 'remark':\r\n      isRemark.value = true;\r\n      break;\r\n    case 'comment':\r\n      isComment.value = true;\r\n      break;\r\n    case 'recommendation':\r\n      isRecommendation.value = true;\r\n      break;\r\n  }\r\n}\r\n\r\nconst closeSelect = (type: string) => {\r\n  switch (type) {\r\n    case 'remark':\r\n      isRemark.value = false;\r\n      break;\r\n    case 'comment':\r\n      isComment.value = false;\r\n      break;\r\n    case 'recommendation':\r\n      isRecommendation.value = false;\r\n      break;\r\n  }\r\n}\r\n\r\n// 자식 컴포넌트로부터 업데이트된 리스트를 받음\r\nconst initializeList = (list: any) => {\r\n  if (list.value.length === 0) {\r\n    list.value.push({\r\n      code: '',\r\n      id: 0,\r\n      remarkAllContent: '',\r\n      remarkContent: '',\r\n    });\r\n  }\r\n};\r\n\r\nconst updateList = (newList: any[], type: string) => {\r\n  initializeList(recoList);\r\n  initializeList(remarkList);\r\n  initializeList(commentList);\r\n\r\n  switch (type) {\r\n    case 'remark':\r\n      remarkallContentPush(newList, remarkList)\r\n      closeSelect('remark');\r\n      break;\r\n    case 'comment':\r\n      remarkallContentPush(newList, commentList)\r\n      closeSelect('comment');\r\n      break;\r\n    case 'reco':\r\n      remarkallContentPush(newList, recoList)\r\n      closeSelect('recommendation');\r\n      break;\r\n  }\r\n}\r\nconst remarkallContentPush = (newList: any, list) => {\r\n  for (const el of newList) {\r\n    if (list.value[0].remarkAllContent.length === 0) {\r\n      list.value[0].remarkAllContent += convertToNewlines(el.remarkAllContent);\r\n    } else {\r\n      list.value[0].remarkAllContent += '\\r\\r'\r\n      list.value[0].remarkAllContent += convertToNewlines(el.remarkAllContent);\r\n    }\r\n  }\r\n  // list.value[0].remarkAllContent += '\\r'\r\n}\r\nconst adminPassword = () => {\r\n  passWordType.value = ''\r\n  if (!passWordPass.value) {\r\n    passLayout.value = true;\r\n    return\r\n  } else {\r\n    activeTab.value = 2;\r\n  }\r\n}\r\n\r\nconst cellStatus = () => {\r\n  activeTab.value = 3;\r\n}\r\n\r\nconst returnPassWordCheck = (val: boolean) => {\r\n  const isDefaultPassword = passWordType.value === '';\r\n\r\n  const closePassModal = () => {\r\n    passLayout.value = false;\r\n  };\r\n\r\n  const handleSuccess = () => {\r\n    isDefaultPassword ? (passWordPass.value = true) : (passWordPassLis.value = true);\r\n    closePassModal();\r\n\r\n    isDefaultPassword ? (activeTab.value = 2) : (lisStart(), passWordPassLis.value = false);\r\n  };\r\n\r\n  const handleFailure = () => {\r\n    isDefaultPassword ? (passWordPass.value = false) : (passWordPassLis.value = false);\r\n    closePassModal();\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast(\"The administrator password is incorrect.\");\r\n  };\r\n\r\n  val ? handleSuccess() : handleFailure();\r\n};\r\n\r\n\r\nconst passWordClose = () => {\r\n  passLayout.value = false;\r\n}\r\n// 코드 변경 시 로직 처리\r\nconst changeCode = async (codeVal: string) => {\r\n  code.value = codeVal;\r\n  searchText.value = codeVal;\r\n  const filterArr = crcDataArr.value.filter((item) => item.code === codeVal);\r\n\r\n  const types = ['plt', 'rbc', 'wbc'];\r\n\r\n  types.forEach(type => {\r\n    filterArr[0].crcContent[type].forEach((content: any) => {\r\n      const match = crcArr.value.find((item: any) => item.id === content.id);\r\n      if (match) {\r\n        if (match.crcType === 'select') {\r\n          match.val = content.crcContent;\r\n        } else {\r\n          match.crcContent = content.crcContent;\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  remarkList.value = filterArr[0].crcRemark || [];\r\n  commentList.value = filterArr[0].crcComment || [];\r\n  recoList.value = filterArr[0].crcRecommendation || [];\r\n\r\n  remarkList.value = remarkList.value.map(item => {\r\n    return {\r\n      ...item,\r\n      remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n    };\r\n  });\r\n\r\n  commentList.value = commentList.value.map(item => {\r\n    return {\r\n      ...item,\r\n      remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n    };\r\n  });\r\n\r\n  recoList.value = recoList.value.map(item => {\r\n    return {\r\n      ...item,\r\n      remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n    };\r\n  });\r\n};\r\n\r\n// tempSave를 클릭 시 로컬 스토리지에 데이터 저장\r\nconst tempSaveLocalStorage = async () => {\r\n  const saveDataGet: any = await saveDataSlotIdGetApi(props.selectItems.slotId);\r\n  const data = {\r\n    slotId: props.selectItems.slotId,\r\n    code: code.value,\r\n    crcDataArr: crcDataArr.value,\r\n    crcArr: crcArr.value,\r\n    remarkList: remarkList.value,\r\n    commentList: commentList.value,\r\n    recoList: recoList.value\r\n  }\r\n  if (saveDataGet?.data.length === 0) {\r\n    await saveDataCreateApi(data);\r\n  } else {\r\n    await saveDataPutDataApi(data);\r\n  }\r\n\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  showToast('Data saved to temporary storage')\r\n};\r\n\r\nconst tempSaveDataEmpty = async () => {\r\n  // await saveDataDeleteApi({slotId: props.selectItems.slotId});\r\n  crcArr.value = [];\r\n  crcArr.value = (await crcGet()).data;\r\n  cbcFlag.value = '';\r\n  recoList.value = [];\r\n  remarkList.value = [];\r\n  commentList.value = [];\r\n  code.value = '';\r\n  searchText.value = '';\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  showToast('Data empty to storage')\r\n}\r\n\r\n// 페이지 새로고침\r\nconst pageRefresh = async () => {\r\n  const data = (await crcDataGet()).data;\r\n  crcDataArr.value = data;\r\n};\r\n\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\r\nconst checkTextAreaMaxLength = () => {\r\n  switch (siteCd.value) {\r\n    case HOSPITAL_SITE_CD_BY_NAME['원주기독병원']:\r\n      const cbcFlagLength = cbcFlag.value.length;\r\n      if (cbcFlagLength > 60) {\r\n        cbcFlag.value = cbcFlag.value.substring(0, 60);\r\n        toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n        showToast('Text is too long');\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nconst updateCbcDataToDatabase = async ({ cbcPatientNo, cbcPatientNm, cbcSex, cbcAge }: RunningInfoCBCType) => {\r\n  const updatedItem = { cbcPatientNo, cbcPatientNm, cbcSex, cbcAge };\r\n  const updatedRuningInfo = { id: slideData.value.id, ...updatedItem };\r\n  await resRunningItem(updatedRuningInfo, true);\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (isContent.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createElementVNode(\"button\", {\n              class: _normalizeClass([\"tab\", { active: activeTab.value === 1 }]),\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (activeTab.value = 1))\n            }, \" Result Codes \", 2),\n            _createElementVNode(\"button\", {\n              class: _normalizeClass([\"tab\", { active: activeTab.value === 2 }]),\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (adminPassword()))\n            }, \" Code Repository \", 2),\n            (siteCd.value === _unref(HOSPITAL_SITE_CD_BY_NAME)['NONE'])\n              ? (_openBlock(), _createElementBlock(\"button\", {\n                  key: 0,\n                  class: _normalizeClass([\"tab\", { active: activeTab.value === 3 }]),\n                  onClick: _cache[2] || (_cache[2] = ($event: any) => (cellStatus()))\n                }, \" Dashboard \", 2))\n              : _createCommentVNode(\"\", true)\n          ]),\n          (activeTab.value === 1)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n                _createElementVNode(\"div\", _hoisted_4, [\n                  _createElementVNode(\"button\", {\n                    class: \"crcBtn\",\n                    onClick: lisClick\n                  }, [\n                    _createVNode(_component_font_awesome_icon, { icon: ['fas', 'upload'] })\n                  ]),\n                  _cache[14] || (_cache[14] = _createElementVNode(\"span\", { class: \"crcSpanMenu\" }, \"List\", -1)),\n                  _createElementVNode(\"div\", _hoisted_5, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((searchText).value = $event)),\n                      placeholder: \"code Search\",\n                      class: \"autocomplete-input\",\n                      onFocus: _cache[4] || (_cache[4] = ($event: any) => (showDropdown.value = true)),\n                      onBlur: hideDropdownWithDelay\n                    }, null, 544), [\n                      [_vModelText, searchText.value]\n                    ]),\n                    (showDropdown.value && filteredOptions.value.length)\n                      ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_6, [\n                          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredOptions.value, (item, idx) => {\n                            return (_openBlock(), _createElementBlock(\"li\", {\n                              key: idx,\n                              onClick: ($event: any) => (selectOption(item.code)),\n                              class: \"autocomplete-item\"\n                            }, _toDisplayString(item.code), 9, _hoisted_7))\n                          }), 128))\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _createElementVNode(\"button\", {\n                    class: \"crcBtn tempSave ml10\",\n                    onClick: tempSaveLocalStorage\n                  }, \"Save\"),\n                  _createElementVNode(\"button\", {\n                    class: \"crcBtn tempSave ml10\",\n                    onClick: tempSaveDataEmpty\n                  }, \"Clear\"),\n                  (siteCd.value === _unref(HOSPITAL_SITE_CD_BY_NAME)['원주기독병원'])\n                    ? (_openBlock(), _createElementBlock(\"button\", {\n                        key: 0,\n                        class: \"crcBtn tempSave ml10\",\n                        onClick: _cache[5] || (_cache[5] = ($event: any) => (IsWbcImageSelect.value = true))\n                      }, \" Image Select \"))\n                    : _createCommentVNode(\"\", true)\n                ]),\n                (trrur.value)\n                  ? (_openBlock(), _createBlock(CrcCompontent, {\n                      key: 0,\n                      items: crcArr.value,\n                      moType: \"RBC\",\n                      pageName: \"report\",\n                      onChangeCrcData: changeCrcData\n                    }, null, 8, [\"items\"]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_8, [\n                  _createElementVNode(\"div\", null, [\n                    (trrur.value)\n                      ? (_openBlock(), _createBlock(CrcCompontent, {\n                          key: 0,\n                          items: crcArr.value,\n                          moType: \"WBC\",\n                          pageName: \"report\",\n                          onChangeCrcData: changeCrcData\n                        }, null, 8, [\"items\"]))\n                      : _createCommentVNode(\"\", true)\n                  ]),\n                  _createElementVNode(\"div\", null, [\n                    (trrur.value)\n                      ? (_openBlock(), _createBlock(CrcCompontent, {\n                          key: 0,\n                          items: crcArr.value,\n                          moType: \"PLT\",\n                          pageName: \"report\",\n                          onChangeCrcData: changeCrcData\n                        }, null, 8, [\"items\"]))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ]),\n                (remarkCountReturnCode(0) && ywmcSlip.value === 'H3')\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                      _createElementVNode(\"div\", _hoisted_10, [\n                        _createElementVNode(\"span\", null, [\n                          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'message'] }),\n                          _cache[15] || (_cache[15] = _createTextVNode(\" Remark\"))\n                        ]),\n                        _createElementVNode(\"button\", {\n                          class: \"reSelect\",\n                          onClick: _cache[6] || (_cache[6] = ($event: any) => (openSelect('remark')))\n                        }, \"Remark Select\")\n                      ]),\n                      _createElementVNode(\"div\", _hoisted_11, [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(remarkList.value, (item, index) => {\n                          return (_openBlock(), _createElementBlock(\"div\", { key: index }, [\n                            _withDirectives(_createElementVNode(\"textarea\", {\n                              maxlength: \"1000\",\n                              \"onUpdate:modelValue\": ($event: any) => ((item.remarkAllContent) = $event)\n                            }, null, 8, _hoisted_12), [\n                              [_vModelText, item.remarkAllContent]\n                            ])\n                          ]))\n                        }), 128))\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                (remarkCountReturnCode(1) && ywmcSlip.value === 'H3')\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n                      _createElementVNode(\"div\", _hoisted_14, [\n                        _createElementVNode(\"span\", null, [\n                          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'message'] }),\n                          _cache[16] || (_cache[16] = _createTextVNode(\" Comment \"))\n                        ]),\n                        _createElementVNode(\"button\", {\n                          class: \"reSelect\",\n                          onClick: _cache[7] || (_cache[7] = ($event: any) => (openSelect('comment')))\n                        }, \"Comment Select\")\n                      ]),\n                      _createElementVNode(\"div\", _hoisted_15, [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(commentList.value, (item, index) => {\n                          return (_openBlock(), _createElementBlock(\"div\", { key: index }, [\n                            _withDirectives(_createElementVNode(\"textarea\", {\n                              maxlength: \"1000\",\n                              \"onUpdate:modelValue\": ($event: any) => ((item.remarkAllContent) = $event)\n                            }, null, 8, _hoisted_16), [\n                              [_vModelText, item.remarkAllContent]\n                            ])\n                          ]))\n                        }), 128))\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                (remarkCountReturnCode(2) && ywmcSlip.value === 'H3')\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [\n                      _createElementVNode(\"div\", _hoisted_18, [\n                        _createElementVNode(\"span\", null, [\n                          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'message'] }),\n                          _cache[17] || (_cache[17] = _createTextVNode(\" Recommendation \"))\n                        ]),\n                        _createElementVNode(\"button\", {\n                          class: \"reSelect\",\n                          onClick: _cache[8] || (_cache[8] = ($event: any) => (openSelect('recommendation')))\n                        }, \"Recommendation Select\")\n                      ]),\n                      _createElementVNode(\"div\", _hoisted_19, [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(recoList.value, (item, index) => {\n                          return (_openBlock(), _createElementBlock(\"div\", { key: index }, [\n                            _withDirectives(_createElementVNode(\"textarea\", {\n                              \"onUpdate:modelValue\": ($event: any) => ((item.remarkAllContent) = $event)\n                            }, null, 8, _hoisted_20), [\n                              [_vModelText, item.remarkAllContent]\n                            ])\n                          ]))\n                        }), 128))\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                (ywmcSlip.value === 'H1')\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [\n                      _createElementVNode(\"div\", _hoisted_22, [\n                        _createElementVNode(\"span\", null, [\n                          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'message'] }),\n                          _cache[18] || (_cache[18] = _createTextVNode(\" CBC flag \"))\n                        ])\n                      ]),\n                      _createElementVNode(\"div\", _hoisted_23, [\n                        _createElementVNode(\"div\", null, [\n                          _withDirectives(_createElementVNode(\"textarea\", {\n                            \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((cbcFlag).value = $event)),\n                            onInput: _cache[10] || (_cache[10] = ($event: any) => (checkTextAreaMaxLength()))\n                          }, null, 544), [\n                            [_vModelText, cbcFlag.value]\n                          ])\n                        ])\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true)\n              ]))\n            : _createCommentVNode(\"\", true),\n          (activeTab.value === 2)\n            ? (_openBlock(), _createBlock(CrcList, {\n                key: 1,\n                crcPassWord: crcPassWord.value,\n                crcArr: crcArr.value,\n                onRefresh: pageRefresh\n              }, null, 8, [\"crcPassWord\", \"crcArr\"]))\n            : _createCommentVNode(\"\", true),\n          (activeTab.value === 3)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [\n                _createVNode(CellStatusDashBoard, { autoNomarlCheck: autoNomarlCheck.value }, null, 8, [\"autoNomarlCheck\"])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (autoCBCMatchingShow.value)\n            ? (_openBlock(), _createBlock(AutoCBCMatching, {\n                key: 3,\n                isAutoCBCMatchingArr: isAutoCBCMatchingArr.value,\n                onCodeSelect: codeSelect,\n                onCodeClose: codeClose\n              }, null, 8, [\"isAutoCBCMatchingArr\"]))\n            : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true),\n    (isRemark.value)\n      ? (_openBlock(), _createBlock(Remark, {\n          key: 1,\n          onCancel: _cache[11] || (_cache[11] = ($event: any) => (closeSelect('remark'))),\n          onListUpdated: updateList,\n          type: \"remark\",\n          crcDefaultMode: crcDefaultMode.value,\n          crcPassWord: crcPassWord.value\n        }, null, 8, [\"crcDefaultMode\", \"crcPassWord\"]))\n      : _createCommentVNode(\"\", true),\n    (isComment.value)\n      ? (_openBlock(), _createBlock(Remark, {\n          key: 2,\n          onCancel: _cache[12] || (_cache[12] = ($event: any) => (closeSelect('comment'))),\n          onListUpdated: updateList,\n          type: \"comment\",\n          crcDefaultMode: crcDefaultMode.value,\n          crcPassWord: crcPassWord.value\n        }, null, 8, [\"crcDefaultMode\", \"crcPassWord\"]))\n      : _createCommentVNode(\"\", true),\n    (isRecommendation.value)\n      ? (_openBlock(), _createBlock(Remark, {\n          key: 3,\n          onCancel: _cache[13] || (_cache[13] = ($event: any) => (closeSelect('recommendation'))),\n          onListUpdated: updateList,\n          type: \"reco\",\n          crcDefaultMode: crcDefaultMode.value,\n          crcPassWord: crcPassWord.value\n        }, null, 8, [\"crcDefaultMode\", \"crcPassWord\"]))\n      : _createCommentVNode(\"\", true),\n    (toastMessage.value)\n      ? (_openBlock(), _createBlock(ToastNotification, {\n          key: 4,\n          message: toastMessage.value,\n          messageType: toastMessageType.value,\n          duration: 1500,\n          position: \"bottom-right\"\n        }, null, 8, [\"message\", \"messageType\"]))\n      : _createCommentVNode(\"\", true),\n    (passLayout.value)\n      ? (_openBlock(), _createBlock(PassWordCheck, {\n          key: 5,\n          type: passWordType.value,\n          crcPassWord: crcPassWordVal.value,\n          onReturnPassWordCheck: returnPassWordCheck,\n          onPassWordClose: passWordClose\n        }, null, 8, [\"type\", \"crcPassWord\"]))\n      : _createCommentVNode(\"\", true),\n    (captureAndConvertOk.value)\n      ? (_openBlock(), _createBlock(ResultImage, {\n          key: 6,\n          nowCrcData: nowCrcDataRef.value,\n          captureAndConvertOk: captureAndConvertOk.value,\n          onResetBool: resetBool,\n          patientNm: __props.selectItems?.cbcPatientNm,\n          barcodeNo: __props.selectItems?.barcodeNo,\n          commentList: commentList.value,\n          recoList: recoList.value,\n          selectWbcImgArr: selectWbcImgArr.value,\n          slotId: __props.selectItems?.slotId\n        }, null, 8, [\"nowCrcData\", \"captureAndConvertOk\", \"patientNm\", \"barcodeNo\", \"commentList\", \"recoList\", \"selectWbcImgArr\", \"slotId\"]))\n      : _createCommentVNode(\"\", true),\n    (IsWbcImageSelect.value)\n      ? (_openBlock(), _createBlock(WbcImageSelect, {\n          key: 7,\n          selectItems: __props.selectItems,\n          onCloseWbcSelect: closeWbcSelect,\n          onSelectWbcImgSend: selectWbcImgSend\n        }, null, 8, [\"selectItems\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-if=\"isContent\" class=\"crcReport\">\r\n    <div class=\"tabs\">\r\n      <button\r\n          class=\"tab\"\r\n          :class=\"{ active: activeTab === 1 }\"\r\n          @click=\"activeTab = 1\"\r\n      >\r\n        Result Codes\r\n      </button>\r\n      <button\r\n          class=\"tab\"\r\n          :class=\"{ active: activeTab === 2 }\"\r\n          @click=\"adminPassword()\"\r\n      >\r\n        Code Repository\r\n      </button>\r\n      <button\r\n          class=\"tab\"\r\n          :class=\"{ active: activeTab === 3 }\"\r\n          @click=\"cellStatus()\"\r\n          v-if=\"siteCd === HOSPITAL_SITE_CD_BY_NAME['NONE']\"\r\n      >\r\n        Dashboard\r\n      </button>\r\n    </div>\r\n    <!-- 첫 번째 탭 콘텐츠 -->\r\n    <div class=\"tab-content crcDiv reportCrcDiv\" v-if=\"activeTab === 1\">\r\n      <div class=\"text-left crcMenu mb10\">\r\n        <button class=\"crcBtn\" @click=\"lisClick\">\r\n          <font-awesome-icon :icon=\"['fas', 'upload']\"/>\r\n        </button>\r\n        <span class=\"crcSpanMenu\">List</span>\r\n        <div class=\"autocomplete-container ml10\">\r\n          <!-- 검색 입력 필드 -->\r\n          <input\r\n              v-model=\"searchText\"\r\n              placeholder=\"code Search\"\r\n              class=\"autocomplete-input\"\r\n              @focus=\"showDropdown = true\"\r\n              @blur=\"hideDropdownWithDelay\"\r\n          />\r\n\r\n          <!-- 검색어에 따라 필터링된 드롭다운 목록 -->\r\n          <ul v-if=\"showDropdown && filteredOptions.length\" class=\"autocomplete-list\">\r\n            <li\r\n                v-for=\"(item, idx) in filteredOptions\"\r\n                :key=\"idx\"\r\n                @click=\"selectOption(item.code)\"\r\n                class=\"autocomplete-item\"\r\n            >\r\n              {{ item.code }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <button class=\"crcBtn tempSave ml10\" @click=\"tempSaveLocalStorage\">Save</button>\r\n        <button class=\"crcBtn tempSave ml10\" @click=\"tempSaveDataEmpty\">Clear</button>\r\n        <button class=\"crcBtn tempSave ml10\" @click=\"IsWbcImageSelect = true\" v-if=\"siteCd === HOSPITAL_SITE_CD_BY_NAME['원주기독병원']\">\r\n          Image Select\r\n        </button>\r\n\r\n      </div>\r\n\r\n      <!-- RBC 결과 -->\r\n      <crc-compontent v-if=\"trrur\" :items=\"crcArr\" moType=\"RBC\" pageName=\"report\"\r\n                      @changeCrcData=\"changeCrcData\"></crc-compontent>\r\n\r\n      <!-- WBC, PLT 결과 -->\r\n      <div class=\"moDivBox mt10\">\r\n        <div>\r\n          <crc-compontent v-if=\"trrur\" :items=\"crcArr\" moType=\"WBC\" pageName=\"report\"\r\n                          @changeCrcData=\"changeCrcData\"></crc-compontent>\r\n        </div>\r\n        <div>\r\n          <crc-compontent v-if=\"trrur\" :items=\"crcArr\" moType=\"PLT\" pageName=\"report\"\r\n                          @changeCrcData=\"changeCrcData\"></crc-compontent>\r\n        </div>\r\n      </div>\r\n      <!-- Remark 관련 -->\r\n      <div class=\"mt20\" v-if=\"remarkCountReturnCode(0) && ywmcSlip === 'H3'\">\r\n        <div class=\"crcDivTitle\">\r\n          <span><font-awesome-icon :icon=\"['fas', 'message']\"/> Remark</span>\r\n          <button class=\"reSelect\" @click=\"openSelect('remark')\">Remark Select</button>\r\n        </div>\r\n\r\n        <!-- 업데이트된 Remark 리스트를 보여주는 부분 -->\r\n        <div class=\"remarkUlList\">\r\n          <div v-for=\"(item, index) in remarkList\" :key=\"index\">\r\n            <textarea maxlength=\"1000\" v-model=\"item.remarkAllContent\"></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt20\" v-if=\"remarkCountReturnCode(1) && ywmcSlip === 'H3'\">\r\n        <div class=\"crcDivTitle\">\r\n          <span><font-awesome-icon :icon=\"['fas', 'message']\"/> Comment </span>\r\n          <button class=\"reSelect\" @click=\"openSelect('comment')\">Comment Select</button>\r\n        </div>\r\n\r\n        <div class=\"remarkUlList\">\r\n          <div v-for=\"(item, index) in commentList\" :key=\"index\">\r\n            <textarea maxlength=\"1000\" v-model=\"item.remarkAllContent\"></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt20\" v-if=\"remarkCountReturnCode(2) && ywmcSlip === 'H3'\">\r\n        <div class=\"crcDivTitle\">\r\n          <span><font-awesome-icon :icon=\"['fas', 'message']\"/> Recommendation </span>\r\n          <button class=\"reSelect\" @click=\"openSelect('recommendation')\">Recommendation Select</button>\r\n        </div>\r\n\r\n        <!-- 업데이트된 Remark 리스트를 보여주는 부분 -->\r\n        <div class=\"remarkUlList\">\r\n          <div v-for=\"(item, index) in recoList\" :key=\"index\">\r\n            <textarea v-model=\"item.remarkAllContent\"></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mt20\" v-if=\"ywmcSlip === 'H1'\">\r\n        <div class=\"crcDivTitle\">\r\n          <span><font-awesome-icon :icon=\"['fas', 'message']\"/> CBC flag </span>\r\n        </div>\r\n\r\n        <!-- 업데이트된 Remark 리스트를 보여주는 부분 -->\r\n        <div class=\"remarkUlList\">\r\n          <div>\r\n            <textarea v-model=\"cbcFlag\" @input=\"checkTextAreaMaxLength()\"></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 두 번째 탭 콘텐츠 -->\r\n    <CrcList :crcPassWord=\"crcPassWord\" :crcArr=\"crcArr\" @refresh=\"pageRefresh\" v-if=\"activeTab === 2\"/>\r\n    <div class=\"tab-content crcDiv reportCrcDiv dashboard\" v-if=\"activeTab === 3\">\r\n      <cell-status-dash-board :autoNomarlCheck=\"autoNomarlCheck\"/>\r\n    </div>\r\n    <AutoCBCMatching v-if=\"autoCBCMatchingShow\" :isAutoCBCMatchingArr=\"isAutoCBCMatchingArr\" @codeSelect=\"codeSelect\"\r\n                     @codeClose=\"codeClose\"/>\r\n\r\n  </div>\r\n\r\n  <!-- 자식 컴포넌트 Remark -->\r\n  <Remark v-if=\"isRemark\" @cancel=\"closeSelect('remark')\" @listUpdated=\"updateList\" type=\"remark\"\r\n          :crcDefaultMode=\"crcDefaultMode\" :crcPassWord=\"crcPassWord\"/>\r\n  <Remark v-if=\"isComment\" @cancel=\"closeSelect('comment')\" @listUpdated=\"updateList\" type=\"comment\"\r\n          :crcDefaultMode=\"crcDefaultMode\" :crcPassWord=\"crcPassWord\"/>\r\n  <Remark v-if=\"isRecommendation\" @cancel=\"closeSelect('recommendation')\" @listUpdated=\"updateList\" type=\"reco\"\r\n          :crcDefaultMode=\"crcDefaultMode\" :crcPassWord=\"crcPassWord\"/>\r\n  <ToastNotification\r\n      v-if=\"toastMessage\"\r\n      :message=\"toastMessage\"\r\n      :messageType=\"toastMessageType\"\r\n      :duration=\"1500\"\r\n      position=\"bottom-right\"\r\n  />\r\n  <PassWordCheck :type=\"passWordType\" v-if=\"passLayout\" :crcPassWord=\"crcPassWordVal\"\r\n                 @returnPassWordCheck=\"returnPassWordCheck\"\r\n                 @passWordClose=\"passWordClose\"/>\r\n  <ResultImage :nowCrcData=\"nowCrcDataRef\" v-if=\"captureAndConvertOk\"\r\n               :captureAndConvertOk=\"captureAndConvertOk\"\r\n               @resetBool=\"resetBool\"\r\n               :patientNm=\"selectItems?.cbcPatientNm\"\r\n               :barcodeNo=\"selectItems?.barcodeNo\"\r\n               :commentList=\"commentList\"\r\n               :recoList=\"recoList\"\r\n               :selectWbcImgArr=\"selectWbcImgArr\"\r\n               :slotId=\"selectItems?.slotId\"\r\n  />\r\n  <WbcImageSelect v-if=\"IsWbcImageSelect\" :selectItems=\"selectItems\" @closeWbcSelect=\"closeWbcSelect\"\r\n                  @selectWbcImgSend=\"selectWbcImgSend\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, nextTick, onBeforeMount, onMounted, ref} from \"vue\";\r\n\r\nimport CrcCompontent from \"@/components/commonUi/crcCompontent.vue\";\r\nimport CrcList from \"@/views/datebase/commponent/detail/report/component/crcList.vue\";\r\nimport Remark from \"@/views/datebase/commponent/detail/report/component/remark.vue\";\r\nimport {\r\n  crcDataGet,\r\n  crcGet,\r\n  crcOptionGet,\r\n  saveDataCreateApi, saveDataPutDataApi,\r\n  saveDataSlotIdGetApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport {getCbcCodeList, getCbcPathData, getLisPathData} from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport PassWordCheck from \"@/components/commonUi/PassWordCheck.vue\";\r\nimport {updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {cbcDataGet, isAdultNormalCBC, isAutoCBCMatching} from \"@/common/helpers/lisCbc\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport moment from \"moment\";\r\nimport CellStatusDashBoard from \"@/views/datebase/commponent/detail/report/component/cellStatusDashBoard.vue\";\r\nimport ResultImage from \"@/views/datebase/commponent/detail/report/component/resultImage.vue\";\r\nimport {lisSendSD} from \"@/common/helpers/lisCbc/sdCbcLis\";\r\nimport AutoCBCMatching from \"@/views/datebase/commponent/detail/report/component/autoCBCMatching.vue\";\r\nimport WbcImageSelect from \"@/views/datebase/commponent/detail/report/component/wbcImageSelect.vue\";\r\nimport {ywmcCbcDataLoad} from \"@/common/helpers/lisCbc/ywmcCbcLis\";\r\nimport {ywmcSaveCommentPostSendApi} from \"@/common/api/service/lisSend/lisSend\";\r\nimport {RunningInfoCBCType} from \"@/common/api/service/runningInfo/dto/runningInfoDto\";\r\n\r\nconst crcArr = ref<any>([]);\r\nconst props = defineProps({\r\n  crcDataVal: {\r\n    type: Array,\r\n    required: true,\r\n  },\r\n  selectItems: {\r\n    type: Array\r\n  }\r\n});\r\nconst store = useStore();\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS)\r\nconst passWordType = ref('');\r\nconst isRemark = ref(false); // Remark 모달 창 열림/닫힘 상태\r\nconst isComment = ref(false);\r\nconst isRecommendation = ref(false);\r\nconst activeTab = ref(1); // 현재 탭 상태\r\nconst remarkList = ref<any[]>([]); // Remark 리스트 상태\r\nconst commentList = ref<any[]>([]);\r\nconst recoList = ref<any[]>([]);\r\nconst isContent = ref(false);\r\nconst crcDataArr = ref<any[]>([]);\r\nconst code = ref('');\r\nconst crcDefaultMode = ref(false);\r\nconst crcPassWord = ref('');\r\nconst trrur = ref(false);\r\nconst crcRemarkCount = ref<any>([]);\r\nconst passWordPass = ref(false);\r\nconst passWordPassLis = ref(false);\r\nconst passLayout = ref(false);\r\nconst crcPassWordVal = ref('');\r\nconst lisTwoMode = ref(false);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst searchText = ref('');\r\nconst showDropdown = ref(false);\r\nconst lisHotKey = ref('');\r\nconst lisFilePathSetArr = ref<any>([]);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nconst submitState = ref(false);\r\nconst morphologyMapping: any = ref({\r\n  RBC: {},\r\n  WBC: {},\r\n  PLT: {},\r\n});\r\nconst cbcCodeList = ref<any>([]);\r\nconst lastChnageInputCrcData = ref<any>([]);\r\nconst autoNomarlCheck = ref<any>([]);\r\nconst nowCrcDataRef = ref<any>([]);\r\nconst captureAndConvertOk = ref(false);\r\nconst isAutoCBCMatchingArr = ref<any>([]);\r\nconst autoCBCMatchingShow = ref(false);\r\nconst IsWbcImageSelect = ref(false);\r\nconst selectWbcImgArr = ref<any>([]);\r\nconst ywmcSlip = ref('H3');\r\nconst cbcFlag = ref('');\r\n\r\nconst selectWbcImgSend = (arr: any) => {\r\n  selectWbcImgArr.value = [];\r\n  selectWbcImgArr.value = arr;\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  showToast('Success');\r\n  IsWbcImageSelect.value = false;\r\n}\r\nonBeforeMount(async () => {\r\n  await nextTick();\r\n\r\n  isContent.value = true;\r\n  if (isContent.value) {\r\n    const saveDataGet: any = await saveDataSlotIdGetApi(props?.selectItems?.slotId);\r\n    const crcSettingData = saveDataGet.data.crcArr;\r\n    const codeVal = saveDataGet.data.code || '';\r\n    const remarkListVal = saveDataGet.data.remarkList || [];\r\n    const commentListVal = saveDataGet.data.commentList || [];\r\n    const recoListVal = saveDataGet.data.recoList || [];\r\n    if (crcSettingData) {\r\n      crcArr.value = crcSettingData;\r\n      code.value = codeVal;\r\n      searchText.value = codeVal;\r\n      remarkList.value = remarkListVal;\r\n      commentList.value = commentListVal;\r\n      recoList.value = recoListVal;\r\n\r\n      // 공통된 map 처리\r\n      [remarkList, commentList, recoList].forEach(list => {\r\n        list.value = list.value.map(item => ({\r\n          ...item,\r\n          remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n        }));\r\n      });\r\n      trrur.value = true;\r\n    } else {\r\n      crcArr.value = (await crcGet()).data;\r\n      trrur.value = true;\r\n      initializeList(recoList);\r\n      initializeList(remarkList);\r\n      initializeList(commentList);\r\n    }\r\n\r\n    crcDataArr.value = (await crcDataGet()).data;\r\n  }\r\n  const crcOptionApi = await crcOptionGet();\r\n  if (crcOptionApi.data.length !== 0) {\r\n    crcDefaultMode.value = crcOptionApi.data[0].crcMode;\r\n    crcRemarkCount.value = crcOptionApi.data[0].crcRemarkCount;\r\n    crcPassWord.value = crcOptionApi.data[0].crcPassWord;\r\n    crcPassWordVal.value = crcOptionApi.data[0].crcPassWord;\r\n    lisTwoMode.value = crcOptionApi.data[0].lisTwoMode;\r\n  }\r\n  const {lisFilePathSetArr: lisFilePathSetArrVar, lisHotKey: lisHotKeyVal} = await getLisPathData();\r\n  lisHotKey.value = lisHotKeyVal;\r\n  lisFilePathSetArr.value = lisFilePathSetArrVar;\r\n  await newMorphMapSet();\r\n});\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await dataAutoComputeLoad();\r\n  submitState.value = props.selectItems?.submitState === 'lisCbc' || props.selectItems?.submitState === 'Submit';\r\n  if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['원주기독병원'] || siteCd.value) {\r\n    const {data, cbcDataVal, slip} = await ywmcCbcDataLoad(props.selectItems?.barcodeNo, await getCbcCodeList());\r\n    ywmcSlip.value = slip;\r\n    cbcFlag.value = '';\r\n\r\n    await updateCbcDataToDatabase({\r\n      cbcPatientNo: cbcDataVal?.pt_no,\r\n      cbcPatientNm: cbcDataVal?.pt_nm,\r\n      cbcSex: cbcDataVal?.sex,\r\n      cbcAge: cbcDataVal?.age,\r\n    })\r\n\r\n    for (const el of data) {\r\n      switch (el.classNm.trim()) {\r\n        case '8HN109GBL_F':\r\n          cbcFlag.value += 'Blasts Flag\\n'\r\n          break;\r\n        case '8HN109G_NRBC_F':\r\n          cbcFlag.value += 'Nucleated RBC Flag\\n'\r\n          break;\r\n        case '8HN109G_ATYP_FRAG':\r\n          cbcFlag.value += 'Atypical Lymphocyte Flag\\n'\r\n          break;\r\n        case '8HN109GIG_F':\r\n          cbcFlag.value += 'Immature Granulocytes Flag\\n'\r\n          break;\r\n      }\r\n    }\r\n  } else {\r\n    ywmcSlip.value = 'H3'; // 원주기독에 독단적인 커스텀마이징 때문에 강제적으로 H3 pbs 기준으로 맞춤..\r\n\r\n  }\r\n\r\n});\r\nconst closeWbcSelect = () => {\r\n  IsWbcImageSelect.value = false;\r\n}\r\nconst dataAutoComputeLoad = async () => {\r\n  cbcCodeList.value = await getCbcCodeList();\r\n  const cbcFilePathSetArr = await getCbcPathData();\r\n  if (cbcFilePathSetArr && cbcFilePathSetArr !== '' && siteCd.value === HOSPITAL_SITE_CD_BY_NAME['SD의학연구소']) {\r\n    const {cbcData, cbcSex, cbcAge} = await cbcDataGet(props?.selectItems?.barcodeNo, cbcCodeList.value);\r\n    autoNomarlCheck.value = await isAdultNormalCBC(cbcData, props?.selectItems?.wbcInfoAfter, props?.selectItems?.rbcInfoAfter, cbcSex, cbcAge);\r\n    const saveDataGet = await saveDataSlotIdGetApi(props?.selectItems?.slotId);\r\n    const crcSettingData = saveDataGet?.data?.crcArr;\r\n    if (!crcSettingData) {\r\n      if (autoNomarlCheck.value.length === 0) {\r\n        selectOption('Normal');\r\n      } else {\r\n        const res = await isAutoCBCMatching(cbcData, cbcSex, cbcAge);\r\n        isAutoCBCMatchingArr.value = res;\r\n        if (isAutoCBCMatchingArr.value.length !== 0) {\r\n          autoCBCMatchingShow.value = true;\r\n        } else {\r\n          autoCBCMatchingShow.value = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst codeSelect = (code: string) => {\r\n  selectOption(code);\r\n  autoCBCMatchingShow.value = false;\r\n}\r\n\r\nconst codeClose = () => {\r\n  autoCBCMatchingShow.value = false;\r\n}\r\n\r\nconst captureAndConvert = async () => {\r\n  captureAndConvertOk.value = true;\r\n}\r\nconst resetBool = () => {\r\n  captureAndConvertOk.value = false;\r\n\r\n}\r\n\r\nconst selectOption = (selectedCode: string) => {\r\n  code.value = selectedCode;   // 선택한 코드를 저장\r\n  searchText.value = selectedCode;  // 검색창에 선택된 코드 표시\r\n  showDropdown.value = false;  // 드롭다운 닫기\r\n  changeCode(selectedCode);\r\n};\r\n\r\nconst hideDropdownWithDelay = () => {\r\n  setTimeout(() => {\r\n    showDropdown.value = false;\r\n  }, 200); // 작은 딜레이 추가\r\n};\r\nconst filteredOptions = computed(() => {\r\n  if (!searchText.value) {\r\n    return crcDataArr.value; // 검색어가 없을 경우 전체 목록 표시\r\n  }\r\n\r\n  // 검색어와 일치하는 코드를 필터링\r\n  return crcDataArr.value.filter(item =>\r\n      item.code.toLowerCase().includes(searchText.value.toLowerCase())\r\n  );\r\n});\r\nconst convertToNewlines = (content: string) => {\r\n  return content.replaceAll('<br>', '\\r\\n');\r\n};\r\n\r\nconst remarkCountReturnCode = (idx: any) => {\r\n  if (crcRemarkCount.value.length === 0) {\r\n    return;\r\n  }\r\n  return crcRemarkCount.value[idx].checked;\r\n}\r\n\r\nlet isHotKeyPressed = false;\r\n\r\nconst handleKeyDown = (event: KeyboardEvent) => {\r\n  const keyName = event.key;\r\n\r\n  if (!isHotKeyPressed && keyName.toUpperCase() === lisHotKey.value.toUpperCase()) {\r\n    event.preventDefault(); // 기본 동작 방지\r\n    isHotKeyPressed = true; // 한 번만 실행되도록 설정\r\n    lisClick();\r\n  }\r\n};\r\n\r\nconst handleKeyUp = (event: KeyboardEvent) => {\r\n  const keyName = event.key;\r\n\r\n  if (keyName.toUpperCase() === lisHotKey.value.toUpperCase()) {\r\n    isHotKeyPressed = false; // 키를 떼면 다시 실행 가능\r\n  }\r\n};\r\n\r\nwindow.addEventListener('keydown', handleKeyDown);\r\nwindow.addEventListener('keyup', handleKeyUp);\r\n\r\nconst lisClick = async () => {\r\n  passWordType.value = 'lisCbc'\r\n  if (!passWordPassLis.value && submitState.value) {\r\n    passLayout.value = true;\r\n    return\r\n  } else {\r\n    await lisStart();\r\n  }\r\n\r\n}\r\nconst updateCrcDataWithCode = (crcSetData: any, nowCrcData: any) => {\r\n  ['plt', 'rbc', 'wbc'].forEach(category => {\r\n    nowCrcData.crcContent[category].forEach((nowItem: any) => {\r\n      // crcSetData -> 셋팅페이지에서 셋팅한 배열들 단일 배열\r\n      const matchingItem = crcSetData.find((setItem: any) => setItem.id === nowItem.id);\r\n      if (matchingItem && matchingItem.crcCode) {\r\n        nowItem.crcTitle = matchingItem.crcCode;\r\n      }\r\n    });\r\n  });\r\n\r\n  return nowCrcData;\r\n};\r\n\r\nconst changeCrcData = (item: any) => {\r\n  const nes = JSON.parse(JSON.stringify(crcArr.value));\r\n  const margeData = nes.findIndex((el: any) => {\r\n    return el.id === item.id\r\n  });\r\n  nes[margeData].val = item.val\r\n  lastChnageInputCrcData.value = nes\r\n}\r\n\r\nconst newMorphMapSet = async () => {\r\n  morphologyMapping.value = {\r\n    RBC: {},\r\n    WBC: {},\r\n    PLT: {},\r\n  };\r\n\r\n  for (const el of crcArr.value) {\r\n    if (!el.crcCode || !el.crcCodeMatching || !el.crcContent) {\r\n      continue;\r\n    }\r\n\r\n    const matchingKeys = el.crcCodeMatching.split(',').map(key => key.trim());\r\n    const contents = el.crcContent.split(',').map(content => content.trim());\r\n\r\n    if (el.morphologyType === 'RBC') {\r\n      // RBC에 새로운 속성 추가\r\n      morphologyMapping.value.RBC[el.crcCode] = {};\r\n      for (let i = 0; i < matchingKeys.length; i++) {\r\n        const key = matchingKeys[i];\r\n        const value = contents[i] ? contents[i] : \"\";\r\n        morphologyMapping.value.RBC[el.crcCode][value] = key;\r\n      }\r\n    } else if (el.morphologyType === 'WBC') {\r\n      // WBC에 새로운 속성 추가\r\n      morphologyMapping.value.WBC[el.crcCode] = {};\r\n      for (let i = 0; i < matchingKeys.length; i++) {\r\n        const key = matchingKeys[i];\r\n        const value = contents[i] ? contents[i] : \"\";\r\n        morphologyMapping.value.WBC[el.crcCode][value] = key;\r\n      }\r\n    } else if (el.morphologyType === 'PLT') {\r\n      // PLT에 새로운 속성 추가\r\n      morphologyMapping.value.PLT[el.crcCode] = {};\r\n      for (let i = 0; i < matchingKeys.length; i++) {\r\n        const key = matchingKeys[i];\r\n        const value = contents[i] ? contents[i] : \"\";\r\n        morphologyMapping.value.PLT[el.crcCode][value] = key;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// crcContent 업데이트 함수\r\nconst updateCrcContent = (crcSetData: any, nowCrcData: any) => {\r\n  ['plt', 'rbc', 'wbc'].forEach(category => {\r\n    nowCrcData.crcContent[category].forEach((nowItem: any) => {\r\n      // text 타입은 변경하지 않고 유지\r\n      if (nowItem.crcType !== 'select' && nowItem.crcContent !== 'Etc') return;\r\n\r\n      // id 기준으로 crcSetData에서 매칭 항목 찾기\r\n      const matchingItem = crcSetData.find((setItem: any) => setItem.id === nowItem.id);\r\n      if (matchingItem && matchingItem.crcCode) {\r\n        const categoryMapping = morphologyMapping.value[matchingItem.morphologyType];\r\n\r\n        // 매핑이 존재하고 crcContent의 값이 매핑에 있으면 crcContent 값으로 변경\r\n        if (categoryMapping && categoryMapping[matchingItem.crcCode]) {\r\n          nowItem.crcContent = categoryMapping[matchingItem.crcCode][nowItem.crcContent] || nowItem.crcContent;\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  return nowCrcData;\r\n};\r\n\r\n\r\nconst lisStart = async () => {\r\n  if (searchText.value === '') {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast('Please enter the code.');\r\n    passWordPassLis.value = false;\r\n    return;\r\n  }\r\n  if (lastChnageInputCrcData.value.length !== 0) {\r\n    crcArr.value = lastChnageInputCrcData.value;\r\n  }\r\n  const crcSetData = crcArr.value;\r\n\r\n  let nowCrcData: any = crcDataArr.value.find((item) => {\r\n    return item.code === code.value\r\n  });\r\n  ['plt', 'rbc', 'wbc'].forEach(category => {\r\n    nowCrcData.crcContent[category].forEach((nowItem: any) => {\r\n      for (const el of crcSetData) {\r\n        if (nowItem.id === el.id) {\r\n          if (el.crcType === 'select') {\r\n            nowItem.crcContent = el.val;\r\n          } else {\r\n            nowItem.crcContent = el.crcContent;\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  typeof remarkList.value[0]?.remarkAllContent === \"string\"\r\n      ? remarkList.value[0].remarkAllContent.replace(/\\n/g, \"\\r\")\r\n      : \"\";\r\n  console.log('commentList', commentList.value)\r\n  typeof commentList.value[0]?.remarkAllContent === \"string\"\r\n      ? commentList.value[0].remarkAllContent.replace(/\\n/g, \"\\r\")\r\n      : \"\";\r\n\r\n  typeof recoList.value[0]?.remarkAllContent === \"string\"\r\n      ? recoList.value[0].remarkAllContent.replace(/\\n/g, \"\\r\")\r\n      : \"\";\r\n\r\n  Object.assign(nowCrcData, {\r\n    crcRemark: remarkList.value,\r\n    crcComment: commentList.value,\r\n    crcRecommendation: recoList.value\r\n  });\r\n  nowCrcData = updateCrcDataWithCode(crcSetData, nowCrcData);\r\n  nowCrcData = updateCrcContent(crcSetData, nowCrcData);\r\n\r\n  switch (siteCd.value) {\r\n    case HOSPITAL_SITE_CD_BY_NAME['SD의학연구소']:\r\n      await lisCommonDataWhether(lisSendSD(props.selectItems?.barcodeNo, nowCrcData, lisFilePathSetArr.value));\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['원주기독병원']:\r\n      await yamcSendLisUpdate(nowCrcData);\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['UIMD']:\r\n      await yamcSendLisUpdate(nowCrcData);\r\n      break;\r\n    case HOSPITAL_SITE_CD_BY_NAME['NONE']:\r\n      await lisCommonDataWhether(lisSendSD(props.selectItems?.barcodeNo, nowCrcData, lisFilePathSetArr.value));\r\n      break;\r\n    default:\r\n      await lisCommonDataWhether(lisSendSD(props.selectItems?.barcodeNo, nowCrcData, lisFilePathSetArr.value));\r\n      break;\r\n  }\r\n}\r\n\r\n\r\nconst yamcSendLisUpdate = async (nowCrcData: any) => {\r\n  nowCrcDataRef.value = nowCrcData;\r\n  await nextTick();\r\n  if (ywmcSlip.value.trim() === 'H3') {\r\n    await captureAndConvert();\r\n  } else {\r\n\r\n    if (cbcFlag.value.length > 60) {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Text is too long');\r\n      return;\r\n    }\r\n\r\n    if (cbcFlag.value.length === 0) {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Please enter CBC flag.');\r\n      return;\r\n    }\r\n\r\n    //props.barcodeNo\r\n    const saveData = {\r\n      tsmp_no: props.selectItems?.barcodeNo,\r\n      text_rslt: cbcFlag.value\r\n    }\r\n    const setDataYWmc = await ywmcSaveCommentPostSendApi(saveData);\r\n    if (setDataYWmc?.code === 201) {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n      showToast('Success');\r\n    } else {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Lis fail');\r\n    }\r\n\r\n  }\r\n}\r\n\r\nconst lisCommonDataWhether = async (lisFunc: any) => {\r\n  const resText = await lisFunc;\r\n  if (resText === 'Success') {\r\n    await commonSucessLis();\r\n  } else {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast('Lis Send Fail');\r\n  }\r\n}\r\n\r\nconst commonSucessLis = async () => {\r\n  if (props.selectItems?.id) {\r\n    const localTime = moment().local();\r\n    const updatedItem = {\r\n      submitState: 'lisCbc',\r\n      submitOfDate: localTime.format(),\r\n      submitUserId: userModuleDataGet.value.userId,\r\n    };\r\n    const updatedRuningInfo = {id: props.selectItems?.id, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, true);\r\n    submitState.value = true;\r\n  }\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  showToast(MESSAGES.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean) => {\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response: any = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo],\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (response) {\r\n      if (!noAlert) {\r\n        toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n        showToast('Success');\r\n      }\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n// const listDel = (idx: any, type: string) => {\r\n//   if (type === 'remark') {\r\n//     remarkList.value.splice(idx, 1);\r\n//   } else if (type === 'reco') {\r\n//     recoList.value.splice(idx, 1);\r\n//   } else if (type === 'comment') {\r\n//     commentList.value.splice(idx, 1);\r\n//   }\r\n// }\r\n\r\nconst openSelect = (type: string) => {\r\n  switch (type) {\r\n    case 'remark':\r\n      isRemark.value = true;\r\n      break;\r\n    case 'comment':\r\n      isComment.value = true;\r\n      break;\r\n    case 'recommendation':\r\n      isRecommendation.value = true;\r\n      break;\r\n  }\r\n}\r\n\r\nconst closeSelect = (type: string) => {\r\n  switch (type) {\r\n    case 'remark':\r\n      isRemark.value = false;\r\n      break;\r\n    case 'comment':\r\n      isComment.value = false;\r\n      break;\r\n    case 'recommendation':\r\n      isRecommendation.value = false;\r\n      break;\r\n  }\r\n}\r\n\r\n// 자식 컴포넌트로부터 업데이트된 리스트를 받음\r\nconst initializeList = (list: any) => {\r\n  if (list.value.length === 0) {\r\n    list.value.push({\r\n      code: '',\r\n      id: 0,\r\n      remarkAllContent: '',\r\n      remarkContent: '',\r\n    });\r\n  }\r\n};\r\n\r\nconst updateList = (newList: any[], type: string) => {\r\n  initializeList(recoList);\r\n  initializeList(remarkList);\r\n  initializeList(commentList);\r\n\r\n  switch (type) {\r\n    case 'remark':\r\n      remarkallContentPush(newList, remarkList)\r\n      closeSelect('remark');\r\n      break;\r\n    case 'comment':\r\n      remarkallContentPush(newList, commentList)\r\n      closeSelect('comment');\r\n      break;\r\n    case 'reco':\r\n      remarkallContentPush(newList, recoList)\r\n      closeSelect('recommendation');\r\n      break;\r\n  }\r\n}\r\nconst remarkallContentPush = (newList: any, list) => {\r\n  for (const el of newList) {\r\n    if (list.value[0].remarkAllContent.length === 0) {\r\n      list.value[0].remarkAllContent += convertToNewlines(el.remarkAllContent);\r\n    } else {\r\n      list.value[0].remarkAllContent += '\\r\\r'\r\n      list.value[0].remarkAllContent += convertToNewlines(el.remarkAllContent);\r\n    }\r\n  }\r\n  // list.value[0].remarkAllContent += '\\r'\r\n}\r\nconst adminPassword = () => {\r\n  passWordType.value = ''\r\n  if (!passWordPass.value) {\r\n    passLayout.value = true;\r\n    return\r\n  } else {\r\n    activeTab.value = 2;\r\n  }\r\n}\r\n\r\nconst cellStatus = () => {\r\n  activeTab.value = 3;\r\n}\r\n\r\nconst returnPassWordCheck = (val: boolean) => {\r\n  const isDefaultPassword = passWordType.value === '';\r\n\r\n  const closePassModal = () => {\r\n    passLayout.value = false;\r\n  };\r\n\r\n  const handleSuccess = () => {\r\n    isDefaultPassword ? (passWordPass.value = true) : (passWordPassLis.value = true);\r\n    closePassModal();\r\n\r\n    isDefaultPassword ? (activeTab.value = 2) : (lisStart(), passWordPassLis.value = false);\r\n  };\r\n\r\n  const handleFailure = () => {\r\n    isDefaultPassword ? (passWordPass.value = false) : (passWordPassLis.value = false);\r\n    closePassModal();\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast(\"The administrator password is incorrect.\");\r\n  };\r\n\r\n  val ? handleSuccess() : handleFailure();\r\n};\r\n\r\n\r\nconst passWordClose = () => {\r\n  passLayout.value = false;\r\n}\r\n// 코드 변경 시 로직 처리\r\nconst changeCode = async (codeVal: string) => {\r\n  code.value = codeVal;\r\n  searchText.value = codeVal;\r\n  const filterArr = crcDataArr.value.filter((item) => item.code === codeVal);\r\n\r\n  const types = ['plt', 'rbc', 'wbc'];\r\n\r\n  types.forEach(type => {\r\n    filterArr[0].crcContent[type].forEach((content: any) => {\r\n      const match = crcArr.value.find((item: any) => item.id === content.id);\r\n      if (match) {\r\n        if (match.crcType === 'select') {\r\n          match.val = content.crcContent;\r\n        } else {\r\n          match.crcContent = content.crcContent;\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  remarkList.value = filterArr[0].crcRemark || [];\r\n  commentList.value = filterArr[0].crcComment || [];\r\n  recoList.value = filterArr[0].crcRecommendation || [];\r\n\r\n  remarkList.value = remarkList.value.map(item => {\r\n    return {\r\n      ...item,\r\n      remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n    };\r\n  });\r\n\r\n  commentList.value = commentList.value.map(item => {\r\n    return {\r\n      ...item,\r\n      remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n    };\r\n  });\r\n\r\n  recoList.value = recoList.value.map(item => {\r\n    return {\r\n      ...item,\r\n      remarkAllContent: convertToNewlines(item.remarkAllContent),\r\n    };\r\n  });\r\n};\r\n\r\n// tempSave를 클릭 시 로컬 스토리지에 데이터 저장\r\nconst tempSaveLocalStorage = async () => {\r\n  const saveDataGet: any = await saveDataSlotIdGetApi(props.selectItems.slotId);\r\n  const data = {\r\n    slotId: props.selectItems.slotId,\r\n    code: code.value,\r\n    crcDataArr: crcDataArr.value,\r\n    crcArr: crcArr.value,\r\n    remarkList: remarkList.value,\r\n    commentList: commentList.value,\r\n    recoList: recoList.value\r\n  }\r\n  if (saveDataGet?.data.length === 0) {\r\n    await saveDataCreateApi(data);\r\n  } else {\r\n    await saveDataPutDataApi(data);\r\n  }\r\n\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  showToast('Data saved to temporary storage')\r\n};\r\n\r\nconst tempSaveDataEmpty = async () => {\r\n  // await saveDataDeleteApi({slotId: props.selectItems.slotId});\r\n  crcArr.value = [];\r\n  crcArr.value = (await crcGet()).data;\r\n  cbcFlag.value = '';\r\n  recoList.value = [];\r\n  remarkList.value = [];\r\n  commentList.value = [];\r\n  code.value = '';\r\n  searchText.value = '';\r\n  toastMessageType.value = MESSAGES.TOAST_MSG_SUCCESS;\r\n  showToast('Data empty to storage')\r\n}\r\n\r\n// 페이지 새로고침\r\nconst pageRefresh = async () => {\r\n  const data = (await crcDataGet()).data;\r\n  crcDataArr.value = data;\r\n};\r\n\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\r\nconst checkTextAreaMaxLength = () => {\r\n  switch (siteCd.value) {\r\n    case HOSPITAL_SITE_CD_BY_NAME['원주기독병원']:\r\n      const cbcFlagLength = cbcFlag.value.length;\r\n      if (cbcFlagLength > 60) {\r\n        cbcFlag.value = cbcFlag.value.substring(0, 60);\r\n        toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n        showToast('Text is too long');\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nconst updateCbcDataToDatabase = async ({ cbcPatientNo, cbcPatientNm, cbcSex, cbcAge }: RunningInfoCBCType) => {\r\n  const updatedItem = { cbcPatientNo, cbcPatientNm, cbcSex, cbcAge };\r\n  const updatedRuningInfo = { id: slideData.value.id, ...updatedItem };\r\n  await resRunningItem(updatedRuningInfo, true);\r\n}\r\n\r\n</script>\r\n","import script from \"./crcResultCodes.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./crcResultCodes.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, vShow as _vShow, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = { style: {\"display\":\"flex\"} }\nconst _hoisted_2 = { class: \"reportDiv\" }\nconst _hoisted_3 = { class: \"wbcDiv shadowBox\" }\nconst _hoisted_4 = {\n  key: 1,\n  class: \"reportDetail shadowBox\"\n}\nconst _hoisted_5 = { class: \"reportTitle\" }\nconst _hoisted_6 = { class: \"reportDivTop\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"reportH3\"\n}\nconst _hoisted_8 = {\n  key: 1,\n  class: \"reportH3\"\n}\nconst _hoisted_9 = { class: \"reportTable\" }\nconst _hoisted_10 = { class: \"reportH3 mb10 pl0\" }\nconst _hoisted_11 = { class: \"tableClass mt22\" }\nconst _hoisted_12 = {\n  key: 0,\n  class: \"reportH3 mb10 pl0\"\n}\nconst _hoisted_13 = {\n  key: 1,\n  class: \"tableClass\"\n}\nconst _hoisted_14 = { key: 0 }\nconst _hoisted_15 = {\n  key: 0,\n  class: \"rbcRight\"\n}\nconst _hoisted_16 = { class: \"printRbcCategory\" }\nconst _hoisted_17 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_18 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_19 = { class: \"printRbcClass\" }\nconst _hoisted_20 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_21 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_22 = {\n  key: 0,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_23 = {\n  key: 1,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_24 = { class: \"printRbcDegree\" }\nconst _hoisted_25 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_26 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_27 = {\n  key: 0,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_28 = { key: 1 }\nconst _hoisted_29 = {\n  class: \"printTotalText\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_30 = { class: \"printRbcCount\" }\nconst _hoisted_31 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_32 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_33 = {\n  key: 0,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_34 = {\n  key: 1,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_35 = { class: \"printRbcPercent\" }\nconst _hoisted_36 = {\n  key: 0,\n  class: \"mb10 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_37 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_38 = {\n  key: 0,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_39 = {\n  key: 1,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_40 = { style: {\"cursor\":\"default\"} }\n\nimport WbcClass from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport {computed, nextTick, onBeforeMount, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {defaultBmClassList, defaultWbcClassList, WbcInfo} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport router from \"@/router\";\r\nimport RbcClass from \"@/views/datebase/commponent/detail/rbc/rbcClass.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport { formatDateString } from \"@/common/lib/utils/dateUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {crcGet, crcOptionGet, getOrderClassApi, getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {\r\n  incheonGilPercentChange,\r\n  incheonStMaryPercentChange,\r\n  inhaPercentChange,\r\n  seoulStMaryPercentChange\r\n} from \"@/common/helpers/common/classPercent\";\r\nimport Crc from \"@/views/datebase/commponent/detail/report/crcResultCodes.vue\";\r\nimport {removeDuplicatesById} from \"@/common/lib/utils/removeDuplicateIds\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport {RBC_CODE_CLASS_ID, SHOWING_RBC_SHAPE_CLASS_IDS} from \"@/common/defines/constants/dataBase\";\r\nimport DetailHeader from \"@/views/datebase/commponent/detail/detailHeader.vue\";\r\nimport { DIR_NAME } from \"@/common/defines/constants/settings\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'report',\n  setup(__props) {\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\nconst store = useStore();\r\n\r\nconst selectItems = ref<any>([]);\r\nconst wbcInfo = ref<any>(null);\r\nconst printOnOff = ref(false);\r\nconst rbcInfo = ref<any>([]);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoAfterData = computed(() => store.state.slideDataModule.rbcInfoAfter);\r\n//  임시로 변경 해둠 다른 페이지에서 호출하고 업데이트 하는 부분 삭제 하세요.\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nconst projectBm = ref(false);\r\nconst orderClass = ref<any>([]);\r\nconst isLoading = ref(true);\r\nconst nonWbcTitleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst nonWbcClassList = ref<any[]>([]);\r\nconst printContent = ref<HTMLElement | null>(null);\r\n\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst shapeOthersCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst isCommitChanged = ref(false);\r\nconst wbcInfoAfter = ref<any>([]);\r\nconst crcData = ref<any>([]);\r\nconst crcConnect = ref(false);\r\nconst isContent = ref(false);\r\nconst changeSlideByLisUpload = ref(false);\r\n\r\n\r\nwatch(\r\n    () => slideData.value,\r\n    async (newVal, oldVal) => {\r\n      if (newVal.id !== oldVal?.id) {\r\n        await nextTick();\r\n\r\n        await getDetailRunningInfo(newVal);\r\n        await getOrderClass();\r\n        await initData(newVal);\r\n\r\n        if (!projectBm.value) {\r\n          await rbcTotalAndReCount();\r\n        }\r\n      }\r\n    },\r\n    {immediate: true, deep: true}\r\n);\r\n\r\nonBeforeMount(async () => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  const crcOptionApi = await crcOptionGet();\r\n  if (crcOptionApi.data.length !== 0) {\r\n    crcConnect.value = crcOptionApi.data[0].crcConnect;\r\n  }\r\n  const result = (await crcGet());\r\n  if (result.code === 200) {\r\n    isContent.value = true;\r\n    crcData.value = result.data;\r\n  }\r\n\r\n})\r\n\r\nconst handleClickOutside = (event: MouseEvent) => {\r\n  if (printContent.value && !printContent.value.contains(event.target as Node) && printOnOff.value) {\r\n    printClose();\r\n  }\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  isLoading.value = false;\r\n  await getOrderClass();\r\n  await initData();\r\n\r\n  // if (!projectBm.value) {\r\n  //   await rbcTotalAndReCount();\r\n  //   await getRbcDegreeData();\r\n  //   await reDegree();\r\n  // }\r\n  // 여기 임시로 막아둠 풀고 재수정 요청 바람 After 클릭 후 사용자가 변경 된 상태가 그대로 유지되어야함 현재 코드는 그렇지 않음\r\n  document.addEventListener('click', handleClickOutside);\r\n\r\n});\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleClickOutside);\r\n});\r\n\r\nconst getDetailRunningInfo = async (data) => {\r\n  try {\r\n    selectItems.value = data;\r\n\r\n    if (\r\n        siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원'] ||\r\n        siteCd.value === HOSPITAL_SITE_CD_BY_NAME['UIMD'] ||\r\n        siteCd.value === HOSPITAL_SITE_CD_BY_NAME['NONE']\r\n    ) {\r\n      let wbcAfterInfo = removeDuplicatesById(selectItems.value?.wbcInfoAfter || []);\r\n      const wbcInfoAfterValForTotalCount = filterByTitle(wbcAfterInfo, 'wbc');\r\n\r\n      wbcAfterInfo = removeDuplicatesById(wbcAfterInfo);\r\n      if (projectBm.value) {\r\n        wbcInfoAfter.value = selectItems.value?.wbcInfoAfter || [];\r\n      } else {\r\n        wbcInfoAfter.value = seoulStMaryPercentChange(wbcInfoAfterValForTotalCount, wbcAfterInfo);\r\n      }\r\n\r\n    } else {\r\n      wbcInfoAfter.value = selectItems.value?.wbcInfoAfter || [];\r\n    }\r\n\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst filterByTitle = (wbcInfoArr: any, isNonWbc: 'wbc' | 'nonWbc') => {\r\n  const titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\n  if (isNonWbc === 'nonWbc') {\r\n    return wbcInfoArr.filter((item: any) => titleArr.includes(item.title));\r\n  }\r\n\r\n  return wbcInfoArr.filter((item: any) => !titleArr.includes(item.title));\r\n}\r\n\r\nconst percentChangeBySiteCd = () => {\r\n  const projectType = projectBm.value ? 'bm' : 'pb';\r\n\r\n  if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원']) {\r\n    selectItems.value.wbcInfoAfter = seoulStMaryPercentChange(selectItems.value?.wbcInfoAfter, selectItems.value?.wbcInfoAfter);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n    selectItems.value.wbcInfoAfter = inhaPercentChange(selectItems.value, selectItems.value?.wbcInfoAfter);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천성모병원']) {\r\n    selectItems.value.wbcInfoAfter = incheonStMaryPercentChange(projectType, selectItems.value?.wbcInfoAfter);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n    selectItems.value.wbcInfoAfter = incheonGilPercentChange(selectItems.value?.wbcInfoAfter, selectItems.value?.wbcInfo.totalCount);\r\n  }\r\n  wbcInfo.value = selectItems.value.wbcInfoAfter;\r\n}\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItems.value?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    // console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeBodyTotalVal = 0;\r\n  let shapeBodyTotalVal2 = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    const lastIndex = el.classInfo.length > 0\r\n        ? (el.classInfo[el.classInfo.length - 1].index || '').replace(/[^\\d]/g, '')\r\n        : '';\r\n\r\n    switch (el.categoryId) {\r\n      case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n        total = lastIndex;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n        chromiaTotalval = lastIndex;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n        shapeBodyTotalVal = lastIndex;\r\n\r\n        for (const classItem of el.classInfo) {\r\n          if (!SHOWING_RBC_SHAPE_CLASS_IDS.includes(classItem.classId)) {\r\n            shapeOthersCount.value += 1;\r\n          }\r\n        }\r\n        break;\r\n      case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n        shapeBodyTotalVal2 = lastIndex;\r\n        break;\r\n      default:\r\n        // Handle unexpected categoryId if needed\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total) + 1;\r\n  sizeChromiaTotal.value = Number(total) + 1;\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeBodyTotalVal) + Number(shapeBodyTotalVal2) + 2;\r\n\r\n\r\n  // selectItems의 originalDegree 초기화\r\n  rbcInfoAfterData.value.forEach(category => {\r\n    category.classInfo.forEach(item => {\r\n      item.originalDegree = 0;\r\n    });\r\n  });\r\n\r\n  // rbcInfoPathAfter에서 아이템들 classId와 categoryId를 비교하여 originalDegree 증가시키기\r\n  rbcInfoPathAfter.value.forEach(pathCategory => {\r\n    const category = rbcInfoAfterData.value.find(cat => cat.categoryId === pathCategory.categoryId);\r\n    if (category) {\r\n      pathCategory.classInfo.forEach(pathClass => {\r\n        const classInfo = category.classInfo.find(item => item.classId === pathClass.classId);\r\n        if (classInfo) {\r\n          classInfo.originalDegree++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  await countReAdd();\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\nconst percentageChange = (count: any, categoryId: string): any => {\r\n  const percentage = ((Number(count) / calculateRbcTotalByCategoryId(categoryId)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst calculateRbcTotalByCategoryId = (categoryId: string) => {\r\n  switch (categoryId) {\r\n    case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n      return Number(rbcTotalVal.value);\r\n    case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n      return Number(chromiaTotalTwo.value);\r\n    case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n    case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n      return Number(shapeBodyTotal.value);\r\n    default:\r\n      return Number(rbcTotalVal.value);\r\n  }\r\n}\r\n\r\n// WbC Classification 쪽에서 Order Class 바꿀 시 Print 영역에도 바로 적용시키기 위한 코드\r\nconst classOrderChanged = async () => {\r\n  await getOrderClass();\r\n  await initData();\r\n}\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\n\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\n\r\nconst wbcClassTileChange = (): string => !projectBm.value ? 'WBC Classification' : 'BM Classification';\r\n\r\nconst printStart = (event: MouseEvent) => {\r\n  event.stopPropagation(); // 이벤트 전파를 막아 handleClickOutside 실행 방지\r\n  printOnOff.value = true;\r\n};\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nasync function initData(data?: any) {\r\n  if (selectItems.value?.wbcInfoAfter && selectItems.value?.wbcInfoAfter.length !== 0) {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfoAfter, wbcArrs);\r\n    nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n\r\n    selectItems.value.wbcInfoAfter = sortedWbcInfo;\r\n    wbcInfo.value = sortedWbcInfo;\r\n\r\n    if (!nonWbcClassList.value || nonWbcClassList.value.length === 0) {\r\n      const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfo.wbcInfo[0], wbcArrs);\r\n      nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n      // wbcInfo.value = sortedWbcInfo;\r\n    }\r\n  } else {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfo.wbcInfo[0], wbcArrs);\r\n    nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n    selectItems.value.wbcInfoAfter = sortedWbcInfo;\r\n    wbcInfo.value = sortedWbcInfo;\r\n  }\r\n\r\n  await percentChangeBySiteCd();\r\n\r\n  rbcInfo.value = data;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst reDegree = async () => {\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n\r\n  selectItems.value?.rbcInfoAfter.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        // rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n  selectItems.value.rbcInfoAfter.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        // rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  selectItems.value.rbcInfoAfter.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst submitStateChanged = (changedSubmitState: string) => {\r\n  if (changedSubmitState) {\r\n    isCommitChanged.value = !isCommitChanged.value;\r\n  }\r\n};\r\n\r\nconst uploadLisChangeSlide = (hospitalNm: any) => {\r\n  if (hospitalNm === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n    changeSlideByLisUpload.value = !changeSlideByLisUpload.value;\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { changeSlideByLisUpload: changeSlideByLisUpload.value }, null, 8, [\"changeSlideByLisUpload\"]),\n    (siteCd.value !== '0007')\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: _normalizeClass('reportSection' + (cbcLayer.value ? ' cbcLayer' : ''))\n        }, [\n          _createVNode(DetailHeader, {\n            testType: projectBm.value ? _unref(getBmTestTypeText)(selectItems.value?.testType) : _unref(getTestTypeText)(selectItems.value?.testType),\n            barcodeNo: selectItems.value?.barcodeNo,\n            cbcPatientNo: selectItems.value?.cbcPatientNo,\n            patientName: selectItems.value?.patientName,\n            hospitalName: selectItems.value?.hosName,\n            cbcPatientName: selectItems.value?.cbcPatientNm,\n            cbcSex: selectItems.value?.cbcSex,\n            cbcAge: selectItems.value?.cbcAge,\n            analyzedDttm: selectItems.value?.analyzedDttm\n          }, null, 8, [\"testType\", \"barcodeNo\", \"cbcPatientNo\", \"patientName\", \"hospitalName\", \"cbcPatientName\", \"cbcSex\", \"cbcAge\", \"analyzedDttm\"]),\n          _createElementVNode(\"div\", _hoisted_1, [\n            (cbcLayer.value)\n              ? (_openBlock(), _createBlock(LisCbc, {\n                  key: 0,\n                  selectItems: selectItems.value\n                }, null, 8, [\"selectItems\"]))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"div\", _hoisted_2, [\n              (!projectBm.value && selectItems.value.testType === '04')\n                ? (_openBlock(), _createElementBlock(\"div\", {\n                    key: 0,\n                    class: _normalizeClass([\"rbcDiv shadowBox\", cbcLayer.value ? 'rbcDivInReportWithCBC' : ''])\n                  }, [\n                    (!isLoading.value)\n                      ? (_openBlock(), _createBlock(RbcClass, {\n                          key: 0,\n                          rbcInfo: rbcInfo.value,\n                          type: \"report\",\n                          onSubmitStateChanged: submitStateChanged,\n                          isCommitChanged: isCommitChanged.value\n                        }, null, 8, [\"rbcInfo\", \"isCommitChanged\"]))\n                      : _createCommentVNode(\"\", true)\n                  ], 2))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"div\", _hoisted_3, [\n                (!isLoading.value)\n                  ? (_openBlock(), _createBlock(WbcClass, {\n                      key: 0,\n                      wbcInfo: wbcInfo.value,\n                      selectItems: selectItems.value,\n                      type: \"report\",\n                      onClassOrderChanged: classOrderChanged,\n                      onSubmitStateChanged: submitStateChanged,\n                      isCommitChanged: isCommitChanged.value,\n                      onUploadLisChangeSlide: uploadLisChangeSlide\n                    }, null, 8, [\"wbcInfo\", \"selectItems\", \"isCommitChanged\"]))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              (!crcConnect.value)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                    _createElementVNode(\"div\", _hoisted_5, [\n                      _cache[0] || (_cache[0] = _createElementVNode(\"span\", null, \"[Hospital]\", -1)),\n                      _cache[1] || (_cache[1] = _createTextVNode()),\n                      _createElementVNode(\"span\", null, \"DM Serial Nbr : \" + _toDisplayString(selectItems.value?.slotId), 1),\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'print'],\n                        onClick: printStart,\n                        class: \"printStart\"\n                      })\n                    ]),\n                    _createElementVNode(\"div\", _hoisted_6, [\n                      (!projectBm.value)\n                        ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_7, \"Analysis Report from UIMD PB system\"))\n                        : _createCommentVNode(\"\", true),\n                      (projectBm.value)\n                        ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_8, \"Analysis Report from UIMD BM system\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"table\", _hoisted_9, [\n                        _createElementVNode(\"tbody\", null, [\n                          _createElementVNode(\"tr\", null, [\n                            _cache[2] || (_cache[2] = _createElementVNode(\"th\", null, \"Slot ID\", -1)),\n                            _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.slotId), 1)\n                          ]),\n                          _createElementVNode(\"tr\", null, [\n                            _cache[3] || (_cache[3] = _createElementVNode(\"th\", null, \"Ordered date\", -1)),\n                            _createElementVNode(\"td\", null, _toDisplayString(_unref(formatDateString)(selectItems.value?.orderDttm)), 1)\n                          ]),\n                          _createElementVNode(\"tr\", null, [\n                            _cache[4] || (_cache[4] = _createElementVNode(\"th\", null, \"Signed by ID\", -1)),\n                            _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.submitUserId), 1)\n                          ]),\n                          _createElementVNode(\"tr\", null, [\n                            _cache[5] || (_cache[5] = _createElementVNode(\"th\", null, \"Signed date\", -1)),\n                            _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.submitOfDate), 1)\n                          ]),\n                          _createElementVNode(\"tr\", null, [\n                            _cache[6] || (_cache[6] = _createElementVNode(\"th\", null, \"Patient ID\", -1)),\n                            _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.patientId), 1)\n                          ]),\n                          _createElementVNode(\"tr\", null, [\n                            _cache[7] || (_cache[7] = _createElementVNode(\"th\", null, \"Ordered Classification\", -1)),\n                            _createElementVNode(\"td\", null, _toDisplayString(projectBm.value ? _unref(getBmTestTypeText)(selectItems.value?.testType) : _unref(getTestTypeText)(selectItems.value?.testType)), 1)\n                          ]),\n                          _createElementVNode(\"tr\", null, [\n                            _cache[8] || (_cache[8] = _createElementVNode(\"th\", null, \"Name\", -1)),\n                            _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.patientName), 1)\n                          ]),\n                          _createElementVNode(\"tr\", null, [\n                            _cache[9] || (_cache[9] = _createElementVNode(\"th\", null, \"Birth\", -1)),\n                            _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.birthDay), 1)\n                          ]),\n                          _createElementVNode(\"tr\", null, [\n                            _cache[10] || (_cache[10] = _createElementVNode(\"th\", null, \"Gender\", -1)),\n                            _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.gender === '' ? '' : selectItems.value?.gender === '01' ? 'Male' : 'Female'), 1)\n                          ])\n                        ])\n                      ])\n                    ]),\n                    _createElementVNode(\"div\", {\n                      class: _normalizeClass(['reportDivBottom', selectItems.value.testType !== '04' && 'reportDiff'])\n                    }, [\n                      _createElementVNode(\"div\", {\n                        class: _normalizeClass(['wbcLeft', projectBm.value && 'wbcLeftBm'])\n                      }, [\n                        _createElementVNode(\"h3\", _hoisted_10, _toDisplayString(wbcClassTileChange()) + \" result\", 1),\n                        _createElementVNode(\"table\", _hoisted_11, [\n                          _cache[13] || (_cache[13] = _createElementVNode(\"colgroup\", null, [\n                            _createElementVNode(\"col\", { width: \"40%\" }),\n                            _createElementVNode(\"col\", { width: \"20%\" }),\n                            _createElementVNode(\"col\", { width: \"20%\" })\n                          ], -1)),\n                          _cache[14] || (_cache[14] = _createElementVNode(\"thead\", null, [\n                            _createElementVNode(\"tr\", { class: \"reportWbcclassificationSmallTitle\" }, [\n                              _createElementVNode(\"th\", null, \"Class\"),\n                              _createElementVNode(\"th\", null, \"Count\"),\n                              _createElementVNode(\"th\", null, \"Percent\")\n                            ])\n                          ], -1)),\n                          _createElementVNode(\"tbody\", null, [\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoAfter.value, (item) => {\n                              return (_openBlock(), _createElementBlock(\"tr\", {\n                                key: item.id,\n                                class: \"wbcClassDbDiv\"\n                              }, [\n                                (shouldRenderCategory(item.title))\n                                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                                      _createElementVNode(\"td\", null, _toDisplayString(item?.name), 1),\n                                      _createElementVNode(\"td\", null, _toDisplayString(item?.count), 1),\n                                      _createElementVNode(\"td\", null, _toDisplayString(Math.floor(Number(item?.percent)) || '0'), 1)\n                                    ], 64))\n                                  : _createCommentVNode(\"\", true)\n                              ]))\n                            }), 128)),\n                            _createElementVNode(\"tr\", null, [\n                              _cache[11] || (_cache[11] = _createElementVNode(\"td\", null, \"Total\", -1)),\n                              _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.wbcInfo?.totalCount || 0), 1),\n                              _cache[12] || (_cache[12] = _createElementVNode(\"td\", null, \"100.00\", -1))\n                            ])\n                          ])\n                        ]),\n                        (!selectItems.value?.wbcInfo?.nonRbcClassList && !projectBm.value)\n                          ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_12, \"non-WBC\"))\n                          : _createCommentVNode(\"\", true),\n                        (!projectBm.value)\n                          ? (_openBlock(), _createElementBlock(\"table\", _hoisted_13, [\n                              _cache[16] || (_cache[16] = _createElementVNode(\"colgroup\", null, [\n                                _createElementVNode(\"col\", { width: \"40%\" }),\n                                _createElementVNode(\"col\", { width: \"20%\" }),\n                                _createElementVNode(\"col\", { width: \"20%\" })\n                              ], -1)),\n                              _createElementVNode(\"tbody\", null, [\n                                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(nonWbcClassList.value, (nWbcItem, outerIndex) => {\n                                  return _withDirectives((_openBlock(), _createElementBlock(\"tr\", { key: outerIndex }, [\n                                    _createElementVNode(\"td\", null, _toDisplayString(getCategoryName(nWbcItem)), 1),\n                                    _createElementVNode(\"td\", null, [\n                                      _createTextVNode(_toDisplayString(Number(nWbcItem?.count) || 0) + \" \", 1),\n                                      (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                                        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_14, \" /\" + _toDisplayString(selectItems.value?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                                        : _createCommentVNode(\"\", true)\n                                    ]),\n                                    _cache[15] || (_cache[15] = _createElementVNode(\"td\", null, \"-\", -1))\n                                  ], 512)), [\n                                    [_vShow, siteCd.value !== '0006' && nWbcItem?.title !== 'SM']\n                                  ])\n                                }), 128))\n                              ])\n                            ]))\n                          : _createCommentVNode(\"\", true)\n                      ], 2),\n                      (!projectBm.value && selectItems.value.testType === '04')\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [\n                            _cache[17] || (_cache[17] = _createElementVNode(\"h3\", { class: \"reportH3 pl0\" }, \"RBC classification result\", -1)),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rbcInfoAfterData.value], (classList, outerIndex) => {\n                              return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n                                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                                  return (_openBlock(), _createElementBlock(\"div\", {\n                                    key: innerIndex,\n                                    class: \"categories\"\n                                  }, [\n                                    _createElementVNode(\"ul\", _hoisted_16, [\n                                      _createTextVNode(_toDisplayString(_ctx.type) + \" \", 1),\n                                      (innerIndex === 0)\n                                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_17, \"Category\"))\n                                        : _createCommentVNode(\"\", true),\n                                      _createElementVNode(\"li\", _hoisted_18, _toDisplayString(category?.categoryNm), 1)\n                                    ]),\n                                    _createElementVNode(\"ul\", _hoisted_19, [\n                                      (innerIndex === 0)\n                                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_20, \"Class\"))\n                                        : _createCommentVNode(\"\", true),\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                                        return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                          _createElementVNode(\"li\", _hoisted_21, _toDisplayString(classInfo?.classNm), 1),\n                                          (classIndex === category.classInfo.length - 1 && category?.categoryId === '03')\n                                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_22, \" Others \"))\n                                            : _createCommentVNode(\"\", true),\n                                          (classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body')\n                                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_23, \" Malaria \"))\n                                            : _createCommentVNode(\"\", true)\n                                        ], 64))\n                                      }), 128))\n                                    ]),\n                                    _createElementVNode(\"ul\", _hoisted_24, [\n                                      (innerIndex === 0)\n                                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_25, \"Degree\"))\n                                        : _createCommentVNode(\"\", true),\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                                        return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                          _createElementVNode(\"li\", _hoisted_26, _toDisplayString(Number(classInfo?.degree) || 0), 1),\n                                          (classIndex === category.classInfo.length - 1 && category?.categoryId === '03')\n                                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_27, \" - \"))\n                                            : _createCommentVNode(\"\", true),\n                                          (classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body')\n                                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_28, \" - \"))\n                                            : _createCommentVNode(\"\", true)\n                                        ], 64))\n                                      }), 128)),\n                                      _withDirectives(_createElementVNode(\"li\", _hoisted_29, \"Total \", 512), [\n                                        [_vShow, category.categoryNm !== 'Shape']\n                                      ])\n                                    ]),\n                                    _createElementVNode(\"ul\", _hoisted_30, [\n                                      (innerIndex === 0)\n                                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_31, \"Count\"))\n                                        : _createCommentVNode(\"\", true),\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                                        return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                          _createElementVNode(\"li\", _hoisted_32, _toDisplayString(Number(classInfo?.originalDegree) || 0), 1),\n                                          (classIndex === category.classInfo.length - 1 && category?.categoryId === '03')\n                                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_33, _toDisplayString(Number(shapeOthersCount.value) || 0), 1))\n                                            : _createCommentVNode(\"\", true),\n                                          (classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body')\n                                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_34, _toDisplayString(Number(malariaCount.value) || 0), 1))\n                                            : _createCommentVNode(\"\", true)\n                                        ], 64))\n                                      }), 128)),\n                                      _withDirectives(_createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, _toDisplayString(Number(sizeChromiaTotal.value) || 0), 513), [\n                                        [_vShow, category?.categoryNm === 'Size' || category?.categoryNm === 'Chromia']\n                                      ]),\n                                      _withDirectives(_createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, _toDisplayString(Number(shapeBodyTotal.value) || 0), 513), [\n                                        [_vShow, category?.categoryNm === 'Inclusion Body']\n                                      ])\n                                    ]),\n                                    _createElementVNode(\"ul\", _hoisted_35, [\n                                      (innerIndex === 0)\n                                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_36, \"Percent\"))\n                                        : _createCommentVNode(\"\", true),\n                                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                                        return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                          _createElementVNode(\"li\", _hoisted_37, _toDisplayString(percentageChange(Number(classInfo?.originalDegree), _unref(RBC_CODE_CLASS_ID).SIZE.CATEGORY_ID) || 0), 1),\n                                          (classIndex === category.classInfo.length - 1 && category?.categoryId === '03')\n                                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_38, _toDisplayString(percentageChange(shapeOthersCount.value, _unref(RBC_CODE_CLASS_ID).SHAPE.CATEGORY_ID) || 0), 1))\n                                            : _createCommentVNode(\"\", true),\n                                          (classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body')\n                                            ? (_openBlock(), _createElementBlock(\"li\", _hoisted_39, _toDisplayString(percentageChange(malariaCount.value, _unref(RBC_CODE_CLASS_ID).INCLUSION_BODY.CATEGORY_ID) || 0), 1))\n                                            : _createCommentVNode(\"\", true)\n                                        ], 64))\n                                      }), 128)),\n                                      _withDirectives(_createElementVNode(\"li\", _hoisted_40, \"100%\", 512), [\n                                        [_vShow, category.categoryNm !== 'Shape']\n                                      ])\n                                    ])\n                                  ]))\n                                }), 128))\n                              ], 64))\n                            }), 128))\n                          ]))\n                        : _createCommentVNode(\"\", true)\n                    ], 2)\n                  ]))\n                : (isContent.value && crcConnect.value)\n                  ? (_openBlock(), _createBlock(Crc, {\n                      key: 2,\n                      crcDataVal: crcData.value,\n                      selectItems: selectItems.value\n                    }, null, 8, [\"crcDataVal\", \"selectItems\"]))\n                  : _createCommentVNode(\"\", true)\n            ])\n          ])\n        ], 2))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", {\n      ref_key: \"printContent\",\n      ref: printContent\n    }, [\n      (printOnOff.value)\n        ? (_openBlock(), _createBlock(Print, {\n            key: 0,\n            onPrintClose: printClose\n          }))\n        : _createCommentVNode(\"\", true)\n    ], 512)\n  ], 64))\n}\n}\n\n})","<template>\r\n\r\n  <ClassInfoMenu :changeSlideByLisUpload=\"changeSlideByLisUpload\" />\r\n  <div :class=\"'reportSection' + (cbcLayer ? ' cbcLayer' : '')\" v-if=\"siteCd !== '0007'\">\r\n    <DetailHeader\r\n        :testType=\"projectBm ? getBmTestTypeText(selectItems?.testType) : getTestTypeText(selectItems?.testType)\"\r\n        :barcodeNo=\"selectItems?.barcodeNo\"\r\n        :cbcPatientNo=\"selectItems?.cbcPatientNo\"\r\n        :patientName=\"selectItems?.patientName\"\r\n        :hospitalName=\"selectItems?.hosName\"\r\n        :cbcPatientName=\"selectItems?.cbcPatientNm\"\r\n        :cbcSex=\"selectItems?.cbcSex\"\r\n        :cbcAge=\"selectItems?.cbcAge\"\r\n        :analyzedDttm=\"selectItems?.analyzedDttm\"\r\n    />\r\n    <div style=\"display:flex;\">\r\n      <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n      <div class=\"reportDiv\">\r\n        <div class=\"rbcDiv shadowBox\" :class=\"cbcLayer ? 'rbcDivInReportWithCBC' : ''\" v-if=\"!projectBm && selectItems.testType === '04'\">\r\n          <RbcClass v-if=\"!isLoading\" :rbcInfo=\"rbcInfo\" type='report'\r\n                    @submitStateChanged=\"submitStateChanged\" :isCommitChanged=\"isCommitChanged\"/>\r\n        </div>\r\n        <div class=\"wbcDiv shadowBox\">\r\n          <WbcClass v-if=\"!isLoading\" :wbcInfo=\"wbcInfo\" :selectItems=\"selectItems\" type='report'\r\n                    @classOrderChanged=\"classOrderChanged\" @submitStateChanged=\"submitStateChanged\"\r\n                    :isCommitChanged=\"isCommitChanged\" @uploadLisChangeSlide=\"uploadLisChangeSlide\"\r\n          />\r\n        </div>\r\n        <div class=\"reportDetail shadowBox\" v-if=\"!crcConnect\">\r\n          <div class=\"reportTitle\">\r\n            <span>[Hospital]</span> <span>DM Serial Nbr : {{ selectItems?.slotId }}</span>\r\n            <font-awesome-icon :icon=\"['fas', 'print']\" @click=\"printStart\" class=\"printStart\"/>\r\n          </div>\r\n          <div class=\"reportDivTop\">\r\n            <h3 class=\"reportH3\" v-if=\"!projectBm\">Analysis Report from UIMD PB system</h3>\r\n            <h3 class=\"reportH3\" v-if=\"projectBm\">Analysis Report from UIMD BM system</h3>\r\n            <table class=\"reportTable\">\r\n              <tbody>\r\n              <tr>\r\n                <th>Slot ID</th>\r\n                <td>{{ selectItems?.slotId }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Ordered date</th>\r\n                <td>{{ formatDateString(selectItems?.orderDttm) }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Signed by ID</th>\r\n                <td>{{ selectItems?.submitUserId }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Signed date</th>\r\n                <td>{{ selectItems?.submitOfDate }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Patient ID</th>\r\n                <td>{{ selectItems?.patientId }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Ordered Classification</th>\r\n                <td>{{\r\n                    projectBm ? getBmTestTypeText(selectItems?.testType) : getTestTypeText(selectItems?.testType)\r\n                  }}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th>Name</th>\r\n                <td>{{ selectItems?.patientName }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Birth</th>\r\n                <td>{{ selectItems?.birthDay }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Gender</th>\r\n                <td>{{ selectItems?.gender === '' ? '' : selectItems?.gender === '01' ? 'Male' : 'Female' }}</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div :class=\"['reportDivBottom', selectItems.testType !== '04' && 'reportDiff']\">\r\n            <div :class=\"['wbcLeft', projectBm && 'wbcLeftBm']\">\r\n              <h3 class=\"reportH3 mb10 pl0\">{{ wbcClassTileChange() }} result</h3>\r\n              <table class=\"tableClass mt22\">\r\n                <colgroup>\r\n                  <col width=\"40%\">\r\n                  <col width=\"20%\">\r\n                  <col width=\"20%\">\r\n                </colgroup>\r\n                <thead>\r\n                <tr class=\"reportWbcclassificationSmallTitle\">\r\n                  <th>Class</th>\r\n                  <th>Count</th>\r\n                  <th>Percent</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr v-for=\"(item) in wbcInfoAfter\" :key=\"item.id\" class=\"wbcClassDbDiv\">\r\n                  <template v-if=\"shouldRenderCategory(item.title)\">\r\n                    <td>{{ item?.name }}</td>\r\n                    <td>{{ item?.count }}</td>\r\n                    <td> {{ Math.floor(Number(item?.percent)) || '0' }}</td>\r\n                  </template>\r\n                </tr>\r\n                <tr>\r\n                  <td>Total</td>\r\n                  <td>{{ selectItems?.wbcInfo?.totalCount || 0 }}</td>\r\n                  <td>100.00</td>\r\n                </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <h3 v-if=\"!selectItems?.wbcInfo?.nonRbcClassList && !projectBm\" class=\"reportH3 mb10 pl0\">non-WBC</h3>\r\n              <table class=\"tableClass\" v-if=\"!projectBm\">\r\n                <colgroup>\r\n                  <col width=\"40%\">\r\n                  <col width=\"20%\">\r\n                  <col width=\"20%\">\r\n                </colgroup>\r\n                <tbody>\r\n                <template v-for=\"(nWbcItem, outerIndex) in nonWbcClassList\" :key=\"outerIndex\">\r\n                  <tr v-show=\"siteCd !== '0006' && nWbcItem?.title !== 'SM'\">\r\n                    <td>{{ getCategoryName(nWbcItem) }}</td>\r\n                    <td>\r\n                      {{ Number(nWbcItem?.count) || 0 }}\r\n                      <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\"> /{{\r\n                          selectItems?.wbcInfo?.maxWbcCount\r\n                        }} WBC</span>\r\n                    </td>\r\n                    <td>-</td>\r\n                  </tr>\r\n                </template>\r\n                </tbody>\r\n              </table>\r\n\r\n            </div>\r\n            <div class=\"rbcRight\" v-if=\"!projectBm && selectItems.testType === '04'\">\r\n              <h3 class=\"reportH3 pl0\">RBC classification result</h3>\r\n              <template v-for=\"(classList, outerIndex) in [rbcInfoAfterData]\" :key=\"outerIndex\">\r\n                <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n                  <div class=\"categories\">\r\n                    <ul class=\"printRbcCategory\">\r\n                      {{ type }}\r\n                      <li v-if=\"innerIndex === 0\" class=\"mb10 liTitle\" style=\"cursor: default;\">Category</li>\r\n                      <li style=\"cursor: default;\">{{ category?.categoryNm }}</li>\r\n                    </ul>\r\n                    <ul class=\"printRbcClass\">\r\n                      <li v-if=\"innerIndex === 0\" class=\"mb10 liTitle\" style=\"cursor: default;\">Class</li>\r\n                      <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                        <li style=\"cursor: default;\">{{ classInfo?.classNm }}</li>\r\n                        <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '03'\"\r\n                            style=\"cursor: default;\"\r\n                        >\r\n                          Others\r\n                        </li>\r\n                        <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body'\"\r\n                            style=\"cursor: default;\"\r\n                        >\r\n                          Malaria\r\n                        </li>\r\n                      </template>\r\n                    </ul>\r\n                    <ul class=\"printRbcDegree\">\r\n                      <li v-if=\"innerIndex === 0\" class=\"mb10 liTitle\" style=\"cursor: default;\">Degree</li>\r\n                      <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                        <li style=\"cursor: default;\">\r\n                          {{ Number(classInfo?.degree) || 0 }}\r\n                        </li>\r\n\r\n                        <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '03'\"\r\n                            style=\"cursor: default;\"\r\n                        >\r\n                          -\r\n                        </li>\r\n                        <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body'\">\r\n                          -\r\n                        </li>\r\n                      </template>\r\n\r\n                      <li class=\"printTotalText\" v-show=\"category.categoryNm !== 'Shape'\"\r\n                          style=\"cursor: default;\"\r\n                      >Total\r\n                      </li>\r\n                    </ul>\r\n                    <ul class=\"printRbcCount\">\r\n                      <li v-if=\"innerIndex === 0\" class=\"mb10 liTitle\" style=\"cursor: default;\">Count</li>\r\n                      <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                        <li style=\"cursor: default;\">\r\n                          {{ Number(classInfo?.originalDegree) || 0 }}\r\n                        </li>\r\n\r\n                        <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '03'\"\r\n                            style=\"cursor: default;\"\r\n                        >\r\n                          {{ Number(shapeOthersCount) || 0 }}\r\n                        </li>\r\n\r\n                        <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body'\"\r\n                            style=\"cursor: default;\"\r\n                        >\r\n                          {{ Number(malariaCount) || 0 }}\r\n                        </li>\r\n                      </template>\r\n\r\n                      <li v-show=\"category?.categoryNm === 'Size' || category?.categoryNm === 'Chromia'\"\r\n                          style=\"cursor: default;\">\r\n                        {{ Number(sizeChromiaTotal) || 0 }}\r\n                      </li>\r\n                      <li v-show=\"category?.categoryNm === 'Inclusion Body'\" style=\"cursor: default;\">\r\n                        {{ Number(shapeBodyTotal) || 0 }}\r\n                      </li>\r\n                    </ul>\r\n                    <ul class=\"printRbcPercent\">\r\n                      <li v-if=\"innerIndex === 0\" class=\"mb10 liTitle\" style=\"cursor: default;\">Percent</li>\r\n                      <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                        <li style=\"cursor: default;\">\r\n                          {{ percentageChange(Number(classInfo?.originalDegree), RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID) || 0 }}\r\n                        </li>\r\n\r\n                        <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '03'\"\r\n                            style=\"cursor: default;\"\r\n                        >\r\n                          {{ percentageChange(shapeOthersCount, RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID) || 0 }}\r\n                        </li>\r\n\r\n                        <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body'\"\r\n                            style=\"cursor: default;\"\r\n                        >\r\n                          {{ percentageChange(malariaCount, RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID) || 0 }}\r\n                        </li>\r\n                      </template>\r\n\r\n                      <li v-show=\"category.categoryNm !== 'Shape'\" style=\"cursor: default;\">100%</li>\r\n                    </ul>\r\n                  </div>\r\n                </template>\r\n              </template>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Crc v-else-if=\"isContent && crcConnect\" :crcDataVal=\"crcData\" :selectItems=\"selectItems\"/>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <div ref=\"printContent\">\r\n    <Print v-if=\"printOnOff\" @printClose=\"printClose\"/>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\n\r\nimport WbcClass from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport {computed, nextTick, onBeforeMount, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {defaultBmClassList, defaultWbcClassList, WbcInfo} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport router from \"@/router\";\r\nimport RbcClass from \"@/views/datebase/commponent/detail/rbc/rbcClass.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport { formatDateString } from \"@/common/lib/utils/dateUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {crcGet, crcOptionGet, getOrderClassApi, getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {\r\n  incheonGilPercentChange,\r\n  incheonStMaryPercentChange,\r\n  inhaPercentChange,\r\n  seoulStMaryPercentChange\r\n} from \"@/common/helpers/common/classPercent\";\r\nimport Crc from \"@/views/datebase/commponent/detail/report/crcResultCodes.vue\";\r\nimport {removeDuplicatesById} from \"@/common/lib/utils/removeDuplicateIds\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport {RBC_CODE_CLASS_ID, SHOWING_RBC_SHAPE_CLASS_IDS} from \"@/common/defines/constants/dataBase\";\r\nimport DetailHeader from \"@/views/datebase/commponent/detail/detailHeader.vue\";\r\nimport { DIR_NAME } from \"@/common/defines/constants/settings\";\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\nconst store = useStore();\r\n\r\nconst selectItems = ref<any>([]);\r\nconst wbcInfo = ref<any>(null);\r\nconst printOnOff = ref(false);\r\nconst rbcInfo = ref<any>([]);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoAfterData = computed(() => store.state.slideDataModule.rbcInfoAfter);\r\n//  임시로 변경 해둠 다른 페이지에서 호출하고 업데이트 하는 부분 삭제 하세요.\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nconst projectBm = ref(false);\r\nconst orderClass = ref<any>([]);\r\nconst isLoading = ref(true);\r\nconst nonWbcTitleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst nonWbcClassList = ref<any[]>([]);\r\nconst printContent = ref<HTMLElement | null>(null);\r\n\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst shapeOthersCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst isCommitChanged = ref(false);\r\nconst wbcInfoAfter = ref<any>([]);\r\nconst crcData = ref<any>([]);\r\nconst crcConnect = ref(false);\r\nconst isContent = ref(false);\r\nconst changeSlideByLisUpload = ref(false);\r\n\r\n\r\nwatch(\r\n    () => slideData.value,\r\n    async (newVal, oldVal) => {\r\n      if (newVal.id !== oldVal?.id) {\r\n        await nextTick();\r\n\r\n        await getDetailRunningInfo(newVal);\r\n        await getOrderClass();\r\n        await initData(newVal);\r\n\r\n        if (!projectBm.value) {\r\n          await rbcTotalAndReCount();\r\n        }\r\n      }\r\n    },\r\n    {immediate: true, deep: true}\r\n);\r\n\r\nonBeforeMount(async () => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  const crcOptionApi = await crcOptionGet();\r\n  if (crcOptionApi.data.length !== 0) {\r\n    crcConnect.value = crcOptionApi.data[0].crcConnect;\r\n  }\r\n  const result = (await crcGet());\r\n  if (result.code === 200) {\r\n    isContent.value = true;\r\n    crcData.value = result.data;\r\n  }\r\n\r\n})\r\n\r\nconst handleClickOutside = (event: MouseEvent) => {\r\n  if (printContent.value && !printContent.value.contains(event.target as Node) && printOnOff.value) {\r\n    printClose();\r\n  }\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  isLoading.value = false;\r\n  await getOrderClass();\r\n  await initData();\r\n\r\n  // if (!projectBm.value) {\r\n  //   await rbcTotalAndReCount();\r\n  //   await getRbcDegreeData();\r\n  //   await reDegree();\r\n  // }\r\n  // 여기 임시로 막아둠 풀고 재수정 요청 바람 After 클릭 후 사용자가 변경 된 상태가 그대로 유지되어야함 현재 코드는 그렇지 않음\r\n  document.addEventListener('click', handleClickOutside);\r\n\r\n});\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleClickOutside);\r\n});\r\n\r\nconst getDetailRunningInfo = async (data) => {\r\n  try {\r\n    selectItems.value = data;\r\n\r\n    if (\r\n        siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원'] ||\r\n        siteCd.value === HOSPITAL_SITE_CD_BY_NAME['UIMD'] ||\r\n        siteCd.value === HOSPITAL_SITE_CD_BY_NAME['NONE']\r\n    ) {\r\n      let wbcAfterInfo = removeDuplicatesById(selectItems.value?.wbcInfoAfter || []);\r\n      const wbcInfoAfterValForTotalCount = filterByTitle(wbcAfterInfo, 'wbc');\r\n\r\n      wbcAfterInfo = removeDuplicatesById(wbcAfterInfo);\r\n      if (projectBm.value) {\r\n        wbcInfoAfter.value = selectItems.value?.wbcInfoAfter || [];\r\n      } else {\r\n        wbcInfoAfter.value = seoulStMaryPercentChange(wbcInfoAfterValForTotalCount, wbcAfterInfo);\r\n      }\r\n\r\n    } else {\r\n      wbcInfoAfter.value = selectItems.value?.wbcInfoAfter || [];\r\n    }\r\n\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst filterByTitle = (wbcInfoArr: any, isNonWbc: 'wbc' | 'nonWbc') => {\r\n  const titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\n  if (isNonWbc === 'nonWbc') {\r\n    return wbcInfoArr.filter((item: any) => titleArr.includes(item.title));\r\n  }\r\n\r\n  return wbcInfoArr.filter((item: any) => !titleArr.includes(item.title));\r\n}\r\n\r\nconst percentChangeBySiteCd = () => {\r\n  const projectType = projectBm.value ? 'bm' : 'pb';\r\n\r\n  if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['서울성모병원']) {\r\n    selectItems.value.wbcInfoAfter = seoulStMaryPercentChange(selectItems.value?.wbcInfoAfter, selectItems.value?.wbcInfoAfter);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원']) {\r\n    selectItems.value.wbcInfoAfter = inhaPercentChange(selectItems.value, selectItems.value?.wbcInfoAfter);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천성모병원']) {\r\n    selectItems.value.wbcInfoAfter = incheonStMaryPercentChange(projectType, selectItems.value?.wbcInfoAfter);\r\n  } else if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n    selectItems.value.wbcInfoAfter = incheonGilPercentChange(selectItems.value?.wbcInfoAfter, selectItems.value?.wbcInfo.totalCount);\r\n  }\r\n  wbcInfo.value = selectItems.value.wbcInfoAfter;\r\n}\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItems.value?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/${DIR_NAME.RBC_CLASS}/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    // console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeBodyTotalVal = 0;\r\n  let shapeBodyTotalVal2 = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    const lastIndex = el.classInfo.length > 0\r\n        ? (el.classInfo[el.classInfo.length - 1].index || '').replace(/[^\\d]/g, '')\r\n        : '';\r\n\r\n    switch (el.categoryId) {\r\n      case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n        total = lastIndex;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n        chromiaTotalval = lastIndex;\r\n        break;\r\n      case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n        shapeBodyTotalVal = lastIndex;\r\n\r\n        for (const classItem of el.classInfo) {\r\n          if (!SHOWING_RBC_SHAPE_CLASS_IDS.includes(classItem.classId)) {\r\n            shapeOthersCount.value += 1;\r\n          }\r\n        }\r\n        break;\r\n      case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n        shapeBodyTotalVal2 = lastIndex;\r\n        break;\r\n      default:\r\n        // Handle unexpected categoryId if needed\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total) + 1;\r\n  sizeChromiaTotal.value = Number(total) + 1;\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeBodyTotalVal) + Number(shapeBodyTotalVal2) + 2;\r\n\r\n\r\n  // selectItems의 originalDegree 초기화\r\n  rbcInfoAfterData.value.forEach(category => {\r\n    category.classInfo.forEach(item => {\r\n      item.originalDegree = 0;\r\n    });\r\n  });\r\n\r\n  // rbcInfoPathAfter에서 아이템들 classId와 categoryId를 비교하여 originalDegree 증가시키기\r\n  rbcInfoPathAfter.value.forEach(pathCategory => {\r\n    const category = rbcInfoAfterData.value.find(cat => cat.categoryId === pathCategory.categoryId);\r\n    if (category) {\r\n      pathCategory.classInfo.forEach(pathClass => {\r\n        const classInfo = category.classInfo.find(item => item.classId === pathClass.classId);\r\n        if (classInfo) {\r\n          classInfo.originalDegree++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  await countReAdd();\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\nconst percentageChange = (count: any, categoryId: string): any => {\r\n  const percentage = ((Number(count) / calculateRbcTotalByCategoryId(categoryId)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst calculateRbcTotalByCategoryId = (categoryId: string) => {\r\n  switch (categoryId) {\r\n    case RBC_CODE_CLASS_ID.SIZE.CATEGORY_ID:\r\n      return Number(rbcTotalVal.value);\r\n    case RBC_CODE_CLASS_ID.CHROMIA.CATEGORY_ID:\r\n      return Number(chromiaTotalTwo.value);\r\n    case RBC_CODE_CLASS_ID.SHAPE.CATEGORY_ID:\r\n    case RBC_CODE_CLASS_ID.INCLUSION_BODY.CATEGORY_ID:\r\n      return Number(shapeBodyTotal.value);\r\n    default:\r\n      return Number(rbcTotalVal.value);\r\n  }\r\n}\r\n\r\n// WbC Classification 쪽에서 Order Class 바꿀 시 Print 영역에도 바로 적용시키기 위한 코드\r\nconst classOrderChanged = async () => {\r\n  await getOrderClass();\r\n  await initData();\r\n}\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\n\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\n\r\nconst wbcClassTileChange = (): string => !projectBm.value ? 'WBC Classification' : 'BM Classification';\r\n\r\nconst printStart = (event: MouseEvent) => {\r\n  event.stopPropagation(); // 이벤트 전파를 막아 handleClickOutside 실행 방지\r\n  printOnOff.value = true;\r\n};\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nasync function initData(data?: any) {\r\n  if (selectItems.value?.wbcInfoAfter && selectItems.value?.wbcInfoAfter.length !== 0) {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfoAfter, wbcArrs);\r\n    nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n\r\n    selectItems.value.wbcInfoAfter = sortedWbcInfo;\r\n    wbcInfo.value = sortedWbcInfo;\r\n\r\n    if (!nonWbcClassList.value || nonWbcClassList.value.length === 0) {\r\n      const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfo.wbcInfo[0], wbcArrs);\r\n      nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n      // wbcInfo.value = sortedWbcInfo;\r\n    }\r\n  } else {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfo.wbcInfo[0], wbcArrs);\r\n    nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n    selectItems.value.wbcInfoAfter = sortedWbcInfo;\r\n    wbcInfo.value = sortedWbcInfo;\r\n  }\r\n\r\n  await percentChangeBySiteCd();\r\n\r\n  rbcInfo.value = data;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst reDegree = async () => {\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n\r\n  selectItems.value?.rbcInfoAfter.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        // rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n  selectItems.value.rbcInfoAfter.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        // rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  selectItems.value.rbcInfoAfter.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst submitStateChanged = (changedSubmitState: string) => {\r\n  if (changedSubmitState) {\r\n    isCommitChanged.value = !isCommitChanged.value;\r\n  }\r\n};\r\n\r\nconst uploadLisChangeSlide = (hospitalNm: any) => {\r\n  if (hospitalNm === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n    changeSlideByLisUpload.value = !changeSlideByLisUpload.value;\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./report.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./report.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createBlock as _createBlock, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"tiling-viewer_img_list-box_img_list\",\n  style: {\"border-radius\":\"4px\"}\n}\nconst _hoisted_2 = [\"src\"]\nconst _hoisted_3 = {\n  key: 0,\n  class: \"selectImgWarn\"\n}\nconst _hoisted_4 = { class: \"hand-pointer\" }\n\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport {useStore} from \"vuex\";\r\nimport {readDziFile, readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {openseadragonPrefixUrl} from \"@/common/lib/utils/assetUtils\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'wps',\n  props: ['wpsImgClickInfoData', 'slotId', 'selectItems'],\n  emits: ['borderDel', 'borderOn'],\n  setup(__props, { emit: __emit }) {\n\r\nconst store = useStore();\r\nconst props = __props;\r\nconst wps = ref<any>({});\r\nconst tilingViewerLayer = ref(null);\r\nlet viewer: any = ref<any>(null);\r\nconst canvasCurrentHeight = ref('0');\r\nconst canvasCurrentWitdh = ref('0');\r\nconst fileNameResultArr = ref<any>([]);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst canvasOverlay = ref<any>(null);\r\nconst backgroundImage = ref('');\r\nconst hideSideNavigatorImage = ref(false);\r\nconst imgOn = ref(false);\r\nconst findWbcClass = ref<any>([]);\r\nconst localSlotId = ref('');\r\nlet isZoomed = ref(true);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst emit = __emit;\r\nlet currentOverlay: HTMLElement | null = null;\r\nconst imgType = ref('');\r\n\r\nwatch(() => props.wpsImgClickInfoData, async (newVal) => {\r\n\r\n  // slotId가 변경된 경우\r\n  if (localSlotId.value !== props.slotId) {\r\n    const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path\r\n        ? props.selectItems?.img_drive_root_path\r\n        : iaRootPath.value;\r\n    const tilingViewerLayer = document.getElementById('tilingViewerImgListWps');\r\n    if (tilingViewerLayer) {\r\n      localSlotId.value = props.slotId;\r\n      tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n      // OpenSeadragon 초기화\r\n      if (viewer.value) {\r\n        viewer.value.destroy(); // 기존 뷰어 인스턴스 파괴\r\n      }\r\n\r\n      const folderPath = `${path}/${props.slotId}/04_WPS/WPS_files/0`;\r\n      const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n      const res = await fetch(url);\r\n      const a = await res.json();\r\n\r\n      imgType.value = a[0].split('.')[1];\r\n\r\n\r\n      const url_new = `${path}/${props.slotId}/04_WPS/WPS.json`;\r\n      const response_new = await readJsonFile({fullPath: url_new});\r\n      findWbcClass.value = response_new.data;\r\n      await wpsInitElement();\r\n      wps.value = newVal;\r\n\r\n    }\r\n    const currentClass = findWbcClass.value.find((el: any) => el.FILE_NM === newVal.img.fileName.split('_').slice(2).join('_'));\r\n    if (!currentClass) {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Selected image does not have corresponding coordinates.');\r\n      emit('borderDel');\r\n    }\r\n  } else {\r\n    // slotId는 동일하지만 wpsImgClickInfoData만 변경된 경우\r\n    if (viewer.value) {\r\n      isZoomed.value = false;\r\n      // 네비게이션 바 위치 조정\r\n      const currentClass = findWbcClass.value.find((el: any) => el.FILE_NM === newVal.img.fileName.split('_').slice(2).join('_'));\r\n      if (currentClass) {\r\n        const {x1, x2, y1, y2} = currentClass;\r\n        adjustNavBar(x1, x2, y1, y2);\r\n\r\n        // drawBoxOnCanvas 호출\r\n        const boxX1 = Number(currentClass.POSX1);\r\n        const boxY1 = Number(currentClass.POSY1);\r\n        const boxX2 = Number(currentClass.POSX2);\r\n        const boxY2 = Number(currentClass.POSY2);\r\n\r\n        const boxWidth = boxX2 - boxX1;\r\n        const boxHeight = boxY2 - boxY1;\r\n        emit('borderOn');\r\n        wps.value = newVal;\r\n        await drawBoxOnCanvas(boxX1, boxY1, boxWidth, boxHeight);\r\n      } else {\r\n        toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n        showToast('Selected image does not have corresponding coordinates.');\r\n        emit('borderDel');\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\nconst adjustNavBar = (x1: number, x2: number, y1: number, y2: number) => {\r\n  const navBar = document.querySelector('.openseadragon-container .navigator');\r\n  const navBarCanvas = document.querySelector('.openseadragon-container .navigator .openseadragon-canvas');\r\n  const parentElement = navBar?.parentNode;\r\n\r\n  if (parentElement) {\r\n    navBarCanvas?.classList.add('nav-bar-canvas');\r\n\r\n    parentElement?.classList.add('opacityZero');  // 배경 이미지보다 앞에 위치하도록 설정\r\n    parentElement.style.zIndex = '10';  // 배경 이미지보다 앞에 위치하도록 설정\r\n    parentElement.style.position = 'relative';\r\n\r\n    // 네비게이션 바의 위치 및 크기 적용\r\n    parentElement.style.width = `130px`;\r\n    parentElement.style.height = `375px`;\r\n  }\r\n\r\n  if (navBar) {\r\n    navBar.classList.add('custom-nav-bar-canvas');\r\n    const realWidth = Number(x2) - Number(x1);\r\n    const realHeight = Number(y2) - Number(y1);\r\n\r\n    // 배경 이미지 축소 비율에 맞춰 좌표와 크기 계산\r\n    const scaleFactor = 0.5;  // 1/2 비율로 축소\r\n    const left = x1 * scaleFactor;\r\n    const top = y1 * scaleFactor;\r\n    navBar.style.position = 'absolute';\r\n    navBar.style.width = `${realWidth * scaleFactor}px`;\r\n    navBar.style.height = `${realHeight * scaleFactor}px`;\r\n    // 네비게이션 바의 위치 및 크기 적용\r\n    navBar.style.left = `${left}px`;\r\n    navBar.style.top = `${top}px`;\r\n  }\r\n\r\n}\r\n\r\n\r\nconst wpsInitElement = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const folderPath = `${path}/${props.slotId}/04_WPS`;\r\n  backgroundImage.value = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=slide.jpg`;\r\n  const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n  try {\r\n    viewer.value = OpenSeadragon({\r\n      id: \"tilingViewerImgListWps\",\r\n      animationTime: 0.4,\r\n      navigatorHeight: (+findWbcClass.value[0].y2 - +findWbcClass.value[0].y1) * 0.5,\r\n      navigatorWidth: (+findWbcClass.value[0].x2 - +findWbcClass.value[0].x1) * 0.5,\r\n      showNavigator: !hideSideNavigatorImage.value,\r\n      navigatorAutoFade: true, // 네비게이터가 자동으로 숨겨지지 않도록 설정\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      navigatorBackground: \"transparent\",\r\n      prefixUrl: openseadragonPrefixUrl(apiBaseUrl),\r\n      tileSources: tilesInfo,\r\n      showReferenceStrip: false,\r\n      showFullPageControl: false,\r\n      showSequenceControl: false,\r\n      showZoomControl: false,\r\n      showHomeControl: false,\r\n      gestureSettingsMouse: {clickToZoom: false},\r\n      minZoomLevel: 1,\r\n      zoomPerClick: 1.2,\r\n      zoomPerScroll: 1.2,\r\n      viewportMargins: {top: 0, left: 0, bottom: 0, right: 0},\r\n      visibilityRatio: 1.0,\r\n    });\r\n\r\n    const navigatorButton = new OpenSeadragon.Button({\r\n      tooltip: 'Toggle Navigator',\r\n      srcRest: openseadragonPrefixUrl(apiBaseUrl) + 'home_rest.png',\r\n      srcGroup: openseadragonPrefixUrl(apiBaseUrl) + 'home_grouphover.png',\r\n      srcHover: openseadragonPrefixUrl(apiBaseUrl) + 'home_hover.png',\r\n      srcDown: openseadragonPrefixUrl(apiBaseUrl) + 'home_pressed.png',\r\n\r\n      onClick: () => {\r\n        hideSideNavigatorImage.value = !hideSideNavigatorImage.value;\r\n        const nav = viewer.value.navigator?.element;\r\n        if (nav) nav.style.display = nav.style.display === 'none' ? 'block' : 'none';\r\n      }\r\n    })\r\n\r\n    viewer.value.buttonGroup.buttons.push(navigatorButton);\r\n    viewer.value.buttonGroup.element.appendChild(navigatorButton.element);\r\n\r\n    const canvas = document.createElement('canvas');\r\n    viewer.value.addOverlay({\r\n      element: canvas,\r\n      location: new OpenSeadragon.Rect(0, 0, 1, 1),\r\n    });\r\n\r\n\r\n    canvas.id = 'myCanvas';\r\n    canvasOverlay.value = canvas;\r\n\r\n    viewer.value.addHandler('open', function (event: any) {\r\n      imgOn.value = true;\r\n\r\n      // 캔버스 크기를 조정\r\n      canvas.width = event.source.Image.Size.Width;\r\n      canvas.height = event.source.Image.Size.Height;\r\n\r\n      // 예시 확대 - 특정 좌표에 맞춰 확대\r\n      const zoomRect = new OpenSeadragon.Rect(0.1, 0.1, 0.2, 0.2); // 비율로 설정\r\n      viewer.value.viewport.fitBounds(zoomRect);\r\n\r\n      adjustNavBar(findWbcClass.value[0].x1, findWbcClass.value[0].x2, findWbcClass.value[0].y1, findWbcClass.value[0].y2);\r\n    });\r\n\r\n    isZoomed.value = false;\r\n\r\n    viewer.value.addHandler('animation', async () => {\r\n      // FILE_NM\r\n      const extracted = props.wpsImgClickInfoData.img.fileName.split('_').slice(2).join('_');\r\n      const findWbcClassVal = findWbcClass.value.find((el: any) => {\r\n        return el.FILE_NM === extracted\r\n      })\r\n      if (findWbcClassVal) {\r\n        const boxX1 = Number(findWbcClassVal.POSX1); // 박스의 시작 X 좌표\r\n        const boxY1 = Number(findWbcClassVal.POSY1); // 박스의 시작 Y 좌표\r\n        const boxX2 = Number(findWbcClassVal.POSX2); // 박스의 시작 X 좌표\r\n        const boxY2 = Number(findWbcClassVal.POSY2); // 박스의 시작 Y 좌표\r\n\r\n        const boxWidth = Number(boxX2) - Number(boxX1);// 박스의 너비\r\n        const boxHeight = Number(boxY2) - Number(boxY1); // 박스의 높이\r\n\r\n        await drawBoxOnCanvas(boxX1, boxY1, boxWidth, boxHeight);\r\n\r\n      }\r\n    });\r\n\r\n  } catch (e) {\r\n    console.error(\"Error initializing viewer:\", e);\r\n  }\r\n}\r\n\r\nconst zoomToBox = (x: any, y: any, width: any, height: any) => {\r\n  if (isZoomed.value) return;  // 이미 줌이 설정된 경우, 더 이상 실행하지 않음\r\n\r\n  if (viewer.value) {\r\n    // OpenSeadragon 뷰포트 좌표로 변환\r\n    let viewportRect = viewer.value.viewport.imageToViewportRectangle(x, y, width, height);\r\n\r\n    // 4배 확대를 위해 영역 크기 축소\r\n    const zoomFactor = 0.09;\r\n    const adjustedRect = new OpenSeadragon.Rect(\r\n        viewportRect.x + viewportRect.width * (1 - 1 / zoomFactor) / 2, // 중심점 기준으로 위치 조정\r\n        viewportRect.y + viewportRect.height * (1 - 1 / zoomFactor) / 2,\r\n        viewportRect.width / zoomFactor, // 크기 축소\r\n        viewportRect.height / zoomFactor\r\n    );\r\n\r\n    // 뷰포트를 해당 영역으로 확대\r\n    viewer.value.viewport.fitBounds(adjustedRect, true);\r\n  }\r\n  isZoomed.value = true;  // 줌 설정 후 플래그를 true로 설정해야 줌이 계속 실행되지 않음\r\n};\r\n\r\nlet currentBox: { x: number; y: number; width: number; height: number } | null = null;\r\n\r\n\r\nconst drawBoxOnCanvas = async (x: number, y: number, width: number, height: number) => {\r\n  // 새 박스가 기존 박스와 동일하면 작업 생략\r\n  // if (\r\n  //     currentBox &&\r\n  //     currentBox.x === x &&\r\n  //     currentBox.y === y &&\r\n  //     currentBox.width === width &&\r\n  //     currentBox.height === height\r\n  // ) {\r\n  //   return;\r\n  // }\r\n  if (!viewer.value) return;\r\n  // 이전 오버레이 삭제\r\n  if (currentOverlay) {\r\n    viewer.value.removeOverlay(currentOverlay);\r\n    currentOverlay = null;\r\n  }\r\n\r\n  // 새로운 오버레이 생성\r\n  const overlayDiv = document.createElement('div');\r\n  overlayDiv.style.border = '2px solid red'; // 박스 스타일\r\n  overlayDiv.style.position = 'absolute'; // 위치 설정\r\n  overlayDiv.style.width = `${width}%`; // 뷰포트에 비례한 너비\r\n  overlayDiv.style.height = `${height}%`; // 뷰포트에 비례한 높이\r\n\r\n  // 이미지 좌표를 뷰포트 좌표로 변환\r\n  const overlayRect = viewer.value.viewport.imageToViewportRectangle(Number(x), Number(y), Number(width), Number(height));\r\n\r\n  // 오버레이 추가\r\n  viewer.value.addOverlay({\r\n    element: overlayDiv,\r\n    location: overlayRect,\r\n  });\r\n\r\n  // 현재 오버레이 요소를 추적\r\n  currentOverlay = overlayDiv;\r\n  // currentBox = { x, y, width, height };\r\n\r\n  // 박스에 맞춰 줌\r\n  zoomToBox(x, y, width, height);\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n    fileNameResultArr.value = [];\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n\r\n        const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n        fileNameResultArr.value.push(fileNameResult)\r\n        const {width, height, tileSize} = await dziWidthHeight(fileNameResult);\r\n\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Type: 'image',\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: imgType.value,\r\n            Overlap: \"1\",\r\n            TileSize: tileSize,\r\n            buildPyramid: false,\r\n            Size: {\r\n              Width: width,\r\n              Height: height\r\n            }\r\n          }\r\n        });\r\n\r\n        canvasCurrentWitdh.value = width;\r\n        canvasCurrentHeight.value = height;\r\n      }\r\n    }\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nconst dziWidthHeight = async (): Promise<any> => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const urlImage = `${path}/${props.selectItems.slotId}/04_WPS/WPS.dzi`;\r\n  const imageResponse = await readDziFile({filePath: urlImage});\r\n  return await extractWidthHeightFromDzi(imageResponse);\r\n}\r\n\r\nconst extractWidthHeightFromDzi = (xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return {width: Number(width), height: Number(height), tileSize: Number(tileSize)}\r\n}\r\n\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", {\n      class: _normalizeClass('wpsDiv main ' + (cbcLayer.value ? 'cbcLayer' : ''))\n    }, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", {\n          ref_key: \"tilingViewerLayer\",\n          ref: tilingViewerLayer,\n          id: \"tilingViewerImgListWps\",\n          class: \"tilingViewerImgListWps\",\n          style: {\"width\":\"100%\"}\n        }, null, 512)\n      ]),\n      _withDirectives(_createElementVNode(\"img\", {\n        id: \"background-image\",\n        src: backgroundImage.value,\n        class: \"background-image\"\n      }, null, 8, _hoisted_2), [\n        [_vShow, imgOn.value && !hideSideNavigatorImage.value]\n      ]),\n      (!imgOn.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n            _createElementVNode(\"p\", _hoisted_4, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-pointer'] })\n            ]),\n            _cache[0] || (_cache[0] = _createElementVNode(\"span\", null, \"Please select an class image.\", -1))\n          ]))\n        : _createCommentVNode(\"\", true)\n    ], 2),\n    (toastMessage.value)\n      ? (_openBlock(), _createBlock(ToastNotification, {\n          key: 0,\n          message: toastMessage.value,\n          messageType: toastMessageType.value,\n          duration: 1500,\n          position: \"bottom-right\"\n        }, null, 8, [\"message\", \"messageType\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div :class=\"'wpsDiv main ' + (cbcLayer ? 'cbcLayer' : '')\">\r\n    <div class=\"tiling-viewer_img_list-box_img_list\" style=\"border-radius: 4px\">\r\n      <div ref=\"tilingViewerLayer\"\r\n           id=\"tilingViewerImgListWps\"\r\n           class=\"tilingViewerImgListWps\" style=\"width: 100%;\"></div>\r\n    </div>\r\n    <img v-show=\"imgOn && !hideSideNavigatorImage\" id=\"background-image\"\r\n         :src=\"backgroundImage\"\r\n         class=\"background-image\"/>\r\n    <div v-if=\"!imgOn\" class=\"selectImgWarn\">\r\n      <p class=\"hand-pointer\">\r\n        <font-awesome-icon :icon=\"['fas', 'arrow-pointer']\"/>\r\n      </p>\r\n      <span>Please select an class image.</span>\r\n    </div>\r\n  </div>\r\n  <ToastNotification\r\n      v-if=\"toastMessage\"\r\n      :message=\"toastMessage\"\r\n      :messageType=\"toastMessageType\"\r\n      :duration=\"1500\"\r\n      position=\"bottom-right\"\r\n  />\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, onMounted, ref, watch} from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport {useStore} from \"vuex\";\r\nimport {readDziFile, readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {openseadragonPrefixUrl} from \"@/common/lib/utils/assetUtils\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\n\r\nconst store = useStore();\r\nconst props = defineProps(['wpsImgClickInfoData', 'slotId', 'selectItems']);\r\nconst wps = ref<any>({});\r\nconst tilingViewerLayer = ref(null);\r\nlet viewer: any = ref<any>(null);\r\nconst canvasCurrentHeight = ref('0');\r\nconst canvasCurrentWitdh = ref('0');\r\nconst fileNameResultArr = ref<any>([]);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst canvasOverlay = ref<any>(null);\r\nconst backgroundImage = ref('');\r\nconst hideSideNavigatorImage = ref(false);\r\nconst imgOn = ref(false);\r\nconst findWbcClass = ref<any>([]);\r\nconst localSlotId = ref('');\r\nlet isZoomed = ref(true);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst emit = defineEmits(['borderDel', 'borderOn']);\r\nlet currentOverlay: HTMLElement | null = null;\r\nconst imgType = ref('');\r\n\r\nwatch(() => props.wpsImgClickInfoData, async (newVal) => {\r\n\r\n  // slotId가 변경된 경우\r\n  if (localSlotId.value !== props.slotId) {\r\n    const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path\r\n        ? props.selectItems?.img_drive_root_path\r\n        : iaRootPath.value;\r\n    const tilingViewerLayer = document.getElementById('tilingViewerImgListWps');\r\n    if (tilingViewerLayer) {\r\n      localSlotId.value = props.slotId;\r\n      tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n      // OpenSeadragon 초기화\r\n      if (viewer.value) {\r\n        viewer.value.destroy(); // 기존 뷰어 인스턴스 파괴\r\n      }\r\n\r\n      const folderPath = `${path}/${props.slotId}/04_WPS/WPS_files/0`;\r\n      const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n      const res = await fetch(url);\r\n      const a = await res.json();\r\n\r\n      imgType.value = a[0].split('.')[1];\r\n\r\n\r\n      const url_new = `${path}/${props.slotId}/04_WPS/WPS.json`;\r\n      const response_new = await readJsonFile({fullPath: url_new});\r\n      findWbcClass.value = response_new.data;\r\n      await wpsInitElement();\r\n      wps.value = newVal;\r\n\r\n    }\r\n    const currentClass = findWbcClass.value.find((el: any) => el.FILE_NM === newVal.img.fileName.split('_').slice(2).join('_'));\r\n    if (!currentClass) {\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Selected image does not have corresponding coordinates.');\r\n      emit('borderDel');\r\n    }\r\n  } else {\r\n    // slotId는 동일하지만 wpsImgClickInfoData만 변경된 경우\r\n    if (viewer.value) {\r\n      isZoomed.value = false;\r\n      // 네비게이션 바 위치 조정\r\n      const currentClass = findWbcClass.value.find((el: any) => el.FILE_NM === newVal.img.fileName.split('_').slice(2).join('_'));\r\n      if (currentClass) {\r\n        const {x1, x2, y1, y2} = currentClass;\r\n        adjustNavBar(x1, x2, y1, y2);\r\n\r\n        // drawBoxOnCanvas 호출\r\n        const boxX1 = Number(currentClass.POSX1);\r\n        const boxY1 = Number(currentClass.POSY1);\r\n        const boxX2 = Number(currentClass.POSX2);\r\n        const boxY2 = Number(currentClass.POSY2);\r\n\r\n        const boxWidth = boxX2 - boxX1;\r\n        const boxHeight = boxY2 - boxY1;\r\n        emit('borderOn');\r\n        wps.value = newVal;\r\n        await drawBoxOnCanvas(boxX1, boxY1, boxWidth, boxHeight);\r\n      } else {\r\n        toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n        showToast('Selected image does not have corresponding coordinates.');\r\n        emit('borderDel');\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\nconst adjustNavBar = (x1: number, x2: number, y1: number, y2: number) => {\r\n  const navBar = document.querySelector('.openseadragon-container .navigator');\r\n  const navBarCanvas = document.querySelector('.openseadragon-container .navigator .openseadragon-canvas');\r\n  const parentElement = navBar?.parentNode;\r\n\r\n  if (parentElement) {\r\n    navBarCanvas?.classList.add('nav-bar-canvas');\r\n\r\n    parentElement?.classList.add('opacityZero');  // 배경 이미지보다 앞에 위치하도록 설정\r\n    parentElement.style.zIndex = '10';  // 배경 이미지보다 앞에 위치하도록 설정\r\n    parentElement.style.position = 'relative';\r\n\r\n    // 네비게이션 바의 위치 및 크기 적용\r\n    parentElement.style.width = `130px`;\r\n    parentElement.style.height = `375px`;\r\n  }\r\n\r\n  if (navBar) {\r\n    navBar.classList.add('custom-nav-bar-canvas');\r\n    const realWidth = Number(x2) - Number(x1);\r\n    const realHeight = Number(y2) - Number(y1);\r\n\r\n    // 배경 이미지 축소 비율에 맞춰 좌표와 크기 계산\r\n    const scaleFactor = 0.5;  // 1/2 비율로 축소\r\n    const left = x1 * scaleFactor;\r\n    const top = y1 * scaleFactor;\r\n    navBar.style.position = 'absolute';\r\n    navBar.style.width = `${realWidth * scaleFactor}px`;\r\n    navBar.style.height = `${realHeight * scaleFactor}px`;\r\n    // 네비게이션 바의 위치 및 크기 적용\r\n    navBar.style.left = `${left}px`;\r\n    navBar.style.top = `${top}px`;\r\n  }\r\n\r\n}\r\n\r\n\r\nconst wpsInitElement = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const folderPath = `${path}/${props.slotId}/04_WPS`;\r\n  backgroundImage.value = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=slide.jpg`;\r\n  const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n  try {\r\n    viewer.value = OpenSeadragon({\r\n      id: \"tilingViewerImgListWps\",\r\n      animationTime: 0.4,\r\n      navigatorHeight: (+findWbcClass.value[0].y2 - +findWbcClass.value[0].y1) * 0.5,\r\n      navigatorWidth: (+findWbcClass.value[0].x2 - +findWbcClass.value[0].x1) * 0.5,\r\n      showNavigator: !hideSideNavigatorImage.value,\r\n      navigatorAutoFade: true, // 네비게이터가 자동으로 숨겨지지 않도록 설정\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      navigatorBackground: \"transparent\",\r\n      prefixUrl: openseadragonPrefixUrl(apiBaseUrl),\r\n      tileSources: tilesInfo,\r\n      showReferenceStrip: false,\r\n      showFullPageControl: false,\r\n      showSequenceControl: false,\r\n      showZoomControl: false,\r\n      showHomeControl: false,\r\n      gestureSettingsMouse: {clickToZoom: false},\r\n      minZoomLevel: 1,\r\n      zoomPerClick: 1.2,\r\n      zoomPerScroll: 1.2,\r\n      viewportMargins: {top: 0, left: 0, bottom: 0, right: 0},\r\n      visibilityRatio: 1.0,\r\n    });\r\n\r\n    const navigatorButton = new OpenSeadragon.Button({\r\n      tooltip: 'Toggle Navigator',\r\n      srcRest: openseadragonPrefixUrl(apiBaseUrl) + 'home_rest.png',\r\n      srcGroup: openseadragonPrefixUrl(apiBaseUrl) + 'home_grouphover.png',\r\n      srcHover: openseadragonPrefixUrl(apiBaseUrl) + 'home_hover.png',\r\n      srcDown: openseadragonPrefixUrl(apiBaseUrl) + 'home_pressed.png',\r\n\r\n      onClick: () => {\r\n        hideSideNavigatorImage.value = !hideSideNavigatorImage.value;\r\n        const nav = viewer.value.navigator?.element;\r\n        if (nav) nav.style.display = nav.style.display === 'none' ? 'block' : 'none';\r\n      }\r\n    })\r\n\r\n    viewer.value.buttonGroup.buttons.push(navigatorButton);\r\n    viewer.value.buttonGroup.element.appendChild(navigatorButton.element);\r\n\r\n    const canvas = document.createElement('canvas');\r\n    viewer.value.addOverlay({\r\n      element: canvas,\r\n      location: new OpenSeadragon.Rect(0, 0, 1, 1),\r\n    });\r\n\r\n\r\n    canvas.id = 'myCanvas';\r\n    canvasOverlay.value = canvas;\r\n\r\n    viewer.value.addHandler('open', function (event: any) {\r\n      imgOn.value = true;\r\n\r\n      // 캔버스 크기를 조정\r\n      canvas.width = event.source.Image.Size.Width;\r\n      canvas.height = event.source.Image.Size.Height;\r\n\r\n      // 예시 확대 - 특정 좌표에 맞춰 확대\r\n      const zoomRect = new OpenSeadragon.Rect(0.1, 0.1, 0.2, 0.2); // 비율로 설정\r\n      viewer.value.viewport.fitBounds(zoomRect);\r\n\r\n      adjustNavBar(findWbcClass.value[0].x1, findWbcClass.value[0].x2, findWbcClass.value[0].y1, findWbcClass.value[0].y2);\r\n    });\r\n\r\n    isZoomed.value = false;\r\n\r\n    viewer.value.addHandler('animation', async () => {\r\n      // FILE_NM\r\n      const extracted = props.wpsImgClickInfoData.img.fileName.split('_').slice(2).join('_');\r\n      const findWbcClassVal = findWbcClass.value.find((el: any) => {\r\n        return el.FILE_NM === extracted\r\n      })\r\n      if (findWbcClassVal) {\r\n        const boxX1 = Number(findWbcClassVal.POSX1); // 박스의 시작 X 좌표\r\n        const boxY1 = Number(findWbcClassVal.POSY1); // 박스의 시작 Y 좌표\r\n        const boxX2 = Number(findWbcClassVal.POSX2); // 박스의 시작 X 좌표\r\n        const boxY2 = Number(findWbcClassVal.POSY2); // 박스의 시작 Y 좌표\r\n\r\n        const boxWidth = Number(boxX2) - Number(boxX1);// 박스의 너비\r\n        const boxHeight = Number(boxY2) - Number(boxY1); // 박스의 높이\r\n\r\n        await drawBoxOnCanvas(boxX1, boxY1, boxWidth, boxHeight);\r\n\r\n      }\r\n    });\r\n\r\n  } catch (e) {\r\n    console.error(\"Error initializing viewer:\", e);\r\n  }\r\n}\r\n\r\nconst zoomToBox = (x: any, y: any, width: any, height: any) => {\r\n  if (isZoomed.value) return;  // 이미 줌이 설정된 경우, 더 이상 실행하지 않음\r\n\r\n  if (viewer.value) {\r\n    // OpenSeadragon 뷰포트 좌표로 변환\r\n    let viewportRect = viewer.value.viewport.imageToViewportRectangle(x, y, width, height);\r\n\r\n    // 4배 확대를 위해 영역 크기 축소\r\n    const zoomFactor = 0.09;\r\n    const adjustedRect = new OpenSeadragon.Rect(\r\n        viewportRect.x + viewportRect.width * (1 - 1 / zoomFactor) / 2, // 중심점 기준으로 위치 조정\r\n        viewportRect.y + viewportRect.height * (1 - 1 / zoomFactor) / 2,\r\n        viewportRect.width / zoomFactor, // 크기 축소\r\n        viewportRect.height / zoomFactor\r\n    );\r\n\r\n    // 뷰포트를 해당 영역으로 확대\r\n    viewer.value.viewport.fitBounds(adjustedRect, true);\r\n  }\r\n  isZoomed.value = true;  // 줌 설정 후 플래그를 true로 설정해야 줌이 계속 실행되지 않음\r\n};\r\n\r\nlet currentBox: { x: number; y: number; width: number; height: number } | null = null;\r\n\r\n\r\nconst drawBoxOnCanvas = async (x: number, y: number, width: number, height: number) => {\r\n  // 새 박스가 기존 박스와 동일하면 작업 생략\r\n  // if (\r\n  //     currentBox &&\r\n  //     currentBox.x === x &&\r\n  //     currentBox.y === y &&\r\n  //     currentBox.width === width &&\r\n  //     currentBox.height === height\r\n  // ) {\r\n  //   return;\r\n  // }\r\n  if (!viewer.value) return;\r\n  // 이전 오버레이 삭제\r\n  if (currentOverlay) {\r\n    viewer.value.removeOverlay(currentOverlay);\r\n    currentOverlay = null;\r\n  }\r\n\r\n  // 새로운 오버레이 생성\r\n  const overlayDiv = document.createElement('div');\r\n  overlayDiv.style.border = '2px solid red'; // 박스 스타일\r\n  overlayDiv.style.position = 'absolute'; // 위치 설정\r\n  overlayDiv.style.width = `${width}%`; // 뷰포트에 비례한 너비\r\n  overlayDiv.style.height = `${height}%`; // 뷰포트에 비례한 높이\r\n\r\n  // 이미지 좌표를 뷰포트 좌표로 변환\r\n  const overlayRect = viewer.value.viewport.imageToViewportRectangle(Number(x), Number(y), Number(width), Number(height));\r\n\r\n  // 오버레이 추가\r\n  viewer.value.addOverlay({\r\n    element: overlayDiv,\r\n    location: overlayRect,\r\n  });\r\n\r\n  // 현재 오버레이 요소를 추적\r\n  currentOverlay = overlayDiv;\r\n  // currentBox = { x, y, width, height };\r\n\r\n  // 박스에 맞춰 줌\r\n  zoomToBox(x, y, width, height);\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n    fileNameResultArr.value = [];\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n\r\n        const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n        fileNameResultArr.value.push(fileNameResult)\r\n        const {width, height, tileSize} = await dziWidthHeight(fileNameResult);\r\n\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Type: 'image',\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: imgType.value,\r\n            Overlap: \"1\",\r\n            TileSize: tileSize,\r\n            buildPyramid: false,\r\n            Size: {\r\n              Width: width,\r\n              Height: height\r\n            }\r\n          }\r\n        });\r\n\r\n        canvasCurrentWitdh.value = width;\r\n        canvasCurrentHeight.value = height;\r\n      }\r\n    }\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nconst dziWidthHeight = async (): Promise<any> => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const urlImage = `${path}/${props.selectItems.slotId}/04_WPS/WPS.dzi`;\r\n  const imageResponse = await readDziFile({filePath: urlImage});\r\n  return await extractWidthHeightFromDzi(imageResponse);\r\n}\r\n\r\nconst extractWidthHeightFromDzi = (xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return {width: Number(width), height: Number(height), tileSize: Number(tileSize)}\r\n}\r\n\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n</script>","import script from \"./wps.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wps.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, vShow as _vShow, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createBlock as _createBlock, vModelSelect as _vModelSelect } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"loaderBackground\"\n}\nconst _hoisted_2 = { class: \"wbcInfoDbUl\" }\nconst _hoisted_3 = [\"onClick\", \"onDrop\"]\nconst _hoisted_4 = [\"title\"]\nconst _hoisted_5 = { key: 0 }\nconst _hoisted_6 = { class: \"mt10\" }\nconst _hoisted_7 = [\"onInput\", \"checked\"]\nconst _hoisted_8 = { class: \"smallName\" }\nconst _hoisted_9 = [\"onDrop\"]\nconst _hoisted_10 = [\"onClick\", \"onDblclick\", \"onContextmenu\"]\nconst _hoisted_11 = { class: \"pos-relative\" }\nconst _hoisted_12 = {\n  key: 0,\n  class: \"titleImg\"\n}\nconst _hoisted_13 = [\"onClick\", \"src\", \"width\", \"height\", \"onDragstart\", \"onError\", \"onLoad\"]\nconst _hoisted_14 = {\n  key: 2,\n  class: \"divCompare\"\n}\nconst _hoisted_15 = { class: \"divCompareChild\" }\nconst _hoisted_16 = [\"value\"]\nconst _hoisted_17 = { class: \"cellImgBox\" }\nconst _hoisted_18 = { class: \"mt10\" }\nconst _hoisted_19 = [\"checked\"]\nconst _hoisted_20 = { class: \"smallName\" }\nconst _hoisted_21 = [\"onClick\", \"onDblclick\", \"onContextmenu\"]\nconst _hoisted_22 = { style: {\"position\":\"relative\"} }\nconst _hoisted_23 = {\n  key: 0,\n  class: \"titleImg\"\n}\nconst _hoisted_24 = [\"src\", \"width\", \"height\", \"onDragstart\", \"onError\"]\nconst _hoisted_25 = { class: \"divCompareChild\" }\nconst _hoisted_26 = [\"value\"]\nconst _hoisted_27 = { class: \"cellImgBox\" }\nconst _hoisted_28 = { class: \"mt10\" }\nconst _hoisted_29 = [\"checked\"]\nconst _hoisted_30 = { class: \"smallName\" }\nconst _hoisted_31 = [\"onClick\", \"onDblclick\", \"onContextmenu\"]\nconst _hoisted_32 = { style: {\"position\":\"relative\"} }\nconst _hoisted_33 = {\n  key: 0,\n  class: \"titleImg\"\n}\nconst _hoisted_34 = [\"src\", \"width\", \"height\", \"onDragstart\", \"onError\"]\n\nimport {computed, ref, watch, toRefs, onMounted, nextTick} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {removeDuplicatesById} from \"@/common/lib/utils/removeDuplicateIds\";\r\nimport {debounce} from \"lodash\";\r\nimport Wps from \"@/views/datebase/commponent/detail/classInfo/commponent/wps.vue\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {isObjectEmpty} from \"@/common/lib/utils/validators\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\n\r\ninterface Image {\r\n  fileName: string;\r\n  width?: string;\r\n  height?: string;\r\n  filter?: string;\r\n  coordinates?: string;\r\n  title?: string;\r\n}\r\n\r\ninterface Item {\r\n  id: string;\r\n  title: string;\r\n  count: string | number;\r\n  images: Image[];\r\n}\r\n\r\ntype WbcInfo = Item[];\r\n\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ImageGallery',\n  props: {\n    wbcInfo: {},\n    updateWbcInfo: { type: Function },\n    classCompareShow: { type: Boolean },\n    selectedTitle: {},\n    hiddenImages: {},\n    setRef: { type: Function },\n    replaceFileNamePrefix: { type: Function },\n    onDragOver: { type: Function },\n    isBorderChanged: { type: Function },\n    isSelected: { type: Function },\n    totalCount: {},\n    wbcReset: { type: Boolean },\n    slotId: {},\n    iaRootPath: {},\n    projectTypeReturn: {},\n    projectType: {},\n    apiBaseUrl: {},\n    wbcInfoRefresh: {},\n    imageSize: {},\n    wpsShow: { type: Boolean },\n    selectItems: {},\n    isAllClassesChecked: { type: Boolean }\n  },\n  setup(__props: any, { expose: __expose, emit: __emit }) {\n\r\n\r\nconst refsArray = ref<any[]>([]);\r\nconst store = useStore();\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cellRef = ref<HTMLElement | null>(null);\r\nconst firstClassObj = ref<any>({});\r\nconst firstItemIndex = ref(0);\r\nconst lastItemIndex = ref(0);\r\nconst lastClassObj = ref<any>({});\r\nconst classList = ref<any>([]);\r\nconst loading = ref(true);\r\nconst clickableItem = ref<HTMLElement | null>(null);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst scrollContainer = ref(null);\r\n\r\nconst scrollToElement = (itemId: any) => {\r\n  const targetElement = refsArray.value[itemId];\r\n  if (targetElement) {\r\n    targetElement.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n};\r\n__expose({\r\n  scrollToElement,\r\n});\r\n\r\nconst props = __props;\r\nconst emits = __emit;\r\nconst wbcInfoArrChild = ref<any>([]);\r\nconst {wbcInfo} = toRefs(props);\r\nconst firstClass = ref('Metamyelocyte');\r\nconst lastClass = ref('Myelocyte');\r\nconst previousFirstClass = ref('Metamyelocyte');\r\nconst previousLastClass = ref('Myelocyte');\r\n\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({...props.hiddenImages});\r\nconst wpsImgClickInfoData = ref<any>({});\r\n\r\nwatch(props.hiddenImages, (newVal) => {\r\n  hiddenImages.value = {...newVal};\r\n  loading.value = false;\r\n});\r\n\r\nwatch(() => props.selectItems, (newSelectItems) => {\r\n  const wbcInfo = isObjectEmpty(newSelectItems.wbcInfoAfter) ? newSelectItems.wbcInfoAfwbcInfo.wbcInfo[0] : newSelectItems.wbcInfoAfter;\r\n  updateFirstLastClass(wbcInfo);\r\n})\r\n\r\nconst debouncedUpdate = debounce(async (newVal) => {\r\n  const timestamp = Date.now();\r\n  loading.value = false;\r\n  wbcInfoArrChild.value = [];\r\n  wbcInfoArrChild.value = removeDuplicatesById(newVal).map((item: any, index: number) => ({\r\n    ...item,\r\n    uniqueKey: `item_${index}_${timestamp}`,\r\n    images: item.images.map((image: any, imgIndex: number) => ({\r\n      ...image,\r\n      uniqueKey: `image_${index}_${imgIndex}_${timestamp}`\r\n    })) || []\r\n  }));\r\n  await classImgChange('first', null);\r\n  await classImgChange('last', null);\r\n\r\n}, 10); //디바운스 적용\r\n\r\nwatch(wbcInfo, debouncedUpdate, {deep: true});\r\n\r\nwatch(\r\n    () => props.wbcReset,\r\n    async (newVal) => {\r\n      if (newVal) {\r\n        if (props.wbcInfoRefresh) return;\r\n        wbcInfoArrChild.value = [];\r\n        await nextTick(); // DOM 업데이트 후 실행\r\n        wbcInfoArrChild.value = props.wbcInfo.map((item, index) => ({\r\n          ...item,\r\n          uniqueKey: `item_${index}_${Date.now()}`,\r\n          images: item.images.map((image, imgIndex) => ({\r\n            ...image,\r\n            uniqueKey: `image_${index}_${imgIndex}_${Date.now()}`\r\n          })) || []\r\n        }));\r\n\r\n        await nextTick(); // 상태 업데이트 후 강제 렌더링\r\n        classImgChange('first', null);\r\n        classImgChange('last', null);\r\n      }\r\n    }\r\n);\r\n\r\nconst handleScroll = () => {\r\n  if (!scrollContainer.value) return;\r\n\r\n  const isAtBottom = scrollContainer.value.scrollTop + scrollContainer.value.clientHeight >= scrollContainer.value.scrollHeight;\r\n  if (isAtBottom && !props.isAllClassesChecked) {\r\n    // update 필요: isAllClassesChecked에 true 값\r\n    // update 필요: isAllClassesChecked에 true 값\r\n    // update 필요: isAllClassesChecked에 true 값\r\n    // update 필요: isAllClassesChecked에 true 값\r\n    // update 필요: isAllClassesChecked에 true 값\r\n    // update 필요: isAllClassesChecked에 true 값\r\n    emits('allClassesChecked')\r\n  }\r\n}\r\n\r\nconst wpsImgClickInfo = (img: any, item: any) => {\r\n  wpsImgClickInfoData.value = {item: item, img: img};\r\n}\r\n\r\nconst updateFirstLastClass = (wbcInfo: any) => {\r\n  if (isObjectEmpty(wbcInfo)) return;\r\n  firstClass.value = wbcInfo.find((item: any) => item.images.length > 0).name;\r\n  lastClass.value = wbcInfo.find((item: any) => item.images.length > 0 && item.name !== firstClass.value).name;\r\n  previousFirstClass.value = firstClass.value;\r\n  previousLastClass.value = lastClass.value;\r\n}\r\n\r\nconst handleImageLoad = (itemIndex: any) => {\r\n  emits('update:cellRef', cellRef);\r\n  classImgChange('first', null);\r\n  classImgChange('last', null);\r\n  classList.value = props.wbcInfo.filter((item: any) => siteCd.value !== '0006' && item?.title !== 'SM');\r\n\r\n  if (itemIndex === props.wbcInfo.length - 1 || itemIndex < props.wbcInfo.length - 1) {\r\n    loading.value = false;\r\n  } else {\r\n    loading.value = true;\r\n  }\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const slotId = props.slotId || '';\r\n  const folderPath = `${props.iaRootPath}/${slotId}/${props.projectTypeReturn}/${id}_${title}`;\r\n  let url = '';\r\n\r\n  // 타임스탬프 추가\r\n\r\n  if (highImg === 'getImageRealTime' || props.projectType === 'pb') {\r\n    url = `${props.apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${props.apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n\r\n\r\n  return url;\r\n}\r\n\r\nconst setRef = (itemId: any) => {\r\n  return (el: any) => {\r\n    if (el) {\r\n      refsArray.value[itemId] = el;\r\n    }\r\n  };\r\n};\r\n\r\nconst classImgChange = async (type: string, event: any) => {\r\n  const updateClassValue = (currentClass: any, previousClass: any, classObj: any, itemIndex: any) => {\r\n    if (firstClass.value === lastClass.value) {\r\n      currentClass.value = previousClass.value;\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Class already selected.');\r\n      return;\r\n    } else {\r\n      previousClass.value = event ? event.target.value : currentClass.value;\r\n    }\r\n    classObj.value = props.wbcInfo.find((option: any) => option?.name === currentClass.value);\r\n    itemIndex.value = props.wbcInfo.findIndex((option: any) => option?.name === currentClass.value);\r\n  };\r\n\r\n  if (type === 'first') {\r\n    updateClassValue(firstClass, previousFirstClass, firstClassObj, firstItemIndex);\r\n  } else {\r\n    updateClassValue(lastClass, previousLastClass, lastClassObj, lastItemIndex);\r\n  }\r\n  if (props.totalCount === '0') {\r\n    loading.value = false\r\n  }\r\n};\r\n\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (loading.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[16] || (_cache[16] = [\n          _createElementVNode(\"div\", { class: \"loader\" }, null, -1),\n          _createElementVNode(\"p\", { class: \"loadingText\" }, \"Loading...\", -1)\n        ])))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"ul\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoArrChild.value, (item) => {\n        return (_openBlock(), _createElementBlock(_Fragment, {\n          key: item.id\n        }, [\n          (siteCd.value !== '0006' && item?.title !== 'SM')\n            ? (_openBlock(), _createElementBlock(\"li\", {\n                key: 0,\n                onClick: ($event: any) => (scrollToElement(item.id)),\n                onDragover: _cache[0] || (_cache[0] = _withModifiers(($event: any) => (_ctx.$emit('onDragOverCircle')), [\"prevent\"])),\n                onDrop: ($event: any) => (_ctx.$emit('onDropCircle', item))\n              }, [\n                _createElementVNode(\"div\", {\n                  class: \"circle\",\n                  title: item.name\n                }, [\n                  _createElementVNode(\"p\", null, _toDisplayString(item?.title), 1),\n                  _createElementVNode(\"p\", null, _toDisplayString(item?.count), 1)\n                ], 8, _hoisted_4)\n              ], 40, _hoisted_3))\n            : _createCommentVNode(\"\", true)\n        ], 64))\n      }), 128))\n    ]),\n    (!_ctx.classCompareShow)\n      ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n          _createElementVNode(\"ul\", {\n            class: _normalizeClass({ wpsDiv: _ctx.wpsShow, cellImgBox: true }),\n            ref_key: \"scrollContainer\",\n            ref: scrollContainer,\n            onScroll: handleScroll\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoArrChild.value, (item, itemIndex) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: item.id,\n                ref_for: true,\n                ref: setRef(item.id)\n              }, [\n                (item?.count !== '0' && item?.count !== 0)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                      _createElementVNode(\"p\", _hoisted_6, [\n                        _createElementVNode(\"input\", {\n                          type: \"checkbox\",\n                          onInput: ($event: any) => (_ctx.$emit('allCheckChange', $event, item.title)),\n                          checked: _ctx.selectedTitle === item.title\n                        }, null, 40, _hoisted_7),\n                        _createTextVNode(\" \" + _toDisplayString(item?.title) + \" \", 1),\n                        _createElementVNode(\"span\", _hoisted_8, \"(\" + _toDisplayString(item.name) + \")\", 1),\n                        _createTextVNode(\" (\" + _toDisplayString(item?.count) + \") \", 1)\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                (item?.count !== '0' && item?.count !== 0 && item.images)\n                  ? (_openBlock(), _createElementBlock(\"ul\", {\n                      key: 1,\n                      class: _normalizeClass('wbcImgWrap ' + item?.title),\n                      onDragover: _cache[1] || (_cache[1] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.onDragOver && _ctx.onDragOver(...args)), [\"prevent\"])),\n                      onDrop: () => _ctx.$emit('onDrop', itemIndex)\n                    }, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image, imageIndex) => {\n                        return (_openBlock(), _createElementBlock(_Fragment, {\n                          key: image.uniqueKey\n                        }, [\n                          (image.uniqueKey && !hiddenImages.value[`${item.id}-${image.fileName}`])\n                            ? (_openBlock(), _createElementBlock(\"li\", {\n                                key: 0,\n                                class: _normalizeClass({\r\n              'border-changed': _ctx.isBorderChanged(image),\r\n              'selected-image': _ctx.isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }),\n                                ref_for: true,\n                                ref_key: \"clickableItem\",\n                                ref: clickableItem,\n                                onClick: () => _ctx.$emit('selectImage', itemIndex, imageIndex, item),\n                                onDblclick: () => _ctx.$emit('openModal', image, item),\n                                onContextmenu: _withModifiers((event) => _ctx.$emit('handleRightClick', event, image, item), [\"prevent\"])\n                              }, [\n                                _createElementVNode(\"div\", _hoisted_11, [\n                                  image\n                                    ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n                                        _createElementVNode(\"div\", {\n                                          class: \"fileTitle\",\n                                          style: _normalizeStyle({ fontSize: _ctx.imageSize ? (parseInt(_ctx.imageSize) / 6) + 'px' : '15px' })\n                                        }, [\n                                          _createTextVNode(_toDisplayString(_ctx.replaceFileNamePrefix(image.fileName)) + \" \", 1),\n                                          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-right'] }),\n                                          _createTextVNode(\" \" + _toDisplayString(image.title), 1)\n                                        ], 4)\n                                      ], 512)), [\n                                        [_vShow, _ctx.replaceFileNamePrefix(image.fileName) !== item?.title]\n                                      ])\n                                    : _createCommentVNode(\"\", true),\n                                  (image && image.fileName && !hiddenImages.value[`${item.id}-${image.fileName}`])\n                                    ? (_openBlock(), _createElementBlock(\"img\", {\n                                        onClick: ($event: any) => (wpsImgClickInfo(image, item)),\n                                        key: image.uniqueKey,\n                                        src: getImageUrl(image.fileName, item.id, item.title, ''),\n                                        width: _ctx.imageSize,\n                                        height: _ctx.imageSize,\n                                        style: _normalizeStyle({ filter: image.filter }),\n                                        onDragstart: () => _ctx.$emit('onDragStart', itemIndex, imageIndex),\n                                        draggable: \"true\",\n                                        class: \"cellImg\",\n                                        ref_for: true,\n                                        ref_key: \"cellRef\",\n                                        ref: cellRef,\n                                        onError: () => _ctx.$emit('hideImage', item.id, image.fileName, item.title),\n                                        onLoad: ($event: any) => (handleImageLoad(itemIndex))\n                                      }, null, 44, _hoisted_13))\n                                    : _createCommentVNode(\"\", true),\n                                  (image && image.coordinates)\n                                    ? (_openBlock(), _createElementBlock(\"div\", {\n                                        key: 2,\n                                        class: \"center-point\",\n                                        style: _normalizeStyle(image.coordinates)\n                                      }, null, 4))\n                                    : _createCommentVNode(\"\", true)\n                                ])\n                              ], 42, _hoisted_10))\n                            : _createCommentVNode(\"\", true)\n                        ], 64))\n                      }), 128))\n                    ], 42, _hoisted_9))\n                  : _createCommentVNode(\"\", true)\n              ]))\n            }), 128))\n          ], 34),\n          (_ctx.wpsShow)\n            ? (_openBlock(), _createBlock(Wps, {\n                key: 0,\n                wpsImgClickInfoData: wpsImgClickInfoData.value,\n                slotId: _ctx.slotId,\n                selectItems: _ctx.selectItems,\n                iaRootPath: _ctx.iaRootPath,\n                onBorderDel: _cache[2] || (_cache[2] = () => _ctx.$emit('borderDel')),\n                onBorderOn: _cache[3] || (_cache[3] = () => _ctx.$emit('borderOn'))\n              }, null, 8, [\"wpsImgClickInfoData\", \"slotId\", \"selectItems\", \"iaRootPath\"]))\n            : _createCommentVNode(\"\", true)\n        ], 64))\n      : (_ctx.classCompareShow)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n            _createElementVNode(\"div\", _hoisted_15, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((firstClass).value = $event)),\n                onChange: _cache[5] || (_cache[5] = ($event: any) => (classImgChange('first' , $event)))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList.value, (option) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: option.id,\n                    value: option.name\n                  }, _toDisplayString(option?.name), 9, _hoisted_16))\n                }), 128))\n              ], 544), [\n                [_vModelSelect, firstClass.value]\n              ]),\n              _createElementVNode(\"ul\", _hoisted_17, [\n                _createElementVNode(\"li\", null, [\n                  _createElementVNode(\"div\", null, [\n                    _createElementVNode(\"p\", _hoisted_18, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        onInput: _cache[6] || (_cache[6] = ($event: any) => (_ctx.$emit('allCheckChange', $event, firstClassObj.value?.title))),\n                        checked: _ctx.selectedTitle === firstClassObj.value?.title\n                      }, null, 40, _hoisted_19),\n                      _createElementVNode(\"label\", null, [\n                        _createTextVNode(_toDisplayString(firstClassObj.value?.title) + \" \", 1),\n                        _createElementVNode(\"span\", _hoisted_20, \"(\" + _toDisplayString(firstClassObj.value.name) + \")\", 1),\n                        _createTextVNode(\" (\" + _toDisplayString(firstClassObj.value?.count) + \") \", 1)\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"ul\", {\n                    class: _normalizeClass('wbcImgWrap ' + firstClassObj.value?.title),\n                    onDragover: _cache[8] || (_cache[8] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.onDragOver && _ctx.onDragOver(...args)), [\"prevent\"])),\n                    onDrop: _cache[9] || (_cache[9] = () => _ctx.$emit('onDrop', firstItemIndex.value))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(firstClassObj.value.images, (image, imageIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, {\n                        key: image?.fileName\n                      }, [\n                        (image && !hiddenImages.value[`${firstClassObj.value.id}-${image.fileName}`])\n                          ? (_openBlock(), _createElementBlock(\"li\", {\n                              key: 0,\n                              class: _normalizeClass({\r\n              'border-changed': _ctx.isBorderChanged(image),\r\n              'selected-image': _ctx.isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }),\n                              onClick: () => _ctx.$emit('selectImage', firstItemIndex.value, imageIndex, firstClassObj.value),\n                              onDblclick: () => _ctx.$emit('openModal', image, firstClassObj.value),\n                              onContextmenu: _withModifiers((event) => _ctx.$emit('handleRightClick', event, image, firstClassObj.value), [\"prevent\"])\n                            }, [\n                              _createElementVNode(\"div\", _hoisted_22, [\n                                image\n                                  ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_23, [\n                                      _createElementVNode(\"div\", {\n                                        class: \"fileTitle\",\n                                        style: _normalizeStyle({ fontSize: _ctx.imageSize ? (parseInt(_ctx.imageSize) / 6) + 'px' : '15px' })\n                                      }, [\n                                        _createTextVNode(_toDisplayString(_ctx.replaceFileNamePrefix(image.fileName)) + \" \", 1),\n                                        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-right'] }),\n                                        _createTextVNode(\" \" + _toDisplayString(image.title), 1)\n                                      ], 4)\n                                    ], 512)), [\n                                      [_vShow, _ctx.replaceFileNamePrefix(image.fileName) !== firstClassObj.value?.title]\n                                    ])\n                                  : _createCommentVNode(\"\", true),\n                                (image && image.fileName && !hiddenImages.value[`${firstClassObj.value.id}-${image.fileName}`])\n                                  ? (_openBlock(), _createElementBlock(\"img\", {\n                                      key: 1,\n                                      src: getImageUrl(image.fileName, firstClassObj.value.id, firstClassObj.value.title, ''),\n                                      width: _ctx.imageSize,\n                                      height: _ctx.imageSize,\n                                      style: _normalizeStyle({ filter: image.filter }),\n                                      onDragstart: () => _ctx.$emit('onDragStart', firstItemIndex.value, imageIndex),\n                                      draggable: \"true\",\n                                      class: \"cellImg\",\n                                      ref_for: true,\n                                      ref_key: \"cellRef\",\n                                      ref: cellRef,\n                                      onError: () => _ctx.$emit('hideImage', firstClassObj.value.id, image.fileName, firstClassObj.value.title),\n                                      onLoad: _cache[7] || (_cache[7] = ($event: any) => (handleImageLoad(firstItemIndex.value)))\n                                    }, null, 44, _hoisted_24))\n                                  : _createCommentVNode(\"\", true),\n                                (image && image.coordinates)\n                                  ? (_openBlock(), _createElementBlock(\"div\", {\n                                      key: 2,\n                                      class: \"center-point\",\n                                      style: _normalizeStyle(image.coordinates)\n                                    }, null, 4))\n                                  : _createCommentVNode(\"\", true)\n                              ])\n                            ], 42, _hoisted_21))\n                          : _createCommentVNode(\"\", true)\n                      ], 64))\n                    }), 128))\n                  ], 34)\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_25, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((lastClass).value = $event)),\n                onChange: _cache[11] || (_cache[11] = ($event: any) => (classImgChange('last', $event)))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList.value, (option) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: option.id,\n                    value: option.name\n                  }, _toDisplayString(option?.name), 9, _hoisted_26))\n                }), 128))\n              ], 544), [\n                [_vModelSelect, lastClass.value]\n              ]),\n              _createElementVNode(\"ul\", _hoisted_27, [\n                _createElementVNode(\"li\", null, [\n                  _createElementVNode(\"div\", null, [\n                    _createElementVNode(\"p\", _hoisted_28, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        onInput: _cache[12] || (_cache[12] = ($event: any) => (_ctx.$emit('allCheckChange', $event, lastClassObj.value?.title))),\n                        checked: _ctx.selectedTitle === lastClassObj.value?.title\n                      }, null, 40, _hoisted_29),\n                      _createTextVNode(\" \" + _toDisplayString(lastClassObj.value?.title) + \" \", 1),\n                      _createElementVNode(\"span\", _hoisted_30, \"(\" + _toDisplayString(lastClassObj.value.name) + \")\", 1),\n                      _createTextVNode(\" (\" + _toDisplayString(lastClassObj.value?.count) + \") \", 1)\n                    ])\n                  ]),\n                  _createElementVNode(\"ul\", {\n                    class: _normalizeClass('wbcImgWrap ' + lastClassObj.value?.title),\n                    onDragover: _cache[14] || (_cache[14] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.onDragOver && _ctx.onDragOver(...args)), [\"prevent\"])),\n                    onDrop: _cache[15] || (_cache[15] = () => _ctx.$emit('onDrop', lastItemIndex.value))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lastClassObj.value.images, (image, imageIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, {\n                        key: image?.fileName\n                      }, [\n                        (image && !hiddenImages.value[`${lastClassObj.value.id}-${image.fileName}`])\n                          ? (_openBlock(), _createElementBlock(\"li\", {\n                              key: 0,\n                              class: _normalizeClass({\r\n                    'border-changed': _ctx.isBorderChanged(image),\r\n                    'selected-image': _ctx.isSelected(image),\r\n                    'wbcImgWrapLi': true\r\n                  }),\n                              onClick: () => _ctx.$emit('selectImage', lastItemIndex.value, imageIndex, lastClassObj.value),\n                              onDblclick: () => _ctx.$emit('openModal', image, lastClassObj.value),\n                              onContextmenu: _withModifiers((event) => _ctx.$emit('handleRightClick', event, image, lastClassObj.value), [\"prevent\"])\n                            }, [\n                              _createElementVNode(\"div\", _hoisted_32, [\n                                image\n                                  ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_33, [\n                                      _createElementVNode(\"div\", {\n                                        class: \"fileTitle\",\n                                        style: _normalizeStyle({ fontSize: _ctx.imageSize ? (parseInt(_ctx.imageSize) / 6) + 'px' : '15px' })\n                                      }, [\n                                        _createTextVNode(_toDisplayString(_ctx.replaceFileNamePrefix(image.fileName)) + \" \", 1),\n                                        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-right'] }),\n                                        _createTextVNode(\" \" + _toDisplayString(image.title), 1)\n                                      ], 4)\n                                    ], 512)), [\n                                      [_vShow, _ctx.replaceFileNamePrefix(image.fileName) !== lastClassObj.value?.title]\n                                    ])\n                                  : _createCommentVNode(\"\", true),\n                                (image && image.fileName && !hiddenImages.value[`${lastClassObj.value.id}-${image.fileName}`])\n                                  ? (_openBlock(), _createElementBlock(\"img\", {\n                                      key: 1,\n                                      src: getImageUrl(image.fileName, lastClassObj.value.id, lastClassObj.value.title, ''),\n                                      width: _ctx.imageSize,\n                                      height: _ctx.imageSize,\n                                      style: _normalizeStyle({ filter: image.filter }),\n                                      onDragstart: () => _ctx.$emit('onDragStart', lastItemIndex.value, imageIndex),\n                                      draggable: \"true\",\n                                      class: \"cellImg\",\n                                      ref_for: true,\n                                      ref_key: \"cellRef\",\n                                      ref: cellRef,\n                                      onError: () => _ctx.$emit('hideImage', lastClassObj.value.id, image.fileName, lastClassObj.value.title),\n                                      onLoad: _cache[13] || (_cache[13] = ($event: any) => (handleImageLoad(lastItemIndex.value)))\n                                    }, null, 44, _hoisted_34))\n                                  : _createCommentVNode(\"\", true),\n                                (image && image.coordinates)\n                                  ? (_openBlock(), _createElementBlock(\"div\", {\n                                      key: 2,\n                                      class: \"center-point\",\n                                      style: _normalizeStyle(image.coordinates)\n                                    }, null, 4))\n                                  : _createCommentVNode(\"\", true)\n                              ])\n                            ], 42, _hoisted_31))\n                          : _createCommentVNode(\"\", true)\n                      ], 64))\n                    }), 128))\n                  ], 34)\n                ])\n              ])\n            ])\n          ]))\n        : _createCommentVNode(\"\", true),\n    (toastMessage.value)\n      ? (_openBlock(), _createBlock(ToastNotification, {\n          key: 3,\n          message: toastMessage.value,\n          messageType: toastMessageType.value,\n          duration: 1500,\n          position: \"bottom-right\"\n        }, null, 8, [\"message\", \"messageType\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"loaderBackground\" v-if=\"loading\">\r\n    <div class=\"loader\"></div>\r\n    <p class=\"loadingText\">Loading...</p>\r\n  </div>\r\n  <ul class=\"wbcInfoDbUl\">\r\n    <template v-for=\"(item) in wbcInfoArrChild\" :key=\"item.id\">\r\n      <li @click=\"scrollToElement(item.id)\" v-if=\"siteCd !== '0006' && item?.title !== 'SM'\"\r\n          @dragover.prevent=\"$emit('onDragOverCircle')\" @drop=\"$emit('onDropCircle', item)\">\r\n        <div class=\"circle\" :title=\"item.name\">\r\n          <p>{{ item?.title }}</p>\r\n          <p>{{ item?.count }}</p>\r\n        </div>\r\n      </li>\r\n    </template>\r\n  </ul>\r\n  <template v-if=\"!classCompareShow\">\r\n    <ul\r\n        :class=\"{ wpsDiv: wpsShow, cellImgBox: true }\"\r\n        ref=\"scrollContainer\"\r\n        @scroll=\"handleScroll\"\r\n    >\r\n      <li v-for=\"(item, itemIndex) in wbcInfoArrChild\" :key=\"item.id\" :ref=\"setRef(item.id)\">\r\n        <div v-if=\"item?.count !== '0' && item?.count !== 0\">\r\n          <p class=\"mt10\">\r\n            <input type=\"checkbox\" @input=\"$emit('allCheckChange', $event, item.title)\"\r\n                   :checked=\"selectedTitle === item.title\">\r\n            {{ item?.title }} <span class=\"smallName\">({{ item.name }})</span>\r\n            ({{ item?.count }})\r\n          </p>\r\n        </div>\r\n        <ul :class=\"'wbcImgWrap ' + item?.title\" @dragover.prevent=\"onDragOver\" @drop=\"() => $emit('onDrop', itemIndex)\"\r\n            v-if=\"item?.count !== '0' && item?.count !== 0 && item.images\">\r\n          <template v-for=\"(image, imageIndex) in item.images\" :key=\"image.uniqueKey\">\r\n            <li\r\n                :class=\"{\r\n              'border-changed': isBorderChanged(image),\r\n              'selected-image': isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }\"\r\n                ref=\"clickableItem\"\r\n                @click=\"() => $emit('selectImage', itemIndex, imageIndex, item)\"\r\n                @dblclick=\"() => $emit('openModal', image, item)\"\r\n                v-if=\"image.uniqueKey && !hiddenImages[`${item.id}-${image.fileName}`]\"\r\n                @contextmenu.prevent=\"(event) => $emit('handleRightClick', event, image, item)\"\r\n            >\r\n              <div class=\"pos-relative\">\r\n                <div v-if=\"image\" class=\"titleImg\" v-show=\"replaceFileNamePrefix(image.fileName) !== item?.title\">\r\n                  <div class=\"fileTitle\" :style=\"{ fontSize: imageSize ? (parseInt(imageSize) / 6) + 'px' : '15px' }\">\r\n                    {{ replaceFileNamePrefix(image.fileName) }}\r\n                    <font-awesome-icon :icon=\"['fas', 'arrow-right']\"/>\r\n                    {{ image.title }}\r\n                  </div>\r\n                </div>\r\n                <img\r\n                    @click=\"wpsImgClickInfo(image, item)\"\r\n                    v-if=\"image && image.fileName && !hiddenImages[`${item.id}-${image.fileName}`]\"\r\n                    :key=\"image.uniqueKey\"\r\n                    :src=\"getImageUrl(image.fileName, item.id, item.title, '')\"\r\n                    :width=\"imageSize\"\r\n                    :height=\"imageSize\"\r\n                    :style=\"{ filter: image.filter }\"\r\n                    @dragstart=\"() => $emit('onDragStart', itemIndex, imageIndex)\"\r\n                    draggable=\"true\"\r\n                    class=\"cellImg\"\r\n                    ref=\"cellRef\"\r\n                    @error=\"() => $emit('hideImage', item.id, image.fileName, item.title)\"\r\n                    @load=\"handleImageLoad(itemIndex)\"\r\n                />\r\n                <div v-if=\"image && image.coordinates\" class=\"center-point\" :style=\"image.coordinates\"></div>\r\n              </div>\r\n            </li>\r\n          </template>\r\n        </ul>\r\n      </li>\r\n    </ul>\r\n    <Wps v-if=\"wpsShow\" :wpsImgClickInfoData=\"wpsImgClickInfoData\" :slotId=\"slotId\" :selectItems=\"selectItems\"\r\n         :iaRootPath=\"iaRootPath\" @borderDel=\"() => $emit('borderDel')\" @borderOn=\"() => $emit('borderOn')\"/>\r\n  </template>\r\n  <!--  클래스 단일 비교 부분 -->\r\n  <div v-else-if=\"classCompareShow\" class=\"divCompare\">\r\n    <div class=\"divCompareChild\">\r\n      <select v-model=\"firstClass\" @change=\"classImgChange('first' , $event)\">\r\n        <option v-for=\"option in classList\" :key=\"option.id\" :value=\"option.name\">{{ option?.name }}</option>\r\n      </select>\r\n      <ul class=\"cellImgBox\">\r\n        <li>\r\n          <div>\r\n            <p class=\"mt10\">\r\n              <input type=\"checkbox\" @input=\"$emit('allCheckChange', $event, firstClassObj?.title)\"\r\n                     :checked=\"selectedTitle === firstClassObj?.title\">\r\n              <label>\r\n                {{ firstClassObj?.title }} <span class=\"smallName\">({{ firstClassObj.name }})</span>\r\n                ({{ firstClassObj?.count }})\r\n              </label>\r\n\r\n            </p>\r\n          </div>\r\n          <ul :class=\"'wbcImgWrap ' + firstClassObj?.title\" @dragover.prevent=\"onDragOver\"\r\n              @drop=\"() => $emit('onDrop', firstItemIndex)\">\r\n            <template v-for=\"(image, imageIndex) in firstClassObj.images\" :key=\"image?.fileName\">\r\n              <li\r\n                  :class=\"{\r\n              'border-changed': isBorderChanged(image),\r\n              'selected-image': isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }\"\r\n                  @click=\"() => $emit('selectImage', firstItemIndex, imageIndex, firstClassObj)\"\r\n                  @dblclick=\"() => $emit('openModal', image, firstClassObj)\"\r\n                  v-if=\"image && !hiddenImages[`${firstClassObj.id}-${image.fileName}`]\"\r\n                  @contextmenu.prevent=\"(event) => $emit('handleRightClick', event, image, firstClassObj)\"\r\n              >\r\n                <div style=\"position: relative;\">\r\n                  <div v-if=\"image\" class=\"titleImg\"\r\n                       v-show=\"replaceFileNamePrefix(image.fileName) !== firstClassObj?.title\">\r\n                    <div class=\"fileTitle\"\r\n                         :style=\"{ fontSize: imageSize ? (parseInt(imageSize) / 6) + 'px' : '15px' }\">\r\n                      {{ replaceFileNamePrefix(image.fileName) }}\r\n                      <font-awesome-icon\r\n                          :icon=\"['fas', 'arrow-right']\"/>\r\n                      {{ image.title }}\r\n                    </div>\r\n                  </div>\r\n                  <img\r\n                      v-if=\"image && image.fileName && !hiddenImages[`${firstClassObj.id}-${image.fileName}`]\"\r\n                      :src=\"getImageUrl(image.fileName, firstClassObj.id, firstClassObj.title, '')\"\r\n                      :width=\"imageSize\"\r\n                      :height=\"imageSize\"\r\n                      :style=\"{ filter: image.filter }\"\r\n                      @dragstart=\"() => $emit('onDragStart', firstItemIndex, imageIndex)\"\r\n                      draggable=\"true\"\r\n                      class=\"cellImg\"\r\n                      ref=\"cellRef\"\r\n                      @error=\"() => $emit('hideImage', firstClassObj.id, image.fileName, firstClassObj.title)\"\r\n                      @load=\"handleImageLoad(firstItemIndex)\"\r\n                  />\r\n                  <div v-if=\"image && image.coordinates\" class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"divCompareChild\">\r\n      <select v-model=\"lastClass\" @change=\"classImgChange('last', $event)\">\r\n        <option v-for=\"option in classList\" :key=\"option.id\" :value=\"option.name\">{{ option?.name }}</option>\r\n      </select>\r\n      <ul class=\"cellImgBox\">\r\n        <li>\r\n          <div>\r\n            <p class=\"mt10\">\r\n              <input type=\"checkbox\" @input=\"$emit('allCheckChange', $event, lastClassObj?.title)\"\r\n                     :checked=\"selectedTitle === lastClassObj?.title\">\r\n              {{ lastClassObj?.title }} <span class=\"smallName\">({{ lastClassObj.name }})</span>\r\n              ({{ lastClassObj?.count }})\r\n            </p>\r\n          </div>\r\n          <ul :class=\"'wbcImgWrap ' + lastClassObj?.title\" @dragover.prevent=\"onDragOver\"\r\n              @drop=\"() => $emit('onDrop', lastItemIndex)\">\r\n            <template v-for=\"(image, imageIndex) in lastClassObj.images\" :key=\"image?.fileName\">\r\n              <li\r\n                  :class=\"{\r\n                    'border-changed': isBorderChanged(image),\r\n                    'selected-image': isSelected(image),\r\n                    'wbcImgWrapLi': true\r\n                  }\"\r\n                  @click=\"() => $emit('selectImage', lastItemIndex, imageIndex, lastClassObj)\"\r\n                  @dblclick=\"() => $emit('openModal', image, lastClassObj)\"\r\n                  v-if=\"image && !hiddenImages[`${lastClassObj.id}-${image.fileName}`]\"\r\n                  @contextmenu.prevent=\"(event) => $emit('handleRightClick', event, image, lastClassObj)\"\r\n              >\r\n                <div style=\"position: relative;\">\r\n                  <div v-if=\"image\" class=\"titleImg\"\r\n                       v-show=\"replaceFileNamePrefix(image.fileName) !== lastClassObj?.title\">\r\n                    <div class=\"fileTitle\"\r\n                         :style=\"{ fontSize: imageSize ? (parseInt(imageSize) / 6) + 'px' : '15px' }\">\r\n                      {{ replaceFileNamePrefix(image.fileName) }}\r\n                      <font-awesome-icon\r\n                          :icon=\"['fas', 'arrow-right']\"/>\r\n                      {{ image.title }}\r\n                    </div>\r\n                  </div>\r\n                  <img\r\n                      v-if=\"image && image.fileName && !hiddenImages[`${lastClassObj.id}-${image.fileName}`]\"\r\n                      :src=\"getImageUrl(image.fileName, lastClassObj.id, lastClassObj.title, '')\"\r\n                      :width=\"imageSize\"\r\n                      :height=\"imageSize\"\r\n                      :style=\"{ filter: image.filter }\"\r\n                      @dragstart=\"() => $emit('onDragStart', lastItemIndex, imageIndex)\"\r\n                      draggable=\"true\"\r\n                      class=\"cellImg\"\r\n                      ref=\"cellRef\"\r\n                      @error=\"() => $emit('hideImage', lastClassObj.id, image.fileName, lastClassObj.title)\"\r\n                      @load=\"handleImageLoad(lastItemIndex)\"\r\n                  />\r\n                  <div v-if=\"image && image.coordinates\" class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <ToastNotification\r\n      v-if=\"toastMessage\"\r\n      :message=\"toastMessage\"\r\n      :messageType=\"toastMessageType\"\r\n      :duration=\"1500\"\r\n      position=\"bottom-right\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {computed, ref, watch, defineExpose, toRefs, onMounted, nextTick} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {removeDuplicatesById} from \"@/common/lib/utils/removeDuplicateIds\";\r\nimport {debounce} from \"lodash\";\r\nimport Wps from \"@/views/datebase/commponent/detail/classInfo/commponent/wps.vue\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {isObjectEmpty} from \"@/common/lib/utils/validators\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\n\r\nconst refsArray = ref<any[]>([]);\r\nconst store = useStore();\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cellRef = ref<HTMLElement | null>(null);\r\nconst firstClassObj = ref<any>({});\r\nconst firstItemIndex = ref(0);\r\nconst lastItemIndex = ref(0);\r\nconst lastClassObj = ref<any>({});\r\nconst classList = ref<any>([]);\r\nconst loading = ref(true);\r\nconst clickableItem = ref<HTMLElement | null>(null);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst scrollContainer = ref(null);\r\n\r\nconst scrollToElement = (itemId: any) => {\r\n  const targetElement = refsArray.value[itemId];\r\n  if (targetElement) {\r\n    targetElement.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n};\r\ndefineExpose({\r\n  scrollToElement,\r\n});\r\n\r\ninterface Image {\r\n  fileName: string;\r\n  width?: string;\r\n  height?: string;\r\n  filter?: string;\r\n  coordinates?: string;\r\n  title?: string;\r\n}\r\n\r\ninterface Item {\r\n  id: string;\r\n  title: string;\r\n  count: string | number;\r\n  images: Image[];\r\n}\r\n\r\ntype WbcInfo = Item[];\r\n\r\n\r\nconst props = defineProps<{\r\n  wbcInfo: WbcInfo;\r\n  updateWbcInfo: (newInfo: any) => void;\r\n  classCompareShow: boolean;\r\n  selectedTitle: string;\r\n  hiddenImages: { [key: string]: boolean };\r\n  setRef: (el: any, id: string) => void;\r\n  replaceFileNamePrefix: (fileName: string) => string;\r\n  onDragOver: () => void;\r\n  isBorderChanged: (image: Image) => boolean;\r\n  isSelected: (image: Image) => boolean;\r\n  totalCount: string;\r\n  wbcReset: boolean;\r\n  slotId: any;\r\n  iaRootPath: any;\r\n  projectTypeReturn: any;\r\n  projectType: any;\r\n  apiBaseUrl: any;\r\n  wbcInfoRefresh: any;\r\n  imageSize: number;\r\n  wpsShow: boolean;\r\n  selectItems: any;\r\n  isAllClassesChecked: boolean;\r\n}>();\r\nconst emits = defineEmits();\r\nconst wbcInfoArrChild = ref<any>([]);\r\nconst {wbcInfo} = toRefs(props);\r\nconst firstClass = ref('Metamyelocyte');\r\nconst lastClass = ref('Myelocyte');\r\nconst previousFirstClass = ref('Metamyelocyte');\r\nconst previousLastClass = ref('Myelocyte');\r\n\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({...props.hiddenImages});\r\nconst wpsImgClickInfoData = ref<any>({});\r\n\r\nwatch(props.hiddenImages, (newVal) => {\r\n  hiddenImages.value = {...newVal};\r\n  loading.value = false;\r\n});\r\n\r\nwatch(() => props.selectItems, (newSelectItems) => {\r\n  const wbcInfo = isObjectEmpty(newSelectItems.wbcInfoAfter) ? newSelectItems.wbcInfoAfwbcInfo.wbcInfo[0] : newSelectItems.wbcInfoAfter;\r\n  updateFirstLastClass(wbcInfo);\r\n})\r\n\r\nconst debouncedUpdate = debounce(async (newVal) => {\r\n  const timestamp = Date.now();\r\n  loading.value = false;\r\n  wbcInfoArrChild.value = [];\r\n  wbcInfoArrChild.value = removeDuplicatesById(newVal).map((item: any, index: number) => ({\r\n    ...item,\r\n    uniqueKey: `item_${index}_${timestamp}`,\r\n    images: item.images.map((image: any, imgIndex: number) => ({\r\n      ...image,\r\n      uniqueKey: `image_${index}_${imgIndex}_${timestamp}`\r\n    })) || []\r\n  }));\r\n  await classImgChange('first', null);\r\n  await classImgChange('last', null);\r\n\r\n}, 10); //디바운스 적용\r\n\r\nwatch(wbcInfo, debouncedUpdate, {deep: true});\r\n\r\nwatch(\r\n    () => props.wbcReset,\r\n    async (newVal) => {\r\n      if (newVal) {\r\n        if (props.wbcInfoRefresh) return;\r\n        wbcInfoArrChild.value = [];\r\n        await nextTick(); // DOM 업데이트 후 실행\r\n        wbcInfoArrChild.value = props.wbcInfo.map((item, index) => ({\r\n          ...item,\r\n          uniqueKey: `item_${index}_${Date.now()}`,\r\n          images: item.images.map((image, imgIndex) => ({\r\n            ...image,\r\n            uniqueKey: `image_${index}_${imgIndex}_${Date.now()}`\r\n          })) || []\r\n        }));\r\n\r\n        await nextTick(); // 상태 업데이트 후 강제 렌더링\r\n        classImgChange('first', null);\r\n        classImgChange('last', null);\r\n      }\r\n    }\r\n);\r\n\r\nconst handleScroll = () => {\r\n  if (!scrollContainer.value) return;\r\n\r\n  const isAtBottom = scrollContainer.value.scrollTop + scrollContainer.value.clientHeight >= scrollContainer.value.scrollHeight;\r\n  if (isAtBottom && !props.isAllClassesChecked) {\r\n    // update 필요: isAllClassesChecked에 true 값\r\n    // update 필요: isAllClassesChecked에 true 값\r\n    // update 필요: isAllClassesChecked에 true 값\r\n    // update 필요: isAllClassesChecked에 true 값\r\n    // update 필요: isAllClassesChecked에 true 값\r\n    // update 필요: isAllClassesChecked에 true 값\r\n    emits('allClassesChecked')\r\n  }\r\n}\r\n\r\nconst wpsImgClickInfo = (img: any, item: any) => {\r\n  wpsImgClickInfoData.value = {item: item, img: img};\r\n}\r\n\r\nconst updateFirstLastClass = (wbcInfo: any) => {\r\n  if (isObjectEmpty(wbcInfo)) return;\r\n  firstClass.value = wbcInfo.find((item: any) => item.images.length > 0).name;\r\n  lastClass.value = wbcInfo.find((item: any) => item.images.length > 0 && item.name !== firstClass.value).name;\r\n  previousFirstClass.value = firstClass.value;\r\n  previousLastClass.value = lastClass.value;\r\n}\r\n\r\nconst handleImageLoad = (itemIndex: any) => {\r\n  emits('update:cellRef', cellRef);\r\n  classImgChange('first', null);\r\n  classImgChange('last', null);\r\n  classList.value = props.wbcInfo.filter((item: any) => siteCd.value !== '0006' && item?.title !== 'SM');\r\n\r\n  if (itemIndex === props.wbcInfo.length - 1 || itemIndex < props.wbcInfo.length - 1) {\r\n    loading.value = false;\r\n  } else {\r\n    loading.value = true;\r\n  }\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const slotId = props.slotId || '';\r\n  const folderPath = `${props.iaRootPath}/${slotId}/${props.projectTypeReturn}/${id}_${title}`;\r\n  let url = '';\r\n\r\n  // 타임스탬프 추가\r\n\r\n  if (highImg === 'getImageRealTime' || props.projectType === 'pb') {\r\n    url = `${props.apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${props.apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n\r\n\r\n  return url;\r\n}\r\n\r\nconst setRef = (itemId: any) => {\r\n  return (el: any) => {\r\n    if (el) {\r\n      refsArray.value[itemId] = el;\r\n    }\r\n  };\r\n};\r\n\r\nconst classImgChange = async (type: string, event: any) => {\r\n  const updateClassValue = (currentClass: any, previousClass: any, classObj: any, itemIndex: any) => {\r\n    if (firstClass.value === lastClass.value) {\r\n      currentClass.value = previousClass.value;\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast('Class already selected.');\r\n      return;\r\n    } else {\r\n      previousClass.value = event ? event.target.value : currentClass.value;\r\n    }\r\n    classObj.value = props.wbcInfo.find((option: any) => option?.name === currentClass.value);\r\n    itemIndex.value = props.wbcInfo.findIndex((option: any) => option?.name === currentClass.value);\r\n  };\r\n\r\n  if (type === 'first') {\r\n    updateClassValue(firstClass, previousFirstClass, firstClassObj, firstItemIndex);\r\n  } else {\r\n    updateClassValue(lastClass, previousLastClass, lastClassObj, lastItemIndex);\r\n  }\r\n  if (props.totalCount === '0') {\r\n    loading.value = false\r\n  }\r\n};\r\n\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\r\n</script>\r\n","import script from \"./ImageGallery.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ImageGallery.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const checkPbNormalCell = (wbcInfo: any, norMalRange: any) => {\r\n    // const norMalRange = this.$store.getters.getWbcNormalRange;\r\n    let totalCount = 0;\r\n    let neutrophilCount = 0;\r\n    const resultObj: any = {\r\n        'isNormal': 'Y',\r\n        'classInfo': []\r\n    };\r\n\r\n    if (wbcInfo) {\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            if (['NR', 'AR', 'GP', 'PA', 'MC', 'MA'].indexOf(wbcItem.title) === -1) {\r\n                totalCount += Number(wbcItem.count);\r\n            }\r\n\r\n            if (['NE', 'NS', 'NB'].includes(wbcItem.title)) {\r\n                neutrophilCount += Number(wbcItem.count);\r\n            }\r\n        });\r\n\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            norMalRange.forEach((range: any) => {\r\n                // neutrophils\r\n                if (range.classId === '01') {\r\n                    let percent = 0;\r\n\r\n                    if (['01', '71'].includes(wbcItem.id)) {\r\n                        percent = (neutrophilCount / totalCount) * 100;\r\n                        if (percent < range.min || percent > range.max) {\r\n                            resultObj.isNormal = 'N';\r\n                            resultObj.classInfo.push({ classNm: `NE`, val: `[${percent.toFixed(2)}] %` });\r\n                        } else {\r\n                            // console.log(`SET [NE] NORMAL : ${wbcItem.title}`);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (wbcItem.id === range.classId) {\r\n                        if (range.unit === 'Count') {\r\n                            if (Number(wbcItem.count) < range.min || Number(wbcItem.count) > range.max) {\r\n                                resultObj.isNormal = 'N';\r\n                                resultObj.classInfo.push({classNm: `${wbcItem.title}`, val:`[${wbcItem.count}] Count`});\r\n                            }\r\n                        } else {\r\n                            let percent = 0;\r\n                            percent = (Number(wbcItem.count) / totalCount) * 100;\r\n                            if (percent < range.min || percent > range.max) {\r\n                                // console.log(`SET Abnormal : ${wbcItem.title}`);\r\n                                resultObj.isNormal = 'N';\r\n                                resultObj.classInfo.push({classNm: `${wbcItem.title}`, val:`[${percent.toFixed(2)}] %`});\r\n                            } else {\r\n                                // console.log(`SET NORMAL : ${wbcItem.title}`);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    return resultObj;\r\n};\r\n\r\nexport function parseXMLToJSON(xml: any): any {\r\n    let obj: any = {};\r\n\r\n    if (xml.nodeType === 1) { // element\r\n        if (xml.attributes.length > 0) {\r\n            obj[\"@attributes\"] = {};\r\n            for (let j = 0; j < xml.attributes.length; j++) {\r\n                const attribute = xml.attributes.item(j);\r\n                if (attribute) {\r\n                    obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n                }\r\n            }\r\n        }\r\n    } else if (xml.nodeType === 3) { // text\r\n        obj = xml.nodeValue;\r\n    }\r\n\r\n    // 자식 노드들을 반복하면서 JSON으로 변환\r\n    if (xml.hasChildNodes()) {\r\n        for (let i = 0; i < xml.childNodes.length; i++) {\r\n            const item = xml.childNodes.item(i);\r\n            const nodeName = item.nodeName;\r\n\r\n            if (typeof obj[nodeName] === \"undefined\") {\r\n                obj[nodeName] = parseXMLToJSON(item);\r\n            } else {\r\n                if (typeof obj[nodeName].push === \"undefined\") {\r\n                    const old = obj[nodeName];\r\n                    obj[nodeName] = [];\r\n                    obj[nodeName].push(old);\r\n                }\r\n                obj[nodeName].push(parseXMLToJSON(item));\r\n            }\r\n        }\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n","import { HOSPITAL_SITE_CD_BY_NAME } from \"@/common/defines/constants/siteCd\";\r\nimport {readFileEUCKR, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport { fileSearchApi, fileSysExistsFile } from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport { getCbcPathData } from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\n\r\ninterface InitCBCDataType {\r\n    barcodeNo: string;\r\n    siteCd: string;\r\n    userId: string;\r\n    deviceSerialNm: string;\r\n    imageDriveRootPath: string;\r\n    slotId: string;\r\n}\r\n\r\ninterface FileDataParamType {\r\n    barcodeNo: string;\r\n    cbcFilePathSetArr: string;\r\n    slotId: string;\r\n    imageDriveRootPath: string;\r\n}\r\n\r\nexport const initCBCData = async ({ barcodeNo, siteCd, userId, deviceSerialNm, imageDriveRootPath, slotId }: InitCBCDataType) => {\r\n    const cbcFilePathSetArr = await getCbcPathData();\r\n    if (!cbcFilePathSetArr || cbcFilePathSetArr === '') return;\r\n\r\n    switch (siteCd) {\r\n        case HOSPITAL_SITE_CD_BY_NAME['SD의학연구소']:\r\n            return await fileData({ barcodeNo, cbcFilePathSetArr, imageDriveRootPath, slotId });\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\r\nconst fileData = async ({ barcodeNo, imageDriveRootPath, cbcFilePathSetArr, slotId }: FileDataParamType) => {\r\n\r\n    const fileSysExistsFileParms = {\r\n        directoryPath: `${cbcFilePathSetArr}`,\r\n        keyword: barcodeNo\r\n    };\r\n    let fileListName: any = '';\r\n    let filePath = '';\r\n    const isExistsFile = await fileSysExistsFile(fileSysExistsFileParms);\r\n    if (isExistsFile.data === \"NoFile\") {\r\n        const fileSearchApiPram = `directoryPath=${imageDriveRootPath}\\\\${slotId}&searchString=${barcodeNo}`\r\n        try {\r\n            const response: any = await fileSearchApi(fileSearchApiPram);\r\n            if (response.data && Array.isArray(response.data) && response.data.length > 0) {\r\n                fileListName = response.data[0].split('.')[0];\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching file list:', error);\r\n        }\r\n        filePath = `${imageDriveRootPath}\\\\${slotId}`;\r\n    } else {\r\n        fileListName = barcodeNo;\r\n        filePath = cbcFilePathSetArr\r\n    }\r\n    const readFileTxtRes: any = await readFileEUCKR(`path=${filePath}&filename=${fileListName}`);\r\n\r\n    if (readFileTxtRes.data.success) {\r\n        const msg: any = await readH7File(readFileTxtRes.data.data);\r\n        let cbcPatientNm = '';\r\n        for (const cbcSegment of msg?.data?.segments) {\r\n            if (cbcSegment.name.trim() === 'PID') {\r\n                cbcPatientNm = cbcSegment.fields[4].value[0][0].value[0] || '';\r\n                break;\r\n            }\r\n        }\r\n\r\n        return { cbcPatientNm };\r\n    } else {\r\n        console.error(readFileTxtRes.data.message);\r\n    }\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, vModelText as _vModelText, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { class: \"moveImgIsBool\" }\nconst _hoisted_2 = { class: \"wbcContent\" }\nconst _hoisted_3 = { class: \"imgMenuSetDiv\" }\nconst _hoisted_4 = { class: \"sizeContainer\" }\nconst _hoisted_5 = { class: \"customImgSet size\" }\nconst _hoisted_6 = [\"value\"]\nconst _hoisted_7 = {\n  class: \"imgSetWrap\",\n  ref: \"imgSetWrap\"\n}\nconst _hoisted_8 = { class: \"imgSet\" }\nconst _hoisted_9 = { class: \"customImgSet\" }\nconst _hoisted_10 = { class: \"customImgSet rgb\" }\nconst _hoisted_11 = { class: \"flex-align-center\" }\nconst _hoisted_12 = { class: \"flex-align-center\" }\nconst _hoisted_13 = { class: \"flex-align-center\" }\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = { class: \"wbcModalImageContent\" }\nconst _hoisted_16 = [\"src\"]\nconst _hoisted_17 = { class: \"buttons\" }\nconst _hoisted_18 = { class: \"rangeBox\" }\n\nimport {\r\n  computed,\r\n  getCurrentInstance,\r\n  nextTick,\r\n  onBeforeMount,\r\n  onMounted,\r\n  onUnmounted,\r\n  ref,\r\n  watch\r\n} from \"vue\";\r\nimport {moveClassImagePost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\nimport {updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {\r\n  getBfHotKeysApi, getNormalRangeApi,\r\n  getOrderClassApi,\r\n  getWbcCustomClassApi,\r\n  getWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {deleteRunningApi, fileSysPost, getFolders} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport ClassInfo from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport ImageGallery from '@/views/datebase/commponent/detail/classInfo/ImageGallery.vue';\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {disableScroll, enableScroll} from \"@/common/lib/utils/scroll\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport DetailHeader from \"@/views/datebase/commponent/detail/detailHeader.vue\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {initCBCData} from \"@/common/helpers/lisCbc/initCBC\";\r\nimport {gqlGenericUpdate, useUpdateRunningInfoMutation} from \"@/gql/mutation/slideData\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'listDetail',\n  setup(__props) {\n\r\nconst selectedTitle = ref('');\r\nconst wbcInfo = ref<any>(null);\r\nconst updateWbcInfo = ref<any>(null)\r\n\r\nconst selectItems = ref<any>(null);\r\nconst store = useStore();\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst moveImgIsBool = computed(() => store.state.commonModule.moveImgIsBool);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst draggedItemIndex = ref<any>(null);\r\nconst draggedImageIndex = ref<any>(null);\r\nconst isShiftKeyPressed = ref(false);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst firstClickedImageIndex = ref(null);\r\nconst wbcInfoRefresh = ref(false);\r\n\r\nconst draggedCircleIndex = ref<any>(null);\r\nconst draggedCircleIndexArr = ref<any>([]);\r\nconst draggedCircleImgIndex = ref<any>(null);\r\nconst selectedClickImages = ref<any>([]);\r\nconst shiftClickImages = ref<any>([]);\r\nconst rollbackHistory: any = [];\r\nconst imageSize = ref(150);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst selectSizeTitle = ref('ME')\r\nconst allCheck = ref('');\r\nconst cellRef = ref(null);\r\nconst cellMarkerIcon = ref(false);\r\nconst modalOpen = ref(false);\r\nconst selectedImageSrc = ref('');\r\nconst modalImageWidth = ref('200px');\r\nconst modalImageHeight = ref('200px');\r\nconst imgSet = ref(false);\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst wbcCustomItems = ref<any>([]);\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst projectType = ref<any>('');\r\nconst opacity = ref('0.9');\r\nconst zoomValue = ref(200);\r\n\r\nconst selectItemImageArr = ref<any>([]);\r\nconst moveRightClickArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst showSize = ref(false);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst targetItem = ref<any>(null);\r\nconst isNext = ref(false);\r\nconst classCompareShow = ref(false);\r\nconst wpsShow = ref(false);\r\nconst isLoading = ref(true);\r\nconst $imageGalleryRef = ref<any>(null);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst wbcReset = ref(false);\r\nconst isLoadedSlideData = ref(true);\r\nconst isWpsShow = ref(false);\r\nconst blockClicks = ref(false);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst changeSlideByLisUpload = ref(false);\r\nconst normalItems = ref<any>([]);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\nconst ipAddress = ref('');\r\nconst patientNm = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst isAllClassesChecked = ref(false);\r\n\r\nonBeforeMount(async () => {\r\n  isLoading.value = false;\r\n  isLoadedSlideData.value = false;\r\n  projectType.value = window.PROJECT_TYPE;\r\n  isLoadedSlideData.value = false;\r\n  wbcInfoRefresh.value = false;\r\n})\r\n\r\nonMounted(async () => {\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n  document.addEventListener('click', handleClickOutside);\r\n\r\n});\r\n\r\nonUnmounted(async () => {\r\n  document.addEventListener('click', handleClickOutside);\r\n})\r\n\r\nwatch(\r\n    () => slideData.value,\r\n    async (newVal, oldVal) => {\r\n      if (newVal.id !== oldVal?.id) {\r\n        await nextTick();\r\n\r\n        if (projectType.value !== 'bm') {\r\n          await checkWps(newVal);\r\n        } else {\r\n          isWpsShow.value = false;\r\n        }\r\n        try {\r\n          await getNormalRange(); // 함수가 선언된 이후 호출\r\n          await getDetailRunningInfo(newVal);\r\n          isLoadedSlideData.value = false;\r\n          wbcInfo.value = [];\r\n          isLoadedSlideData.value = true;\r\n\r\n          await getWbcCustomClasses(false, null);\r\n          wbcInfoRefresh.value = true;\r\n\r\n          await imgSetLocalStorage();\r\n          cellMarkerIcon.value = false;\r\n          await drawCellMarker(true);\r\n\r\n\r\n        } catch (error) {\r\n          console.error('비동기 작업 중 에러 발생:', error);\r\n        }\r\n      }\r\n    },\r\n    {immediate: true, deep: true}\r\n);\r\n\r\n\r\nwatch(imgBrightness, (newVal) => {\r\n  localStorage.setItem('imgBrightness', String(newVal));\r\n});\r\n\r\nwatch(imageSize, (newVal) => {\r\n  localStorage.setItem('imageSize', String(newVal));\r\n})\r\n\r\nwatch(imageRgb, (newVal) => {\r\n  const red = newVal[0];\r\n  const green = newVal[1];\r\n  const blue = newVal[2];\r\n  localStorage.setItem('imageRgb', JSON.stringify([red, green, blue]));\r\n}, {deep: true});\r\n\r\nwatch(() => moveImgIsBool.value, (currentMoveImgIsBool) => {\r\n  if (currentMoveImgIsBool) {\r\n    disableScroll();\r\n  } else {\r\n    enableScroll();\r\n  }\r\n})\r\n\r\nconst borderDel = () => {\r\n  blockClicks.value = true;\r\n}\r\n\r\nconst borderOn = () => {\r\n  blockClicks.value = false;\r\n}\r\n\r\nconst checkWps = async (newVal: any) => {\r\n  const filePath = `${iaRootPath.value}/${newVal?.slotId}/04_WPS`;\r\n\r\n  const foldersPath = `folderPath=${filePath}`;\r\n  const wpsFolderCheck = await getFolders(foldersPath);\r\n  if (wpsFolderCheck?.code !== 400) {\r\n    isWpsShow.value = true;\r\n  } else {\r\n    isWpsShow.value = false;\r\n    wpsShow.value = false;\r\n  }\r\n}\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\nconst handleZoom = () => {\r\n  const newSize = zoomValue.value;\r\n  modalImageWidth.value = `${newSize}px`;\r\n  modalImageHeight.value = `${newSize}px`;\r\n};\r\n\r\nconst getDetailRunningInfo = async (newValue: any) => {\r\n  try {\r\n    isAllClassesChecked.value = newValue.value?.isAllClassesChecked;\r\n    iaRootPath.value = newValue?.img_drive_root_path !== '' && newValue?.img_drive_root_path !== null && newValue?.img_drive_root_path ? newValue?.img_drive_root_path : store.state.commonModule.iaRootPath;\r\n    patientNm.value = newValue?.patientNm;\r\n    cbcPatientNm.value = newValue?.cbcPatientNm;\r\n    selectItems.value = newValue;\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nconst handleUpdateCellRef = (refValue: any) => {\r\n  cellRef.value = refValue.value;\r\n};\r\n\r\nconst classCompare = () => {\r\n  classCompareShow.value = !classCompareShow.value;\r\n}\r\n\r\nconst wps = () => {\r\n  wpsShow.value = !wpsShow.value;\r\n  if (!wpsShow.value) {\r\n    blockClicks.value = false;\r\n  }\r\n  if (classCompareShow.value) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast('When classCompare is enabled, WPS cannot be checked.');\r\n    wpsShow.value = false;\r\n  }\r\n}\r\n\r\nconst imgPixelConvertToPercent = (imageSize: number) => {\r\n  return Math.floor(((imageSize - 50) / 240) * 170 + 30) + '%';\r\n}\r\nconst percentConvertToPixel = (percent: number): number => {\r\n  return Math.floor((percent - 30) * 240 / 170 + 50);\r\n}\r\n\r\n\r\nconst imgSetLocalStorage = async () => {\r\n  const storedBrightness = localStorage.getItem('imgBrightness');\r\n  const storedRgb = localStorage.getItem('imageRgb');\r\n  const imageSizeCopy = localStorage.getItem('imageSize');\r\n  if (storedRgb) {\r\n    imageRgb.value = JSON.parse(storedRgb);\r\n  }\r\n  if (storedBrightness) {\r\n    imgBrightness.value = Number(storedBrightness);\r\n  }\r\n\r\n  if (imageSizeCopy) {\r\n    imageSize.value = Number(imageSizeCopy);\r\n  }\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n      image.width = Number(imageSize.value);\r\n      image.height = Number(imageSize.value);\r\n    });\r\n  });\r\n}\r\n\r\nconst nextPage = () => {\r\n  isNext.value = true;\r\n}\r\n\r\nconst isNextFalse = () => {\r\n  isNext.value = false;\r\n}\r\n\r\nconst handleRightClick = (event: MouseEvent, image: any, item: any) => {\r\n  event.preventDefault();\r\n  openContextMenu(event, item);\r\n};\r\n\r\nfunction hideImage(id: string, fileName: string, title?: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\r\nconst showSizeControl = () => {\r\n  showSize.value = !showSize.value;\r\n};\r\n\r\nconst handleClickOutside = (event: any) => {\r\n  // 클릭 이벤트의 대상이 imgSet이 아닌지 확인\r\n  if (!event.target.closest('.imgSetWrap')) {\r\n    imgSet.value = false;\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  if (!event.target.closest('.sizeContainer, .sizeButton')) {\r\n    showSize.value = false;\r\n  }\r\n};\r\ndocument.addEventListener('click', (event) => {\r\n  if (contextMenuVisible.value) {\r\n    contextMenuVisible.value = false;\r\n  }\r\n});\r\nconst openContextMenu = (event: MouseEvent, item: any) => {\r\n  const menuHeight = 506;\r\n\r\n  // 화면의 높이와 마우스 클릭 위치를 기준으로 기본 위치 설정\r\n  const screenHeight = window.innerHeight;\r\n  const mouseX = event.clientX;\r\n  const mouseY = event.clientY;\r\n\r\n  contextMenuVisible.value = true;\r\n\r\n  let menuX = mouseX;\r\n  let menuY = mouseY;\r\n\r\n  // 메뉴가 화면을 벗어나지 않도록 조정\r\n  if (mouseY + menuHeight > screenHeight) {\r\n    // 메뉴를 마우스 커서 위쪽에 띄움\r\n    menuY = mouseY - menuHeight;\r\n  } else {\r\n    // 메뉴를 마우스 커서 아래쪽에 띄움\r\n    menuY = mouseY;\r\n  }\r\n\r\n  // X 위치 조정 (화면을 벗어나지 않도록)\r\n  const menuWidth = 200;\r\n  if (menuX + menuWidth > window.innerWidth) {\r\n    menuX = window.innerWidth - menuWidth;\r\n  }\r\n\r\n  contextMenuX.value = menuX;\r\n  contextMenuY.value = menuY;\r\n  targetItem.value = item;\r\n};\r\n\r\n\r\nconst moveSelectedImages = async (item: any, itemIdx: any) => {\r\n  // 사진 선택 하지 않고 우클릭 후 이미지 변경 하였을 경우\r\n\r\n  if (!selectedClickImages.value || Object.entries(selectedClickImages.value).length === 0) {\r\n    showAlert.value = true;\r\n    alertType.value = 'error';\r\n    alertMessage.value = `Please select an image`;\r\n    return;\r\n  }\r\n  const matchingItemFind = wbcInfo.value.find((infoItem: any) => infoItem.id === item.id);\r\n\r\n  if (targetItem.value.title === matchingItemFind.title) {\r\n    showAlert.value = true;\r\n    alertType.value = 'error';\r\n    alertMessage.value = `Transfer to different classes is the only option available.`;\r\n    return;\r\n  }\r\n\r\n  await addToRollbackHistory();\r\n\r\n  const draggedItem = wbcInfo.value[itemIdx];\r\n  if (targetItem.value) {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n    contextMenuVisible.value = false;\r\n  }\r\n  contextMenuVisible.value = false;\r\n};\r\n\r\nconst excludeClassName = (title: string): string => {\r\n  if (title === 'Smudge' && siteCd.value !== HOSPITAL_SITE_CD_BY_NAME['고대안암병원']) return \"\";\r\n  return title;\r\n}\r\n\r\nconst sortWbcInfo = async (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n\r\n};\r\n\r\n\r\nconst getWbcCustomClasses = async (upDown: any, upDownData: any) => {\r\n  const ip = await getDeviceIpApi();\r\n  ipAddress.value = ip.data;\r\n  wbcInfo.value = [];\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n\r\n    const data: any = result.data;\r\n    const newData = data.filter((item: any) => item.abbreviation);\r\n    const customClassData: any = sessionStorage.getItem('customClass');\r\n    const getCustomSessionData = JSON.parse(customClassData);\r\n    if (getCustomSessionData) { // 커스텀 클래스 삭제하는 if 문\r\n      getCustomSessionData.forEach((item: any) => {\r\n        const findDelData = data.find((dataItems: any) => dataItems.customNum === item.customNum && dataItems.abbreviation !== item.abbreviation);\r\n        if (findDelData) {\r\n          if (item?.abbreviation === '') {\r\n            return;\r\n          }\r\n          const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${item.customNum}_${item?.abbreviation}`;\r\n          deleteRunningApi({path: filePath})\r\n        }\r\n      });\r\n    }\r\n    sessionStorage.setItem('customClass', JSON.stringify(data));\r\n    wbcCustomItems.value = data;\r\n    let wbcinfo = selectItems.value?.wbcInfoAfter.length !== 0 ? selectItems.value?.wbcInfoAfter : selectItems.value?.wbcInfo.wbcInfo[0];\r\n    if (newData.length !== 0) {\r\n      for (const item of newData) { // 커스텀클래스 폴더 생성\r\n        const {fullNm, abbreviation, customNum} = item;\r\n        const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${customNum}_${abbreviation}`;\r\n        await fileSysPost({path: filePath});\r\n\r\n        const wbcPush = {\r\n          id: customNum,\r\n          name: fullNm,\r\n          count: '0',\r\n          images: [],\r\n          title: abbreviation,\r\n        };\r\n\r\n        const foundObject = wbcinfo.find((wbcItem: any) => wbcItem.id == wbcPush.id && wbcItem.name === wbcPush.name);\r\n        if (!foundObject) {\r\n          wbcinfo.push(wbcPush);\r\n          wbcInfo.value = wbcinfo;\r\n          await updateOriginalDb('notWbcAfterSave');\r\n        }\r\n      }\r\n    } else {\r\n      const itemsToDelete: any = [];\r\n      const sortArr = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      wbcinfo.forEach((item: any) => {\r\n        const findDelData = sortArr.find((dataItems: any) => dataItems.id === item.id);\r\n        if (!findDelData) {\r\n          const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${item}_${item?.title}`;\r\n          deleteRunningApi({path: filePath});\r\n          itemsToDelete.push(item);\r\n        }\r\n      });\r\n      // 수집한 아이템을 wbcinfo 배열에서 삭제\r\n      itemsToDelete.forEach((item: any) => {\r\n        const index = wbcinfo.indexOf(item);\r\n        if (index > -1) {\r\n          wbcinfo.splice(index, 1);\r\n        }\r\n      });\r\n      selectItems.value.wbcInfoAfter = wbcinfo\r\n      wbcInfo.value = selectItems.value.wbcInfoAfter;\r\n      await updateOriginalDb();\r\n\r\n    }\r\n    await getWbcHotKeyClasses();\r\n    // await getBfHotKeyClasses();\r\n    await getOrderClass();\r\n    await initData(newData, upDown, upDownData);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result && result?.data) {\r\n      wbcHotKeysItems.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\r\nfunction isBorderChanged(image: any) {\r\n  const prefix = image.fileName.split('_')[0];\r\n  const isNsNbIntegration = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n    return el.title === 'NE'\r\n  })\r\n\r\n  const replacements: any = {\r\n    'NES': isNsNbIntegration ? 'NE' : 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const modifiedPrefix = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n\r\n  return image.title !== modifiedPrefix;\r\n}\r\n\r\nfunction replaceFileNamePrefix(fileName: string) {\r\n  const isNsNbIntegration = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n    return el.title === 'NE'\r\n  })\r\n\r\n  const replacements: any = {\r\n    'NES': isNsNbIntegration ? 'NE' : 'NS',\r\n    'NEB': isNsNbIntegration ? 'NE' : 'NB'\r\n  };\r\n\r\n  const prefix = fileName.split('_')[0];\r\n\r\n  // 대체 규칙에 따라 prefix를 변경\r\n  const modifiedPrefix: any = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n  // 변경된 prefix 반환\r\n  return modifiedPrefix;\r\n}\r\n\r\n\r\nconst openModal = (image: any, item: any) => {\r\n  modalOpen.value = true;\r\n  selectedImageSrc.value = getImageUrl(image.fileName, item.id, item.title, 'getImageRealTime');\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n};\r\n\r\nconst outerClickCloseModal = (e: any) => {\r\n  if (e.target.classList.contains('wbc-modal-content')) {\r\n    modalOpen.value = false;\r\n  }\r\n}\r\n\r\nconst handleWheel = (event: WheelEvent) => {\r\n  if (event.deltaY < 0) {\r\n    zoomIn();\r\n  } else {\r\n    zoomOut();\r\n  }\r\n};\r\n\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 600);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 600);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n  zoomValue.value = Number(newWidth);\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 200);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 200);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n  zoomValue.value = Number(newWidth);\r\n\r\n};\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => classInfoSort.value, async (newItem) => { // 오더클래스부분 순서 변경시 감지하여 재정렬\r\n  wbcInfoRefresh.value = true;\r\n  await getOrderClass();\r\n  const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  isLoadedSlideData.value = false;\r\n  cellMarkerIcon.value = false;\r\n  await getDetailRunningInfo(data);\r\n  isLoadedSlideData.value = true;\r\n  await drawCellMarker(true);\r\n  classCompareShow.value = false;\r\n  selectItems.value = data;\r\n  iaRootPath.value = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : store.state.commonModule.iaRootPath;\r\n\r\n  await getWbcCustomClasses(true, data);\r\n  await imgSetLocalStorage();\r\n  await nextTick();\r\n  if (projectType.value !== 'bm') {\r\n    await checkWps(data);\r\n  } else {\r\n    isWpsShow.value = false;\r\n  }\r\n}\r\n\r\nconst drawCellMarker = async (imgResize?: boolean) => {\r\n  if (!imgResize) {\r\n    cellMarkerIcon.value = !cellMarkerIcon.value\r\n  }\r\n\r\n  if (cellMarkerIcon.value) {\r\n    let url = '';\r\n    if (projectType.value === 'pb') {\r\n      url = `${iaRootPath.value}/${selectItems.value?.slotId}/${\r\n          selectItems.value.testType === '01' || selectItems.value?.testType === '04'\r\n              ? '01_WBC_Classification'\r\n              : '05_BF_Classification'\r\n      }/${selectItems.value?.slotId}.json`;\r\n    } else if (projectType.value === 'bm') {\r\n      url = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${selectItems.value?.slotId}.json`\r\n    }\r\n    const response = await readJsonFile({fullPath: url});\r\n\r\n    if (response && response.success) {\r\n      const jsonImageDat = response.data;\r\n      wbcInfo.value.forEach((item: any) => {\r\n        if (item.images.length === 0) return;\r\n        item.images.forEach((image: any) => {\r\n          const imageElement: any = cellRef.value;\r\n          const foundItem = jsonImageDat.find((item: any) => item?.FILE_NM === image?.fileName);\r\n          if (foundItem) {\r\n            const widthRatio = (imageElement[0]?.width || 150) / Number(foundItem.ORG_WIDTH) * 100;\r\n            const heightRatio = (imageElement[0]?.height || 150) / Number(foundItem.ORG_HEIGHT) * 100;\r\n\r\n            const rectWidth = (Number(foundItem.POSX2) - Number(foundItem.POSX1)) * (widthRatio / 100);\r\n            const rectHeight = (Number(foundItem.POSY2) - Number(foundItem.POSY1)) * (heightRatio / 100);\r\n\r\n            const left = imageElement[0]?.offsetLeft + (Number(foundItem.POSX1) * (widthRatio / 100)) + (rectWidth / 2) + 'px';\r\n            const top = imageElement[0]?.offsetTop + (Number(foundItem.POSY1) * (heightRatio / 100)) + (rectHeight / 2) + 'px';\r\n\r\n            image.coordinates = {\r\n              position: 'absolute',\r\n              left,\r\n              top,\r\n              width: '5px',\r\n              height: '5px',\r\n              background: '#10ff00'\r\n            };\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    wbcInfo.value.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        image.coordinates = {\r\n          display: 'none'\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst allCheckChange = (event: any, title: string) => {\r\n  allCheck.value = event?.target?.checked ? title : '';\r\n  if (event?.target?.checked) {\r\n    // 선택된 항목을 저장\r\n    selectedTitle.value = title;\r\n  } else {\r\n    // 선택된 항목을 해제\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  allCheckInsert();\r\n}\r\n\r\nconst allCheckInsert = () => {\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  moveRightClickArr.value = [];\r\n  for (const idx in wbcInfo.value) {\r\n    if (allCheck.value === wbcInfo.value[idx].title) {\r\n      for (const idxKey in wbcInfo.value[idx].images) {\r\n        const item = {\r\n          id: wbcInfo.value[idx].id,\r\n          title: wbcInfo.value[idx].title,\r\n          ...wbcInfo.value[idx].images[idxKey],\r\n        };\r\n        selectedClickImages.value.push(item);\r\n        selectItemImageArr.value.push(item);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst scrollToElement = (itemId: number) => {\r\n  if ($imageGalleryRef.value) {\r\n    $imageGalleryRef.value.scrollToElement(itemId);\r\n  }\r\n};\r\n\r\nfunction rgbReset() {\r\n  imageRgb.value = [0, 0, 0];\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction imgSizeReset() {\r\n  drawCellMarker(true);\r\n  imageSize.value = 150;\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 이미지의 width와 height를 조절\r\n      image.width = 150;\r\n      image.height = 150;\r\n    });\r\n  });\r\n}\r\n\r\nfunction brightnessReset() {\r\n  imgBrightness.value = 100;\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction changeImageRgb(reset: string) {\r\n  const selectedSizeTitle = selectSizeTitle.value;\r\n  if (!selectedSizeTitle) {\r\n    rgbReset();\r\n    return;\r\n  }\r\n  if (reset !== 'reset') {\r\n    opacity.value = '0.9';\r\n  }\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  // 선택된 크기 타이틀과 일치하는 이미지들에 대해 크기 조절\r\n  wbcInfo.value.forEach((item: any) => {\r\n    // if (item.title === selectedSizeTitle) {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(${opacity.value}) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n\r\n    });\r\n    // }\r\n  });\r\n\r\n}\r\n\r\nfunction changeImgBrightness(event: any) {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = event?.target?.value;\r\n\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(1) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeImageSize(event: any) {\r\n  const newSize = Number(event?.target?.value);\r\n\r\n  for (const item of wbcInfo.value) {\r\n    for (const image of item.images) {\r\n      image.width = newSize;\r\n      image.height = newSize;\r\n    }\r\n  }\r\n\r\n  requestAnimationFrame(() => drawCellMarker(true));\r\n}\r\n\r\nconst updateImageSize = (event: Event) => {\r\n  const target = event.target as HTMLInputElement;\r\n  const newPercentValue = parseFloat(target.value);\r\n  if (!isNaN(newPercentValue)) {\r\n    imageSize.value = percentConvertToPixel(newPercentValue + 1);\r\n  }\r\n  requestAnimationFrame(() => drawCellMarker(true));\r\n}\r\nconst displayValue = computed(() => {\r\n  return imgPixelConvertToPercent(imageSize.value).replace('%', '');\r\n});\r\n\r\nfunction onDragOverCircle() {\r\n  // 드래그 동작을 위한 빈 함수, 이벤트 리스너가 있어야 드롭이 작동함 지우지 마세요.\r\n}\r\n\r\nasync function addToRollbackHistory() {\r\n  rollbackHistory.push(JSON.parse(JSON.stringify(wbcInfo.value)));\r\n}\r\n\r\n// 상단 타이틀 이동 시 실행되는 함수\r\nasync function onDropCircle(item: any) {\r\n  const draggedItem = wbcInfo.value[draggedCircleIndex.value];\r\n  // 선택한 이미지(들)가 같은 Class로 욺직이려고 할 때\r\n  if (item.id === draggedItem.id) return;\r\n\r\n  await addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    // 이미지를 한 개만 드래그한 경우\r\n    const draggedImage = draggedItem.images[draggedCircleImgIndex.value];\r\n    item.images.push(draggedImage);\r\n    // 드롭된 위치에 이미지 추가\r\n    const updatedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n\r\n    const matchingItemIndex = updatedWbcInfo.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    if (matchingItemIndex !== -1) {\r\n      updatedWbcInfo[matchingItemIndex].images.push(draggedImage);\r\n    } else {\r\n      console.error('일치하는 id를 가진 요소 없음');\r\n    }\r\n    // 이미지를 한 개만 드래그한 경우에만 이동 API 호출\r\n    await moveImage(matchingItemIndex, [{fileName: draggedImage.fileName}], wbcInfo.value[draggedCircleIndex.value], updatedWbcInfo[matchingItemIndex], false);\r\n  } else {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    // 여러 이미지를 드래그한 경우에도 이동 API 호출\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.wbcImgWrapLi') && !target.closest('.context-menu') && target.className !== 'openseadragon-canvas') {\r\n    // 모든 selected-image 클래스를 리셋\r\n    selectedClickImages.value = [];\r\n    shiftClickImages.value = [];\r\n    selectItemImageArr.value = [];\r\n  }\r\n}\r\n\r\nasync function handleKeyDown(event: KeyboardEvent) {\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n\r\n  if (event.key === 'Escape' && modalOpen) {\r\n    modalOpen.value = false;\r\n  }\r\n\r\n  // 이미지 이동 단축키 확인\r\n  if (projectType.value === 'pb') {\r\n    if (event.key && (selectItems.value?.testType === '01' || selectItems.value?.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem((selectItems.value?.testType === '01' || selectItems.value?.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  } else if (projectType.value === 'bm') {\r\n    if (event.key && wbcHotKeysItems.value.some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem(wbcHotKeysItems.value.find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nasync function moveSelectedImagesToTargetItem(targetItem: any) {\r\n  const targetIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (targetItem.title || targetItem.abbreviation));\r\n  const selectedImages = selectedClickImages.value;\r\n  await addToRollbackHistory();\r\n\r\n  const selectedImagesToMove = [];\r\n  for (const selectedImage of selectedImages) {\r\n    const sourceItemIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (selectedImage.title || selectedImage.abbreviation));\r\n    const sourceItem = wbcInfo.value[sourceItemIndex];\r\n    const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n    if (imageIndex !== -1) {\r\n      selectedImagesToMove.push({\r\n        fileName: selectedImage.fileName,\r\n        id: selectedImage.id,\r\n        title: selectedImage.title\r\n      });\r\n    }\r\n  }\r\n\r\n  if (selectedImagesToMove.length > 0) {\r\n    await moveImage(targetIndex, selectedImagesToMove, selectedImages, targetItem, true, 'keyMove');\r\n  }\r\n}\r\n\r\n\r\nfunction handleKeyUp(event: KeyboardEvent) {\r\n  // Shift 키가 떼어졌는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n}\r\n\r\nasync function initData(newData: any, upDown: any, upDownData: any) {\r\n  wbcInfo.value = [];\r\n\r\n  let selectItemsVal: any = [];\r\n  if (!upDown) {\r\n    wbcInfo.value = selectItems.value.wbcInfoAfter.length !== 0 ? selectItems.value.wbcInfoAfter : selectItems.value.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = selectItems.value;\r\n  } else {\r\n    wbcInfo.value = upDownData.wbcInfoAfter.length !== 0 ? upDownData.wbcInfoAfter : upDownData.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = upDownData;\r\n  }\r\n  if (selectItemsVal.wbcInfoAfter && selectItemsVal.wbcInfoAfter.length !== 0) {\r\n    wbcInfo.value = selectItemsVal.wbcInfoAfter;\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      const title = item.title;\r\n      const correspondingItem = selectItemsVal.wbcInfoAfter.find((afterItem: any) => afterItem.title === title);\r\n      if (correspondingItem) {\r\n        correspondingItem.images.forEach((item: any) => {\r\n          item.title = title;\r\n        })\r\n      }\r\n    });\r\n  } else {\r\n    wbcInfo.value = selectItemsVal.wbcInfo.wbcInfo[0];\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      if (item.images && item.images.length > 0) {\r\n        item.images.forEach((itemImg: any) => {\r\n          itemImg.title = item.title;\r\n        })\r\n      }\r\n    });\r\n  }\r\n  if (newData !== '') {\r\n    selectItemsVal.wbcInfo.wbcInfo[0] = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => {\r\n      return !newData.find((dataItem: any) => dataItem.customNum === item.id && dataItem.abbreviation === \"\");\r\n    });\r\n  }\r\n\r\n  // customClass wbcInfo After 상태에서 추가하는 코드\r\n  const wbcInfoIdArr = wbcInfo.value.map((item: any) => item.id)\r\n  const customClassArr = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => !wbcInfoIdArr.includes(item.id))\r\n  wbcInfo.value = [...wbcInfo.value, ...customClassArr];\r\n\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n\r\n  // UIMD web 팀에서만 사용하는 코드\r\n  await handleMoveImages();\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nfunction onDragOver() {\r\n  //이부분이 없으면 드래그 동작안함 지우지마세요\r\n}\r\n\r\nfunction onDragStart(itemIndex: any, imageIndex: any) {\r\n  // 드래그 시작 시 인덱스 저장\r\n  draggedItemIndex.value = itemIndex;\r\n  draggedImageIndex.value = imageIndex;\r\n  draggedCircleImgIndex.value = imageIndex;\r\n  draggedCircleIndex.value = itemIndex;\r\n  draggedCircleIndexArr.value.push(itemIndex);\r\n}\r\n\r\nfunction selectImage(itemIndex: any, imageIndex: any, classInfoitem: any) {\r\n  if (blockClicks.value) {\r\n    return;\r\n  }\r\n  // 쉬프트 키를 누른 경우\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstClickedImageIndex.value !== null) {\r\n      // 현재 선택한 이미지\r\n      shiftClickImages.value.push(imageIndex);\r\n      // 시작과 끝 인덱스 결정\r\n      const start = Math.min(firstClickedImageIndex.value, imageIndex);\r\n      const end = Math.max(firstClickedImageIndex.value, imageIndex);\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      // 범위 내의 이미지 선택\r\n      for (let i = start; i <= end; i++) {\r\n        selectedClickImages.value.push({\r\n          id: wbcInfo.value[itemIndex].id,\r\n          title: wbcInfo.value[itemIndex].title,\r\n          ...wbcInfo.value[itemIndex].images[i],\r\n        });\r\n        selectItemImageArr.value.push(classInfoitem);\r\n      }\r\n\r\n      /** TODO 모두 선택할 경우 check 표시 활성화 - Shift 클릭 및 하나의 아이템도 클릭했을 때 check 표시 뜨게 구현해야 함 */\r\n      if (selectItemImageArr.value.length === end - start + 1) {\r\n        selectedTitle.value = wbcInfo.value[0].title;\r\n      }\r\n    }\r\n  } else { // 쉬프트 키를 누르지 않은 경우\r\n    // 처음 클릭한 이미지의 인덱스를 저장\r\n    firstClickedImageIndex.value = imageIndex;\r\n\r\n    const selectedImage = wbcInfo.value[itemIndex].images[imageIndex];\r\n    if (!isCtrlKeyPressed.value) {\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemImageArr.value.push(classInfoitem);\r\n      return;\r\n    }\r\n\r\n    // 선택된 이미지가 배열에 있는지 확인\r\n    const imageIndexInSelected = selectedClickImages.value.findIndex((img: any) => img.fileName === selectedImage.fileName);\r\n\r\n    if (imageIndexInSelected === -1) {\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemImageArr.value.push(classInfoitem);\r\n    } else {\r\n      // 이미 선택된 이미지를 다시 클릭하면 선택 해제\r\n      selectedClickImages.value.splice(imageIndexInSelected, 1);\r\n      selectItemImageArr.value.splice(imageIndexInSelected, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction isSelected(image: any) {\r\n  const imageFileName = image.fileName;\r\n  return selectedClickImages.value.some((selectedImage: any) => selectedImage.fileName === imageFileName);\r\n}\r\n\r\nconst isLowMagnWhether = async (image: any) => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path\r\n      ? selectItems.value?.img_drive_root_path\r\n      : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value.slotId}/04_WPS/WPS.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const extracted = image.fileName.split('_').slice(2).join('_');\r\n\r\n  // response_new.data가 배열인지 확인\r\n  if (Array.isArray(response_new.data)) {\r\n    return response_new.data.some((el: any) => el.FILE_NM === extracted);\r\n  } else {\r\n    console.error('response_new.data is not an array:', response_new.data);\r\n    return false; // 또는 적절한 기본값 반환\r\n  }\r\n}\r\n\r\n\r\nasync function onDrop(targetItemIndex: any) {\r\n  await addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    return await originalOnDrop(targetItemIndex);\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n\r\n  const selectedImagesToMove = [];\r\n  const draggedItems = [];\r\n  const targetItems = [];\r\n  let type = false;\r\n  let keyMove = '';\r\n\r\n  for (const selectedImage of selectedClickImages.value) {\r\n    const fileName = selectedImage.fileName;\r\n\r\n    const draggedItemIndex = wbcInfo.value.findIndex((item: any) =>\r\n        item.images.some((img: any) => img.fileName === fileName)\r\n    );\r\n\r\n    if (draggedItemIndex === -1) {\r\n      console.error(`Dragged item with image ${fileName} not found`);\r\n      continue;\r\n    }\r\n\r\n    const draggedItem = wbcInfo.value[draggedItemIndex];\r\n\r\n    if (draggedItem.id === wbcInfo.value[targetItemIndex].id) {\r\n      selectedTitle.value = '';\r\n      continue;\r\n    }\r\n\r\n    selectedImagesToMove.push({fileName: selectedImage.fileName});\r\n    draggedItems.push(draggedItem);\r\n    targetItems.push(wbcInfo.value[targetItemIndex]);\r\n\r\n    keyMove = keyMove || (selectedImage.keyMove || '');\r\n  }\r\n\r\n  if (selectedImagesToMove.length > 0) {\r\n    await moveImage(targetItemIndex, selectedImagesToMove, draggedItems, targetItems[0], type, keyMove);\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n}\r\n\r\n\r\nasync function originalOnDrop(targetItemIndex: number) {\r\n  //targetItemIndex -> 옮겨져야하는 index\r\n  if ((draggedItemIndex.value !== null && draggedImageIndex.value !== null) && (draggedItemIndex.value !== targetItemIndex)) {\r\n    const draggedItem = wbcInfo.value[draggedItemIndex.value];\r\n    const draggedImage = draggedItem.images[draggedImageIndex.value]; // 드래그 후 옮기는 이미지\r\n    // 이미지 이동 함수 호출\r\n\r\n    await moveImage(targetItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n}\r\n\r\n\r\nasync function moveImage(targetItemIndex: number, selectedImagesToMove: any[], draggedItem: any, targetItem: any, type: boolean, keyMove?: string, wbcInfosArr?: any) {\r\n  wbcInfoRefresh.value = false;\r\n  const {slotId} = selectItems.value;\r\n  const arrType = selectedImagesToMove;\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n  let idx = 0;\r\n  // 선택된 이미지 배열에 대해 반복\r\n  for (const selectedImage of arrType) {\r\n    const fileName = selectedImage.fileName;\r\n    fileNames.push(fileName);\r\n    try {\r\n      if (keyMove === 'keyMove') { // 단축키로 움직였을 경우\r\n        const formattedTargetItemId = targetItem.id < 10 ? `0${targetItem.id}` : targetItem.id;\r\n\r\n        const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n        const matchingItem = classInfoBagic.find(item => item.abbreviation === (selectedImage.title || selectedImage.abbreviation));\r\n        const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${selectedImage.title}` :\r\n            `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${draggedItem[idx].title}`;\r\n        const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${formattedTargetItemId}_${targetItem.abbreviation}`;\r\n        destinationFolders.push(destinationFolder);\r\n        sourceFolders.push(sourceFolder);\r\n      } else if (!wbcInfosArr && keyMove !== 'keyMove') { // 마우스로 같은 class 공간으로 드롭시켜서 이동시\r\n        const newArr = draggedItem[idx] ? draggedItem[idx] : draggedItem;\r\n        const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${selectedImage.id}_${selectedImage.title}` :\r\n            `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${newArr.id}_${newArr.title}`;\r\n        const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n        destinationFolders.push(destinationFolder);\r\n        sourceFolders.push(sourceFolder);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during image move:', error);\r\n    }\r\n    idx++;\r\n  }\r\n\r\n  // 최종적으로 백엔드로 데이터 전송\r\n  const data = {\r\n    sourceFolders,\r\n    destinationFolders,\r\n    fileNames\r\n  };\r\n\r\n  try {\r\n\r\n    const res = await moveClassImagePost(data);\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n    if (res) {\r\n      let idx = 0;\r\n      for (const selectedImage of arrType) {\r\n        const fileName = selectedImage.fileName;\r\n\r\n        if (keyMove === 'keyMove') {\r\n          // 이미지를 타겟 아이템으로 이동\r\n          const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title === (selectedImage.title || selectedImage.abbreviation));\r\n          const sourceItem = wbcInfo.value[sourceItemIndex];\r\n          const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === fileName);\r\n          if (imageIndex !== -1) {\r\n            const image = sourceItem.images.splice(imageIndex, 1)[0];\r\n            image.title = wbcInfo.value[targetItemIndex].title;\r\n            image.width = imageSize.value;\r\n            image.height = imageSize.value;\r\n            image.imgBrightness = imgBrightness.value;\r\n            wbcInfo.value[targetItemIndex].images.push(image);\r\n            // 카운트 업데이트\r\n            sourceItem.count--;\r\n            wbcInfo.value[targetItemIndex].count++;\r\n          }\r\n        } else {\r\n          let newArr: any = [];\r\n          if (!draggedItem[idx]) {\r\n            newArr = draggedItem;\r\n          } else {\r\n            newArr = draggedItem[idx];\r\n          }\r\n          // 드래그된 이미지를 원래 위치에서 제거\r\n          const draggedImageIndex = newArr.images.findIndex((img: any) => img.fileName === fileName);\r\n          if (draggedImageIndex !== -1) {\r\n            newArr.images.splice(draggedImageIndex, 1);\r\n          }\r\n          const newArrIdx = wbcInfo.value.findIndex((item: any) => item.title === newArr.title);\r\n          wbcInfo.value[newArrIdx] = newArr;\r\n          const imgAttr = {\r\n            width: imageSize.value,\r\n            height: imageSize.value,\r\n            filter: `opacity(0.9) drop-shadow(0 0 0 rgb(${imageRgb.value[0]}, ${imageRgb.value[1]}, ${imageRgb.value[2]})) brightness(${imgBrightness.value}%)`,\r\n          };\r\n          // 드롭된 위치에 이미지를 삽입\r\n          wbcInfo.value[targetItemIndex].images.push({...selectedImage, ...imgAttr});\r\n\r\n          wbcInfo.value = removeDuplicateImages(wbcInfo.value);\r\n          wbcInfo.value.forEach((item: any) => {\r\n            item.count = item.images.length;\r\n            if (item.images.length > 0) {\r\n              item.images.forEach((itemImg: any) => {\r\n                itemImg.title = item.title;\r\n              });\r\n            }\r\n          });\r\n        }\r\n        idx++;\r\n      }\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      shiftClickImages.value = [];\r\n      await updateOriginalDb();\r\n    } else {\r\n      console.error('이미지 옮기기 실패.');\r\n    }\r\n  } catch (error) {\r\n    console.error('이미지 옮기는 작업 서버 실패:', error);\r\n  } finally {\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n  }\r\n\r\n  if (wbcInfosArr) { // 동그라미 네비게이션 바로 옮길경우, 또는 우클릭 해서 클래스 이동시 사용\r\n    try {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n      for (const seItem of selectItemImageArr.value) {\r\n        const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n        const matchingItem = classInfoBagic.find(item => item.abbreviation === (seItem.title || seItem.abbreviation));\r\n        const sourceFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${seItem.title}`;\r\n        const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n        destinationFolders.push(destinationFolder);\r\n        sourceFolders.push(sourceFolder);\r\n      }\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      }\r\n      let res = await moveClassImagePost(data);\r\n      if (res) {\r\n        // selectedImagesToMove 배열의 이미지를 targetItemIndex에서 wbcInfo.value의 객체에 추가\r\n        const targetItem = wbcInfo.value[targetItemIndex];\r\n        for (const seItem of removeDuplicatesByProperty(selectItemImageArr.value, 'title')) {\r\n          const findImage = selectedImagesToMove.filter(item => item.title === (seItem.title || seItem.abbreviation));\r\n          targetItem.images.push(...findImage);\r\n          targetItem.count = targetItem.images.length;\r\n          const draggedItemIdx = wbcInfo.value.findIndex((item: any) => item.title === (seItem.title || seItem.abbreviation));\r\n          if (draggedItemIdx !== -1) {\r\n            const draggedItemObj = wbcInfo.value[draggedItemIdx];\r\n            const selectedImagesFileNames = selectedImagesToMove.map(image => image.fileName);\r\n            const filteredImages = draggedItemObj.images.filter((image: any) => !selectedImagesFileNames.includes(image.fileName));\r\n            // 새로 생성한 배열을 draggedItemObj의 images 배열에 할당\r\n            draggedItemObj.images = filteredImages;\r\n            draggedItemObj.count = draggedItemObj.images.length;\r\n          }\r\n        }\r\n        for (const images of selectedImagesToMove) {\r\n          images.title = wbcInfo.value[targetItemIndex].title;\r\n          images.width = imageSize.value;\r\n          images.height = imageSize.value;\r\n          images.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${imageRgb.value[0]}, ${imageRgb.value[1]}, ${imageRgb.value[2]})) brightness(${imgBrightness.value}%)`;\r\n\r\n        }\r\n      } else {\r\n        console.error('이미지 움직임 실패.');\r\n      }\r\n    } catch (error) {\r\n      console.error('서버 이미지 옮기기 실패:', error);\r\n    } finally {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n  allCheck.value = '';\r\n  selectedTitle.value = '';\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nfunction removeDuplicatesByProperty(array: any, property: any) {\r\n  const seen = new Set();\r\n  return array.filter((item: any) => {\r\n    const key = item[property];\r\n    if (seen.has(key)) {\r\n      return false; // 중복된 객체는 제거\r\n    } else {\r\n      seen.add(key);\r\n      return true; // 처음 등장한 객체는 유지\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeDuplicateImages(data: any[]): any[] {\r\n  const uniqueFileNames = new Set<string>();\r\n\r\n  return data.map(item => {\r\n    const uniqueImages = item.images.filter((image: any) => {\r\n      if (!uniqueFileNames.has(image.fileName)) {\r\n        uniqueFileNames.add(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {...item, images: uniqueImages};\r\n  });\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nasync function updateOriginalDb(notWbcAfterSave?: string) {\r\n  let originalDbVal: any = [];\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        totalCount += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        totalCount += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) { // 퍼센트를 소수점 한 자리까지 계산\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 부분이 0이면 정수만, 아니면 소수점 한 자리까지 표시\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  let uniqueImages: any = [];\r\n  const uniqueData = clonedWbcInfo.map((item: any) => {\r\n    const uniqueImagesForItem = item.images.filter((image: any) => {\r\n      if (!uniqueImages.includes(image.fileName)) {\r\n        uniqueImages.push(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return {...item, images: uniqueImagesForItem};\r\n  });\r\n  clonedWbcInfo = uniqueData;\r\n  if (notWbcAfterSave !== 'notWbcAfterSave') {\r\n    // wbcInfoAfter 업데이트\r\n    selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n\r\n    wbcInfo.value = clonedWbcInfo;\r\n\r\n    // originalDb 업데이트\r\n    const res: any = slideData.value;\r\n    if (res) res.wbcInfoAfter = clonedWbcInfo;\r\n    const {isNormal, classInfo} = checkPbNormalCell(clonedWbcInfo, normalItems.value)\r\n    res.isNormal = isNormal;\r\n    res.abnormalClassInfo = classInfo;\r\n    // 실제 락 거는 부분 여기로 변경 함 그래프 ql 로 변경하면서 버그 방지를 위해서 변경\r\n    res.pcIp = ipAddress.value;\r\n    res.lock_status = true;\r\n    res.submitState = res.submitState === '' || !res?.submitState ? 'checkFirst' : res.submitState;\r\n    originalDbVal = [res];\r\n  }\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, originalDbVal);\r\n}\r\n\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  try {\r\n    const res = await gqlGenericUpdate(useUpdateRunningInfoMutation, {\r\n      id: originalDb[0].id,\r\n      isNormal: originalDb[0].isNormal,\r\n      abnormalClassInfo: originalDb[0].abnormalClassInfo,\r\n      pcIp: originalDb[0].pcIp,\r\n      lock_status: originalDb[0].lock_status,\r\n      wbcInfoAfter: originalDb[0].wbcInfoAfter,\r\n      submitState: originalDb[0].submitState,\r\n    });\r\n\r\n    if (res && res?.data?.updateRunningInfoGQL[0].length !== 0) {\r\n      // getWbcCustomClasses(false, null);\r\n      if (cellMarkerIcon.value) {\r\n        // 다시 불러올경우 셀마킹이 켜있는경우 다시 셀마크 그려주기\r\n        await drawCellMarker(true);\r\n      }\r\n      wbcInfo.value = [];\r\n      wbcInfo.value = res?.data?.updateRunningInfoGQL[0].wbcInfoAfter;\r\n\r\n      const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n      await sortWbcInfo(wbcInfo.value, sortArr);\r\n      wbcReset.value = true;\r\n      await nextTick();\r\n      wbcReset.value = false;\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any) => {\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response: any = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo],\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (!response) {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const slotId = selectItems.value?.slotId || \"\";\r\n  let folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n\r\n  // 타임스탬프 추가\r\n\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n\r\n\r\n  return url;\r\n}\r\n\r\n\r\nasync function rollbackChanges() {\r\n  if (rollbackHistory.length <= 0) return;\r\n\r\n  // 롤백할 때마다 히스토리에서 마지막 상태를 꺼내어 복원\r\n  const prevWbcInfo = rollbackHistory.pop();\r\n\r\n  // 롤백 후 초기화\r\n  draggedItemIndex.value = null;\r\n  draggedImageIndex.value = null;\r\n  draggedCircleIndex.value = null;\r\n  draggedCircleIndexArr.value = [];\r\n  draggedCircleImgIndex.value = null;\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n\r\n  // 현재 상태에서 이전 상태로 이미지 롤백\r\n  await rollbackImages(wbcInfo.value, prevWbcInfo);\r\n\r\n  // wbcInfo 업데이트\r\n  wbcInfo.value = prevWbcInfo;\r\n}\r\n\r\nconst findUndefinedImages = (sourceWbcInfo: any, targetWbcInfo: any, infoArray: any) => {\r\n  sourceWbcInfo.forEach((sourceItem: any, sourceIndex: any) => {\r\n    const targetItem = targetWbcInfo[sourceIndex];\r\n    if (sourceItem && targetItem) {\r\n      sourceItem.images.forEach((sourceImage: any, imageIndex: any) => {\r\n        const targetImage = targetItem.images[imageIndex];\r\n        if (targetImage === undefined) {\r\n          infoArray.push({\r\n            itemIndex: sourceIndex,\r\n            imageIndex,\r\n            fileName: sourceImage.fileName,\r\n            title: targetItem.title,\r\n            id: targetItem.id,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nasync function rollbackImages(currentWbcInfo: any, prevWbcInfo: any) {\r\n  // 각 상태에서 이동된 이미지 정보 추출\r\n  const sourceFolderInfo: any = [];\r\n  const destinationFolderInfo: any = [];\r\n  findUndefinedImages(currentWbcInfo, prevWbcInfo, sourceFolderInfo);\r\n  findUndefinedImages(prevWbcInfo, currentWbcInfo, destinationFolderInfo);\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 이동된 이미지들을 이전 위치로 다시 이동시킴\r\n  for (const index in sourceFolderInfo) {\r\n    const sourceFolder = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${sourceFolderInfo[index].id}_${sourceFolderInfo[index].title}`;\r\n    const destinationFolder = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${destinationFolderInfo[index].id}_${destinationFolderInfo[index].title}`;\r\n    sourceFolders.push(sourceFolder)\r\n    destinationFolders.push(destinationFolder)\r\n    fileNames.push(sourceFolderInfo[index].fileName)\r\n\r\n  }\r\n  const data = {\r\n    sourceFolders: sourceFolders,\r\n    destinationFolders: destinationFolders,\r\n    fileNames: fileNames,\r\n  }\r\n  let response = await moveClassImagePost(data);\r\n\r\n  if (response) {\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n  updateWbcInfo.value = wbcInfo.value;\r\n  // Rollback 후 현재 Class List로 정렬\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nconst handleMoveImages = async () => {\r\n  try {\r\n    const folderPath = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}`;\r\n    const response = await fetch(`${apiBaseUrl}/folders/check-and-move-images`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({folderPath, wbcInfo: wbcInfo.value}),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst uploadLisChangeSlide = (hospitalNm: any) => {\r\n  if (hospitalNm === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n    changeSlideByLisUpload.value = !changeSlideByLisUpload.value;\r\n  }\r\n}\r\n\r\nasync function getNormalRange() {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst updateCBCData = async (incomingSlideData: any) => {\r\n  const path = incomingSlideData?.img_drive_root_path !== '' && incomingSlideData?.img_drive_root_path ? incomingSlideData?.img_drive_root_path : pbiaRootDir.value;\r\n  const cbcData: any = await initCBCData({\r\n    barcodeNo: incomingSlideData.barcodeNo,\r\n    siteCd: siteCd.value,\r\n    userId: userId.value,\r\n    deviceSerialNm: deviceSerialNm.value,\r\n    imageDriveRootPath: path,\r\n    slotId: incomingSlideData.slotId\r\n  })\r\n\r\n  if (cbcData) {\r\n    const cbcChangeData = {\r\n      cbcPatientNm: cbcData?.cbcPatientNm,\r\n      patientNm: cbcData?.cbcPatientNm\r\n    }\r\n\r\n    const updatedRunningInfo = {...incomingSlideData, ...cbcChangeData};\r\n\r\n    patientNm.value = cbcData?.cbcPatientNm;\r\n    cbcPatientNm.value = cbcData?.cbcPatientNm;\r\n    await resRunningItem(updatedRunningInfo);\r\n  }\r\n}\r\n\r\nconst allClassesChecked = async () => {\r\n  isAllClassesChecked.value = true;\r\n\r\n  // const result = slideData.value;\r\n  // result.isAllClassesChecked = true;\r\n  // await gqlIsAllClassesCheckedUpdate([result]);\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Moving image...\", 512), [\n      [_vShow, moveImgIsBool.value]\n    ]),\n    _createVNode(ClassInfoMenu, {\n      onRefreshClass: refreshClass,\n      isNext: isNext.value,\n      onIsNextFalse: isNextFalse,\n      changeSlideByLisUpload: changeSlideByLisUpload.value\n    }, null, 8, [\"isNext\", \"changeSlideByLisUpload\"]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (slideData.value)\n        ? (_openBlock(), _createBlock(DetailHeader, {\n            key: 0,\n            testType: projectType.value === 'bm' ? _unref(getBmTestTypeText)(selectItems.value?.testType) : _unref(getTestTypeText)(selectItems.value?.testType),\n            barcodeNo: selectItems.value?.barcodeNo,\n            cbcPatientNo: selectItems.value?.cbcPatientNo,\n            hospitalName: selectItems.value?.hosName,\n            cbcSex: selectItems.value?.cbcSex,\n            cbcAge: selectItems.value?.cbcAge,\n            analyzedDttm: selectItems.value?.analyzedDttm,\n            cbcPatientName: cbcPatientNm.value,\n            patientName: patientNm.value,\n            slideData: selectItems.value,\n            onUpdateSlideDataByCBCData: updateCBCData\n          }, null, 8, [\"testType\", \"barcodeNo\", \"cbcPatientNo\", \"hospitalName\", \"cbcSex\", \"cbcAge\", \"analyzedDttm\", \"cbcPatientName\", \"patientName\", \"slideData\"]))\n        : _createCommentVNode(\"\", true),\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 1,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcRight shadowBox' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        (!isLoading.value)\n          ? (_openBlock(), _createBlock(ClassInfo, {\n              key: 0,\n              wbcInfo: wbcInfo.value,\n              selectItems: selectItems.value,\n              classCompareShow: classCompareShow.value,\n              type: \"listTable\",\n              onNextPage: nextPage,\n              onScrollEvent: scrollToElement,\n              onUploadLisChangeSlide: uploadLisChangeSlide,\n              isAllClassesChecked: isAllClassesChecked.value\n            }, null, 8, [\"wbcInfo\", \"selectItems\", \"classCompareShow\", \"isAllClassesChecked\"]))\n          : _createCommentVNode(\"\", true)\n      ], 2),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcLeft' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (drawCellMarker(false)))\n          }, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: cellMarkerIcon.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\n            }, null, 8, [\"icon\"]),\n            _cache[17] || (_cache[17] = _createTextVNode(\" Cell Marking \"))\n          ]),\n          _createElementVNode(\"button\", {\n            onClick: showSizeControl,\n            class: \"sizeButton\"\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'plus-minus'] }),\n            _cache[18] || (_cache[18] = _createTextVNode(\" Size \"))\n          ]),\n          _withDirectives(_createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"div\", null, [\n              _cache[19] || (_cache[19] = _createElementVNode(\"div\", { class: \"sizeTitle\" }, \"Size\", -1)),\n              _createElementVNode(\"div\", _hoisted_5, [\n                _createElementVNode(\"input\", {\n                  type: \"number\",\n                  value: displayValue.value,\n                  onInput: updateImageSize\n                }, null, 40, _hoisted_6)\n              ]),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"range\",\n                min: \"50\",\n                max: \"290\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((imageSize).value = $event)),\n                onInput: changeImageSize\n              }, null, 544), [\n                [_vModelText, imageSize.value]\n              ]),\n              _createElementVNode(\"button\", {\n                class: \"resetBtn mb10\",\n                onClick: imgSizeReset\n              }, \"Size Reset\")\n            ])\n          ], 512), [\n            [_vShow, showSize.value]\n          ]),\n          _createElementVNode(\"div\", _hoisted_7, [\n            _createElementVNode(\"button\", { onClick: imgSetOpen }, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'gear'] }),\n              _cache[20] || (_cache[20] = _createTextVNode(\" IMG Setting \"))\n            ]),\n            _withDirectives(_createElementVNode(\"div\", _hoisted_8, [\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'sun'] }),\n                _cache[21] || (_cache[21] = _createTextVNode(\" Brightness \")),\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"number\",\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((imgBrightness).value = $event)),\n                    onInput: changeImgBrightness\n                  }, null, 544), [\n                    [_vModelText, imgBrightness.value]\n                  ])\n                ]),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"50\",\n                  max: \"120\",\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((imgBrightness).value = $event)),\n                  onInput: changeImgBrightness\n                }, null, 544), [\n                  [_vModelText, imgBrightness.value]\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"resetBtn mb20\",\n                  onClick: brightnessReset\n                }, \"Brightness Reset\")\n              ]),\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'palette'] }),\n                _cache[29] || (_cache[29] = _createTextVNode(\" RGB \")),\n                _createElementVNode(\"div\", _hoisted_10, [\n                  _cache[22] || (_cache[22] = _createTextVNode(\" [ \")),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"number\",\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                    onInput: _cache[5] || (_cache[5] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[0]]\n                  ]),\n                  _cache[23] || (_cache[23] = _createTextVNode(\", \")),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"number\",\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                    onInput: _cache[7] || (_cache[7] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[1]]\n                  ]),\n                  _cache[24] || (_cache[24] = _createTextVNode(\", \")),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"number\",\n                    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                    onInput: _cache[9] || (_cache[9] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[2]]\n                  ]),\n                  _cache[25] || (_cache[25] = _createTextVNode(\" ] \"))\n                ]),\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _cache[26] || (_cache[26] = _createElementVNode(\"label\", null, \"R\", -1)),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                    onInput: _cache[11] || (_cache[11] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[0]]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_12, [\n                  _cache[27] || (_cache[27] = _createElementVNode(\"label\", null, \"G\", -1)),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                    onInput: _cache[13] || (_cache[13] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[1]]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_13, [\n                  _cache[28] || (_cache[28] = _createElementVNode(\"label\", null, \"B\", -1)),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                    onInput: _cache[15] || (_cache[15] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[2]]\n                  ])\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"resetBtn\",\n                  onClick: rgbReset\n                }, \"RGB Reset\")\n              ])\n            ], 512), [\n              [_vShow, imgSet.value]\n            ])\n          ], 512),\n          _createElementVNode(\"button\", { onClick: classCompare }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'code-compare'] }),\n            _cache[30] || (_cache[30] = _createTextVNode(\" Class Compare \"))\n          ]),\n          (isWpsShow.value)\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                onClick: wps\n              }, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'expand'] }),\n                _cache[31] || (_cache[31] = _createTextVNode(\" WPS \"))\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"button\", {\n            onClick: rollbackChanges,\n            class: \"rollbackButton\"\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'rotate-left'] }),\n            _cache[32] || (_cache[32] = _createTextVNode(\" Rollback \"))\n          ])\n        ]),\n        _createElementVNode(\"div\", null, [\n          (isLoadedSlideData.value)\n            ? (_openBlock(), _createBlock(ImageGallery, {\n                key: 0,\n                ref_key: \"$imageGalleryRef\",\n                ref: $imageGalleryRef,\n                wbcInfoRefresh: wbcInfoRefresh.value,\n                wbcInfo: wbcInfo.value,\n                wbcReset: wbcReset.value,\n                selectItems: selectItems.value,\n                totalCount: selectItems.value?.wbcInfo?.totalCount,\n                slotId: selectItems.value?.slotId,\n                iaRootPath: iaRootPath.value,\n                projectTypeReturn: projectTypeReturn(projectType.value),\n                projectType: projectType.value,\n                apiBaseUrl: _unref(apiBaseUrl),\n                classCompareShow: classCompareShow.value,\n                wpsShow: wpsShow.value,\n                selectedTitle: selectedTitle.value,\n                hiddenImages: hiddenImages.value,\n                replaceFileNamePrefix: replaceFileNamePrefix,\n                onDragOver: onDragOver,\n                isBorderChanged: isBorderChanged,\n                isSelected: isSelected,\n                imageSize: imageSize.value,\n                isAllClassesChecked: isAllClassesChecked.value,\n                updateWbcInfo: updateWbcInfo.value,\n                onAllCheckChange: allCheckChange,\n                onSelectImage: selectImage,\n                onBorderDel: borderDel,\n                onBorderOn: borderOn,\n                onOpenModal: openModal,\n                onHideImage: hideImage,\n                onHandleRightClick: handleRightClick,\n                onOnDrop: onDrop,\n                onOnDragStart: onDragStart,\n                onOnDropCircle: onDropCircle,\n                onOnDragOverCircle: onDragOverCircle,\n                onScrollToElement: scrollToElement,\n                onAllClassesChecked: allClassesChecked,\n                cellRef: cellRef.value,\n                \"onUpdate:cellRef\": handleUpdateCellRef\n              }, null, 8, [\"wbcInfoRefresh\", \"wbcInfo\", \"wbcReset\", \"selectItems\", \"totalCount\", \"slotId\", \"iaRootPath\", \"projectTypeReturn\", \"projectType\", \"apiBaseUrl\", \"classCompareShow\", \"wpsShow\", \"selectedTitle\", \"hiddenImages\", \"imageSize\", \"isAllClassesChecked\", \"updateWbcInfo\", \"cellRef\"]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        (contextMenuVisible.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              style: _normalizeStyle({ top: contextMenuY.value + 'px', left: contextMenuX.value + 'px' }),\n              class: \"context-menu detail\"\n            }, [\n              _createElementVNode(\"ul\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item, itemIdx) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: itemIdx,\n                    onClick: ($event: any) => (moveSelectedImages(item, itemIdx))\n                  }, _toDisplayString(excludeClassName(item.name)), 9, _hoisted_14))\n                }), 128))\n              ])\n            ], 4))\n          : _createCommentVNode(\"\", true),\n        _withDirectives(_createElementVNode(\"div\", {\n          class: \"wbcModal\",\n          onWheel: handleWheel\n        }, [\n          _createElementVNode(\"div\", {\n            class: \"wbc-modal-content\",\n            onClick: outerClickCloseModal\n          }, [\n            _createElementVNode(\"span\", {\n              class: \"wbcClose\",\n              onClick: closeModal\n            }, \"×\"),\n            _createElementVNode(\"div\", _hoisted_15, [\n              _createElementVNode(\"img\", {\n                src: selectedImageSrc.value,\n                style: _normalizeStyle({ width: modalImageWidth.value, height: modalImageHeight.value }),\n                class: \"modal-image\",\n                ref: \"modalImage\"\n              }, null, 12, _hoisted_16)\n            ]),\n            _createElementVNode(\"div\", _hoisted_17, [\n              _createElementVNode(\"div\", _hoisted_18, [\n                _createElementVNode(\"p\", null, _toDisplayString(((zoomValue.value - 200) / 400 * 100).toFixed(0)) + \" %\", 1),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"200\",\n                  max: \"600\",\n                  \"onUpdate:modelValue\": _cache[16] || (_cache[16] = ($event: any) => ((zoomValue).value = $event)),\n                  onInput: handleZoom\n                }, null, 544), [\n                  [_vModelText, zoomValue.value]\n                ])\n              ])\n            ])\n          ])\n        ], 544), [\n          [_vShow, modalOpen.value]\n        ])\n      ], 2)\n    ]),\n    (toastMessage.value)\n      ? (_openBlock(), _createBlock(ToastNotification, {\n          key: 0,\n          message: toastMessage.value,\n          messageType: toastMessageType.value,\n          duration: 1500,\n          position: \"bottom-right\"\n        }, null, 8, [\"message\", \"messageType\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-show=\"moveImgIsBool\" class=\"moveImgIsBool\"> Moving image...</div>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\" :isNext=\"isNext\" @isNextFalse=\"isNextFalse\"\r\n                 :changeSlideByLisUpload=\"changeSlideByLisUpload\"/>\r\n\r\n  <div class=\"wbcContent\">\r\n    <DetailHeader\r\n        v-if=\"slideData\"\r\n        :testType=\"projectType === 'bm' ? getBmTestTypeText(selectItems?.testType) : getTestTypeText(selectItems?.testType)\"\r\n        :barcodeNo=\"selectItems?.barcodeNo\"\r\n        :cbcPatientNo=\"selectItems?.cbcPatientNo\"\r\n        :hospitalName=\"selectItems?.hosName\"\r\n        :cbcSex=\"selectItems?.cbcSex\"\r\n        :cbcAge=\"selectItems?.cbcAge\"\r\n        :analyzedDttm=\"selectItems?.analyzedDttm\"\r\n        :cbcPatientName=\"cbcPatientNm\"\r\n        :patientName=\"patientNm\"\r\n        :slideData=\"selectItems\"\r\n        @updateSlideDataByCBCData=\"updateCBCData\"\r\n    />\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div :class=\"'databaseWbcRight shadowBox' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <ClassInfo v-if=\"!isLoading\" :wbcInfo=\"wbcInfo\" :selectItems=\"selectItems\" :classCompareShow=\"classCompareShow\"\r\n                 type='listTable'\r\n                 @nextPage=\"nextPage\"\r\n                 @scrollEvent=\"scrollToElement\"\r\n                 @uploadLisChangeSlide=\"uploadLisChangeSlide\"\r\n                 :isAllClassesChecked=\"isAllClassesChecked\"\r\n      />\r\n    </div>\r\n\r\n    <div :class=\"'databaseWbcLeft' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <div class=\"imgMenuSetDiv\">\r\n        <button type=\"button\" @click=\"drawCellMarker(false)\">\r\n          <font-awesome-icon\r\n              :icon=\"cellMarkerIcon ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n          />\r\n          Cell Marking\r\n        </button>\r\n        <!--size-->\r\n        <button @click=\"showSizeControl\" class=\"sizeButton\">\r\n          <font-awesome-icon :icon=\"['fas', 'plus-minus']\"/>\r\n          Size\r\n        </button>\r\n        <div v-show=\"showSize\" class=\"sizeContainer\">\r\n          <div>\r\n            <div class=\"sizeTitle\">Size</div>\r\n            <div class=\"customImgSet size\">\r\n              <!--              {{ imgPixelConvertToPercent(imageSize) }}-->\r\n              <input\r\n                  type=\"number\"\r\n                  :value=\"displayValue\"\r\n                  @input=\"updateImageSize\"\r\n              />\r\n            </div>\r\n            <!--            <font-awesome-icon :icon=\"['fas', 'undo']\" @click=\"imgSizeReset\"/>-->\r\n            <input\r\n                type=\"range\"\r\n                min=\"50\"\r\n                max=\"290\"\r\n                v-model=\"imageSize\"\r\n                @input=\"changeImageSize\"\r\n            />\r\n            <button class=\"resetBtn mb10\" @click=\"imgSizeReset\">Size Reset</button>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"imgSetWrap\" ref=\"imgSetWrap\">\r\n          <button @click=\"imgSetOpen\">\r\n            <font-awesome-icon :icon=\"['fas', 'gear']\"/>\r\n            IMG Setting\r\n          </button>\r\n          <div class=\"imgSet\" v-show=\"imgSet\">\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'sun']\"/>\r\n              Brightness\r\n              <div class=\"customImgSet\"><input type=\"number\" v-model=\"imgBrightness\" @input=\"changeImgBrightness\"/>\r\n              </div>\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"50\"\r\n                  max=\"120\"\r\n                  v-model=\"imgBrightness\"\r\n                  @input=\"changeImgBrightness\"\r\n              />\r\n              <button class=\"resetBtn mb20\" @click=\"brightnessReset\">Brightness Reset</button>\r\n            </div>\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'palette']\"/>\r\n              RGB\r\n              <div class=\"customImgSet rgb\">\r\n                [\r\n                <input type=\"number\" v-model=\"imageRgb[0]\" @input=\"changeImageRgb('')\"/>,\r\n                <input type=\"number\" v-model=\"imageRgb[1]\" @input=\"changeImageRgb('')\"/>,\r\n                <input type=\"number\" v-model=\"imageRgb[2]\" @input=\"changeImageRgb('')\"/>\r\n                ]\r\n              </div>\r\n              <div class=\"flex-align-center\">\r\n                <label>R</label>\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"255\"\r\n                    v-model=\"imageRgb[0]\"\r\n                    @input=\"changeImageRgb('')\"\r\n                />\r\n              </div>\r\n              <div class=\"flex-align-center\">\r\n                <label>G</label>\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"255\"\r\n                    v-model=\"imageRgb[1]\"\r\n                    @input=\"changeImageRgb('')\"\r\n                />\r\n              </div>\r\n              <div class=\"flex-align-center\">\r\n                <label>B</label>\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"255\"\r\n                    v-model=\"imageRgb[2]\"\r\n                    @input=\"changeImageRgb('')\"\r\n                />\r\n              </div>\r\n              <button class=\"resetBtn\" @click=\"rgbReset\">RGB Reset</button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <button @click=\"classCompare\">\r\n          <font-awesome-icon :icon=\"['fas', 'code-compare']\"/>\r\n          Class Compare\r\n        </button>\r\n        <button @click=\"wps\" v-if=\"isWpsShow\">\r\n          <font-awesome-icon :icon=\"['fas', 'expand']\"/>\r\n          WPS\r\n        </button>\r\n        <button @click=\"rollbackChanges\" class=\"rollbackButton\">\r\n          <font-awesome-icon :icon=\"['fas', 'rotate-left']\"/>\r\n          Rollback\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <ImageGallery\r\n            v-if=\"isLoadedSlideData\"\r\n            ref=\"$imageGalleryRef\"\r\n            :wbcInfoRefresh=\"wbcInfoRefresh\"\r\n            :wbcInfo=\"wbcInfo\"\r\n            :wbcReset=\"wbcReset\"\r\n            :selectItems=\"selectItems\"\r\n            :totalCount=\"selectItems?.wbcInfo?.totalCount\"\r\n            :slotId=\"selectItems?.slotId\"\r\n            :iaRootPath=\"iaRootPath\"\r\n            :projectTypeReturn=\"projectTypeReturn(projectType)\"\r\n            :projectType=\"projectType\"\r\n            :apiBaseUrl=\"apiBaseUrl\"\r\n            :classCompareShow=\"classCompareShow\"\r\n            :wpsShow=\"wpsShow\"\r\n            :selectedTitle=\"selectedTitle\"\r\n            :hiddenImages=\"hiddenImages\"\r\n            :replaceFileNamePrefix=\"replaceFileNamePrefix\"\r\n            :onDragOver=\"onDragOver\"\r\n            :isBorderChanged=\"isBorderChanged\"\r\n            :isSelected=\"isSelected\"\r\n            :imageSize=\"imageSize\"\r\n            :isAllClassesChecked=\"isAllClassesChecked\"\r\n            :updateWbcInfo=\"updateWbcInfo\"\r\n            @allCheckChange=\"allCheckChange\"\r\n            @selectImage=\"selectImage\"\r\n            @borderDel=\"borderDel\"\r\n            @borderOn=\"borderOn\"\r\n            @openModal=\"openModal\"\r\n            @hideImage=\"hideImage\"\r\n            @handleRightClick=\"handleRightClick\"\r\n            @onDrop=\"onDrop\"\r\n            @onDragStart=\"onDragStart\"\r\n            @onDropCircle=\"onDropCircle\"\r\n            @onDragOverCircle=\"onDragOverCircle\"\r\n            @scrollToElement=\"scrollToElement\"\r\n            @allClassesChecked=\"allClassesChecked\"\r\n            :cellRef=\"cellRef\"\r\n            @update:cellRef=\"handleUpdateCellRef\"\r\n        />\r\n      </div>\r\n      <!--   우클릭 항목 메뉴   -->\r\n      <div v-if=\"contextMenuVisible\" :style=\"{ top: contextMenuY + 'px', left: contextMenuX + 'px' }\"\r\n           class=\"context-menu detail\">\r\n        <ul>\r\n          <li v-for=\"(item, itemIdx) in wbcInfo\" :key=\"itemIdx\" @click=\"moveSelectedImages(item, itemIdx)\">\r\n            {{ excludeClassName(item.name) }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- 모달 창 -->\r\n      <div class=\"wbcModal\" v-show=\"modalOpen\" @wheel=\"handleWheel\">\r\n        <div class=\"wbc-modal-content\" @click=\"outerClickCloseModal\">\r\n          <span class=\"wbcClose\" @click=\"closeModal\">&times;</span>\r\n          <div class=\"wbcModalImageContent\">\r\n            <img :src=\"selectedImageSrc\" :style=\"{ width: modalImageWidth, height: modalImageHeight }\"\r\n                 class=\"modal-image\" ref=\"modalImage\"/>\r\n          </div>\r\n          <div class=\"buttons\">\r\n            <div class=\"rangeBox\">\r\n              <p>{{ ((zoomValue - 200) / 400 * 100).toFixed(0) }} %</p>\r\n              <input type=\"range\" min=\"200\" max=\"600\" v-model=\"zoomValue\" @input=\"handleZoom\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <ToastNotification\r\n      v-if=\"toastMessage\"\r\n      :message=\"toastMessage\"\r\n      :messageType=\"toastMessageType\"\r\n      :duration=\"1500\"\r\n      position=\"bottom-right\"\r\n  />\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {\r\n  computed,\r\n  getCurrentInstance,\r\n  nextTick,\r\n  onBeforeMount,\r\n  onMounted,\r\n  onUnmounted,\r\n  ref,\r\n  watch\r\n} from \"vue\";\r\nimport {moveClassImagePost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\nimport {updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {\r\n  getBfHotKeysApi, getNormalRangeApi,\r\n  getOrderClassApi,\r\n  getWbcCustomClassApi,\r\n  getWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {deleteRunningApi, fileSysPost, getFolders} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport ClassInfo from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport ImageGallery from '@/views/datebase/commponent/detail/classInfo/ImageGallery.vue';\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {disableScroll, enableScroll} from \"@/common/lib/utils/scroll\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport DetailHeader from \"@/views/datebase/commponent/detail/detailHeader.vue\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport {MESSAGES} from \"@/common/defines/constants/constantMessageText\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {initCBCData} from \"@/common/helpers/lisCbc/initCBC\";\r\nimport {gqlGenericUpdate, useUpdateRunningInfoMutation} from \"@/gql/mutation/slideData\";\r\n\r\nconst selectedTitle = ref('');\r\nconst wbcInfo = ref<any>(null);\r\nconst updateWbcInfo = ref<any>(null)\r\n\r\nconst selectItems = ref<any>(null);\r\nconst store = useStore();\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst moveImgIsBool = computed(() => store.state.commonModule.moveImgIsBool);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst draggedItemIndex = ref<any>(null);\r\nconst draggedImageIndex = ref<any>(null);\r\nconst isShiftKeyPressed = ref(false);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst firstClickedImageIndex = ref(null);\r\nconst wbcInfoRefresh = ref(false);\r\n\r\nconst draggedCircleIndex = ref<any>(null);\r\nconst draggedCircleIndexArr = ref<any>([]);\r\nconst draggedCircleImgIndex = ref<any>(null);\r\nconst selectedClickImages = ref<any>([]);\r\nconst shiftClickImages = ref<any>([]);\r\nconst rollbackHistory: any = [];\r\nconst imageSize = ref(150);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst selectSizeTitle = ref('ME')\r\nconst allCheck = ref('');\r\nconst cellRef = ref(null);\r\nconst cellMarkerIcon = ref(false);\r\nconst modalOpen = ref(false);\r\nconst selectedImageSrc = ref('');\r\nconst modalImageWidth = ref('200px');\r\nconst modalImageHeight = ref('200px');\r\nconst imgSet = ref(false);\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst wbcCustomItems = ref<any>([]);\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst projectType = ref<any>('');\r\nconst opacity = ref('0.9');\r\nconst zoomValue = ref(200);\r\n\r\nconst selectItemImageArr = ref<any>([]);\r\nconst moveRightClickArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst showSize = ref(false);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst targetItem = ref<any>(null);\r\nconst isNext = ref(false);\r\nconst classCompareShow = ref(false);\r\nconst wpsShow = ref(false);\r\nconst isLoading = ref(true);\r\nconst $imageGalleryRef = ref<any>(null);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst wbcReset = ref(false);\r\nconst isLoadedSlideData = ref(true);\r\nconst isWpsShow = ref(false);\r\nconst blockClicks = ref(false);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst changeSlideByLisUpload = ref(false);\r\nconst normalItems = ref<any>([]);\r\nconst slideData = computed(() => store.state.slideDataModule);\r\nconst ipAddress = ref('');\r\nconst patientNm = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst isAllClassesChecked = ref(false);\r\n\r\nonBeforeMount(async () => {\r\n  isLoading.value = false;\r\n  isLoadedSlideData.value = false;\r\n  projectType.value = window.PROJECT_TYPE;\r\n  isLoadedSlideData.value = false;\r\n  wbcInfoRefresh.value = false;\r\n})\r\n\r\nonMounted(async () => {\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n  document.addEventListener('click', handleClickOutside);\r\n\r\n});\r\n\r\nonUnmounted(async () => {\r\n  document.addEventListener('click', handleClickOutside);\r\n})\r\n\r\nwatch(\r\n    () => slideData.value,\r\n    async (newVal, oldVal) => {\r\n      if (newVal.id !== oldVal?.id) {\r\n        await nextTick();\r\n\r\n        if (projectType.value !== 'bm') {\r\n          await checkWps(newVal);\r\n        } else {\r\n          isWpsShow.value = false;\r\n        }\r\n        try {\r\n          await getNormalRange(); // 함수가 선언된 이후 호출\r\n          await getDetailRunningInfo(newVal);\r\n          isLoadedSlideData.value = false;\r\n          wbcInfo.value = [];\r\n          isLoadedSlideData.value = true;\r\n\r\n          await getWbcCustomClasses(false, null);\r\n          wbcInfoRefresh.value = true;\r\n\r\n          await imgSetLocalStorage();\r\n          cellMarkerIcon.value = false;\r\n          await drawCellMarker(true);\r\n\r\n\r\n        } catch (error) {\r\n          console.error('비동기 작업 중 에러 발생:', error);\r\n        }\r\n      }\r\n    },\r\n    {immediate: true, deep: true}\r\n);\r\n\r\n\r\nwatch(imgBrightness, (newVal) => {\r\n  localStorage.setItem('imgBrightness', String(newVal));\r\n});\r\n\r\nwatch(imageSize, (newVal) => {\r\n  localStorage.setItem('imageSize', String(newVal));\r\n})\r\n\r\nwatch(imageRgb, (newVal) => {\r\n  const red = newVal[0];\r\n  const green = newVal[1];\r\n  const blue = newVal[2];\r\n  localStorage.setItem('imageRgb', JSON.stringify([red, green, blue]));\r\n}, {deep: true});\r\n\r\nwatch(() => moveImgIsBool.value, (currentMoveImgIsBool) => {\r\n  if (currentMoveImgIsBool) {\r\n    disableScroll();\r\n  } else {\r\n    enableScroll();\r\n  }\r\n})\r\n\r\nconst borderDel = () => {\r\n  blockClicks.value = true;\r\n}\r\n\r\nconst borderOn = () => {\r\n  blockClicks.value = false;\r\n}\r\n\r\nconst checkWps = async (newVal: any) => {\r\n  const filePath = `${iaRootPath.value}/${newVal?.slotId}/04_WPS`;\r\n\r\n  const foldersPath = `folderPath=${filePath}`;\r\n  const wpsFolderCheck = await getFolders(foldersPath);\r\n  if (wpsFolderCheck?.code !== 400) {\r\n    isWpsShow.value = true;\r\n  } else {\r\n    isWpsShow.value = false;\r\n    wpsShow.value = false;\r\n  }\r\n}\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\nconst handleZoom = () => {\r\n  const newSize = zoomValue.value;\r\n  modalImageWidth.value = `${newSize}px`;\r\n  modalImageHeight.value = `${newSize}px`;\r\n};\r\n\r\nconst getDetailRunningInfo = async (newValue: any) => {\r\n  try {\r\n    isAllClassesChecked.value = newValue.value?.isAllClassesChecked;\r\n    iaRootPath.value = newValue?.img_drive_root_path !== '' && newValue?.img_drive_root_path !== null && newValue?.img_drive_root_path ? newValue?.img_drive_root_path : store.state.commonModule.iaRootPath;\r\n    patientNm.value = newValue?.patientNm;\r\n    cbcPatientNm.value = newValue?.cbcPatientNm;\r\n    selectItems.value = newValue;\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\nconst handleUpdateCellRef = (refValue: any) => {\r\n  cellRef.value = refValue.value;\r\n};\r\n\r\nconst classCompare = () => {\r\n  classCompareShow.value = !classCompareShow.value;\r\n}\r\n\r\nconst wps = () => {\r\n  wpsShow.value = !wpsShow.value;\r\n  if (!wpsShow.value) {\r\n    blockClicks.value = false;\r\n  }\r\n  if (classCompareShow.value) {\r\n    toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n    showToast('When classCompare is enabled, WPS cannot be checked.');\r\n    wpsShow.value = false;\r\n  }\r\n}\r\n\r\nconst imgPixelConvertToPercent = (imageSize: number) => {\r\n  return Math.floor(((imageSize - 50) / 240) * 170 + 30) + '%';\r\n}\r\nconst percentConvertToPixel = (percent: number): number => {\r\n  return Math.floor((percent - 30) * 240 / 170 + 50);\r\n}\r\n\r\n\r\nconst imgSetLocalStorage = async () => {\r\n  const storedBrightness = localStorage.getItem('imgBrightness');\r\n  const storedRgb = localStorage.getItem('imageRgb');\r\n  const imageSizeCopy = localStorage.getItem('imageSize');\r\n  if (storedRgb) {\r\n    imageRgb.value = JSON.parse(storedRgb);\r\n  }\r\n  if (storedBrightness) {\r\n    imgBrightness.value = Number(storedBrightness);\r\n  }\r\n\r\n  if (imageSizeCopy) {\r\n    imageSize.value = Number(imageSizeCopy);\r\n  }\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n      image.width = Number(imageSize.value);\r\n      image.height = Number(imageSize.value);\r\n    });\r\n  });\r\n}\r\n\r\nconst nextPage = () => {\r\n  isNext.value = true;\r\n}\r\n\r\nconst isNextFalse = () => {\r\n  isNext.value = false;\r\n}\r\n\r\nconst handleRightClick = (event: MouseEvent, image: any, item: any) => {\r\n  event.preventDefault();\r\n  openContextMenu(event, item);\r\n};\r\n\r\nfunction hideImage(id: string, fileName: string, title?: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\r\nconst showSizeControl = () => {\r\n  showSize.value = !showSize.value;\r\n};\r\n\r\nconst handleClickOutside = (event: any) => {\r\n  // 클릭 이벤트의 대상이 imgSet이 아닌지 확인\r\n  if (!event.target.closest('.imgSetWrap')) {\r\n    imgSet.value = false;\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  if (!event.target.closest('.sizeContainer, .sizeButton')) {\r\n    showSize.value = false;\r\n  }\r\n};\r\ndocument.addEventListener('click', (event) => {\r\n  if (contextMenuVisible.value) {\r\n    contextMenuVisible.value = false;\r\n  }\r\n});\r\nconst openContextMenu = (event: MouseEvent, item: any) => {\r\n  const menuHeight = 506;\r\n\r\n  // 화면의 높이와 마우스 클릭 위치를 기준으로 기본 위치 설정\r\n  const screenHeight = window.innerHeight;\r\n  const mouseX = event.clientX;\r\n  const mouseY = event.clientY;\r\n\r\n  contextMenuVisible.value = true;\r\n\r\n  let menuX = mouseX;\r\n  let menuY = mouseY;\r\n\r\n  // 메뉴가 화면을 벗어나지 않도록 조정\r\n  if (mouseY + menuHeight > screenHeight) {\r\n    // 메뉴를 마우스 커서 위쪽에 띄움\r\n    menuY = mouseY - menuHeight;\r\n  } else {\r\n    // 메뉴를 마우스 커서 아래쪽에 띄움\r\n    menuY = mouseY;\r\n  }\r\n\r\n  // X 위치 조정 (화면을 벗어나지 않도록)\r\n  const menuWidth = 200;\r\n  if (menuX + menuWidth > window.innerWidth) {\r\n    menuX = window.innerWidth - menuWidth;\r\n  }\r\n\r\n  contextMenuX.value = menuX;\r\n  contextMenuY.value = menuY;\r\n  targetItem.value = item;\r\n};\r\n\r\n\r\nconst moveSelectedImages = async (item: any, itemIdx: any) => {\r\n  // 사진 선택 하지 않고 우클릭 후 이미지 변경 하였을 경우\r\n\r\n  if (!selectedClickImages.value || Object.entries(selectedClickImages.value).length === 0) {\r\n    showAlert.value = true;\r\n    alertType.value = 'error';\r\n    alertMessage.value = `Please select an image`;\r\n    return;\r\n  }\r\n  const matchingItemFind = wbcInfo.value.find((infoItem: any) => infoItem.id === item.id);\r\n\r\n  if (targetItem.value.title === matchingItemFind.title) {\r\n    showAlert.value = true;\r\n    alertType.value = 'error';\r\n    alertMessage.value = `Transfer to different classes is the only option available.`;\r\n    return;\r\n  }\r\n\r\n  await addToRollbackHistory();\r\n\r\n  const draggedItem = wbcInfo.value[itemIdx];\r\n  if (targetItem.value) {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n    contextMenuVisible.value = false;\r\n  }\r\n  contextMenuVisible.value = false;\r\n};\r\n\r\nconst excludeClassName = (title: string): string => {\r\n  if (title === 'Smudge' && siteCd.value !== HOSPITAL_SITE_CD_BY_NAME['고대안암병원']) return \"\";\r\n  return title;\r\n}\r\n\r\nconst sortWbcInfo = async (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n\r\n};\r\n\r\n\r\nconst getWbcCustomClasses = async (upDown: any, upDownData: any) => {\r\n  const ip = await getDeviceIpApi();\r\n  ipAddress.value = ip.data;\r\n  wbcInfo.value = [];\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n\r\n    const data: any = result.data;\r\n    const newData = data.filter((item: any) => item.abbreviation);\r\n    const customClassData: any = sessionStorage.getItem('customClass');\r\n    const getCustomSessionData = JSON.parse(customClassData);\r\n    if (getCustomSessionData) { // 커스텀 클래스 삭제하는 if 문\r\n      getCustomSessionData.forEach((item: any) => {\r\n        const findDelData = data.find((dataItems: any) => dataItems.customNum === item.customNum && dataItems.abbreviation !== item.abbreviation);\r\n        if (findDelData) {\r\n          if (item?.abbreviation === '') {\r\n            return;\r\n          }\r\n          const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${item.customNum}_${item?.abbreviation}`;\r\n          deleteRunningApi({path: filePath})\r\n        }\r\n      });\r\n    }\r\n    sessionStorage.setItem('customClass', JSON.stringify(data));\r\n    wbcCustomItems.value = data;\r\n    let wbcinfo = selectItems.value?.wbcInfoAfter.length !== 0 ? selectItems.value?.wbcInfoAfter : selectItems.value?.wbcInfo.wbcInfo[0];\r\n    if (newData.length !== 0) {\r\n      for (const item of newData) { // 커스텀클래스 폴더 생성\r\n        const {fullNm, abbreviation, customNum} = item;\r\n        const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${customNum}_${abbreviation}`;\r\n        await fileSysPost({path: filePath});\r\n\r\n        const wbcPush = {\r\n          id: customNum,\r\n          name: fullNm,\r\n          count: '0',\r\n          images: [],\r\n          title: abbreviation,\r\n        };\r\n\r\n        const foundObject = wbcinfo.find((wbcItem: any) => wbcItem.id == wbcPush.id && wbcItem.name === wbcPush.name);\r\n        if (!foundObject) {\r\n          wbcinfo.push(wbcPush);\r\n          wbcInfo.value = wbcinfo;\r\n          await updateOriginalDb('notWbcAfterSave');\r\n        }\r\n      }\r\n    } else {\r\n      const itemsToDelete: any = [];\r\n      const sortArr = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      wbcinfo.forEach((item: any) => {\r\n        const findDelData = sortArr.find((dataItems: any) => dataItems.id === item.id);\r\n        if (!findDelData) {\r\n          const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${item}_${item?.title}`;\r\n          deleteRunningApi({path: filePath});\r\n          itemsToDelete.push(item);\r\n        }\r\n      });\r\n      // 수집한 아이템을 wbcinfo 배열에서 삭제\r\n      itemsToDelete.forEach((item: any) => {\r\n        const index = wbcinfo.indexOf(item);\r\n        if (index > -1) {\r\n          wbcinfo.splice(index, 1);\r\n        }\r\n      });\r\n      selectItems.value.wbcInfoAfter = wbcinfo\r\n      wbcInfo.value = selectItems.value.wbcInfoAfter;\r\n      await updateOriginalDb();\r\n\r\n    }\r\n    await getWbcHotKeyClasses();\r\n    // await getBfHotKeyClasses();\r\n    await getOrderClass();\r\n    await initData(newData, upDown, upDownData);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result && result?.data) {\r\n      wbcHotKeysItems.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\r\nfunction isBorderChanged(image: any) {\r\n  const prefix = image.fileName.split('_')[0];\r\n  const isNsNbIntegration = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n    return el.title === 'NE'\r\n  })\r\n\r\n  const replacements: any = {\r\n    'NES': isNsNbIntegration ? 'NE' : 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const modifiedPrefix = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n\r\n  return image.title !== modifiedPrefix;\r\n}\r\n\r\nfunction replaceFileNamePrefix(fileName: string) {\r\n  const isNsNbIntegration = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n    return el.title === 'NE'\r\n  })\r\n\r\n  const replacements: any = {\r\n    'NES': isNsNbIntegration ? 'NE' : 'NS',\r\n    'NEB': isNsNbIntegration ? 'NE' : 'NB'\r\n  };\r\n\r\n  const prefix = fileName.split('_')[0];\r\n\r\n  // 대체 규칙에 따라 prefix를 변경\r\n  const modifiedPrefix: any = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n  // 변경된 prefix 반환\r\n  return modifiedPrefix;\r\n}\r\n\r\n\r\nconst openModal = (image: any, item: any) => {\r\n  modalOpen.value = true;\r\n  selectedImageSrc.value = getImageUrl(image.fileName, item.id, item.title, 'getImageRealTime');\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n};\r\n\r\nconst outerClickCloseModal = (e: any) => {\r\n  if (e.target.classList.contains('wbc-modal-content')) {\r\n    modalOpen.value = false;\r\n  }\r\n}\r\n\r\nconst handleWheel = (event: WheelEvent) => {\r\n  if (event.deltaY < 0) {\r\n    zoomIn();\r\n  } else {\r\n    zoomOut();\r\n  }\r\n};\r\n\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 600);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 600);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n  zoomValue.value = Number(newWidth);\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 200);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 200);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n  zoomValue.value = Number(newWidth);\r\n\r\n};\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => classInfoSort.value, async (newItem) => { // 오더클래스부분 순서 변경시 감지하여 재정렬\r\n  wbcInfoRefresh.value = true;\r\n  await getOrderClass();\r\n  const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  isLoadedSlideData.value = false;\r\n  cellMarkerIcon.value = false;\r\n  await getDetailRunningInfo(data);\r\n  isLoadedSlideData.value = true;\r\n  await drawCellMarker(true);\r\n  classCompareShow.value = false;\r\n  selectItems.value = data;\r\n  iaRootPath.value = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : store.state.commonModule.iaRootPath;\r\n\r\n  await getWbcCustomClasses(true, data);\r\n  await imgSetLocalStorage();\r\n  await nextTick();\r\n  if (projectType.value !== 'bm') {\r\n    await checkWps(data);\r\n  } else {\r\n    isWpsShow.value = false;\r\n  }\r\n}\r\n\r\nconst drawCellMarker = async (imgResize?: boolean) => {\r\n  if (!imgResize) {\r\n    cellMarkerIcon.value = !cellMarkerIcon.value\r\n  }\r\n\r\n  if (cellMarkerIcon.value) {\r\n    let url = '';\r\n    if (projectType.value === 'pb') {\r\n      url = `${iaRootPath.value}/${selectItems.value?.slotId}/${\r\n          selectItems.value.testType === '01' || selectItems.value?.testType === '04'\r\n              ? '01_WBC_Classification'\r\n              : '05_BF_Classification'\r\n      }/${selectItems.value?.slotId}.json`;\r\n    } else if (projectType.value === 'bm') {\r\n      url = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${selectItems.value?.slotId}.json`\r\n    }\r\n    const response = await readJsonFile({fullPath: url});\r\n\r\n    if (response && response.success) {\r\n      const jsonImageDat = response.data;\r\n      wbcInfo.value.forEach((item: any) => {\r\n        if (item.images.length === 0) return;\r\n        item.images.forEach((image: any) => {\r\n          const imageElement: any = cellRef.value;\r\n          const foundItem = jsonImageDat.find((item: any) => item?.FILE_NM === image?.fileName);\r\n          if (foundItem) {\r\n            const widthRatio = (imageElement[0]?.width || 150) / Number(foundItem.ORG_WIDTH) * 100;\r\n            const heightRatio = (imageElement[0]?.height || 150) / Number(foundItem.ORG_HEIGHT) * 100;\r\n\r\n            const rectWidth = (Number(foundItem.POSX2) - Number(foundItem.POSX1)) * (widthRatio / 100);\r\n            const rectHeight = (Number(foundItem.POSY2) - Number(foundItem.POSY1)) * (heightRatio / 100);\r\n\r\n            const left = imageElement[0]?.offsetLeft + (Number(foundItem.POSX1) * (widthRatio / 100)) + (rectWidth / 2) + 'px';\r\n            const top = imageElement[0]?.offsetTop + (Number(foundItem.POSY1) * (heightRatio / 100)) + (rectHeight / 2) + 'px';\r\n\r\n            image.coordinates = {\r\n              position: 'absolute',\r\n              left,\r\n              top,\r\n              width: '5px',\r\n              height: '5px',\r\n              background: '#10ff00'\r\n            };\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    wbcInfo.value.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        image.coordinates = {\r\n          display: 'none'\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst allCheckChange = (event: any, title: string) => {\r\n  allCheck.value = event?.target?.checked ? title : '';\r\n  if (event?.target?.checked) {\r\n    // 선택된 항목을 저장\r\n    selectedTitle.value = title;\r\n  } else {\r\n    // 선택된 항목을 해제\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  allCheckInsert();\r\n}\r\n\r\nconst allCheckInsert = () => {\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  moveRightClickArr.value = [];\r\n  for (const idx in wbcInfo.value) {\r\n    if (allCheck.value === wbcInfo.value[idx].title) {\r\n      for (const idxKey in wbcInfo.value[idx].images) {\r\n        const item = {\r\n          id: wbcInfo.value[idx].id,\r\n          title: wbcInfo.value[idx].title,\r\n          ...wbcInfo.value[idx].images[idxKey],\r\n        };\r\n        selectedClickImages.value.push(item);\r\n        selectItemImageArr.value.push(item);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst scrollToElement = (itemId: number) => {\r\n  if ($imageGalleryRef.value) {\r\n    $imageGalleryRef.value.scrollToElement(itemId);\r\n  }\r\n};\r\n\r\nfunction rgbReset() {\r\n  imageRgb.value = [0, 0, 0];\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction imgSizeReset() {\r\n  drawCellMarker(true);\r\n  imageSize.value = 150;\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 이미지의 width와 height를 조절\r\n      image.width = 150;\r\n      image.height = 150;\r\n    });\r\n  });\r\n}\r\n\r\nfunction brightnessReset() {\r\n  imgBrightness.value = 100;\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction changeImageRgb(reset: string) {\r\n  const selectedSizeTitle = selectSizeTitle.value;\r\n  if (!selectedSizeTitle) {\r\n    rgbReset();\r\n    return;\r\n  }\r\n  if (reset !== 'reset') {\r\n    opacity.value = '0.9';\r\n  }\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  // 선택된 크기 타이틀과 일치하는 이미지들에 대해 크기 조절\r\n  wbcInfo.value.forEach((item: any) => {\r\n    // if (item.title === selectedSizeTitle) {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(${opacity.value}) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n\r\n    });\r\n    // }\r\n  });\r\n\r\n}\r\n\r\nfunction changeImgBrightness(event: any) {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = event?.target?.value;\r\n\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(1) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeImageSize(event: any) {\r\n  const newSize = Number(event?.target?.value);\r\n\r\n  for (const item of wbcInfo.value) {\r\n    for (const image of item.images) {\r\n      image.width = newSize;\r\n      image.height = newSize;\r\n    }\r\n  }\r\n\r\n  requestAnimationFrame(() => drawCellMarker(true));\r\n}\r\n\r\nconst updateImageSize = (event: Event) => {\r\n  const target = event.target as HTMLInputElement;\r\n  const newPercentValue = parseFloat(target.value);\r\n  if (!isNaN(newPercentValue)) {\r\n    imageSize.value = percentConvertToPixel(newPercentValue + 1);\r\n  }\r\n  requestAnimationFrame(() => drawCellMarker(true));\r\n}\r\nconst displayValue = computed(() => {\r\n  return imgPixelConvertToPercent(imageSize.value).replace('%', '');\r\n});\r\n\r\nfunction onDragOverCircle() {\r\n  // 드래그 동작을 위한 빈 함수, 이벤트 리스너가 있어야 드롭이 작동함 지우지 마세요.\r\n}\r\n\r\nasync function addToRollbackHistory() {\r\n  rollbackHistory.push(JSON.parse(JSON.stringify(wbcInfo.value)));\r\n}\r\n\r\n// 상단 타이틀 이동 시 실행되는 함수\r\nasync function onDropCircle(item: any) {\r\n  const draggedItem = wbcInfo.value[draggedCircleIndex.value];\r\n  // 선택한 이미지(들)가 같은 Class로 욺직이려고 할 때\r\n  if (item.id === draggedItem.id) return;\r\n\r\n  await addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    // 이미지를 한 개만 드래그한 경우\r\n    const draggedImage = draggedItem.images[draggedCircleImgIndex.value];\r\n    item.images.push(draggedImage);\r\n    // 드롭된 위치에 이미지 추가\r\n    const updatedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n\r\n    const matchingItemIndex = updatedWbcInfo.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    if (matchingItemIndex !== -1) {\r\n      updatedWbcInfo[matchingItemIndex].images.push(draggedImage);\r\n    } else {\r\n      console.error('일치하는 id를 가진 요소 없음');\r\n    }\r\n    // 이미지를 한 개만 드래그한 경우에만 이동 API 호출\r\n    await moveImage(matchingItemIndex, [{fileName: draggedImage.fileName}], wbcInfo.value[draggedCircleIndex.value], updatedWbcInfo[matchingItemIndex], false);\r\n  } else {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    // 여러 이미지를 드래그한 경우에도 이동 API 호출\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.wbcImgWrapLi') && !target.closest('.context-menu') && target.className !== 'openseadragon-canvas') {\r\n    // 모든 selected-image 클래스를 리셋\r\n    selectedClickImages.value = [];\r\n    shiftClickImages.value = [];\r\n    selectItemImageArr.value = [];\r\n  }\r\n}\r\n\r\nasync function handleKeyDown(event: KeyboardEvent) {\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n\r\n  if (event.key === 'Escape' && modalOpen) {\r\n    modalOpen.value = false;\r\n  }\r\n\r\n  // 이미지 이동 단축키 확인\r\n  if (projectType.value === 'pb') {\r\n    if (event.key && (selectItems.value?.testType === '01' || selectItems.value?.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem((selectItems.value?.testType === '01' || selectItems.value?.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  } else if (projectType.value === 'bm') {\r\n    if (event.key && wbcHotKeysItems.value.some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem(wbcHotKeysItems.value.find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nasync function moveSelectedImagesToTargetItem(targetItem: any) {\r\n  const targetIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (targetItem.title || targetItem.abbreviation));\r\n  const selectedImages = selectedClickImages.value;\r\n  await addToRollbackHistory();\r\n\r\n  const selectedImagesToMove = [];\r\n  for (const selectedImage of selectedImages) {\r\n    const sourceItemIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (selectedImage.title || selectedImage.abbreviation));\r\n    const sourceItem = wbcInfo.value[sourceItemIndex];\r\n    const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n    if (imageIndex !== -1) {\r\n      selectedImagesToMove.push({\r\n        fileName: selectedImage.fileName,\r\n        id: selectedImage.id,\r\n        title: selectedImage.title\r\n      });\r\n    }\r\n  }\r\n\r\n  if (selectedImagesToMove.length > 0) {\r\n    await moveImage(targetIndex, selectedImagesToMove, selectedImages, targetItem, true, 'keyMove');\r\n  }\r\n}\r\n\r\n\r\nfunction handleKeyUp(event: KeyboardEvent) {\r\n  // Shift 키가 떼어졌는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n}\r\n\r\nasync function initData(newData: any, upDown: any, upDownData: any) {\r\n  wbcInfo.value = [];\r\n\r\n  let selectItemsVal: any = [];\r\n  if (!upDown) {\r\n    wbcInfo.value = selectItems.value.wbcInfoAfter.length !== 0 ? selectItems.value.wbcInfoAfter : selectItems.value.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = selectItems.value;\r\n  } else {\r\n    wbcInfo.value = upDownData.wbcInfoAfter.length !== 0 ? upDownData.wbcInfoAfter : upDownData.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = upDownData;\r\n  }\r\n  if (selectItemsVal.wbcInfoAfter && selectItemsVal.wbcInfoAfter.length !== 0) {\r\n    wbcInfo.value = selectItemsVal.wbcInfoAfter;\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      const title = item.title;\r\n      const correspondingItem = selectItemsVal.wbcInfoAfter.find((afterItem: any) => afterItem.title === title);\r\n      if (correspondingItem) {\r\n        correspondingItem.images.forEach((item: any) => {\r\n          item.title = title;\r\n        })\r\n      }\r\n    });\r\n  } else {\r\n    wbcInfo.value = selectItemsVal.wbcInfo.wbcInfo[0];\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      if (item.images && item.images.length > 0) {\r\n        item.images.forEach((itemImg: any) => {\r\n          itemImg.title = item.title;\r\n        })\r\n      }\r\n    });\r\n  }\r\n  if (newData !== '') {\r\n    selectItemsVal.wbcInfo.wbcInfo[0] = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => {\r\n      return !newData.find((dataItem: any) => dataItem.customNum === item.id && dataItem.abbreviation === \"\");\r\n    });\r\n  }\r\n\r\n  // customClass wbcInfo After 상태에서 추가하는 코드\r\n  const wbcInfoIdArr = wbcInfo.value.map((item: any) => item.id)\r\n  const customClassArr = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => !wbcInfoIdArr.includes(item.id))\r\n  wbcInfo.value = [...wbcInfo.value, ...customClassArr];\r\n\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n\r\n  // UIMD web 팀에서만 사용하는 코드\r\n  await handleMoveImages();\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nfunction onDragOver() {\r\n  //이부분이 없으면 드래그 동작안함 지우지마세요\r\n}\r\n\r\nfunction onDragStart(itemIndex: any, imageIndex: any) {\r\n  // 드래그 시작 시 인덱스 저장\r\n  draggedItemIndex.value = itemIndex;\r\n  draggedImageIndex.value = imageIndex;\r\n  draggedCircleImgIndex.value = imageIndex;\r\n  draggedCircleIndex.value = itemIndex;\r\n  draggedCircleIndexArr.value.push(itemIndex);\r\n}\r\n\r\nfunction selectImage(itemIndex: any, imageIndex: any, classInfoitem: any) {\r\n  if (blockClicks.value) {\r\n    return;\r\n  }\r\n  // 쉬프트 키를 누른 경우\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstClickedImageIndex.value !== null) {\r\n      // 현재 선택한 이미지\r\n      shiftClickImages.value.push(imageIndex);\r\n      // 시작과 끝 인덱스 결정\r\n      const start = Math.min(firstClickedImageIndex.value, imageIndex);\r\n      const end = Math.max(firstClickedImageIndex.value, imageIndex);\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      // 범위 내의 이미지 선택\r\n      for (let i = start; i <= end; i++) {\r\n        selectedClickImages.value.push({\r\n          id: wbcInfo.value[itemIndex].id,\r\n          title: wbcInfo.value[itemIndex].title,\r\n          ...wbcInfo.value[itemIndex].images[i],\r\n        });\r\n        selectItemImageArr.value.push(classInfoitem);\r\n      }\r\n\r\n      /** TODO 모두 선택할 경우 check 표시 활성화 - Shift 클릭 및 하나의 아이템도 클릭했을 때 check 표시 뜨게 구현해야 함 */\r\n      if (selectItemImageArr.value.length === end - start + 1) {\r\n        selectedTitle.value = wbcInfo.value[0].title;\r\n      }\r\n    }\r\n  } else { // 쉬프트 키를 누르지 않은 경우\r\n    // 처음 클릭한 이미지의 인덱스를 저장\r\n    firstClickedImageIndex.value = imageIndex;\r\n\r\n    const selectedImage = wbcInfo.value[itemIndex].images[imageIndex];\r\n    if (!isCtrlKeyPressed.value) {\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemImageArr.value.push(classInfoitem);\r\n      return;\r\n    }\r\n\r\n    // 선택된 이미지가 배열에 있는지 확인\r\n    const imageIndexInSelected = selectedClickImages.value.findIndex((img: any) => img.fileName === selectedImage.fileName);\r\n\r\n    if (imageIndexInSelected === -1) {\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemImageArr.value.push(classInfoitem);\r\n    } else {\r\n      // 이미 선택된 이미지를 다시 클릭하면 선택 해제\r\n      selectedClickImages.value.splice(imageIndexInSelected, 1);\r\n      selectItemImageArr.value.splice(imageIndexInSelected, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction isSelected(image: any) {\r\n  const imageFileName = image.fileName;\r\n  return selectedClickImages.value.some((selectedImage: any) => selectedImage.fileName === imageFileName);\r\n}\r\n\r\nconst isLowMagnWhether = async (image: any) => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path\r\n      ? selectItems.value?.img_drive_root_path\r\n      : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value.slotId}/04_WPS/WPS.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const extracted = image.fileName.split('_').slice(2).join('_');\r\n\r\n  // response_new.data가 배열인지 확인\r\n  if (Array.isArray(response_new.data)) {\r\n    return response_new.data.some((el: any) => el.FILE_NM === extracted);\r\n  } else {\r\n    console.error('response_new.data is not an array:', response_new.data);\r\n    return false; // 또는 적절한 기본값 반환\r\n  }\r\n}\r\n\r\n\r\nasync function onDrop(targetItemIndex: any) {\r\n  await addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    return await originalOnDrop(targetItemIndex);\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n\r\n  const selectedImagesToMove = [];\r\n  const draggedItems = [];\r\n  const targetItems = [];\r\n  let type = false;\r\n  let keyMove = '';\r\n\r\n  for (const selectedImage of selectedClickImages.value) {\r\n    const fileName = selectedImage.fileName;\r\n\r\n    const draggedItemIndex = wbcInfo.value.findIndex((item: any) =>\r\n        item.images.some((img: any) => img.fileName === fileName)\r\n    );\r\n\r\n    if (draggedItemIndex === -1) {\r\n      console.error(`Dragged item with image ${fileName} not found`);\r\n      continue;\r\n    }\r\n\r\n    const draggedItem = wbcInfo.value[draggedItemIndex];\r\n\r\n    if (draggedItem.id === wbcInfo.value[targetItemIndex].id) {\r\n      selectedTitle.value = '';\r\n      continue;\r\n    }\r\n\r\n    selectedImagesToMove.push({fileName: selectedImage.fileName});\r\n    draggedItems.push(draggedItem);\r\n    targetItems.push(wbcInfo.value[targetItemIndex]);\r\n\r\n    keyMove = keyMove || (selectedImage.keyMove || '');\r\n  }\r\n\r\n  if (selectedImagesToMove.length > 0) {\r\n    await moveImage(targetItemIndex, selectedImagesToMove, draggedItems, targetItems[0], type, keyMove);\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n}\r\n\r\n\r\nasync function originalOnDrop(targetItemIndex: number) {\r\n  //targetItemIndex -> 옮겨져야하는 index\r\n  if ((draggedItemIndex.value !== null && draggedImageIndex.value !== null) && (draggedItemIndex.value !== targetItemIndex)) {\r\n    const draggedItem = wbcInfo.value[draggedItemIndex.value];\r\n    const draggedImage = draggedItem.images[draggedImageIndex.value]; // 드래그 후 옮기는 이미지\r\n    // 이미지 이동 함수 호출\r\n\r\n    await moveImage(targetItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n}\r\n\r\n\r\nasync function moveImage(targetItemIndex: number, selectedImagesToMove: any[], draggedItem: any, targetItem: any, type: boolean, keyMove?: string, wbcInfosArr?: any) {\r\n  wbcInfoRefresh.value = false;\r\n  const {slotId} = selectItems.value;\r\n  const arrType = selectedImagesToMove;\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n  let idx = 0;\r\n  // 선택된 이미지 배열에 대해 반복\r\n  for (const selectedImage of arrType) {\r\n    const fileName = selectedImage.fileName;\r\n    fileNames.push(fileName);\r\n    try {\r\n      if (keyMove === 'keyMove') { // 단축키로 움직였을 경우\r\n        const formattedTargetItemId = targetItem.id < 10 ? `0${targetItem.id}` : targetItem.id;\r\n\r\n        const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n        const matchingItem = classInfoBagic.find(item => item.abbreviation === (selectedImage.title || selectedImage.abbreviation));\r\n        const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${selectedImage.title}` :\r\n            `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${draggedItem[idx].title}`;\r\n        const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${formattedTargetItemId}_${targetItem.abbreviation}`;\r\n        destinationFolders.push(destinationFolder);\r\n        sourceFolders.push(sourceFolder);\r\n      } else if (!wbcInfosArr && keyMove !== 'keyMove') { // 마우스로 같은 class 공간으로 드롭시켜서 이동시\r\n        const newArr = draggedItem[idx] ? draggedItem[idx] : draggedItem;\r\n        const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${selectedImage.id}_${selectedImage.title}` :\r\n            `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${newArr.id}_${newArr.title}`;\r\n        const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n        destinationFolders.push(destinationFolder);\r\n        sourceFolders.push(sourceFolder);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during image move:', error);\r\n    }\r\n    idx++;\r\n  }\r\n\r\n  // 최종적으로 백엔드로 데이터 전송\r\n  const data = {\r\n    sourceFolders,\r\n    destinationFolders,\r\n    fileNames\r\n  };\r\n\r\n  try {\r\n\r\n    const res = await moveClassImagePost(data);\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n    if (res) {\r\n      let idx = 0;\r\n      for (const selectedImage of arrType) {\r\n        const fileName = selectedImage.fileName;\r\n\r\n        if (keyMove === 'keyMove') {\r\n          // 이미지를 타겟 아이템으로 이동\r\n          const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title === (selectedImage.title || selectedImage.abbreviation));\r\n          const sourceItem = wbcInfo.value[sourceItemIndex];\r\n          const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === fileName);\r\n          if (imageIndex !== -1) {\r\n            const image = sourceItem.images.splice(imageIndex, 1)[0];\r\n            image.title = wbcInfo.value[targetItemIndex].title;\r\n            image.width = imageSize.value;\r\n            image.height = imageSize.value;\r\n            image.imgBrightness = imgBrightness.value;\r\n            wbcInfo.value[targetItemIndex].images.push(image);\r\n            // 카운트 업데이트\r\n            sourceItem.count--;\r\n            wbcInfo.value[targetItemIndex].count++;\r\n          }\r\n        } else {\r\n          let newArr: any = [];\r\n          if (!draggedItem[idx]) {\r\n            newArr = draggedItem;\r\n          } else {\r\n            newArr = draggedItem[idx];\r\n          }\r\n          // 드래그된 이미지를 원래 위치에서 제거\r\n          const draggedImageIndex = newArr.images.findIndex((img: any) => img.fileName === fileName);\r\n          if (draggedImageIndex !== -1) {\r\n            newArr.images.splice(draggedImageIndex, 1);\r\n          }\r\n          const newArrIdx = wbcInfo.value.findIndex((item: any) => item.title === newArr.title);\r\n          wbcInfo.value[newArrIdx] = newArr;\r\n          const imgAttr = {\r\n            width: imageSize.value,\r\n            height: imageSize.value,\r\n            filter: `opacity(0.9) drop-shadow(0 0 0 rgb(${imageRgb.value[0]}, ${imageRgb.value[1]}, ${imageRgb.value[2]})) brightness(${imgBrightness.value}%)`,\r\n          };\r\n          // 드롭된 위치에 이미지를 삽입\r\n          wbcInfo.value[targetItemIndex].images.push({...selectedImage, ...imgAttr});\r\n\r\n          wbcInfo.value = removeDuplicateImages(wbcInfo.value);\r\n          wbcInfo.value.forEach((item: any) => {\r\n            item.count = item.images.length;\r\n            if (item.images.length > 0) {\r\n              item.images.forEach((itemImg: any) => {\r\n                itemImg.title = item.title;\r\n              });\r\n            }\r\n          });\r\n        }\r\n        idx++;\r\n      }\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      shiftClickImages.value = [];\r\n      await updateOriginalDb();\r\n    } else {\r\n      console.error('이미지 옮기기 실패.');\r\n    }\r\n  } catch (error) {\r\n    console.error('이미지 옮기는 작업 서버 실패:', error);\r\n  } finally {\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n  }\r\n\r\n  if (wbcInfosArr) { // 동그라미 네비게이션 바로 옮길경우, 또는 우클릭 해서 클래스 이동시 사용\r\n    try {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n      for (const seItem of selectItemImageArr.value) {\r\n        const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n        const matchingItem = classInfoBagic.find(item => item.abbreviation === (seItem.title || seItem.abbreviation));\r\n        const sourceFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${seItem.title}`;\r\n        const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n        destinationFolders.push(destinationFolder);\r\n        sourceFolders.push(sourceFolder);\r\n      }\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      }\r\n      let res = await moveClassImagePost(data);\r\n      if (res) {\r\n        // selectedImagesToMove 배열의 이미지를 targetItemIndex에서 wbcInfo.value의 객체에 추가\r\n        const targetItem = wbcInfo.value[targetItemIndex];\r\n        for (const seItem of removeDuplicatesByProperty(selectItemImageArr.value, 'title')) {\r\n          const findImage = selectedImagesToMove.filter(item => item.title === (seItem.title || seItem.abbreviation));\r\n          targetItem.images.push(...findImage);\r\n          targetItem.count = targetItem.images.length;\r\n          const draggedItemIdx = wbcInfo.value.findIndex((item: any) => item.title === (seItem.title || seItem.abbreviation));\r\n          if (draggedItemIdx !== -1) {\r\n            const draggedItemObj = wbcInfo.value[draggedItemIdx];\r\n            const selectedImagesFileNames = selectedImagesToMove.map(image => image.fileName);\r\n            const filteredImages = draggedItemObj.images.filter((image: any) => !selectedImagesFileNames.includes(image.fileName));\r\n            // 새로 생성한 배열을 draggedItemObj의 images 배열에 할당\r\n            draggedItemObj.images = filteredImages;\r\n            draggedItemObj.count = draggedItemObj.images.length;\r\n          }\r\n        }\r\n        for (const images of selectedImagesToMove) {\r\n          images.title = wbcInfo.value[targetItemIndex].title;\r\n          images.width = imageSize.value;\r\n          images.height = imageSize.value;\r\n          images.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${imageRgb.value[0]}, ${imageRgb.value[1]}, ${imageRgb.value[2]})) brightness(${imgBrightness.value}%)`;\r\n\r\n        }\r\n      } else {\r\n        console.error('이미지 움직임 실패.');\r\n      }\r\n    } catch (error) {\r\n      console.error('서버 이미지 옮기기 실패:', error);\r\n    } finally {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n  allCheck.value = '';\r\n  selectedTitle.value = '';\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nfunction removeDuplicatesByProperty(array: any, property: any) {\r\n  const seen = new Set();\r\n  return array.filter((item: any) => {\r\n    const key = item[property];\r\n    if (seen.has(key)) {\r\n      return false; // 중복된 객체는 제거\r\n    } else {\r\n      seen.add(key);\r\n      return true; // 처음 등장한 객체는 유지\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeDuplicateImages(data: any[]): any[] {\r\n  const uniqueFileNames = new Set<string>();\r\n\r\n  return data.map(item => {\r\n    const uniqueImages = item.images.filter((image: any) => {\r\n      if (!uniqueFileNames.has(image.fileName)) {\r\n        uniqueFileNames.add(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {...item, images: uniqueImages};\r\n  });\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nasync function updateOriginalDb(notWbcAfterSave?: string) {\r\n  let originalDbVal: any = [];\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        totalCount += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        totalCount += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) { // 퍼센트를 소수점 한 자리까지 계산\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 부분이 0이면 정수만, 아니면 소수점 한 자리까지 표시\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  let uniqueImages: any = [];\r\n  const uniqueData = clonedWbcInfo.map((item: any) => {\r\n    const uniqueImagesForItem = item.images.filter((image: any) => {\r\n      if (!uniqueImages.includes(image.fileName)) {\r\n        uniqueImages.push(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return {...item, images: uniqueImagesForItem};\r\n  });\r\n  clonedWbcInfo = uniqueData;\r\n  if (notWbcAfterSave !== 'notWbcAfterSave') {\r\n    // wbcInfoAfter 업데이트\r\n    selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n\r\n    wbcInfo.value = clonedWbcInfo;\r\n\r\n    // originalDb 업데이트\r\n    const res: any = slideData.value;\r\n    if (res) res.wbcInfoAfter = clonedWbcInfo;\r\n    const {isNormal, classInfo} = checkPbNormalCell(clonedWbcInfo, normalItems.value)\r\n    res.isNormal = isNormal;\r\n    res.abnormalClassInfo = classInfo;\r\n    // 실제 락 거는 부분 여기로 변경 함 그래프 ql 로 변경하면서 버그 방지를 위해서 변경\r\n    res.pcIp = ipAddress.value;\r\n    res.lock_status = true;\r\n    res.submitState = res.submitState === '' || !res?.submitState ? 'checkFirst' : res.submitState;\r\n    originalDbVal = [res];\r\n  }\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, originalDbVal);\r\n}\r\n\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  try {\r\n    const res = await gqlGenericUpdate(useUpdateRunningInfoMutation, {\r\n      id: originalDb[0].id,\r\n      isNormal: originalDb[0].isNormal,\r\n      abnormalClassInfo: originalDb[0].abnormalClassInfo,\r\n      pcIp: originalDb[0].pcIp,\r\n      lock_status: originalDb[0].lock_status,\r\n      wbcInfoAfter: originalDb[0].wbcInfoAfter,\r\n      submitState: originalDb[0].submitState,\r\n    });\r\n\r\n    if (res && res?.data?.updateRunningInfoGQL[0].length !== 0) {\r\n      // getWbcCustomClasses(false, null);\r\n      if (cellMarkerIcon.value) {\r\n        // 다시 불러올경우 셀마킹이 켜있는경우 다시 셀마크 그려주기\r\n        await drawCellMarker(true);\r\n      }\r\n      wbcInfo.value = [];\r\n      wbcInfo.value = res?.data?.updateRunningInfoGQL[0].wbcInfoAfter;\r\n\r\n      const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n      await sortWbcInfo(wbcInfo.value, sortArr);\r\n      wbcReset.value = true;\r\n      await nextTick();\r\n      wbcReset.value = false;\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any) => {\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response: any = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo],\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (!response) {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const slotId = selectItems.value?.slotId || \"\";\r\n  let folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n\r\n  // 타임스탬프 추가\r\n\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n\r\n\r\n  return url;\r\n}\r\n\r\n\r\nasync function rollbackChanges() {\r\n  if (rollbackHistory.length <= 0) return;\r\n\r\n  // 롤백할 때마다 히스토리에서 마지막 상태를 꺼내어 복원\r\n  const prevWbcInfo = rollbackHistory.pop();\r\n\r\n  // 롤백 후 초기화\r\n  draggedItemIndex.value = null;\r\n  draggedImageIndex.value = null;\r\n  draggedCircleIndex.value = null;\r\n  draggedCircleIndexArr.value = [];\r\n  draggedCircleImgIndex.value = null;\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n\r\n  // 현재 상태에서 이전 상태로 이미지 롤백\r\n  await rollbackImages(wbcInfo.value, prevWbcInfo);\r\n\r\n  // wbcInfo 업데이트\r\n  wbcInfo.value = prevWbcInfo;\r\n}\r\n\r\nconst findUndefinedImages = (sourceWbcInfo: any, targetWbcInfo: any, infoArray: any) => {\r\n  sourceWbcInfo.forEach((sourceItem: any, sourceIndex: any) => {\r\n    const targetItem = targetWbcInfo[sourceIndex];\r\n    if (sourceItem && targetItem) {\r\n      sourceItem.images.forEach((sourceImage: any, imageIndex: any) => {\r\n        const targetImage = targetItem.images[imageIndex];\r\n        if (targetImage === undefined) {\r\n          infoArray.push({\r\n            itemIndex: sourceIndex,\r\n            imageIndex,\r\n            fileName: sourceImage.fileName,\r\n            title: targetItem.title,\r\n            id: targetItem.id,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nasync function rollbackImages(currentWbcInfo: any, prevWbcInfo: any) {\r\n  // 각 상태에서 이동된 이미지 정보 추출\r\n  const sourceFolderInfo: any = [];\r\n  const destinationFolderInfo: any = [];\r\n  findUndefinedImages(currentWbcInfo, prevWbcInfo, sourceFolderInfo);\r\n  findUndefinedImages(prevWbcInfo, currentWbcInfo, destinationFolderInfo);\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 이동된 이미지들을 이전 위치로 다시 이동시킴\r\n  for (const index in sourceFolderInfo) {\r\n    const sourceFolder = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${sourceFolderInfo[index].id}_${sourceFolderInfo[index].title}`;\r\n    const destinationFolder = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${destinationFolderInfo[index].id}_${destinationFolderInfo[index].title}`;\r\n    sourceFolders.push(sourceFolder)\r\n    destinationFolders.push(destinationFolder)\r\n    fileNames.push(sourceFolderInfo[index].fileName)\r\n\r\n  }\r\n  const data = {\r\n    sourceFolders: sourceFolders,\r\n    destinationFolders: destinationFolders,\r\n    fileNames: fileNames,\r\n  }\r\n  let response = await moveClassImagePost(data);\r\n\r\n  if (response) {\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n  updateWbcInfo.value = wbcInfo.value;\r\n  // Rollback 후 현재 Class List로 정렬\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nconst handleMoveImages = async () => {\r\n  try {\r\n    const folderPath = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}`;\r\n    const response = await fetch(`${apiBaseUrl}/folders/check-and-move-images`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({folderPath, wbcInfo: wbcInfo.value}),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst uploadLisChangeSlide = (hospitalNm: any) => {\r\n  if (hospitalNm === HOSPITAL_SITE_CD_BY_NAME['인천길병원']) {\r\n    changeSlideByLisUpload.value = !changeSlideByLisUpload.value;\r\n  }\r\n}\r\n\r\nasync function getNormalRange() {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst updateCBCData = async (incomingSlideData: any) => {\r\n  const path = incomingSlideData?.img_drive_root_path !== '' && incomingSlideData?.img_drive_root_path ? incomingSlideData?.img_drive_root_path : pbiaRootDir.value;\r\n  const cbcData: any = await initCBCData({\r\n    barcodeNo: incomingSlideData.barcodeNo,\r\n    siteCd: siteCd.value,\r\n    userId: userId.value,\r\n    deviceSerialNm: deviceSerialNm.value,\r\n    imageDriveRootPath: path,\r\n    slotId: incomingSlideData.slotId\r\n  })\r\n\r\n  if (cbcData) {\r\n    const cbcChangeData = {\r\n      cbcPatientNm: cbcData?.cbcPatientNm,\r\n      patientNm: cbcData?.cbcPatientNm\r\n    }\r\n\r\n    const updatedRunningInfo = {...incomingSlideData, ...cbcChangeData};\r\n\r\n    patientNm.value = cbcData?.cbcPatientNm;\r\n    cbcPatientNm.value = cbcData?.cbcPatientNm;\r\n    await resRunningItem(updatedRunningInfo);\r\n  }\r\n}\r\n\r\nconst allClassesChecked = async () => {\r\n  isAllClassesChecked.value = true;\r\n\r\n  // const result = slideData.value;\r\n  // result.isAllClassesChecked = true;\r\n  // await gqlIsAllClassesCheckedUpdate([result]);\r\n}\r\n\r\n</script>\r\n","import script from \"./listDetail.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listDetail.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"leftImgList\" }\nconst _hoisted_2 = { class: \"leftImgUl\" }\nconst _hoisted_3 = [\"src\", \"onDblclick\"]\nconst _hoisted_4 = { class: \"leftImgUl\" }\nconst _hoisted_5 = [\"src\", \"onDblclick\"]\nconst _hoisted_6 = { class: \"leftImgUl\" }\nconst _hoisted_7 = [\"src\", \"onDblclick\"]\nconst _hoisted_8 = { class: \"leftImgUl\" }\nconst _hoisted_9 = [\"src\", \"onDblclick\"]\n\nimport { computed, onMounted, ref, watch } from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport axios from \"axios\";\r\nimport { useStore } from \"vuex\";\r\nimport { readDziFile } from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport { fileReadJpg } from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {openseadragonPrefixUrl} from \"@/common/lib/utils/assetUtils\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'leftImgList',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst paImages = ref([]);\r\nconst idealZoneImages = ref([]);\r\nconst idealStitchImages = ref([]);\r\nconst megaImages = ref([]);\r\n\r\nconst particleImageUrls: any = ref([]);\r\nconst idealZoneImageUrls: any = ref([]);\r\nconst idealStitchImageUrls: any = ref([]);\r\nconst megaImageUrls: any = ref([]);\r\n\r\nconst strArray = ['02_Particle_Image', '03_Cell_Ideal_Image', '04_Cell_Ideal_Stitch_Image', '05_Mega_Image'];\r\nconst buttonOfen = ref(false);\r\nlet viewerSmall: any = null;\r\n\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\n\r\nonMounted(async () => {\r\n  await getImgUrl();\r\n});\r\n\r\nwatch(() => props.selectItems, async () => {\r\n  await getImgUrl();\r\n});\r\n\r\nconst bmOldDataDivision = async (folderName: string): Promise<boolean> => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n  const fileNames = await response.json();\r\n  return fileNames.some((fileName: any) => fileName.endsWith('_files'));\r\n}\r\n\r\nconst getImageUrlsSmallImg = async (imageName: string, type: string) => {\r\n  let folderName;\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  let returnVal = '';\r\n\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = `02_Particle_Image/${imageName}/10`;\r\n      returnVal = await bmOldDataDivision('02_Particle_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/${folderName}/0_0.jpg`\r\n          : '02_Particle_Image/Thumb';\r\n      break;\r\n    case 'idealZone':\r\n      returnVal = await bmOldDataDivision('03_Cell_Ideal_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/03_Cell_Ideal_Image/${imageName}`\r\n          : '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = `04_Cell_Ideal_Stitch_Image/${imageName}/10`;\r\n      returnVal = await bmOldDataDivision('04_Cell_Ideal_Stitch_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/${folderName}/0_0.jpg`\r\n          : '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      returnVal = await bmOldDataDivision('05_Mega_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/05_Mega_Image/${imageName}`\r\n          : '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return returnVal.includes(apiBaseUrl)\r\n      ? returnVal\r\n      : `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/${returnVal}/${imageName}`;\r\n};\r\n\r\nconst getImgUrl = async () => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n\r\n  for (const item of strArray) {\r\n    try {\r\n      const response = await axios.get(`${apiBaseUrl}/folders?folderPath=${path}/${slotId}/${item}`);\r\n      switch (item) {\r\n        case '02_Particle_Image':\r\n          paImages.value = await bmOldDataDivision('02_Particle_Image')\r\n              ? response.data.filter((resp: any) => !resp.includes('.dzi')).slice(0, 7)\r\n              : response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 7);\r\n          particleImageUrls.value = await Promise.all(paImages.value.map((image: string) => getImageUrlsSmallImg(image, 'particle')));\r\n          break;\r\n        case '03_Cell_Ideal_Image':\r\n          idealZoneImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 14);\r\n          idealZoneImageUrls.value = await Promise.all(idealZoneImages.value.map((image: string) => getImageUrlsSmallImg(image, 'idealZone')));\r\n          break;\r\n        case '04_Cell_Ideal_Stitch_Image':\r\n          idealStitchImages.value = await bmOldDataDivision('04_Cell_Ideal_Stitch_Image')\r\n              ? response.data.filter((resp: any) => !resp.includes('.dzi')).slice(0, 7)\r\n              : response.data.filter((resp: any) => resp !== 'Thumb');\r\n          idealStitchImageUrls.value = await Promise.all(idealStitchImages.value.map((image: string) => getImageUrlsSmallImg(image, 'idealStitch')));\r\n          break;\r\n        case '05_Mega_Image':\r\n          megaImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n          megaImageUrls.value = await Promise.all(megaImages.value.map((image: string) => getImageUrlsSmallImg(image, 'mega')));\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  }\r\n};\r\n\r\n// 이미지를 더블클릭하면 OpenSeadragon 뷰어에서 열기\r\nconst openInViewer = async (imageUrl: string, type: string, bmOldData: any, index: any) => {\r\n  // 기존의 뷰어 제거\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n  }\r\n\r\n  let urlTileSources: any = {};\r\n  if (type === '03_Cell_Ideal_Image' || !await bmOldData) {\r\n    urlTileSources = {\r\n      type: \"image\",\r\n      url: imageUrl,\r\n    }\r\n  } else {\r\n    const slotId = props.selectItems?.slotId || \"\";\r\n    const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n\r\n    const folderPath = `${path}/${slotId}/${type}`;\r\n    const newVal = await fetchTilesInfo(folderPath);\r\n    urlTileSources = newVal[index];\r\n  }\r\n  // 새로운 OpenSeadragon 뷰어 생성\r\n  viewerSmall = OpenSeadragon({\r\n    id: \"viewerSmall\",\r\n    element: document.getElementById(\"viewerSmall\"),\r\n    tileSources: urlTileSources,\r\n    defaultZoomLevel: 0.2,\r\n    navigator: false,\r\n    prefixUrl: openseadragonPrefixUrl(apiBaseUrl),\r\n    minZoomLevel: 0.2,\r\n    maxZoomLevel: 2,\r\n    showZoomControl: false,\r\n    showHomeControl: false,\r\n    showFullScreenControl: false,\r\n    showRotationControl: false,\r\n    showFullPageControl: false,\r\n  });\r\n  buttonOfen.value = true;\r\n\r\n// 새로운 버튼 생성\r\n  const customButton = document.createElement('img');\r\n  customButton.alt = 'Close Viewer'; // 버튼 텍스트 설정\r\n  customButton.style.position = 'absolute';\r\n  customButton.style.transform = 'rotate(45deg)'; // 45도 기울이기\r\n  customButton.style.cursor = 'pointer';\r\n  customButton.style.padding = '10px';\r\n  customButton.style.color = 'white';\r\n  customButton.src = openseadragonPrefixUrl(apiBaseUrl) + 'zoomin_grouphover.png';\r\n\r\n// 클릭 이벤트 핸들러 추가\r\n  customButton.addEventListener('click', () => {\r\n    closeViewer();\r\n  });\r\n\r\n\r\n// OpenSeadragon 컨트롤로 추가\r\n  viewerSmall.addControl(customButton, {\r\n    anchor: OpenSeadragon.ControlAnchor.ABSOLUTE,\r\n    top: 100,\r\n    left: '49%'\r\n  });\r\n\r\n  viewerSmall.addHandler(\"open\", function () {\r\n    // 타일링 뷰어에 height 동적 조정\r\n    const imageWidth = viewerSmall.source.dimensions.x;\r\n    const imageHeight = viewerSmall.source.dimensions.y;\r\n\r\n    const tilingViewerElement: any = document.getElementById(\"viewerSmall\");\r\n\r\n    const containerWidth = tilingViewerElement.clientWidth;\r\n    const aspectRatio = imageHeight / imageWidth;\r\n    const dynamicHeight = containerWidth * aspectRatio;\r\n\r\n    tilingViewerElement.style.position = `fixed`;\r\n    tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n    tilingViewerElement.style.width = `100%`;\r\n    tilingViewerElement.style.left = `0`;\r\n    tilingViewerElement.style.background = `#00000061`;\r\n  });\r\n\r\n  viewerSmall.addHandler('canvas-click', (event: any) => {\r\n    event.preventDefaultAction = true;\r\n  })\r\n\r\n};\r\n\r\nconst closeViewer = () => {\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n\r\n    // // viewerSmall 요소를 제거하여 닫기\r\n    const viewerElement = document.getElementById('viewerSmall');\r\n    if (viewerElement) {\r\n      viewerElement.innerHTML = '';  // 뷰어 요소의 내용을 비워서 닫기\r\n      viewerElement.style.background = 'none';\r\n      viewerElement.style.height = `0`;\r\n      viewerElement.style.width = `0`;\r\n\r\n      // 클릭 이벤트 리스너 제거\r\n      viewerElement.removeEventListener('click', closeViewer);\r\n    }\r\n\r\n    // viewerSmall 변수를 null로 설정\r\n    viewerSmall = null;\r\n    buttonOfen.value = false;\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n\r\n      const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n      const { width, height, tileSize } = await dziWidthHeight(fileNameResult, folderPath);\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: tileSize,\r\n          Size: {\r\n            Width: width,\r\n            Height: height\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\nconst dziWidthHeight = async (imageFileName: any, folderPath: string): Promise<any> => {\r\n  const urlImage = `${folderPath}/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({ filePath: urlImage });\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return { fileName, width: Number(width), height: Number(height), tileSize: Number(tileSize) }\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _cache[4] || (_cache[4] = _createElementVNode(\"div\", { id: \"viewerSmall\" }, null, -1)),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _cache[0] || (_cache[0] = _createElementVNode(\"p\", null, \"Partical Image\", -1)),\n      _createElementVNode(\"ul\", _hoisted_2, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(paImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: index,\n            class: \"leftImgLi\"\n          }, [\n            _createElementVNode(\"img\", {\n              src: particleImageUrls.value[index],\n              alt: \"Partical Image\",\n              onDblclick: ($event: any) => (openInViewer(particleImageUrls.value[index], '02_Particle_Image', bmOldDataDivision('02_Particle_Image'), index))\n            }, null, 40, _hoisted_3)\n          ]))\n        }), 128))\n      ]),\n      _cache[1] || (_cache[1] = _createElementVNode(\"p\", null, \"Ideal Zone\", -1)),\n      _createElementVNode(\"ul\", _hoisted_4, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(idealZoneImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: index,\n            class: \"leftImgLi\",\n            style: {\"width\":\"100px\"}\n          }, [\n            _createElementVNode(\"img\", {\n              src: idealZoneImageUrls.value[index],\n              onDblclick: ($event: any) => (openInViewer(idealZoneImageUrls.value[index], '03_Cell_Ideal_Image',bmOldDataDivision('03_Cell_Ideal_Image'), index))\n            }, null, 40, _hoisted_5)\n          ]))\n        }), 128))\n      ]),\n      _cache[2] || (_cache[2] = _createElementVNode(\"p\", null, \"Ideal Stitch\", -1)),\n      _createElementVNode(\"ul\", _hoisted_6, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(idealStitchImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: index,\n            class: \"leftImgLi\"\n          }, [\n            _createElementVNode(\"img\", {\n              src: idealStitchImageUrls.value[index],\n              onDblclick: ($event: any) => (openInViewer(idealStitchImageUrls.value[index], '04_Cell_Ideal_Stitch_Image',bmOldDataDivision('04_Cell_Ideal_Stitch_Image'), index))\n            }, null, 40, _hoisted_7)\n          ]))\n        }), 128))\n      ]),\n      _cache[3] || (_cache[3] = _createElementVNode(\"p\", null, \"Megakaryocyte\", -1)),\n      _createElementVNode(\"ul\", _hoisted_8, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(megaImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: index,\n            class: \"leftImgLi\"\n          }, [\n            _createElementVNode(\"img\", {\n              src: megaImageUrls.value[index],\n              onDblclick: ($event: any) => (openInViewer(megaImageUrls.value[index], '05_Mega_Image',bmOldDataDivision('05_Mega_Image'), index))\n            }, null, 40, _hoisted_9)\n          ]))\n        }), 128))\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div id=\"viewerSmall\"></div>\r\n  <div class=\"leftImgList\">\r\n    <p>Partical Image</p>\r\n    <ul class=\"leftImgUl\">\r\n      <li v-for=\"(image, index) in paImages\" :key=\"index\" class=\"leftImgLi\">\r\n        <img :src=\"particleImageUrls[index]\" alt=\"Partical Image\"\r\n             @dblclick=\"openInViewer(particleImageUrls[index], '02_Particle_Image', bmOldDataDivision('02_Particle_Image'), index)\">\r\n      </li>\r\n    </ul>\r\n\r\n    <p>Ideal Zone</p>\r\n    <ul class=\"leftImgUl\">\r\n      <li v-for=\"(image, index) in idealZoneImages\" :key=\"index\" class=\"leftImgLi\" style=\"width:100px\">\r\n        <img :src=\"idealZoneImageUrls[index]\"\r\n             @dblclick=\"openInViewer(idealZoneImageUrls[index], '03_Cell_Ideal_Image',bmOldDataDivision('03_Cell_Ideal_Image'), index)\">\r\n      </li>\r\n    </ul>\r\n\r\n    <p>Ideal Stitch</p>\r\n    <ul class=\"leftImgUl\">\r\n      <li v-for=\"(image, index) in idealStitchImages\" :key=\"index\" class=\"leftImgLi\">\r\n        <img :src=\"idealStitchImageUrls[index]\"\r\n             @dblclick=\"openInViewer(idealStitchImageUrls[index], '04_Cell_Ideal_Stitch_Image',bmOldDataDivision('04_Cell_Ideal_Stitch_Image'), index)\">\r\n      </li>\r\n      </ul>\r\n\r\n    <p>Megakaryocyte</p>\r\n    <ul class=\"leftImgUl\">\r\n        <li v-for=\"(image, index) in megaImages\" :key=\"index\" class=\"leftImgLi\">\r\n          <img :src=\"megaImageUrls[index]\"\r\n               @dblclick=\"openInViewer(megaImageUrls[index], '05_Mega_Image',bmOldDataDivision('05_Mega_Image'), index)\">\r\n        </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, defineProps, onMounted, ref, watch } from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport axios from \"axios\";\r\nimport { useStore } from \"vuex\";\r\nimport { readDziFile } from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport { fileReadJpg } from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {openseadragonPrefixUrl} from \"@/common/lib/utils/assetUtils\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst store = useStore();\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst paImages = ref([]);\r\nconst idealZoneImages = ref([]);\r\nconst idealStitchImages = ref([]);\r\nconst megaImages = ref([]);\r\n\r\nconst particleImageUrls: any = ref([]);\r\nconst idealZoneImageUrls: any = ref([]);\r\nconst idealStitchImageUrls: any = ref([]);\r\nconst megaImageUrls: any = ref([]);\r\n\r\nconst strArray = ['02_Particle_Image', '03_Cell_Ideal_Image', '04_Cell_Ideal_Stitch_Image', '05_Mega_Image'];\r\nconst buttonOfen = ref(false);\r\nlet viewerSmall: any = null;\r\n\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\n\r\nonMounted(async () => {\r\n  await getImgUrl();\r\n});\r\n\r\nwatch(() => props.selectItems, async () => {\r\n  await getImgUrl();\r\n});\r\n\r\nconst bmOldDataDivision = async (folderName: string): Promise<boolean> => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n  const fileNames = await response.json();\r\n  return fileNames.some((fileName: any) => fileName.endsWith('_files'));\r\n}\r\n\r\nconst getImageUrlsSmallImg = async (imageName: string, type: string) => {\r\n  let folderName;\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  let returnVal = '';\r\n\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = `02_Particle_Image/${imageName}/10`;\r\n      returnVal = await bmOldDataDivision('02_Particle_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/${folderName}/0_0.jpg`\r\n          : '02_Particle_Image/Thumb';\r\n      break;\r\n    case 'idealZone':\r\n      returnVal = await bmOldDataDivision('03_Cell_Ideal_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/03_Cell_Ideal_Image/${imageName}`\r\n          : '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = `04_Cell_Ideal_Stitch_Image/${imageName}/10`;\r\n      returnVal = await bmOldDataDivision('04_Cell_Ideal_Stitch_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/${folderName}/0_0.jpg`\r\n          : '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      returnVal = await bmOldDataDivision('05_Mega_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/05_Mega_Image/${imageName}`\r\n          : '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return returnVal.includes(apiBaseUrl)\r\n      ? returnVal\r\n      : `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/${returnVal}/${imageName}`;\r\n};\r\n\r\nconst getImgUrl = async () => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n\r\n  for (const item of strArray) {\r\n    try {\r\n      const response = await axios.get(`${apiBaseUrl}/folders?folderPath=${path}/${slotId}/${item}`);\r\n      switch (item) {\r\n        case '02_Particle_Image':\r\n          paImages.value = await bmOldDataDivision('02_Particle_Image')\r\n              ? response.data.filter((resp: any) => !resp.includes('.dzi')).slice(0, 7)\r\n              : response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 7);\r\n          particleImageUrls.value = await Promise.all(paImages.value.map((image: string) => getImageUrlsSmallImg(image, 'particle')));\r\n          break;\r\n        case '03_Cell_Ideal_Image':\r\n          idealZoneImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 14);\r\n          idealZoneImageUrls.value = await Promise.all(idealZoneImages.value.map((image: string) => getImageUrlsSmallImg(image, 'idealZone')));\r\n          break;\r\n        case '04_Cell_Ideal_Stitch_Image':\r\n          idealStitchImages.value = await bmOldDataDivision('04_Cell_Ideal_Stitch_Image')\r\n              ? response.data.filter((resp: any) => !resp.includes('.dzi')).slice(0, 7)\r\n              : response.data.filter((resp: any) => resp !== 'Thumb');\r\n          idealStitchImageUrls.value = await Promise.all(idealStitchImages.value.map((image: string) => getImageUrlsSmallImg(image, 'idealStitch')));\r\n          break;\r\n        case '05_Mega_Image':\r\n          megaImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n          megaImageUrls.value = await Promise.all(megaImages.value.map((image: string) => getImageUrlsSmallImg(image, 'mega')));\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  }\r\n};\r\n\r\n// 이미지를 더블클릭하면 OpenSeadragon 뷰어에서 열기\r\nconst openInViewer = async (imageUrl: string, type: string, bmOldData: any, index: any) => {\r\n  // 기존의 뷰어 제거\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n  }\r\n\r\n  let urlTileSources: any = {};\r\n  if (type === '03_Cell_Ideal_Image' || !await bmOldData) {\r\n    urlTileSources = {\r\n      type: \"image\",\r\n      url: imageUrl,\r\n    }\r\n  } else {\r\n    const slotId = props.selectItems?.slotId || \"\";\r\n    const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n\r\n    const folderPath = `${path}/${slotId}/${type}`;\r\n    const newVal = await fetchTilesInfo(folderPath);\r\n    urlTileSources = newVal[index];\r\n  }\r\n  // 새로운 OpenSeadragon 뷰어 생성\r\n  viewerSmall = OpenSeadragon({\r\n    id: \"viewerSmall\",\r\n    element: document.getElementById(\"viewerSmall\"),\r\n    tileSources: urlTileSources,\r\n    defaultZoomLevel: 0.2,\r\n    navigator: false,\r\n    prefixUrl: openseadragonPrefixUrl(apiBaseUrl),\r\n    minZoomLevel: 0.2,\r\n    maxZoomLevel: 2,\r\n    showZoomControl: false,\r\n    showHomeControl: false,\r\n    showFullScreenControl: false,\r\n    showRotationControl: false,\r\n    showFullPageControl: false,\r\n  });\r\n  buttonOfen.value = true;\r\n\r\n// 새로운 버튼 생성\r\n  const customButton = document.createElement('img');\r\n  customButton.alt = 'Close Viewer'; // 버튼 텍스트 설정\r\n  customButton.style.position = 'absolute';\r\n  customButton.style.transform = 'rotate(45deg)'; // 45도 기울이기\r\n  customButton.style.cursor = 'pointer';\r\n  customButton.style.padding = '10px';\r\n  customButton.style.color = 'white';\r\n  customButton.src = openseadragonPrefixUrl(apiBaseUrl) + 'zoomin_grouphover.png';\r\n\r\n// 클릭 이벤트 핸들러 추가\r\n  customButton.addEventListener('click', () => {\r\n    closeViewer();\r\n  });\r\n\r\n\r\n// OpenSeadragon 컨트롤로 추가\r\n  viewerSmall.addControl(customButton, {\r\n    anchor: OpenSeadragon.ControlAnchor.ABSOLUTE,\r\n    top: 100,\r\n    left: '49%'\r\n  });\r\n\r\n  viewerSmall.addHandler(\"open\", function () {\r\n    // 타일링 뷰어에 height 동적 조정\r\n    const imageWidth = viewerSmall.source.dimensions.x;\r\n    const imageHeight = viewerSmall.source.dimensions.y;\r\n\r\n    const tilingViewerElement: any = document.getElementById(\"viewerSmall\");\r\n\r\n    const containerWidth = tilingViewerElement.clientWidth;\r\n    const aspectRatio = imageHeight / imageWidth;\r\n    const dynamicHeight = containerWidth * aspectRatio;\r\n\r\n    tilingViewerElement.style.position = `fixed`;\r\n    tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n    tilingViewerElement.style.width = `100%`;\r\n    tilingViewerElement.style.left = `0`;\r\n    tilingViewerElement.style.background = `#00000061`;\r\n  });\r\n\r\n  viewerSmall.addHandler('canvas-click', (event: any) => {\r\n    event.preventDefaultAction = true;\r\n  })\r\n\r\n};\r\n\r\nconst closeViewer = () => {\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n\r\n    // // viewerSmall 요소를 제거하여 닫기\r\n    const viewerElement = document.getElementById('viewerSmall');\r\n    if (viewerElement) {\r\n      viewerElement.innerHTML = '';  // 뷰어 요소의 내용을 비워서 닫기\r\n      viewerElement.style.background = 'none';\r\n      viewerElement.style.height = `0`;\r\n      viewerElement.style.width = `0`;\r\n\r\n      // 클릭 이벤트 리스너 제거\r\n      viewerElement.removeEventListener('click', closeViewer);\r\n    }\r\n\r\n    // viewerSmall 변수를 null로 설정\r\n    viewerSmall = null;\r\n    buttonOfen.value = false;\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n\r\n      const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n      const { width, height, tileSize } = await dziWidthHeight(fileNameResult, folderPath);\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: tileSize,\r\n          Size: {\r\n            Width: width,\r\n            Height: height\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\nconst dziWidthHeight = async (imageFileName: any, folderPath: string): Promise<any> => {\r\n  const urlImage = `${folderPath}/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({ filePath: urlImage });\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return { fileName, width: Number(width), height: Number(height), tileSize: Number(tileSize) }\r\n}\r\n</script>\r\n","import script from \"./leftImgList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./leftImgList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"tilingViewerContainer\",\n  style: {\"height\":\"100%\"},\n  id: \"tiling-container\"\n}\n\nimport { onMounted, ref, watch, computed, nextTick } from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { useStore } from \"vuex\";\r\nimport { readDziFile } from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {openseadragonPrefixUrl} from \"@/common/lib/utils/assetUtils\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'tilingViewer',\n  props: ['selectItems'],\n  setup(__props) {\n\r\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst tilingViewerLayer = ref(null);\r\nconst newImgHeight = ref('');\r\nconst newImgWidth = ref('');\r\nconst viewerHeight = ref('85vh'); // 기본값 설정\r\n\r\nlet viewer:any = null;\r\n\r\nonMounted(async () => {\r\n  const urlImage = `PMC_Result`;\r\n  const {width, height} = await dziWidthHeight(urlImage)\r\n  newImgHeight.value = height;\r\n  newImgWidth.value = width;\r\n  viewerHeight.value = `${Math.min((height / window.innerHeight) * 100, 85)}vh`; // 최대 80vh로 제한\r\n  await initElement(height, false);});\r\n\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  // await onImageLoad(false);\r\n  const urlImage = `PMC_Result`;\r\n  const {width, height} = await dziWidthHeight(urlImage)\r\n  newImgHeight.value = height;\r\n  newImgWidth.value = width;\r\n  await initElement(height, false);\r\n});\r\n\r\nwatch(\r\n    () => window.innerHeight,\r\n    () => {\r\n      viewerHeight.value = `${Math.min((Number(newImgHeight.value) / window.innerHeight) * 100, 85)}vh`; // 최대 80vh로 제한\r\n    }\r\n);\r\nconst initElement = async (imageHeight: any, bool: boolean) => {\r\n  if (viewer) {\r\n    viewer.destroy();\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path  : sessionStorage.getItem('iaRootPath');\r\n\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n    viewer = OpenSeadragon({\r\n      id: \"tiling-viewer\",\r\n      animationTime: 0.4,\r\n      navigatorSizeRatio: 0.25,\r\n      showNavigator: true,\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      prefixUrl:openseadragonPrefixUrl(apiBaseUrl),\r\n      tileSources: tilesInfo,\r\n      gestureSettingsMouse: { clickToZoom: false },\r\n    });\r\n\r\n    viewer.addHandler(\"open\", function() {\r\n\r\n      // 타일링 뷰어에 height 동적 조정\r\n      const imageWidth = viewer.source.dimensions.x;\r\n      const imageHeight = viewer.source.dimensions.y;\r\n\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n\r\n      const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n      const aspectRatio = imageHeight / imageWidth;\r\n\r\n      const dynamicHeight = containerWidth * aspectRatio;\r\n      tilingViewerElement.style.width = `${containerWidth}px`;\r\n      // tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n      tilingViewerElement.style.position = 'absolute';\r\n      tilingViewerElement.style.left = '50%';\r\n      tilingViewerElement.style.top = '50%';\r\n      tilingViewerElement.style.transform = 'translate(-50%, -50%)';\r\n    });\r\n\r\n    const fullPageButton = viewer.buttons.buttons.find((button: any) => button.tooltip === 'Toggle full page');\r\n\r\n    if (fullPageButton) {\r\n      fullPageButton.element.addEventListener('click', async () => {\r\n        if (viewer.isFullPage()) {\r\n          await document.exitFullscreen();\r\n          viewer.setFullPage(false);\r\n        } else {\r\n          viewer.setFullPage(true);\r\n        }\r\n      });\r\n    }\r\n\r\n    viewer.addHandler(\"zoom\", function () {\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n      if(bool){\r\n        tilingViewerElement && (tilingViewerElement.style.height = '80vh');\r\n      }\r\n    })\r\n\r\n    viewer.addHandler('full-page', async function(event: any) {\r\n      if (!event.fullPage) {\r\n        viewer.element.style.backgroundColor = '';\r\n        await document.documentElement.requestFullscreen();\r\n      } else {\r\n        viewer.element.style.backgroundColor = 'black';\r\n      }\r\n    });\r\n\r\n\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n\r\n      const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n      const {width, height, tileSize} = await dziWidthHeight(fileNameResult);\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: tileSize,\r\n          Size: {\r\n            Width: width,\r\n            Height: height\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\nconst dziWidthHeight = async (imageFileName: any): Promise<any> => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const urlImage = `${path}/${props.selectItems.slotId}/01_Stitching_Image/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({filePath: urlImage});\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\n\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return {fileName, width: Number(width), height: Number(height), tileSize: Number(tileSize)}\r\n}\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      ref_key: \"tilingViewerLayer\",\n      ref: tilingViewerLayer,\n      id: \"tiling-viewer\",\n      style: _normalizeStyle({ height: viewerHeight.value })\n    }, null, 4)\n  ]))\n}\n}\n\n})","<template>\r\n<!--  <img :src=\"hideImage\" ref=\"hideImageRef\" style=\"display: none\" @load=\"onImageLoad(true)\"  />-->\r\n    <div class=\"tilingViewerContainer\" style=\"height: 100%\" id=\"tiling-container\">\r\n      <div ref=\"tilingViewerLayer\" id=\"tiling-viewer\" :style=\"{ height: viewerHeight }\">\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport { defineProps, onMounted, ref, watch, computed, nextTick } from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { useStore } from \"vuex\";\r\nimport { readDziFile } from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {openseadragonPrefixUrl} from \"@/common/lib/utils/assetUtils\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst tilingViewerLayer = ref(null);\r\nconst newImgHeight = ref('');\r\nconst newImgWidth = ref('');\r\nconst viewerHeight = ref('85vh'); // 기본값 설정\r\n\r\nlet viewer:any = null;\r\n\r\nonMounted(async () => {\r\n  const urlImage = `PMC_Result`;\r\n  const {width, height} = await dziWidthHeight(urlImage)\r\n  newImgHeight.value = height;\r\n  newImgWidth.value = width;\r\n  viewerHeight.value = `${Math.min((height / window.innerHeight) * 100, 85)}vh`; // 최대 80vh로 제한\r\n  await initElement(height, false);});\r\n\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  // await onImageLoad(false);\r\n  const urlImage = `PMC_Result`;\r\n  const {width, height} = await dziWidthHeight(urlImage)\r\n  newImgHeight.value = height;\r\n  newImgWidth.value = width;\r\n  await initElement(height, false);\r\n});\r\n\r\nwatch(\r\n    () => window.innerHeight,\r\n    () => {\r\n      viewerHeight.value = `${Math.min((Number(newImgHeight.value) / window.innerHeight) * 100, 85)}vh`; // 최대 80vh로 제한\r\n    }\r\n);\r\nconst initElement = async (imageHeight: any, bool: boolean) => {\r\n  if (viewer) {\r\n    viewer.destroy();\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path  : sessionStorage.getItem('iaRootPath');\r\n\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n    viewer = OpenSeadragon({\r\n      id: \"tiling-viewer\",\r\n      animationTime: 0.4,\r\n      navigatorSizeRatio: 0.25,\r\n      showNavigator: true,\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      prefixUrl:openseadragonPrefixUrl(apiBaseUrl),\r\n      tileSources: tilesInfo,\r\n      gestureSettingsMouse: { clickToZoom: false },\r\n    });\r\n\r\n    viewer.addHandler(\"open\", function() {\r\n\r\n      // 타일링 뷰어에 height 동적 조정\r\n      const imageWidth = viewer.source.dimensions.x;\r\n      const imageHeight = viewer.source.dimensions.y;\r\n\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n\r\n      const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n      const aspectRatio = imageHeight / imageWidth;\r\n\r\n      const dynamicHeight = containerWidth * aspectRatio;\r\n      tilingViewerElement.style.width = `${containerWidth}px`;\r\n      // tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n      tilingViewerElement.style.position = 'absolute';\r\n      tilingViewerElement.style.left = '50%';\r\n      tilingViewerElement.style.top = '50%';\r\n      tilingViewerElement.style.transform = 'translate(-50%, -50%)';\r\n    });\r\n\r\n    const fullPageButton = viewer.buttons.buttons.find((button: any) => button.tooltip === 'Toggle full page');\r\n\r\n    if (fullPageButton) {\r\n      fullPageButton.element.addEventListener('click', async () => {\r\n        if (viewer.isFullPage()) {\r\n          await document.exitFullscreen();\r\n          viewer.setFullPage(false);\r\n        } else {\r\n          viewer.setFullPage(true);\r\n        }\r\n      });\r\n    }\r\n\r\n    viewer.addHandler(\"zoom\", function () {\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n      if(bool){\r\n        tilingViewerElement && (tilingViewerElement.style.height = '80vh');\r\n      }\r\n    })\r\n\r\n    viewer.addHandler('full-page', async function(event: any) {\r\n      if (!event.fullPage) {\r\n        viewer.element.style.backgroundColor = '';\r\n        await document.documentElement.requestFullscreen();\r\n      } else {\r\n        viewer.element.style.backgroundColor = 'black';\r\n      }\r\n    });\r\n\r\n\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n\r\n      const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n      const {width, height, tileSize} = await dziWidthHeight(fileNameResult);\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: tileSize,\r\n          Size: {\r\n            Width: width,\r\n            Height: height\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\nconst dziWidthHeight = async (imageFileName: any): Promise<any> => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const urlImage = `${path}/${props.selectItems.slotId}/01_Stitching_Image/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({filePath: urlImage});\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\n\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return {fileName, width: Number(width), height: Number(height), tileSize: Number(tileSize)}\r\n}\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n</script>\r\n","import script from \"./tilingViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./tilingViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"imgContent\" }\nconst _hoisted_2 = { class: \"wrap-whole\" }\nconst _hoisted_3 = { class: \"leftWhole\" }\n\nimport { computed, ref, onMounted, onBeforeMount } from \"vue\";\r\nimport LeftImgList from \"@/views/datebase/commponent/detail/databaseWhole/leftImgList.vue\";\r\nimport TilingViewer from './tilingViewer.vue';\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nconst selectItems = ref<any>(null);\r\nconst isLoading = ref(false);\r\n\r\nconst imgRef = ref<HTMLElement | null>(null);\r\nconst imageContainer = ref<HTMLElement | null>(null);\r\n\r\nonBeforeMount(async () => {\r\n  await getDetailRunningInfo()\r\n})\r\n\r\nonMounted(async () => {\r\n  imgRef.value = document.querySelector('.img'); // Assign imgRef ref\r\n});\r\n\r\nconst getDetailRunningInfo = async () => {\r\n\r\n  try {\r\n    isLoading.value = true;\r\n    selectItems.value = slideData.value;\r\n    isLoading.value = false;\r\n  } catch (e) {\r\n    console.error(e);\r\n    selectItems.value = [];\r\n    isLoading.value = false;\r\n  }\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", {\n          ref_key: \"imageContainer\",\n          ref: imageContainer,\n          class: \"image-container\"\n        }, [\n          (!isLoading.value)\n            ? (_openBlock(), _createBlock(TilingViewer, {\n                key: 0,\n                selectItems: selectItems.value\n              }, null, 8, [\"selectItems\"]))\n            : _createCommentVNode(\"\", true)\n        ], 512),\n        _createElementVNode(\"div\", _hoisted_3, [\n          (!isLoading.value)\n            ? (_openBlock(), _createBlock(LeftImgList, {\n                key: 0,\n                selectItems: selectItems.value\n              }, null, 8, [\"selectItems\"]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n  <div class=\"imgContent\">\r\n    <div class=\"wrap-whole\">\r\n    <div ref=\"imageContainer\" class=\"image-container\" >\r\n      <TilingViewer v-if=\"!isLoading\" :selectItems=\"selectItems\"/>\r\n    </div>\r\n    <div class=\"leftWhole\">\r\n      <LeftImgList v-if=\"!isLoading\" :selectItems=\"selectItems\"/>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, ref, onMounted, onBeforeMount } from \"vue\";\r\nimport LeftImgList from \"@/views/datebase/commponent/detail/databaseWhole/leftImgList.vue\";\r\nimport TilingViewer from './tilingViewer.vue';\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst store = useStore();\r\nconst slideData = computed(() => store.state.slideDataModule);\r\n\r\nconst selectItems = ref<any>(null);\r\nconst isLoading = ref(false);\r\n\r\nconst imgRef = ref<HTMLElement | null>(null);\r\nconst imageContainer = ref<HTMLElement | null>(null);\r\n\r\nonBeforeMount(async () => {\r\n  await getDetailRunningInfo()\r\n})\r\n\r\nonMounted(async () => {\r\n  imgRef.value = document.querySelector('.img'); // Assign imgRef ref\r\n});\r\n\r\nconst getDetailRunningInfo = async () => {\r\n\r\n  try {\r\n    isLoading.value = true;\r\n    selectItems.value = slideData.value;\r\n    isLoading.value = false;\r\n  } catch (e) {\r\n    console.error(e);\r\n    selectItems.value = [];\r\n    isLoading.value = false;\r\n  }\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n}\r\n\r\n\r\n</script>\r\n\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// router/index.vue\r\nimport {createRouter, createWebHistory} from 'vue-router';\r\nimport HomeView from '@/views/HomeView.vue';\r\nimport JoinView from '@/views/join/index.vue';\r\nimport loginView from '@/views/login/index.vue';\r\nimport setting from '@/views/setting/index.vue'\r\nimport Database from '@/views/datebase/index.vue';\r\nimport DatabaseRbc from '@/views/datebase/commponent/detail/rbc/listDetailRbc.vue';\r\nimport Report from '@/views/datebase/commponent/detail/report/report.vue';\r\nimport databaseDetail from '@/views/datebase/commponent/detail/classInfo/listDetail.vue';\r\nimport DatabaseWhole from '@/views/datebase/commponent/detail/databaseWhole/index.vue';\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {computed} from \"vue\";\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes: [\r\n        // {\r\n        //     path: '/',\r\n        //     name: 'HomeView',\r\n        //     component: HomeView,\r\n        // },\r\n        {\r\n            path: '/analysis',\r\n            name: 'AnalysisView',\r\n            component: HomeView,\r\n        },\r\n        {\r\n            path: '/user/join',\r\n            name: 'join',\r\n            component: JoinView,\r\n        },\r\n        {\r\n            path: '/user/login',\r\n            name: 'login',\r\n            component: loginView,\r\n        },\r\n        {\r\n            path: '/setting',\r\n            name: 'setting',\r\n            component: setting,\r\n        },\r\n        {\r\n            path: '/database',\r\n            name: 'database',\r\n            component: Database,\r\n        },\r\n        {\r\n            path: '/databaseDetail',\r\n            name: 'databaseDetail',\r\n            component: databaseDetail,\r\n        },\r\n        {\r\n            path: '/databaseWhole',\r\n            name: 'databaseWhole',\r\n            component: DatabaseWhole,\r\n        },\r\n        {\r\n            path: '/databaseRbc',\r\n            name: 'databaseRbc',\r\n            component: DatabaseRbc,\r\n        },\r\n        {\r\n            path: '/report',\r\n            name: 'report',\r\n            component: Report,\r\n        }\r\n    ],\r\n});\r\n\r\nrouter.beforeEach(async (to, from, next)  => {\r\n    // 세션 스토리지에서 사용자 정보 확인\r\n    const storedUser = sessionStorage.getItem('user');\r\n    const getStoredUser = JSON.parse(storedUser || '{}');\r\n    // 스토어\r\n    const store = useStore();\r\n    // 스토어에서 사용자 정보 확인\r\n    const settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\n    const currentUser = store.state.userModule;\r\n\r\n    if (from.path === '/setting') {\r\n        const beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\n        const afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\n\r\n        const beforeSetting = beforeSettingFormattedString.value;\r\n        const afterSetting = afterSettingFormattedString.value;\r\n\r\n        // 설정 변경 여부 확인\r\n        if (beforeSetting === afterSetting) {\r\n            // 설정 변경이 없을 경우 초기화 후 페이지 이동 허용\r\n            await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n            await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n            await store.dispatch('commonModule/setCommonInfo', { enteringRouterPath: '' });\r\n            await store.dispatch('commonModule/setCommonInfo', { settingType: '' });\r\n            next();\r\n        } else {\r\n            // 설정이 변경되었을 경우 확인 처리\r\n            await store.dispatch('commonModule/setCommonInfo', { settingChangedChecker: !settingChangedChecker.value });\r\n            await store.dispatch('commonModule/setCommonInfo', { enteringRouterPath: to.path });\r\n            next(false);  // 페이지 이동 취소\r\n            return;       // 이후 코드 실행 방지\r\n        }\r\n    }\r\n\r\n    // 로그인이 필요한 페이지에 접근할 때 세션 및 스토어에서 사용자 정보 확인\r\n    if (to.name !== 'login' && to.name !== 'join' && (!getStoredUser.userId && !currentUser.value)) {\r\n        // 로그인 페이지로 리다이렉트\r\n        next('/user/login');\r\n    }\r\n    // 'database' 페이지에 접근할 때\r\n    else if (to.name === 'database') {\r\n        await store.dispatch('commonModule/setCommonInfo', { dataBasePageReset: true });\r\n        next();  // 데이터베이스 페이지로 이동 허용\r\n    }\r\n    // 그 외의 페이지 이동 허용\r\n    else {\r\n        next();\r\n    }\r\n});\r\n\r\nexport default router;\r\n","<template>\r\n  <div class=\"progress-component-container\">\r\n    <p>{{ text }}</p>\r\n    <div class=\"progress-component-bar\">\r\n      <div\r\n          class=\"progress-component-fill\"\r\n          :style=\"{\r\n          width: `${percentage}%`,\r\n          backgroundColor: color,\r\n          transition: `width ${animationDuration}s ease-in-out`\r\n        }\"\r\n      >\r\n        <div v-if=\"showGlowEffect\" class=\"progress-component-glow\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue'\r\n\r\nconst props = defineProps({\r\n  value: {\r\n    type: Number,\r\n    required: true,\r\n    validator: (value) => value >= 0 && value <= 100\r\n  },\r\n  gradientStart: {\r\n    type: String,\r\n    default: '#42b883'\r\n  },\r\n  gradientEnd: {\r\n    type: String,\r\n    default: '#3b8070'\r\n  },\r\n  color: {\r\n    type: String,\r\n    default: '#00c2ff'\r\n  },\r\n  animationDuration: {\r\n    type: Number,\r\n    default: 0.3\r\n  },\r\n  showGlowEffect: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  text: {\r\n    type: String,\r\n  }\r\n})\r\n\r\nconst percentage = computed(() => Math.round(props.value))\r\nconst gradient = computed(() =>\r\n    `linear-gradient(90deg, ${props.gradientStart}, ${props.gradientEnd})`\r\n)\r\n</script>","import script from \"./ProgressBar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProgressBar.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"errLogDiv\" }\nconst _hoisted_2 = { class: \"title\" }\nconst _hoisted_3 = { class: \"errLogNum\" }\nconst _hoisted_4 = { class: \"errLogIco\" }\nconst _hoisted_5 = { class: \"errLogBody\" }\nconst _hoisted_6 = { class: \"arrLogDesc\" }\nconst _hoisted_7 = { class: \"arrLogDesc\" }\nconst _hoisted_8 = { class: \"errLogTimestamp\" }\n\n\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ErrLog',\n  props: ['errArr', 'ErrLogOpen'],\n  emits: ['closeErrLog', 'errMouseSet'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emit = __emit;\r\n\r\nconst props = __props;\r\ndocument.body.addEventListener(\"click\", handleBodyClick);\r\n\r\nconst closeNoti = () => {\r\n  emit('closeErrLog');\r\n  emit('errMouseSet');\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.iconHeaderMenu')) {\r\n    emit('closeErrLog');\r\n    emit('errMouseSet');\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"span\", null, [\n        _cache[0] || (_cache[0] = _createTextVNode(\"Notifications \")),\n        _createElementVNode(\"span\", _hoisted_3, _toDisplayString(__props.errArr.length), 1)\n      ]),\n      _createElementVNode(\"span\", {\n        class: \"errLogClose\",\n        onClick: closeNoti\n      }, [\n        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-xmark'] })\n      ])\n    ]),\n    _createElementVNode(\"ul\", null, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.errArr, (item, idx) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: idx }, [\n          (item.type !== 'DLOG')\n            ? (_openBlock(), _createElementBlock(\"li\", {\n                key: 0,\n                class: _normalizeClass(['errLogLi', item.type ? item.type.toLowerCase() : ''])\n              }, [\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"div\", _hoisted_4, [\n                    (item.type === 'WARN')\n                      ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                          key: 0,\n                          icon: ['fas', 'circle-exclamation'],\n                          class: \"warn\"\n                        }))\n                      : _createCommentVNode(\"\", true),\n                    (item.type === 'CRIT')\n                      ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                          key: 1,\n                          icon: ['fas', 'triangle-exclamation'],\n                          class: \"crit\"\n                        }))\n                      : _createCommentVNode(\"\", true),\n                    (item.type === 'NOTI')\n                      ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                          key: 2,\n                          icon: ['fas', 'circle-check'],\n                          class: \"noti\"\n                        }))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_5, [\n                  _createElementVNode(\"div\", {\n                    class: _normalizeClass(['errLogTitle', item.type ? item.type.toLowerCase() : ''])\n                  }, [\n                    _createElementVNode(\"span\", null, \"[ \" + _toDisplayString(item?.code) + \" ]\", 1),\n                    _createElementVNode(\"span\", null, _toDisplayString(item?.name), 1)\n                  ], 2),\n                  _createElementVNode(\"div\", _hoisted_6, \" Description: \" + _toDisplayString(item?.desc), 1),\n                  _createElementVNode(\"div\", _hoisted_7, \" Solution: \" + _toDisplayString(item?.soln), 1),\n                  _createElementVNode(\"div\", _hoisted_8, _toDisplayString(item?.timestamp), 1)\n                ])\n              ], 2))\n            : _createCommentVNode(\"\", true)\n        ], 64))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"errLogDiv\">\r\n    <!--    <p class=\"errLogClose\">-->\r\n    <!--      <font-awesome-icon :icon=\"['fas', 'circle-xmark']\"/>-->\r\n    <!--    </p>-->\r\n    <div class=\"title\">\r\n      <span>Notifications <span class=\"errLogNum\">{{ errArr.length }}</span></span>\r\n      <span class=\"errLogClose\" @click=\"closeNoti\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-xmark']\"/>\r\n      </span>\r\n    </div>\r\n    <ul>\r\n      <template v-for=\"(item, idx) in errArr\" :key=\"idx\">\r\n        <li v-if=\"item.type !== 'DLOG'\" :class=\"['errLogLi', item.type ? item.type.toLowerCase() : '']\">\r\n          <div>\r\n            <div class=\"errLogIco\">\r\n              <font-awesome-icon :icon=\"['fas', 'circle-exclamation']\" v-if=\"item.type === 'WARN'\"\r\n                                 class=\"warn\"/>\r\n              <font-awesome-icon :icon=\"['fas', 'triangle-exclamation']\" v-if=\"item.type === 'CRIT'\"\r\n                                 class=\"crit\"/>\r\n              <font-awesome-icon :icon=\"['fas', 'circle-check']\" v-if=\"item.type === 'NOTI'\"\r\n                                 class=\"noti\"/>\r\n            </div>\r\n          </div>\r\n          <div class=\"errLogBody\">\r\n            <div :class=\"['errLogTitle', item.type ? item.type.toLowerCase() : '']\">\r\n              <span>[ {{ item?.code }} ]</span>\r\n              <span> {{ item?.name }} </span>\r\n            </div>\r\n            <div class=\"arrLogDesc\">\r\n              Description: {{ item?.desc }}\r\n            </div>\r\n            <div class=\"arrLogDesc\">\r\n              Solution: {{ item?.soln }}\r\n            </div>\r\n            <div class=\"errLogTimestamp\">\r\n              {{ item?.timestamp }}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </template>\r\n\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {defineProps} from \"vue\";\r\n\r\nconst emit = defineEmits(['closeErrLog', 'errMouseSet']);\r\n\r\nconst props = defineProps(['errArr', 'ErrLogOpen']);\r\ndocument.body.addEventListener(\"click\", handleBodyClick);\r\n\r\nconst closeNoti = () => {\r\n  emit('closeErrLog');\r\n  emit('errMouseSet');\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.iconHeaderMenu')) {\r\n    emit('closeErrLog');\r\n    emit('errMouseSet');\r\n  }\r\n}\r\n\r\n</script>","import script from \"./ErrLog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ErrLog.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, vShow as _vShow, withModifiers as _withModifiers, withDirectives as _withDirectives, Fragment as _Fragment } from \"vue\"\nimport _imports_0 from '../../assets/images/celli.png'\n\n\nconst _hoisted_1 = { class: \"header\" }\nconst _hoisted_2 = { class: \"borderLine\" }\nconst _hoisted_3 = { class: \"logoProjectTitle\" }\nconst _hoisted_4 = {\n  key: 1,\n  class: \"autoStart-container\"\n}\nconst _hoisted_5 = { class: \"small-icon-menu\" }\nconst _hoisted_6 = { class: \"lastMenu\" }\nconst _hoisted_7 = { class: \"lastLiM\" }\nconst _hoisted_8 = { class: \"iconHeaderMenu\" }\nconst _hoisted_9 = { class: \"storage pos-relative\" }\nconst _hoisted_10 = { class: \"immersionOilContainer\" }\nconst _hoisted_11 = { class: \"flex-justify-between flex-align-center mt10\" }\nconst _hoisted_12 = { class: \"f18\" }\nconst _hoisted_13 = { class: \"flex-column-align-end\" }\nconst _hoisted_14 = { class: \"mt20\" }\nconst _hoisted_15 = { class: \"flex-column-align-end\" }\n\nimport {useRoute} from 'vue-router';\r\nimport {\r\n  computed,\r\n  getCurrentInstance,\r\n  nextTick,\r\n  onBeforeMount,\r\n  onBeforeUnmount,\r\n  onMounted,\r\n  reactive,\r\n  ref,\r\n  watch\r\n} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport router from \"@/router\";\r\nimport Modal from '@/components/commonUi/modal.vue';\r\nimport {MESSAGES, MSG} from \"@/common/defines/constants/constantMessageText\";\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {tcpReq} from \"@/common/defines/constants/tcpRequest/tcpReq\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\nimport {logoutApi} from \"@/common/api/service/user/userApi\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport axios from \"axios\";\r\nimport {SOUND_COMPLETE_ALARM, SOUND_ERROR_ALARM} from \"@/common/lib/utils/assetUtils\";\r\nimport ProgressBar from \"@/components/commonUi/ProgressBar.vue\";\r\nimport {errLogsReadApi} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport ErrLog from \"@/components/commonUi/ErrLog.vue\";\r\nimport Tooltip from \"@/components/commonUi/Tooltip.vue\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'AppHeader',\n  setup(__props) {\n\r\nconst route = useRoute();\r\nconst appHeaderLeftHidden = ref(false);\r\nconst store = useStore();\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst isBlinkingPrime = ref(false);\r\nlet blinkTimeout: ReturnType<typeof setTimeout> | null = null;\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\nconst instance = getCurrentInstance();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst oilCount = ref(0);\r\nconst isDoorOpen = ref('');\r\nconst storagePercent = ref(0);\r\nconst eqStatCd = ref('');\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst ErrLogOpen = ref(false);\r\n\r\nconst eqStatCdData = ref({\r\n  icon: ['fas', 'person'],\r\n  class: ''\r\n});\r\nconst oilCountData = ref('');\r\nconst storagePercentData = ref('');\r\nconst oilVisible = ref(false);\r\nconst maxOilCount = ref(1000);\r\nconst statusBarWrapper = ref<HTMLDivElement | null>(null);\r\nconst statusBar = ref<HTMLDivElement | null>(null);\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isNsNbIntegration = ref(sessionStorage.getItem('isNsNbIntegration') || '');\r\nconst analysisType = computed(() => store.state.commonModule.analysisType);\r\nconst isCompleteAlarm = computed(() => store.state.commonModule.isCompleteAlarm);\r\nconst isErrorAlarm = computed(() => store.state.commonModule.isErrorAlarm);\r\nconst rootDir = computed(() => store.state.commonModule.iaRootPath);\r\n\r\nconst isErrorAlarmRunning = ref(false);\r\nconst isCompleteAlarmRunning = ref(false);\r\nconst alarmCount = ref(0);\r\nconst noRouterPush = ref(false);\r\nconst currentDate = ref<string>(\"\");\r\nconst currentTime = ref<string>(\"\");\r\nlet isCompleteAlarmInterval = null;\r\nlet isErrorAlarmInterval = null;\r\nconst isPlayingCompleteAlarm = ref(false);\r\nconst isPlayingErrorAlarm = ref(false);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\nconst machineVersion = ref('');\r\nconst clickType = ref('');\r\nconst userSetOutUl = ref(false);\r\nconst isStartCountUpdated = ref(false);\r\nconst autoStartTimer = ref(0);\r\nconst errArr = ref<any>([]);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst mouseClick = ref(false);\r\nconst mounseLeave = ref(false);\r\nconst tooltipVisible = reactive({\r\n  oilPrime: false,\r\n  storage: false,\r\n})\r\n\r\nconst formattedDate = computed(() => currentDate.value);\r\nconst formattedTime = computed(() => currentTime.value);\r\n\r\nconst userSetOutToggle = () => {\r\n  userSetOutUl.value = !userSetOutUl.value;\r\n}\r\n\r\nconst updateDateTime = () => {\r\n  const now = new Date();\r\n  currentDate.value = now.toLocaleDateString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n  currentTime.value = now.toLocaleTimeString('en-US');\r\n};\r\n\r\nconst errLogOn = async () => {\r\n  mouseClick.value = !mouseClick.value;\r\n  if(mounseLeave.value){\r\n    return\r\n  }\r\n  ErrLogOpen.value = !ErrLogOpen.value;\r\n  await errLogLoad();\r\n\r\n}\r\nconst errLogLoad = async () => {\r\n  const folderPath = `folderPath=${rootDir.value.replace('PBIA_proc','')}UIMD_Data/Backend_Log`;\r\n  const res = await errLogsReadApi(folderPath);\r\n  if(res.code === 200){\r\n    if(res?.data?.status === 400){\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast(res?.data?.response.error);\r\n      return;\r\n    }\r\n    let newArr = [];\r\n\r\n    // 날짜별로 들어옴 다중 포문 쓴 이유\r\n    for (const date in res.data) {\r\n      const entries = res.data[date];\r\n\r\n      for (const el of entries) {\r\n        const fullTimestamp = `${date} ${el.timestamp}`; // 날짜 합치기 용도\r\n        if (el.E_TYPE !== 'DEV_INFO'){\r\n          newArr.push({\r\n            timestamp: fullTimestamp,\r\n            code: el?.E_CODE,\r\n            type: el?.E_TYPE,\r\n            desc: el?.E_DESC,\r\n            soln: el?.E_SOLN,\r\n            name: el?.E_NAME,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    errArr.value = newArr;\r\n  }\r\n}\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n\r\n  await logoutApi({userId: userId.value});\r\n  if (clickType.value === 'exit') {\r\n    if (viewerCheck.value === 'main') {\r\n      await EventBus.publish('childEmitSocketData', tcpReq().embedStatus.exit);\r\n    } else {\r\n      const result = await getDeviceIpApi();\r\n      const ipAddress = `ip=${result.data}`\r\n      const url = `http://${result.data}:3000/close?${ipAddress}`;\r\n      await axios.get(url);\r\n    }\r\n  } else {\r\n    sessionStorage.clear();\r\n    await router.push('user/login');\r\n    if (document.fullscreenElement) {\r\n      await document.exitFullscreen();\r\n    }\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst fullScreen = () => {\r\n  if (!document.fullscreenElement) {\r\n    document.documentElement.requestFullscreen();\r\n  } else {\r\n    document.exitFullscreen();\r\n  }\r\n}\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n  machineVersion.value = window.MACHINE_VERSION;\r\n})\r\n\r\nonMounted(async () => {\r\n  cellImgGet();\r\n  updateDateTime(); // 초기 시간 설정\r\n  const timerId = setInterval(updateDateTime, 1000); // 1초마다 현재 시간을 갱신\r\n\r\n  // 컴포넌트가 해제되기 전에 타이머를 정리하여 메모리 누수를 방지\r\n  onBeforeUnmount(() => {\r\n    clearInterval(timerId);\r\n  });\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n  }\r\n\r\n  document.addEventListener('click', closeUserSetBox);\r\n  window.addEventListener('wheel', preventScroll, {passive: false});\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  document.removeEventListener('click', closeUserSetBox);\r\n  window.removeEventListener('wheel', preventScroll);\r\n})\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVals: any) => {\r\n  await nextTick();\r\n  oilCount.value = Number(newVals[0].sysInfo.oilCount);\r\n  isDoorOpen.value = newVals[0].sysInfo.isDoorOpen;\r\n  storagePercent.value = Number(newVals[0].sysInfo.storageSize);\r\n  eqStatCd.value = newVals[0].sysInfo.eqStatCd;\r\n\r\n  const autoStartTimerNumber = newVals[0].sysInfo?.autoStartTimer;\r\n  if (machineVersion.value === '100a' && autoStartTimerNumber !== undefined) {\r\n    autoStartTimer.value = (parseFloat(autoStartTimerNumber) / 5) * 100;\r\n  }\r\n\r\n\r\n  eqStatCdData.value = eqStatCdChangeVal(newVals[0].sysInfo.eqStatCd);\r\n  oilCountData.value = oilCountChangeVal();\r\n  storagePercentData.value = storagePercentChangeVal();\r\n\r\n  // 2번 보내는지 확인\r\n  if (!isStartCountUpdated.value) {\r\n    await searchCardCount();\r\n  }\r\n\r\n});\r\n\r\nconst preventScroll = (event: any) => {\r\n  if (event.ctrlKey) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nconst searchCardCount = async () => {\r\n  const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n  const payload = {\r\n    jobCmd: 'SEARCH_CARD_COUNT',\r\n    reqUserId: userId.value,\r\n    reqDttm: reqDttm,\r\n    testType: analysisType.value,\r\n  };\r\n  EventBus.publish('childEmitSocketData', payload);\r\n  isStartCountUpdated.value = true;\r\n}\r\n\r\n\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  if (newValsObj[0].isRunningState) {\r\n    noRouterPush.value = true;\r\n  } else {\r\n    noRouterPush.value = false;\r\n  }\r\n});\r\n\r\nwatch(() => isErrorAlarm.value, async (newIsErrorAlarm: boolean) => {\r\n  if (newIsErrorAlarm && !isErrorAlarmRunning.value) {\r\n    if (!isPlayingErrorAlarm.value) {\r\n      isErrorAlarmRunning.value = true;\r\n      isPlayingErrorAlarm.value = true;\r\n      try {\r\n        await SOUND_ERROR_ALARM.play();\r\n      } catch (e) {\r\n        console.error(e);\r\n      } finally {\r\n        isPlayingErrorAlarm.value = false;\r\n      }\r\n    }\r\n    isErrorAlarmInterval = setTimeout(() => {\r\n      store.dispatch('commonModule/setCommonInfo', { isErrorAlarm: false });\r\n      isErrorAlarmRunning.value = false;\r\n    }, alarmCount.value);\r\n  }\r\n})\r\n\r\nwatch(() => isCompleteAlarm.value, async (newIsCompleteAlarm: boolean) => {\r\n  if (newIsCompleteAlarm && !isCompleteAlarmRunning.value) {\r\n    if (!isPlayingCompleteAlarm.value) {\r\n      isCompleteAlarmRunning.value = true;\r\n      isPlayingCompleteAlarm.value = true;\r\n      try {\r\n        await SOUND_COMPLETE_ALARM.play();\r\n      } catch (e) {\r\n        console.error(e);\r\n      } finally {\r\n        isPlayingCompleteAlarm.value = false;\r\n      }\r\n    }\r\n\r\n    isCompleteAlarmInterval = setTimeout(() => {\r\n      isCompleteAlarmRunning.value = false;\r\n      store.dispatch('commonModule/setCommonInfo', { isCompleteAlarm: false });\r\n    }, alarmCount.value);\r\n  }\r\n})\r\n\r\nconst closeUserSetBox = (event: any) => {\r\n  const selectBox = document.querySelector('.userSetOutUl');\r\n  const selectButton = document.querySelector('.cursorPointer');\r\n  if (selectButton && selectButton.contains(event.target as Node)) return;\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    userSetOutUl.value = false;\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst logout = () => {\r\n  clickType.value = 'logout';\r\n  confirmMessage.value = MESSAGES.LOGOUT;\r\n  showConfirm.value = true;\r\n  localStorage.removeItem('user')\r\n  userSetOutUl.value = false;\r\n}\r\n\r\nconst exit = async () => {\r\n  clickType.value = 'exit';\r\n  confirmMessage.value = MESSAGES.exit;\r\n  showConfirm.value = true;\r\n  userSetOutUl.value = false;\r\n}\r\n\r\nconst oilCountChangeVal = (): string => {\r\n  if (oilCount.value >= 0 && oilCount.value <= 100) {\r\n    return '10%';\r\n  } else if (oilCount.value > 100 && oilCount.value <= 250) {\r\n    return '25%';\r\n  } else if (oilCount.value > 250 && oilCount.value <= 500) {\r\n    return '50%';\r\n  } else if (oilCount.value > 500 && oilCount.value <= 750) {\r\n    return '75%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\n\r\nconst storagePercentChangeVal = () => {\r\n  if (storagePercent.value >= 0 && storagePercent.value <= 30) {\r\n    return '30%';\r\n  } else if (storagePercent.value > 30 && storagePercent.value <= 60) {\r\n    return '60%';\r\n  } else if (storagePercent.value > 60 && storagePercent.value <= 90) {\r\n    return '90%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\nconst eqStatCdChangeVal = (eqStatCdVal: string) => {\r\n  if (eqStatCdVal === '01') {\r\n    return {\r\n      icon: ['fas', 'person'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '02') {\r\n    return {\r\n      icon: ['fas', 'person-walking'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '03') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runRed'\r\n    };\r\n  } else if (eqStatCdVal === '04' || eqStatCdVal === '05') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runBlue'\r\n    };\r\n  }\r\n\r\n  return {\r\n    icon: ['fas', 'person'],\r\n    class: ''\r\n  };\r\n}\r\n\r\nconst openLayer = () => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    showErrorAlert('Access is only available from the main PC.');\r\n    return;\r\n  }\r\n\r\n  oilVisible.value = true;\r\n};\r\n\r\nconst closeLayer = (val: boolean) => {\r\n  oilVisible.value = val;\r\n};\r\n\r\nconst onReset = () => {\r\n\r\n  getPercent();\r\n  const settings = tcpReq().embedStatus.settings;\r\n  settings.reqUserId = userId;\r\n\r\n  Object.assign(settings, {\r\n    oilCount,\r\n    isOilReset: 'Y',\r\n    // uiVersion: 'uimd-pb-comm_v3',\r\n    userId: '',\r\n    isNsNbIntegration: isNsNbIntegration.value || '',\r\n  });\r\n  EventBus.publish('childEmitSocketData', settings);\r\n\r\n  showSuccessAlert(MESSAGES.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst getPercent = () => {\r\n  if (!statusBarWrapper.value || !statusBar.value) {\r\n    return;\r\n  }\r\n  const percent = Math.min(Math.round((oilCount.value / maxOilCount.value) * 100), 100);\r\n  const progressBarWidth = `${(percent / 100) * statusBarWrapper.value.offsetWidth}px`;\r\n  statusBar.value.style.width = progressBarWidth;\r\n}\r\n\r\nconst onPrime = () => {\r\n  if (blinkTimeout !== null) {\r\n    clearTimeout(blinkTimeout);\r\n  }\r\n\r\n  isBlinkingPrime.value = true;\r\n  tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.oilPrime);\r\n\r\n  blinkTimeout = setTimeout(() => {\r\n    isBlinkingPrime.value = false;\r\n    blinkTimeout = null;\r\n  }, 1500);\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  // 모달이 열린 후에 실행되는 콜백 함수\r\n  getPercent();\r\n};\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        await store.dispatch('commonModule/setCommonInfo', {isNsNbIntegration: data.isNsNbIntegration ? 'Y' : 'N'});\r\n        alarmCount.value = data?.isAlarm ? Number(data.alarmCount) * 1000 : 5000;\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', { isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N' });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n        sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n        sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n        sessionStorage.setItem('edgeShotLPCount', String(data?.edgeShotLPCount));\r\n        sessionStorage.setItem('edgeShotHPCount', String(data?.edgeShotHPCount));\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n        await store.dispatch('commonModule/setCommonInfo', { showLISUploadAfterCheckingAll: data?.lisUploadCheckAll });\r\n\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\r\nconst closeErrLog = () => {\r\n  ErrLogOpen.value = false;\r\n}\r\n\r\nconst openErrLogOver = async () => {\r\n  ErrLogOpen.value = true;\r\n  mounseLeave.value = true;\r\n  await errLogLoad();\r\n}\r\n\r\nconst closeErrLogLeave = () => {\r\n  if (mouseClick.value){\r\n    return;\r\n  }\r\n  mounseLeave.value = false;\r\n  ErrLogOpen.value = false;\r\n}\r\n\r\nconst errMouseSet = () => {\r\n  mounseLeave.value = false;\r\n  ErrLogOpen.value = false;\r\n  mouseClick.value = false;\r\n}\r\n\r\nconst tooltipVisibleFunc = (type: 'oilPrime' | 'storage', visible: boolean) => {\r\n  tooltipVisible[type] = visible;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"header\", _hoisted_1, [\n      _createElementVNode(\"nav\", null, [\n        (!appHeaderLeftHidden.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              class: _normalizeClass([\"appHeaderLeft\", { 'bmComponent': projectBm.value }])\n            }, [\n              _createElementVNode(\"div\", _hoisted_2, [\n                _cache[6] || (_cache[6] = _createElementVNode(\"img\", {\n                  src: _imports_0,\n                  class: \"headerLogo\"\n                }, null, -1)),\n                _createElementVNode(\"p\", _hoisted_3, _toDisplayString(projectBm.value ? 'BM' : 'PB'), 1)\n              ]),\n              _createVNode(_component_router_link, {\n                to: noRouterPush.value ? '#' : '/setting',\n                class: _normalizeClass({ \"leftActive\": isActive(\"/setting\"), \"disabledLink\": noRouterPush.value })\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'gear'],\n                    style: {\"font-size\":\"1rem\"}\n                  }),\n                  _cache[7] || (_cache[7] = _createElementVNode(\"span\", { class: \"icoText\" }, \"Setting\", -1))\n                ]),\n                _: 1\n              }, 8, [\"to\", \"class\"]),\n              (viewerCheck.value === 'main')\n                ? (_openBlock(), _createBlock(_component_router_link, {\n                    key: 0,\n                    to: \"/\",\n                    class: _normalizeClass({ \"leftActive\": isActive(\"/analysis\") || _unref(route).path === \"/\" })\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'chart-pie'],\n                        style: {\"font-size\":\"1rem\"}\n                      }),\n                      _cache[8] || (_cache[8] = _createElementVNode(\"span\", { class: \"icoText\" }, \"Analysis\", -1))\n                    ]),\n                    _: 1\n                  }, 8, [\"class\"]))\n                : _createCommentVNode(\"\", true),\n              _createVNode(_component_router_link, {\n                to: \"/dataBase\",\n                class: _normalizeClass({ \"leftActive\": isActive(\"/dataBase\") || isActive(\"/databaseDetail\") || isActive(\"/databaseRbc\") || isActive(\"/report\") || isActive(\"/databaseWhole\") })\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'server'],\n                    style: {\"font-size\":\"1rem\"}\n                  }),\n                  _cache[9] || (_cache[9] = _createElementVNode(\"span\", { class: \"icoText\" }, \"Database\", -1))\n                ]),\n                _: 1\n              }, 8, [\"class\"]),\n              (machineVersion.value === '100a')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n                    _createVNode(ProgressBar, {\n                      text: \"Auto Start\",\n                      value: autoStartTimer.value,\n                      gradientStart: \"#2196f3\",\n                      gradientEnd: \"#03a9f4\",\n                      animationDuration: 0.3,\n                      showGlowEffect: true\n                    }, null, 8, [\"value\"])\n                  ]))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"div\", _hoisted_5, [\n                _createElementVNode(\"div\", _hoisted_6, [\n                  _createElementVNode(\"ul\", null, [\n                    _createElementVNode(\"li\", null, _toDisplayString(formattedDate.value) + \" \" + _toDisplayString(formattedTime.value), 1),\n                    _createElementVNode(\"li\", _hoisted_7, [\n                      _createElementVNode(\"div\", {\n                        class: \"cursorPointer userBox\",\n                        onClick: userSetOutToggle\n                      }, [\n                        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-user'] }),\n                        _createTextVNode(\" \" + _toDisplayString(userModuleDataGet.value.userId), 1)\n                      ]),\n                      _withDirectives(_createElementVNode(\"ul\", {\n                        class: \"userSetOutUl\",\n                        onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n                      }, [\n                        _createElementVNode(\"li\", { onClick: logout }, \"LOGOUT\")\n                      ], 512), [\n                        [_vShow, userSetOutUl.value]\n                      ]),\n                      _createElementVNode(\"div\", {\n                        class: \"logOutBox\",\n                        onClick: exit\n                      }, \" EXIT \"),\n                      _createElementVNode(\"div\", {\n                        class: \"logOutBox\",\n                        onClick: fullScreen\n                      }, \"FULL SCREEN\")\n                    ])\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_8, [\n                  _createElementVNode(\"ul\", null, [\n                    _createElementVNode(\"li\", {\n                      class: \"alarm\",\n                      onClick: errLogOn,\n                      onMouseover: openErrLogOver,\n                      onMouseleave: closeErrLogLeave\n                    }, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'bell'],\n                        class: _normalizeClass({ 'blinking-red': isErrorAlarm.value, 'blinking-blue': isCompleteAlarm.value })\n                      }, null, 8, [\"class\"]),\n                      (ErrLogOpen.value)\n                        ? (_openBlock(), _createBlock(ErrLog, {\n                            key: 0,\n                            onClick: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"])),\n                            onCloseErrLog: closeErrLog,\n                            ErrLogOpen: ErrLogOpen.value,\n                            errArr: errArr.value,\n                            onErrMouseSet: errMouseSet\n                          }, null, 8, [\"ErrLogOpen\", \"errArr\"]))\n                        : _createCommentVNode(\"\", true)\n                    ], 32),\n                    _createElementVNode(\"li\", null, [\n                      (isDoorOpen.value !== 'Y')\n                        ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                            key: 0,\n                            icon: ['fas', 'door-closed']\n                          }))\n                        : (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                            key: 1,\n                            icon: ['fas', 'door-open'],\n                            style: {\"color\":\"red\"}\n                          }))\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: eqStatCdData.value.icon,\n                        class: _normalizeClass(eqStatCdData.value.class)\n                      }, null, 8, [\"icon\", \"class\"])\n                    ]),\n                    _createElementVNode(\"li\", {\n                      class: \"oliCount pos-relative\",\n                      onClick: openLayer\n                    }, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'droplet'],\n                        onMouseenter: _cache[2] || (_cache[2] = ($event: any) => (tooltipVisibleFunc('oilPrime', true))),\n                        onMouseleave: _cache[3] || (_cache[3] = ($event: any) => (tooltipVisibleFunc('oilPrime', false)))\n                      }),\n                      _createVNode(Tooltip, {\n                        isVisible: tooltipVisible.oilPrime,\n                        className: \"mb08\",\n                        position: \"bottom\",\n                        type: \"\",\n                        message: `OilCount: ${oilCountData.value || 0}`\n                      }, null, 8, [\"isVisible\", \"message\"])\n                    ]),\n                    _createElementVNode(\"li\", _hoisted_9, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'database'],\n                        onMouseenter: _cache[4] || (_cache[4] = ($event: any) => (tooltipVisibleFunc('storage', true))),\n                        onMouseleave: _cache[5] || (_cache[5] = ($event: any) => (tooltipVisibleFunc('storage', false)))\n                      }),\n                      _createVNode(Tooltip, {\n                        isVisible: tooltipVisible.storage,\n                        className: \"mb08\",\n                        position: \"bottom\",\n                        type: \"\",\n                        message: `Storage: ${storagePercentData.value || 0}`\n                      }, null, 8, [\"isVisible\", \"message\"])\n                    ])\n                  ])\n                ])\n              ])\n            ], 2))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (oilVisible.value)\n      ? (_openBlock(), _createBlock(Modal, {\n          key: 0,\n          \"onUpdate:closeLayer\": closeLayer,\n          onAfterOpen: onModalOpen\n        }, {\n          header: _withCtx(() => _cache[10] || (_cache[10] = [\n            _createElementVNode(\"h2\", null, \"Immersion Oil\", -1)\n          ])),\n          content: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_10, [\n              _cache[12] || (_cache[12] = _createElementVNode(\"h5\", { class: \"modalTitle mb10\" }, \"Immersion Oil count Reset\", -1)),\n              _cache[13] || (_cache[13] = _createElementVNode(\"span\", { class: \"grayText\" }, \"Reset Immersion Oil count after changing Oil pack\", -1)),\n              _createElementVNode(\"div\", _hoisted_11, [\n                _cache[11] || (_cache[11] = _createElementVNode(\"span\", null, \"Estimated number of slides left\", -1)),\n                _createElementVNode(\"span\", _hoisted_12, _toDisplayString(oilCount.value), 1)\n              ]),\n              _createElementVNode(\"div\", _hoisted_13, [\n                _createElementVNode(\"div\", {\n                  ref_key: \"statusBarWrapper\",\n                  ref: statusBarWrapper,\n                  class: \"statusBarWrapper\"\n                }, [\n                  _createElementVNode(\"div\", {\n                    ref_key: \"statusBar\",\n                    ref: statusBar,\n                    class: \"statusBar\"\n                  }, null, 512)\n                ], 512),\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"button\", {\n                    onClick: onReset,\n                    class: \"alertButton\"\n                  }, \"Reset\")\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_14, [\n              _cache[15] || (_cache[15] = _createElementVNode(\"h5\", { class: \"modalTitle mb10\" }, \"Prime Immersion Oil\", -1)),\n              _cache[16] || (_cache[16] = _createElementVNode(\"span\", { class: \"grayText mt10\" }, \"Prime oil to remove air from the oil hose\", -1)),\n              _createElementVNode(\"div\", _hoisted_15, [\n                _cache[14] || (_cache[14] = _createElementVNode(\"div\", { class: \"statusBarWrapper\" }, null, -1)),\n                _createElementVNode(\"button\", {\n                  type: \"button\",\n                  onClick: onPrime,\n                  class: _normalizeClass({'alertButton': true, 'blinkGripper': isBlinkingPrime.value})\n                }, \"Prime \", 2)\n              ])\n            ])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 2,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (toastMessage.value)\n      ? (_openBlock(), _createBlock(ToastNotification, {\n          key: 3,\n          message: toastMessage.value,\n          messageType: toastMessageType.value,\n          duration: 1500,\n          position: \"bottom-right\"\n        }, null, 8, [\"message\", \"messageType\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <header class='header'>\r\n    <nav>\r\n      <div class='appHeaderLeft' :class=\"{ 'bmComponent': projectBm }\" v-if=\"!appHeaderLeftHidden\">\r\n        <div class=\"borderLine\">\r\n          <img src=\"../../assets/images/celli.png\" class=\"headerLogo\"/>\r\n          <p class=\"logoProjectTitle\">{{ projectBm ? 'BM' : 'PB' }}</p>\r\n        </div>\r\n\r\n        <router-link :to=\"noRouterPush ? '#' : '/setting'\"\r\n                     :class='{ \"leftActive\": isActive(\"/setting\"), \"disabledLink\": noRouterPush }'>\r\n          <font-awesome-icon :icon=\"['fas', 'gear']\" style=\"font-size: 1rem;\"/>\r\n          <span class='icoText'>Setting</span>\r\n        </router-link>\r\n        <router-link to=\"/\" v-if=\"viewerCheck === 'main'\" :class='{ \"leftActive\": isActive(\"/analysis\") || route.path === \"/\" }'>\r\n          <font-awesome-icon :icon=\"['fas', 'chart-pie']\"\r\n                             style=\"font-size: 1rem;\"\r\n          />\r\n          <span class='icoText'>Analysis</span>\r\n        </router-link>\r\n        <router-link to=\"/dataBase\"\r\n                     :class='{ \"leftActive\": isActive(\"/dataBase\") || isActive(\"/databaseDetail\") || isActive(\"/databaseRbc\") || isActive(\"/report\") || isActive(\"/databaseWhole\") }'>\r\n          <font-awesome-icon :icon=\"['fas', 'server']\"\r\n                             style=\"font-size: 1rem;\"\r\n          />\r\n          <span class='icoText'>Database</span>\r\n        </router-link>\r\n\r\n        <!-- 가운데 메뉴 -->\r\n        <div v-if=\"machineVersion === '100a'\" class=\"autoStart-container\">\r\n          <ProgressBar\r\n              text=\"Auto Start\"\r\n              :value=\"autoStartTimer\"\r\n              gradientStart=\"#2196f3\"\r\n              gradientEnd=\"#03a9f4\"\r\n              :animationDuration=\"0.3\"\r\n              :showGlowEffect=\"true\"\r\n          />\r\n\r\n        </div>\r\n\r\n        <!--  좌측메뉴  -->\r\n        <div class=\"small-icon-menu\">\r\n          <div class=\"lastMenu\">\r\n            <ul>\r\n              <li>{{ formattedDate }} {{ formattedTime }}</li>\r\n              <li class=\"lastLiM\">\r\n                <div class=\"cursorPointer userBox\" @click=\"userSetOutToggle\">\r\n                  <font-awesome-icon :icon=\"['fas', 'circle-user']\"/>\r\n                  {{ userModuleDataGet.userId }}\r\n                </div>\r\n                <ul v-show=\"userSetOutUl\" class=\"userSetOutUl\" @click.stop>\r\n                  <li @click=\"logout\">LOGOUT</li>\r\n                </ul>\r\n                <div class=\"logOutBox\" @click=\"exit\">\r\n                  EXIT\r\n                </div>\r\n                <div class=\"logOutBox\" @click='fullScreen'>FULL SCREEN</div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"iconHeaderMenu\">\r\n            <ul>\r\n              <li class=\"alarm\" @click=\"errLogOn\" @mouseover=\"openErrLogOver\" @mouseleave=\"closeErrLogLeave\" >\r\n                <font-awesome-icon :icon=\"['fas', 'bell']\" :class=\"{ 'blinking-red': isErrorAlarm, 'blinking-blue': isCompleteAlarm }\"/>\r\n                <ErrLog @click.stop  @closeErrLog='closeErrLog' v-if=\"ErrLogOpen\" :ErrLogOpen=\"ErrLogOpen\" :errArr=\"errArr\" @errMouseSet=\"errMouseSet\" />\r\n              </li>\r\n              <li>\r\n                <font-awesome-icon v-if=\"isDoorOpen !== 'Y'\" :icon=\"['fas', 'door-closed']\"></font-awesome-icon>\r\n                <font-awesome-icon v-else :icon=\"['fas', 'door-open']\" style=\"color: red;\"/>\r\n              </li>\r\n              <li>\r\n                <font-awesome-icon :icon=\"eqStatCdData.icon\" :class=\"eqStatCdData.class\"/>\r\n              </li>\r\n              <li class=\"oliCount pos-relative\" @click=\"openLayer\">\r\n                <font-awesome-icon\r\n                    :icon=\"['fas', 'droplet']\"\r\n                    @mouseenter=\"tooltipVisibleFunc('oilPrime', true)\"\r\n                    @mouseleave=\"tooltipVisibleFunc('oilPrime', false)\"\r\n                />\r\n                <Tooltip :isVisible=\"tooltipVisible.oilPrime\" className=\"mb08\" position=\"bottom\" type=\"\" :message=\"`OilCount: ${oilCountData || 0}`\" />\r\n              </li>\r\n              <li class=\"storage pos-relative\">\r\n                <font-awesome-icon\r\n                    :icon=\"['fas', 'database']\"\r\n                    @mouseenter=\"tooltipVisibleFunc('storage', true)\"\r\n                    @mouseleave=\"tooltipVisibleFunc('storage', false)\"\r\n                />\r\n                <Tooltip :isVisible=\"tooltipVisible.storage\" className=\"mb08\" position=\"bottom\" type=\"\" :message=\"`Storage: ${storagePercentData || 0}`\" />\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n\r\n  <Modal v-if=\"oilVisible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <!-- 헤더 슬롯에 들어갈 내용 -->\r\n    <template #header>\r\n      <h2>Immersion Oil</h2>\r\n    </template>\r\n\r\n    <!-- 컨텐츠 슬롯에 들어갈 내용 -->\r\n    <template #content>\r\n      <div class=\"immersionOilContainer\">\r\n        <h5 class=\"modalTitle mb10\">Immersion Oil count Reset</h5>\r\n        <span class=\"grayText\">Reset Immersion Oil count after changing Oil pack</span>\r\n        <div class=\"flex-justify-between flex-align-center mt10\">\r\n          <span>Estimated number of slides left</span>\r\n          <span class=\"f18\">{{ oilCount }}</span>\r\n        </div>\r\n\r\n        <div class=\"flex-column-align-end\">\r\n          <div ref=\"statusBarWrapper\" class=\"statusBarWrapper\">\r\n            <div ref=\"statusBar\" class=\"statusBar\"></div>\r\n          </div>\r\n          <div>\r\n            <button @click='onReset' class=\"alertButton\">Reset</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class='mt20'>\r\n        <h5 class=\"modalTitle mb10\">Prime Immersion Oil</h5>\r\n        <span class=\"grayText mt10\">Prime oil to remove air from the oil hose</span>\r\n        <div class=\"flex-column-align-end\">\r\n          <div class=\"statusBarWrapper\">\r\n          </div>\r\n          <button type=\"button\" @click='onPrime' :class=\"{'alertButton': true, 'blinkGripper': isBlinkingPrime}\">Prime\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n    </template>\r\n  </Modal>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <ToastNotification\r\n      v-if=\"toastMessage\"\r\n      :message=\"toastMessage\"\r\n      :messageType=\"toastMessageType\"\r\n      :duration=\"1500\"\r\n      position=\"bottom-right\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {useRoute} from 'vue-router';\r\nimport {\r\n  computed,\r\n  getCurrentInstance,\r\n  nextTick,\r\n  onBeforeMount,\r\n  onBeforeUnmount,\r\n  onMounted,\r\n  reactive,\r\n  ref,\r\n  watch\r\n} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport router from \"@/router\";\r\nimport Modal from '@/components/commonUi/modal.vue';\r\nimport {MESSAGES, MSG} from \"@/common/defines/constants/constantMessageText\";\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {tcpReq} from \"@/common/defines/constants/tcpRequest/tcpReq\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\nimport {logoutApi} from \"@/common/api/service/user/userApi\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport axios from \"axios\";\r\nimport {SOUND_COMPLETE_ALARM, SOUND_ERROR_ALARM} from \"@/common/lib/utils/assetUtils\";\r\nimport ProgressBar from \"@/components/commonUi/ProgressBar.vue\";\r\nimport {errLogsReadApi} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport ToastNotification from \"@/components/commonUi/ToastNotification.vue\";\r\nimport ErrLog from \"@/components/commonUi/ErrLog.vue\";\r\nimport Tooltip from \"@/components/commonUi/Tooltip.vue\";\r\n\r\nconst route = useRoute();\r\nconst appHeaderLeftHidden = ref(false);\r\nconst store = useStore();\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst isBlinkingPrime = ref(false);\r\nlet blinkTimeout: ReturnType<typeof setTimeout> | null = null;\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\nconst instance = getCurrentInstance();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst oilCount = ref(0);\r\nconst isDoorOpen = ref('');\r\nconst storagePercent = ref(0);\r\nconst eqStatCd = ref('');\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst ErrLogOpen = ref(false);\r\n\r\nconst eqStatCdData = ref({\r\n  icon: ['fas', 'person'],\r\n  class: ''\r\n});\r\nconst oilCountData = ref('');\r\nconst storagePercentData = ref('');\r\nconst oilVisible = ref(false);\r\nconst maxOilCount = ref(1000);\r\nconst statusBarWrapper = ref<HTMLDivElement | null>(null);\r\nconst statusBar = ref<HTMLDivElement | null>(null);\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isNsNbIntegration = ref(sessionStorage.getItem('isNsNbIntegration') || '');\r\nconst analysisType = computed(() => store.state.commonModule.analysisType);\r\nconst isCompleteAlarm = computed(() => store.state.commonModule.isCompleteAlarm);\r\nconst isErrorAlarm = computed(() => store.state.commonModule.isErrorAlarm);\r\nconst rootDir = computed(() => store.state.commonModule.iaRootPath);\r\n\r\nconst isErrorAlarmRunning = ref(false);\r\nconst isCompleteAlarmRunning = ref(false);\r\nconst alarmCount = ref(0);\r\nconst noRouterPush = ref(false);\r\nconst currentDate = ref<string>(\"\");\r\nconst currentTime = ref<string>(\"\");\r\nlet isCompleteAlarmInterval = null;\r\nlet isErrorAlarmInterval = null;\r\nconst isPlayingCompleteAlarm = ref(false);\r\nconst isPlayingErrorAlarm = ref(false);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\nconst machineVersion = ref('');\r\nconst clickType = ref('');\r\nconst userSetOutUl = ref(false);\r\nconst isStartCountUpdated = ref(false);\r\nconst autoStartTimer = ref(0);\r\nconst errArr = ref<any>([]);\r\nconst toastMessage = ref('');\r\nconst toastMessageType = ref(MESSAGES.TOAST_MSG_SUCCESS);\r\nconst mouseClick = ref(false);\r\nconst mounseLeave = ref(false);\r\nconst tooltipVisible = reactive({\r\n  oilPrime: false,\r\n  storage: false,\r\n})\r\n\r\nconst formattedDate = computed(() => currentDate.value);\r\nconst formattedTime = computed(() => currentTime.value);\r\n\r\nconst userSetOutToggle = () => {\r\n  userSetOutUl.value = !userSetOutUl.value;\r\n}\r\n\r\nconst updateDateTime = () => {\r\n  const now = new Date();\r\n  currentDate.value = now.toLocaleDateString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n  currentTime.value = now.toLocaleTimeString('en-US');\r\n};\r\n\r\nconst errLogOn = async () => {\r\n  mouseClick.value = !mouseClick.value;\r\n  if(mounseLeave.value){\r\n    return\r\n  }\r\n  ErrLogOpen.value = !ErrLogOpen.value;\r\n  await errLogLoad();\r\n\r\n}\r\nconst errLogLoad = async () => {\r\n  const folderPath = `folderPath=${rootDir.value.replace('PBIA_proc','')}UIMD_Data/Backend_Log`;\r\n  const res = await errLogsReadApi(folderPath);\r\n  if(res.code === 200){\r\n    if(res?.data?.status === 400){\r\n      toastMessageType.value = MESSAGES.TOAST_MSG_ERROR;\r\n      showToast(res?.data?.response.error);\r\n      return;\r\n    }\r\n    let newArr = [];\r\n\r\n    // 날짜별로 들어옴 다중 포문 쓴 이유\r\n    for (const date in res.data) {\r\n      const entries = res.data[date];\r\n\r\n      for (const el of entries) {\r\n        const fullTimestamp = `${date} ${el.timestamp}`; // 날짜 합치기 용도\r\n        if (el.E_TYPE !== 'DEV_INFO'){\r\n          newArr.push({\r\n            timestamp: fullTimestamp,\r\n            code: el?.E_CODE,\r\n            type: el?.E_TYPE,\r\n            desc: el?.E_DESC,\r\n            soln: el?.E_SOLN,\r\n            name: el?.E_NAME,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    errArr.value = newArr;\r\n  }\r\n}\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n\r\n  await logoutApi({userId: userId.value});\r\n  if (clickType.value === 'exit') {\r\n    if (viewerCheck.value === 'main') {\r\n      await EventBus.publish('childEmitSocketData', tcpReq().embedStatus.exit);\r\n    } else {\r\n      const result = await getDeviceIpApi();\r\n      const ipAddress = `ip=${result.data}`\r\n      const url = `http://${result.data}:3000/close?${ipAddress}`;\r\n      await axios.get(url);\r\n    }\r\n  } else {\r\n    sessionStorage.clear();\r\n    await router.push('user/login');\r\n    if (document.fullscreenElement) {\r\n      await document.exitFullscreen();\r\n    }\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst fullScreen = () => {\r\n  if (!document.fullscreenElement) {\r\n    document.documentElement.requestFullscreen();\r\n  } else {\r\n    document.exitFullscreen();\r\n  }\r\n}\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n  machineVersion.value = window.MACHINE_VERSION;\r\n})\r\n\r\nonMounted(async () => {\r\n  cellImgGet();\r\n  updateDateTime(); // 초기 시간 설정\r\n  const timerId = setInterval(updateDateTime, 1000); // 1초마다 현재 시간을 갱신\r\n\r\n  // 컴포넌트가 해제되기 전에 타이머를 정리하여 메모리 누수를 방지\r\n  onBeforeUnmount(() => {\r\n    clearInterval(timerId);\r\n  });\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n  }\r\n\r\n  document.addEventListener('click', closeUserSetBox);\r\n  window.addEventListener('wheel', preventScroll, {passive: false});\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  document.removeEventListener('click', closeUserSetBox);\r\n  window.removeEventListener('wheel', preventScroll);\r\n})\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVals: any) => {\r\n  await nextTick();\r\n  oilCount.value = Number(newVals[0].sysInfo.oilCount);\r\n  isDoorOpen.value = newVals[0].sysInfo.isDoorOpen;\r\n  storagePercent.value = Number(newVals[0].sysInfo.storageSize);\r\n  eqStatCd.value = newVals[0].sysInfo.eqStatCd;\r\n\r\n  const autoStartTimerNumber = newVals[0].sysInfo?.autoStartTimer;\r\n  if (machineVersion.value === '100a' && autoStartTimerNumber !== undefined) {\r\n    autoStartTimer.value = (parseFloat(autoStartTimerNumber) / 5) * 100;\r\n  }\r\n\r\n\r\n  eqStatCdData.value = eqStatCdChangeVal(newVals[0].sysInfo.eqStatCd);\r\n  oilCountData.value = oilCountChangeVal();\r\n  storagePercentData.value = storagePercentChangeVal();\r\n\r\n  // 2번 보내는지 확인\r\n  if (!isStartCountUpdated.value) {\r\n    await searchCardCount();\r\n  }\r\n\r\n});\r\n\r\nconst preventScroll = (event: any) => {\r\n  if (event.ctrlKey) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nconst searchCardCount = async () => {\r\n  const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n  const payload = {\r\n    jobCmd: 'SEARCH_CARD_COUNT',\r\n    reqUserId: userId.value,\r\n    reqDttm: reqDttm,\r\n    testType: analysisType.value,\r\n  };\r\n  EventBus.publish('childEmitSocketData', payload);\r\n  isStartCountUpdated.value = true;\r\n}\r\n\r\n\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  if (newValsObj[0].isRunningState) {\r\n    noRouterPush.value = true;\r\n  } else {\r\n    noRouterPush.value = false;\r\n  }\r\n});\r\n\r\nwatch(() => isErrorAlarm.value, async (newIsErrorAlarm: boolean) => {\r\n  if (newIsErrorAlarm && !isErrorAlarmRunning.value) {\r\n    if (!isPlayingErrorAlarm.value) {\r\n      isErrorAlarmRunning.value = true;\r\n      isPlayingErrorAlarm.value = true;\r\n      try {\r\n        await SOUND_ERROR_ALARM.play();\r\n      } catch (e) {\r\n        console.error(e);\r\n      } finally {\r\n        isPlayingErrorAlarm.value = false;\r\n      }\r\n    }\r\n    isErrorAlarmInterval = setTimeout(() => {\r\n      store.dispatch('commonModule/setCommonInfo', { isErrorAlarm: false });\r\n      isErrorAlarmRunning.value = false;\r\n    }, alarmCount.value);\r\n  }\r\n})\r\n\r\nwatch(() => isCompleteAlarm.value, async (newIsCompleteAlarm: boolean) => {\r\n  if (newIsCompleteAlarm && !isCompleteAlarmRunning.value) {\r\n    if (!isPlayingCompleteAlarm.value) {\r\n      isCompleteAlarmRunning.value = true;\r\n      isPlayingCompleteAlarm.value = true;\r\n      try {\r\n        await SOUND_COMPLETE_ALARM.play();\r\n      } catch (e) {\r\n        console.error(e);\r\n      } finally {\r\n        isPlayingCompleteAlarm.value = false;\r\n      }\r\n    }\r\n\r\n    isCompleteAlarmInterval = setTimeout(() => {\r\n      isCompleteAlarmRunning.value = false;\r\n      store.dispatch('commonModule/setCommonInfo', { isCompleteAlarm: false });\r\n    }, alarmCount.value);\r\n  }\r\n})\r\n\r\nconst closeUserSetBox = (event: any) => {\r\n  const selectBox = document.querySelector('.userSetOutUl');\r\n  const selectButton = document.querySelector('.cursorPointer');\r\n  if (selectButton && selectButton.contains(event.target as Node)) return;\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    userSetOutUl.value = false;\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst logout = () => {\r\n  clickType.value = 'logout';\r\n  confirmMessage.value = MESSAGES.LOGOUT;\r\n  showConfirm.value = true;\r\n  localStorage.removeItem('user')\r\n  userSetOutUl.value = false;\r\n}\r\n\r\nconst exit = async () => {\r\n  clickType.value = 'exit';\r\n  confirmMessage.value = MESSAGES.exit;\r\n  showConfirm.value = true;\r\n  userSetOutUl.value = false;\r\n}\r\n\r\nconst oilCountChangeVal = (): string => {\r\n  if (oilCount.value >= 0 && oilCount.value <= 100) {\r\n    return '10%';\r\n  } else if (oilCount.value > 100 && oilCount.value <= 250) {\r\n    return '25%';\r\n  } else if (oilCount.value > 250 && oilCount.value <= 500) {\r\n    return '50%';\r\n  } else if (oilCount.value > 500 && oilCount.value <= 750) {\r\n    return '75%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\n\r\nconst storagePercentChangeVal = () => {\r\n  if (storagePercent.value >= 0 && storagePercent.value <= 30) {\r\n    return '30%';\r\n  } else if (storagePercent.value > 30 && storagePercent.value <= 60) {\r\n    return '60%';\r\n  } else if (storagePercent.value > 60 && storagePercent.value <= 90) {\r\n    return '90%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\nconst eqStatCdChangeVal = (eqStatCdVal: string) => {\r\n  if (eqStatCdVal === '01') {\r\n    return {\r\n      icon: ['fas', 'person'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '02') {\r\n    return {\r\n      icon: ['fas', 'person-walking'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '03') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runRed'\r\n    };\r\n  } else if (eqStatCdVal === '04' || eqStatCdVal === '05') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runBlue'\r\n    };\r\n  }\r\n\r\n  return {\r\n    icon: ['fas', 'person'],\r\n    class: ''\r\n  };\r\n}\r\n\r\nconst openLayer = () => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    showErrorAlert('Access is only available from the main PC.');\r\n    return;\r\n  }\r\n\r\n  oilVisible.value = true;\r\n};\r\n\r\nconst closeLayer = (val: boolean) => {\r\n  oilVisible.value = val;\r\n};\r\n\r\nconst onReset = () => {\r\n\r\n  getPercent();\r\n  const settings = tcpReq().embedStatus.settings;\r\n  settings.reqUserId = userId;\r\n\r\n  Object.assign(settings, {\r\n    oilCount,\r\n    isOilReset: 'Y',\r\n    // uiVersion: 'uimd-pb-comm_v3',\r\n    userId: '',\r\n    isNsNbIntegration: isNsNbIntegration.value || '',\r\n  });\r\n  EventBus.publish('childEmitSocketData', settings);\r\n\r\n  showSuccessAlert(MESSAGES.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst getPercent = () => {\r\n  if (!statusBarWrapper.value || !statusBar.value) {\r\n    return;\r\n  }\r\n  const percent = Math.min(Math.round((oilCount.value / maxOilCount.value) * 100), 100);\r\n  const progressBarWidth = `${(percent / 100) * statusBarWrapper.value.offsetWidth}px`;\r\n  statusBar.value.style.width = progressBarWidth;\r\n}\r\n\r\nconst onPrime = () => {\r\n  if (blinkTimeout !== null) {\r\n    clearTimeout(blinkTimeout);\r\n  }\r\n\r\n  isBlinkingPrime.value = true;\r\n  tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.oilPrime);\r\n\r\n  blinkTimeout = setTimeout(() => {\r\n    isBlinkingPrime.value = false;\r\n    blinkTimeout = null;\r\n  }, 1500);\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  // 모달이 열린 후에 실행되는 콜백 함수\r\n  getPercent();\r\n};\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        await store.dispatch('commonModule/setCommonInfo', {isNsNbIntegration: data.isNsNbIntegration ? 'Y' : 'N'});\r\n        alarmCount.value = data?.isAlarm ? Number(data.alarmCount) * 1000 : 5000;\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', { isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N' });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n        sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n        sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n        sessionStorage.setItem('edgeShotLPCount', String(data?.edgeShotLPCount));\r\n        sessionStorage.setItem('edgeShotHPCount', String(data?.edgeShotHPCount));\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n        await store.dispatch('commonModule/setCommonInfo', { showLISUploadAfterCheckingAll: data?.lisUploadCheckAll });\r\n\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst showToast = (message: string) => {\r\n  toastMessage.value = message;\r\n  setTimeout(() => {\r\n    toastMessage.value = ''; // 메시지를 숨기기 위해 빈 문자열로 초기화\r\n  }, 1500); // 5초 후 토스트 메시지 사라짐\r\n};\r\n\r\nconst closeErrLog = () => {\r\n  ErrLogOpen.value = false;\r\n}\r\n\r\nconst openErrLogOver = async () => {\r\n  ErrLogOpen.value = true;\r\n  mounseLeave.value = true;\r\n  await errLogLoad();\r\n}\r\n\r\nconst closeErrLogLeave = () => {\r\n  if (mouseClick.value){\r\n    return;\r\n  }\r\n  mounseLeave.value = false;\r\n  ErrLogOpen.value = false;\r\n}\r\n\r\nconst errMouseSet = () => {\r\n  mounseLeave.value = false;\r\n  ErrLogOpen.value = false;\r\n  mouseClick.value = false;\r\n}\r\n\r\nconst tooltipVisibleFunc = (type: 'oilPrime' | 'storage', visible: boolean) => {\r\n  tooltipVisible[type] = visible;\r\n}\r\n\r\n</script>\r\n","import script from \"./AppHeader.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./AppHeader.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const basicWbcArr = [\r\n    {\r\n        id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n    }, {\r\n        id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n    }, {\r\n        id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n    }, {\r\n        id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, key: '', order: 4\r\n    }, {\r\n        id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, key: '', order: 5\r\n    }, {\r\n        id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, key: '', order: 6\r\n    }, {\r\n        id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 7\r\n    }, {\r\n        id: '61', title: 'LR', name: 'Reactive lymphocyte', count: 0, percent: 0, key: '', order: 8\r\n    }, {\r\n        id: '62', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, key: '', order: 9\r\n    }, {\r\n        id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 10\r\n    }, {\r\n        id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 11\r\n    }, {\r\n        id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 12\r\n    }, {\r\n        id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 13\r\n    }, {\r\n        id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 14\r\n    }, {\r\n        id: '12', title: 'NR', name: 'nRBC', count: 0, percent: 0, key: '', order: 15\r\n    }, {\r\n        id: '13', title: 'GP', name: 'Giant platelet', count: 0, percent: 0, key: '', order: 16\r\n    }, {\r\n        id: '14', title: 'PA', name: 'Platelet aggregation', count: 0, percent: 0, key: '', order: 17\r\n    }, {\r\n        id: '16', title: 'MA', name: 'Malaria', count: 0, percent: 0, key: '', order: 18\r\n    }, {\r\n        id: '15', title: 'AR', name: 'Artifact', count: 0, percent: 0, key: '', order: 19\r\n    }, {\r\n        id: '17', title: 'SM', name: 'Smudge', count: 0, percent: 0, key: '', order: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassList = [\r\n{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, order: 1\r\n}, {\r\n    id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, order: 4\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, order: 5\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, order: 6\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, order: 7\r\n}, {\r\n    id: '06', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, order: 8\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, order: 9\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, order: 10\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, order: 11\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, order: 12\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, order: 13\r\n}, {\r\n    id: '12', title: 'ON', name: 'Orthochromic Normoblast', count: 0, percent: 0, order: 14\r\n}, {\r\n    id: '13', title: 'PN', name: 'Polychromic Normoblast', count: 0, percent: 0, order: 15\r\n}, {\r\n    id: '14', title: 'BN', name: 'Basophilic Normoblast', count: 0, percent: 0, order: 16\r\n}, {\r\n    id: '15', title: 'PE', name: 'Proerythroblast', count: 0, percent: 0, order: 17\r\n}, {\r\n    id: '16', title: 'HC', name: 'Histiocyte', count: 0, percent: 0, order: 18\r\n}, {\r\n    id: '17', title: 'OT', name: 'Others', count: 0, percent: 0, order: 19\r\n}]","import store from '@/store';\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\n// 다른 페이지에서 호출 시 명확하게 알 수 있게 변수 생성 시 뒤에 store 를 붙여주세요.\r\nexport const sysInfoStore = async (data: any): Promise<any> => {\r\n    if (data?.resultCd === '00000') {\r\n        const embeddedInfoData = {\r\n            embeddedStatusJobCmd: '',\r\n            userStop: data.isRecovery === 'Y',\r\n            isRecoveryRun: data.isRecovery === 'N' && false,\r\n            isPause: data.jobCmd === 'PAUSE',\r\n            sysInfo: data,\r\n            isInit: data ? data.isInit : undefined,\r\n        };\r\n\r\n        const deviceInfoData = {\r\n            siteCd: data.siteCd,\r\n            deviceSerialNm: data.deviceBarcode\r\n        }\r\n\r\n        await store.dispatch('commonModule/setCommonInfo', deviceInfoData);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', embeddedInfoData);\r\n        return null;\r\n    }else {\r\n        await store.dispatch('commonModule/setCommonInfo', {'appAlertOpen': true});\r\n        return data?.resultMsg;\r\n    }\r\n};\r\n\r\nexport const runningInfoStore = async (data: any) => {\r\n    // await store.dispatch('wbcClassificationModule/setWbcInfo', data.slotInfo);\r\n    await store.dispatch('runningInfoModule/setRunningInfo', data);\r\n}\r\n\r\n// export const wbcInfoStore = async (data: any) => {\r\n//     await store.dispatch('wbcClassificationModule/setWbcInfo', data.slotInfo);\r\n// }\r\n\r\n// export const rbcInfoStore = async (data: any) => {\r\n//     await store.dispatch('rbcClassificationModule/setRbcInfo', data.slotInfo);\r\n// }","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nimport AppHeader from \"@/components/layout/AppHeader.vue\";\r\n\r\nimport {\r\n  getCurrentInstance,\r\n  ref,\r\n  computed,\r\n  watch,\r\n  onMounted,\r\n  nextTick,\r\n  onBeforeUnmount,\r\n  onBeforeMount,\r\n} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {tcpReq} from '@/common/defines/constants/tcpRequest/tcpReq';\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport {\r\n  getCellImgApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {\r\n  createDeviceInfoApi,\r\n  getDeviceInfoApi,\r\n  getDeviceIpApi,\r\n  putDeviceInfoApi\r\n} from \"@/common/api/service/device/deviceApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constants/classArr\";\r\nimport Analysis from \"@/views/analysis/index.vue\";\r\nimport {logoutApi} from \"@/common/api/service/user/userApi\";\r\nimport {inhaPercentChange} from \"@/common/helpers/common/classPercent\";\r\nimport axios from \"axios\";\r\nimport {\r\n  getCbcCodeList,\r\n  getCbcPathData, getLisPathData,\r\n  getLisWbcRbcData,\r\n  inhaCbc,\r\n  inhaDataSend\r\n} from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {sysInfoStore, runningInfoStore} from \"@/common/helpers/common/store/common\";\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\r\n\r\nconst router = useRouter();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst instance = getCurrentInstance();\r\nconst userId = ref('');\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst normalItems = ref<any>([]);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst reqArr = computed(() => store.state.commonModule);\r\nconst runningInfoBoolen = ref(false);\r\nlet countingInterStartval: any = null;\r\nlet countingInterRunval: any = null;\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slotIndex = computed(() => store.state.commonModule.slotIndex);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst isRewindingBelt = computed(() => store.state.commonModule.isRewindingBelt);\r\n\r\nconst isNsNbIntegrationLocal = computed(() => store.state.commonModule.isNsNbIntegration);\r\nconst runningArr: any = ref<any>([]);\r\nconst classArr = ref<any>([]);\r\nconst rbcArr = ref<any>([]);\r\nconst viewerCheckApp = ref('');\r\nconst projectBm = ref(false);\r\nconst parsedDataProps = ref<any>({});\r\nconst parsedDataSysInfoProps = ref<any>({});\r\nconst startStatus = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst pb100aCassette = ref<any>('');\r\nconst deleteData = ref(false);\r\nlet socketTimeoutId: number | undefined = undefined; // 타이머 ID 저장\r\nconst isFullscreen = ref<boolean>(false);\r\nlet intervalId: any;\r\nconst ipMatches = ref(false);\r\nconst barcodeNum = ref('');\r\nconst cbcFilePathSetArr = ref('');\r\nconst cbcCodeList = ref<any>([]);\r\nconst lisCodeWbcArrApp = ref<any>([]);\r\nconst lisCodeRbcArrApp = ref<any>([]);\r\nconst lisFilePath = ref('');\r\n\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('isTcpConnected', async (isTcpConnected) => {\r\n  if (isTcpConnected) {\r\n    setTimeout(async () => {\r\n      await store.dispatch('commonModule/setCommonInfo', {isTcpConnected: true});\r\n    }, 1500)\r\n  }\r\n})\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('viewerCheck', async (ip) => { // 뷰어인지 아닌지 체크하는곳\r\n  await getIpAddress(ip)\r\n});\r\n\r\nconst getIpAddress = async (ip: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if (result.data === ip) {\r\n      viewerCheckApp.value = result.data;\r\n    } else {\r\n      viewerCheckApp.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nfunction checkFullscreenStatus() {\r\n  const {path} = router.currentRoute.value;\r\n  if (path === '/user/login') {\r\n    return;\r\n  }\r\n  isFullscreen.value = window.matchMedia('(display-mode: fullscreen)').matches;\r\n  if (!isFullscreen.value) {\r\n    showSuccessAlert(MESSAGES.FULLSCREEN_SUGGEST);\r\n  } else {\r\n    if (alertMessage.value === MESSAGES.FULLSCREEN_SUGGEST) {\r\n      hideAlert();\r\n    }\r\n  }\r\n}\r\n\r\nfunction startChecking() {\r\n  // 화면 상태를 즉시 업데이트\r\n  checkFullscreenStatus();\r\n  // 1분(60000ms)마다 체크\r\n  intervalId = setInterval(checkFullscreenStatus, 60000);\r\n}\r\n\r\n\r\nwatch(reqArr.value, async (newVal) => {\r\n  if (!newVal.reqArr) return;\r\n  const uniqueReqArr = removeDuplicateJobCmd(newVal.reqArr);\r\n  const notSysRunInfo = uniqueReqArr.filter((item: any) => !['SYSINFO', 'RUNNING_INFO'].includes(item.jobCmd));\r\n\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return;\r\n  }\r\n\r\n  if (deleteData.value) {\r\n    deleteData.value = false;\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return\r\n  }\r\n\r\n  if (uniqueReqArr.length === 0) return;\r\n\r\n\r\n  // `notSysRunInfo`와 `uniqueReqArr` 처리\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n  } else {\r\n    await sendMessage(uniqueReqArr[0]);\r\n  }\r\n\r\n  // `reqArrPaste` 상태 초기화\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nonBeforeMount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('viewerCheck', {\r\n    type: 'SEND_DATA',\r\n    payload: window.APP_API_BASE_URL\r\n  });\r\n});\r\n\r\nwindow.addEventListener('beforeunload', async function (event: any) {\r\n  await logoutApi({userId: userId.value});\r\n  await store.dispatch('commonModule/setCommonInfo', {firstLoading: false});\r\n});\r\n\r\n\r\nconst leave = async (event: any) => {\r\n  event.preventDefault();\r\n  if (!ipMatches.value) {\r\n    const result = await getDeviceIpApi();\r\n    const ipAddress = `ip=${result.data}`\r\n    const url = `http://${result.data}:3000/close?${ipAddress}`;\r\n    await axios.get(url);\r\n  } else {\r\n    await EventBus.publish('childEmitSocketData', tcpReq().embedStatus.exit);\r\n  }\r\n};\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  pbVersion.value = window.MACHINE_VERSION;\r\n})\r\nconst isIpMatching = (url: any, ip: any) => {\r\n  // URL 에서 IP 주소 추출\r\n  const urlPattern = /http:\\/\\/([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+):/;\r\n  const match = url.match(urlPattern);\r\n  if (match && match[1]) {\r\n    // 추출된 IP 주소와 주어진 IP 주소 비교\r\n    return match[1] === ip;\r\n  }\r\n  return false;\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await cellImgGet();\r\n  await getNormalRange();\r\n  await getDeviceInfo();\r\n  startChecking();\r\n  const result = await getDeviceIpApi();\r\n  ipMatches.value = isIpMatching(window.APP_API_BASE_URL, result.data);\r\n\r\n  if (!projectBm.value) {\r\n    cbcFilePathSetArr.value = await getCbcPathData();\r\n    cbcCodeList.value = await getCbcCodeList();\r\n    const {lisCodeWbcArr, lisCodeRbcArr} = await getLisWbcRbcData();\r\n    lisCodeWbcArrApp.value = lisCodeWbcArr;\r\n    lisCodeRbcArrApp.value = lisCodeRbcArr;\r\n    const {lisFilePathSetArr} = await getLisPathData();\r\n    lisFilePath.value = lisFilePathSetArr;\r\n  }\r\n\r\n  window.addEventListener('beforeunload', leave);\r\n\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n    userId.value = userModuleDataGet.value.id\r\n  }\r\n\r\n  if (!commonDataGet.value.isRunningState) {\r\n    if (!commonDataGet.value.firstLoading && ipMatches.value && window.FORCE_VIEWER === 'main') {\r\n      countingInterStartval = setInterval(async () => {\r\n        await startSysPostWebSocket();\r\n      }, 400);\r\n\r\n      countingInterRunval = setInterval(async () => {\r\n        if (!commonDataGet.value.runningInfoStop) {\r\n          await runInfoPostWebSocket();\r\n        }\r\n      }, 500);\r\n      await store.dispatch('commonModule/setCommonInfo', {firstLoading: true});\r\n    }\r\n  }\r\n  EventBus.subscribe('childEmitSocketData', emitSocketData);\r\n});\r\n\r\nonBeforeUnmount(async () => {\r\n  window.removeEventListener('beforeunload', leave);\r\n\r\n  if (countingInterRunval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n  if (countingInterStartval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n});\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('chat', async (data) => {\r\n  await socketData(data);\r\n});\r\n\r\nasync function socketData(data: any) {\r\n  if (commonDataGet.value.viewerCheck !== 'main') {\r\n    return;\r\n  }\r\n  deleteData.value = false;\r\n  try {\r\n    if (typeof data === 'string') {\r\n      await showSuccessAlert(MESSAGES.TCP_DiSCONNECTED);\r\n      return\r\n    }\r\n    const textDecoder = new TextDecoder('utf-8');\r\n    const stringData = textDecoder.decode(data);\r\n\r\n    const parsedData = JSON.parse(stringData);\r\n    const parseDataWarp = parsedData;\r\n\r\n    if (alertMessage.value === MESSAGES.TCP_DiSCONNECTED) {\r\n      hideAlert();\r\n    }\r\n\r\n    // 시스템정보 스토어에 담기\r\n    switch (parseDataWarp.jobCmd) {\r\n      case 'RBC_RE_CLASSIFICATION':\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReDataClass: true});\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReData: true});\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReDataCheck: false});\r\n        break;\r\n      case 'SYSINFO':\r\n        parsedDataSysInfoProps.value = parseDataWarp;\r\n        const res = await sysInfoStore(parseDataWarp);\r\n        if (res !== null) {\r\n          showCoreErrorAlert(res);\r\n          const isAlarm = sessionStorage.getItem('isAlarm');\r\n          if (isAlarm === 'true') {\r\n            await store.dispatch('commonModule/setCommonInfo', {isErrorAlarm: true}); // 오류 알람을 킨다.\r\n          }\r\n        }\r\n        break;\r\n      case 'INIT':\r\n        barcodeNum.value = '';\r\n        await store.dispatch('commonModule/setCommonInfo', {initValData: false});\r\n        sendSettingInfo();\r\n        break;\r\n      case 'START':\r\n        barcodeNum.value = '';\r\n        await runnStart();\r\n        break;\r\n      case 'RUNNING_INFO':\r\n        parsedDataProps.value = parseDataWarp;\r\n        runningInfoBoolen.value = true;\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        break;\r\n      case 'STOP':\r\n        console.log('stop!=--------------------------')\r\n        barcodeNum.value = '';\r\n        await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RUNNING_COMP':// 완료가 된 상태이므로 각 페이지에 완료가 되었다는 정보를 저장한다.\r\n        barcodeNum.value = '';\r\n        await runnComp();\r\n        break;\r\n      case 'PAUSE':\r\n        barcodeNum.value = '';\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: true}); // 일시정지 상태로 변경한다.\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RESTART':\r\n        barcodeNum.value = '';\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: false}); // start 가 되면 false로 변경\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        runningInfoBoolen.value = true;\r\n        startStatus.value = true;\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        classArr.value = [];\r\n        rbcArr.value = [];\r\n        break;\r\n      case 'RECOVERY':\r\n        barcodeNum.value = '';\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: false});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        break;\r\n      case 'ERROR_CLEAR':\r\n        showAlert.value = false;\r\n        console.log('ERROR CLEAR');\r\n        break;\r\n    }\r\n\r\n    async function runnComp() {\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n      await store.dispatch('commonModule/setCommonInfo', {embeddedNumber: String(data?.iCasStat)});\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: false}); // 시스템이 돌아가는 상태를 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {isCompleteAlarm: true}); // 알람을 킨다.\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'stop'});// 슬라이드가 끝났으므로 stop을 넣어서 끝낸다.\r\n      await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n      runningInfoBoolen.value = false;\r\n      startStatus.value = false;\r\n    }\r\n\r\n    async function runnStart() {\r\n      await store.dispatch('commonModule/setCommonInfo', { isRunningState: true });// 실행중이라는 여부를 보낸다\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'}); // 첫 슬라이드가 시작되었음을 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: 'start',});\r\n      await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n      await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      startStatus.value = true;\r\n      classArr.value = [];\r\n      rbcArr.value = [];\r\n      runningInfoBoolen.value = true;\r\n    }\r\n\r\n    async function runningInfoCheckStore(data: any | undefined) {\r\n      const regex = /[1,2,9]/g;\r\n      if (String(data?.iCasStat) !== '999999999999') { // 스캔중일때는 pass + 완료상태일때도\r\n        const dataICasStat = String(data?.iCasStat);\r\n        const currentSlot = data?.slotInfo;\r\n        const str: any = data?.iCasStat;\r\n        const iCasStatArr: any = [...str];\r\n        const lastCompleteIndex = iCasStatArr.lastIndexOf(\"3\") === -1 ? 0 : iCasStatArr.lastIndexOf(\"3\") + 1;\r\n\r\n        // if (iCasStatArr.lastIndexOf(\"2\") === 0) {\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n        }\r\n        if (data?.iCasStat.indexOf(\"2\") !== -1) {\r\n          await store.dispatch('commonModule/setCommonInfo', {slideProceeding: data?.iCasStat.indexOf(\"2\")});\r\n        }\r\n\r\n        if (pbVersion.value === '100a') {\r\n          if (data?.iCasChange === '1') {\r\n            pb100aCassette.value = 'reset';\r\n          } else {\r\n            pb100aCassette.value = '';\r\n          }\r\n        }\r\n\r\n        // iCasStat (0 - 없음, 1 - 있음, 2 - 진행중, 3 - 완료, 4 - 에러, 9 - 스캔)\r\n        if ((dataICasStat.search(regex) < 0) || data?.oCasStat === '111111111111' && !commonDataGet.value.runningInfoStop) {\r\n          tcpReq().embedStatus.runIngComp.reqUserId = userModuleDataGet.value.userId;\r\n          if (pbVersion.value !== '100a') {\r\n            await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n            await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n          } else {\r\n            if (data?.workingDone === 'Y') {\r\n              await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n              await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n            }\r\n          }\r\n          await saveTestHistory(data, data?.slotInfo?.slotNo);\r\n          return;\r\n        }\r\n\r\n        await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'});\r\n        //슬라이드 변경시 데이터 저장\r\n        if (currentSlot?.isLowPowerScan === 'Y' && currentSlot?.testType === '03') {// running info 종료\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.pause});\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        } else {\r\n          if (lastCompleteIndex !== slotIndex.value) {\r\n            await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'afterChange'});\r\n            await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n            await saveTestHistory(runningArr.value, runningArr.value?.slotInfo?.slotNo);\r\n            await store.dispatch('commonModule/setCommonInfo', {runningSlotId: currentSlot?.slotId});\r\n            await store.dispatch('commonModule/setCommonInfo', {slotIndex: lastCompleteIndex})\r\n          }\r\n        }\r\n        // 데이터 넣는 부분\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          runningArr.value = data;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function saveTestHistory(params: any, idx: any, slotId?: any, lastCompleteIndex?: any) {\r\n      const completeSlot = params.slotInfo;\r\n      if (completeSlot) {\r\n\r\n        completeSlot.userId = userId.value;\r\n        completeSlot.cassetId = params.cassetId;\r\n        completeSlot.isNormal = 'Y' // PB 비정상 클래스 체크\r\n\r\n        const { isNormal, classInfo } = checkPbNormalCell(completeSlot.wbcInfo, normalItems.value);\r\n        completeSlot.isNormal = isNormal;\r\n\r\n        const classElements = classArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n        const rbcArrElements = rbcArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n\r\n        const matchedWbcInfo = classElements[0];\r\n        const newWbcInfo = {\r\n          wbcInfo: matchedWbcInfo?.wbcInfo,\r\n          nonRbcClassList: matchedWbcInfo?.nonRbcClassList,\r\n          totalCount: matchedWbcInfo?.totalCount,\r\n          maxWbcCount: matchedWbcInfo?.maxWbcCount,\r\n        }\r\n        let wbcInfoAfter: any = [];\r\n        let wbcInfoNewVal: any = [];\r\n        const getDefaultWbcInfo = () => !projectBm.value ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]};\r\n        const getDefaultWbcInfoAfter = () => !projectBm.value ? [basicWbcArr] : [basicBmClassList];\r\n        const path = pbiaRootDir.value;\r\n        const folderPath = !projectBm.value ? '01_WBC_Classification' : '04_BM_Classification';\r\n        const url_new = `${path}/${completeSlot.slotId}/${folderPath}/${completeSlot.slotId}.json`;\r\n        const response_new = await readJsonFile({fullPath: url_new});\r\n\r\n        for (const el of newWbcInfo?.wbcInfo[0]) {\r\n          if (!el.images) {\r\n            el.images = []; // images 프로퍼티가 없으면 추가하고 빈 배열로 초기화\r\n          }\r\n        }\r\n\r\n        for (const el of response_new?.data) {\r\n          const prefix = el.FILE_NM?.split('_')[0];\r\n          let fileNm = '';\r\n\r\n          if (isNsNbIntegrationLocal.value === 'Y') {\r\n            fileNm = (prefix === 'NEB' || prefix === 'NES') ? 'NE' : prefix;\r\n          } else {\r\n            fileNm = (prefix === 'NES') ? 'NS' : (prefix === 'NEB') ? 'NB' : prefix;\r\n          }\r\n\r\n          const findWbcIndex = newWbcInfo?.wbcInfo[0].findIndex((elW: any) => elW.title === fileNm);\r\n\r\n          if (findWbcIndex !== -1) { // 유효한 인덱스인지 확인\r\n            newWbcInfo?.wbcInfo[0][findWbcIndex].images.push({\r\n              fileName: el.FILE_NM\r\n            });\r\n          }\r\n        }\r\n\r\n\r\n        const updateWbcInfo = () => Object.keys(newWbcInfo).length === 0 ? getDefaultWbcInfo() : newWbcInfo;\r\n        const updateWbcInfoAfter = () => Object.keys(newWbcInfo).length === 0 ? getDefaultWbcInfoAfter() : newWbcInfo?.wbcInfo[0];\r\n        const rbcInfoAfter = !projectBm.value ? rbcArrElements[0].rbcInfo : [];\r\n        let submitState = '';\r\n        if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원'] && completeSlot.testType !== '04') {\r\n          // 인하대 WBC 정보를 저장\r\n          newWbcInfo.wbcInfo[0] = await inhaPercentChange(completeSlot, updateWbcInfoAfter());\r\n\r\n          // WBC 정보 업데이트\r\n          wbcInfoNewVal = updateWbcInfo();\r\n          wbcInfoAfter = updateWbcInfoAfter();\r\n          // 바코드 번호가 다를 경우 이벤트 버스에 저장\r\n          if (barcodeNum.value !== completeSlot.barcodeNo) {\r\n            await inhaCbc(cbcFilePathSetArr.value, completeSlot, cbcCodeList.value, 'lisUpload');\r\n            await inhaDataSend(wbcInfoAfter, rbcInfoAfter, completeSlot.barcodeNo, lisFilePath.value, inhaTestCode.value, lisCodeWbcArrApp.value, lisCodeRbcArrApp.value, completeSlot, userModuleDataGet.value.id)\r\n            barcodeNum.value = completeSlot?.barcodeNo;\r\n            submitState = 'lisCbc';\r\n          }\r\n        } else {\r\n          // 기본 WBC 정보로 업데이트\r\n          wbcInfoNewVal = updateWbcInfo();\r\n          wbcInfoAfter = updateWbcInfoAfter();\r\n          submitState = '';\r\n        }\r\n\r\n\r\n        const traySlotFirstNumber = pbVersion.value === '100a' ? `${params.traySlot}` : '1'\r\n\r\n        const newObj = {\r\n          slotNo: completeSlot.slotNo,\r\n          lock_status: false,\r\n          traySlot: traySlotFirstNumber + '-' + idx,\r\n          barcodeNo: completeSlot.barcodeNo,\r\n          patientId: completeSlot.patientId,\r\n          patientNm: completeSlot.patientNm,\r\n          gender: completeSlot.gender,\r\n          birthDay: completeSlot.birthDay,\r\n          wbcCount: completeSlot.wbcCount,\r\n          slotId: completeSlot.slotId,\r\n          orderDttm: completeSlot.orderDttm,\r\n          testType: completeSlot.testType,\r\n          analyzedDttm: tcpReq().embedStatus.settings.saveReqDttm,\r\n          tactTime: completeSlot.tactTime,\r\n          maxWbcCount: completeSlot.maxWbcCount,\r\n          bf_lowPowerPath: completeSlot.bf_lowPowerPath,\r\n          wbcInfo: wbcInfoNewVal,\r\n          wbcInfoAfter: wbcInfoAfter,\r\n          rbcInfo: !projectBm.value ? {\r\n            pltCount: completeSlot.pltCount,\r\n            malariaCount: completeSlot.malariaCount,\r\n            maxRbcCount: completeSlot.maxRbcCount,\r\n            rbcClass: rbcArrElements[0].rbcInfo,\r\n          } : [],\r\n          rbcInfoAfter: rbcInfoAfter,\r\n          bminfo: completeSlot.bminfo,\r\n          cassetId: completeSlot.cassetId,\r\n          isNormal: completeSlot.isNormal,\r\n          submitState: submitState,\r\n          submitOfDate: '',\r\n          submitUserId: '',\r\n          isNsNbIntegration: isNsNbIntegrationLocal.value || '',\r\n          wbcMemo: '',\r\n          rbcMemo: '',\r\n          abnormalClassInfo: classInfo\r\n        }\r\n\r\n        await saveRunningInfo(newObj, slotId, lastCompleteIndex);\r\n      }\r\n    }\r\n\r\n    async function saveRunningInfo(runningInfo: any, slotId: any, last: any) {\r\n      try {\r\n        let result: ApiResponse<void>;\r\n        result = await createRunningApi({userId: Number(userId.value), runingInfoDtoItems: runningInfo});\r\n\r\n        if (result) {\r\n          if (slotId) {\r\n            console.log('save successful');\r\n          }\r\n          delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const result = await getDeviceInfoApi();\r\n    if (result) {\r\n      sessionStorage.setItem('autoStart', result.data[0]?.autoStart);\r\n      await store.dispatch('commonModule/setCommonInfo', { siteCd: result.data[0]?.siteCd });\r\n      localStorage.setItem('siteCd', result.data[0]?.siteCd);\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Error handling device information\", err);\r\n  }\r\n}\r\n\r\nconst delayedEmit = (type: string, payload: string, delay: number) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\nconst rbcAppUpdate = (data: any) => {\r\n  rbcArr.value[data.iCasStatArr] = data.rbc;\r\n}\r\n\r\nconst classAppUpdateLast = (data: any) => {\r\n  classArr.value[data.iCasStatArr] = data.classInfo;\r\n}\r\n\r\n// jobCmd가 중복되지 않도록 배열 필터링\r\nconst removeDuplicateJobCmd = (reqArr: any) => {\r\n  const uniqueJobCmds = new Set(); // 중복을 체크하기 위한 Set 생성\r\n  const uniqueReqArr: any = []; // 중복되지 않은 jobCmd를 담을 배열\r\n  reqArr.forEach((req: any) => {\r\n    if (!uniqueJobCmds.has(req.jobCmd)) {\r\n      uniqueJobCmds.add(req.jobCmd); // Set에 jobCmd 추가\r\n      uniqueReqArr.push(req); // 유니크한 jobCmd인 경우 배열에 추가\r\n    }\r\n  });\r\n  return uniqueReqArr;\r\n};\r\n\r\nconst startSysPostWebSocket = async () => {\r\n  tcpReq().embedStatus.sysInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.sysInfo;\r\n  let autoStart: string | number = sessionStorage.getItem('autoStart') || 1;\r\n  if (autoStart === 'true') autoStart = 1;\r\n  else if (autoStart === 'false') autoStart = 0;\r\n\r\n  if (window.MACHINE_VERSION === '100a') {\r\n    Object.assign(req, {isRewindingBelt: isRewindingBelt.value});\r\n    Object.assign(req, {autoStart: autoStart});\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst runInfoPostWebSocket = async () => {\r\n  if (!runningInfoBoolen.value) {\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.runningInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.runningInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst emitSocketData = async (payload: any) => {\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: payload});\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcReDataCheck: true});\r\n};\r\n\r\nconst sendSettingInfo = () => {\r\n  const req = {\r\n    jobCmd: 'SETTINGS',\r\n    reqUserId: '',\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    pbiaRootDir: pbiaRootDir.value || '',\r\n    oilCount: '1000',\r\n    isOilReset: 'N',\r\n    deviceType: '01',\r\n    // uiVersion: 'uimd-pb-comm_v2.0.102',\r\n    isNsNbIntegration: isNsNbIntegrationLocal.value,\r\n  };\r\n\r\n  store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n}\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\r\n// 메시지를 보내는 함수\r\nconst sendMessage = async (payload: any) => {\r\n  const executeAfterDelay = async () => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n      type: 'SEND_DATA',\r\n      payload: payload\r\n    });\r\n  };\r\n  await executeAfterDelay();\r\n  deleteData.value = true;\r\n};\r\n\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        await store.dispatch('commonModule/setCommonInfo', {isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'});\r\n        sessionStorage.setItem('isNsNbIntegration', data?.isNsNbIntegration ? 'Y' : 'N');\r\n        sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n        sessionStorage.setItem('isAlarm', String(data?.isAlarm));\r\n        const keepPageType = window.PROJECT_TYPE === 'pb' ? 'keepPage' : 'bmKeepPage';\r\n        sessionStorage.setItem(keepPageType, String(data?.keepPage));\r\n        await store.dispatch('commonModule/setCommonInfo', { showLISUploadAfterCheckingAll: data?.lisUploadCheckAll });\r\n        sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n        sessionStorage.setItem('edgeShotLPCount', String(data?.edgeShotLPCount));\r\n        sessionStorage.setItem('edgeShotHPCount', String(data?.edgeShotHPCount));\r\n        sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst getRbcData = () => {\r\n  //\r\n}\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showCoreErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'coreError'\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst hideAlert = () => {\r\n  if (alertType.value === 'coreError') errorClear();\r\n  showAlert.value = false;\r\n};\r\n\r\nconst errorClear = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.errorClear });\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (_unref(router).currentRoute.value.path !== '/user/login' && _unref(router).currentRoute.value.path !== '/user/join')\n      ? (_openBlock(), _createBlock(AppHeader, { key: 0 }))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"main\", {\n      class: _normalizeClass([\"content\", { bmComponent: projectBm.value }])\n    }, [\n      _createVNode(_component_router_view),\n      _createVNode(Analysis, {\n        onClassAppUpdateLast: classAppUpdateLast,\n        onRbcAppUpdate: rbcAppUpdate,\n        parsedData: parsedDataProps.value,\n        parsedDataSysInfo: parsedDataSysInfoProps.value,\n        isClass: _unref(router).currentRoute.value.path === '/',\n        startStatus: startStatus.value,\n        pb100aCassette: pb100aCassette.value\n      }, null, 8, [\"parsedData\", \"parsedDataSysInfo\", \"isClass\", \"startStatus\", \"pb100aCassette\"])\n    ], 2),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          onErrorClear: errorClear,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<!-- App.vue -->\r\n<template>\r\n  <div>\r\n    <AppHeader\r\n        v-if=\"router.currentRoute.value.path !== '/user/login' && router.currentRoute.value.path !== '/user/join'\"/>\r\n    <main class=\"content\" :class=\"{ bmComponent: projectBm }\">\r\n      <router-view/>\r\n      <Analysis @classAppUpdateLast=\"classAppUpdateLast\"\r\n                @rbcAppUpdate=\"rbcAppUpdate\"\r\n                :parsedData=\"parsedDataProps\"\r\n                :parsedDataSysInfo=\"parsedDataSysInfoProps\"\r\n                :isClass=\"router.currentRoute.value.path === '/'\"\r\n                :startStatus=\"startStatus\"\r\n                :pb100aCassette=\"pb100aCassette\"\r\n      />\r\n    </main>\r\n    <Alert\r\n        v-if=\"showAlert\"\r\n        :is-visible=\"showAlert\"\r\n        :type=\"alertType\"\r\n        :message=\"alertMessage\"\r\n        @hide=\"hideAlert\"\r\n        @errorClear=\"errorClear\"\r\n        @update:hideAlert=\"hideAlert\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport AppHeader from \"@/components/layout/AppHeader.vue\";\r\n\r\nconst router = useRouter();\r\nimport {\r\n  getCurrentInstance,\r\n  ref,\r\n  computed,\r\n  watch,\r\n  onMounted,\r\n  nextTick,\r\n  onBeforeUnmount,\r\n  onBeforeMount,\r\n} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {tcpReq} from '@/common/defines/constants/tcpRequest/tcpReq';\r\nimport {MESSAGES} from '@/common/defines/constants/constantMessageText';\r\nimport {\r\n  getCellImgApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {\r\n  createDeviceInfoApi,\r\n  getDeviceInfoApi,\r\n  getDeviceIpApi,\r\n  putDeviceInfoApi\r\n} from \"@/common/api/service/device/deviceApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constants/classArr\";\r\nimport Analysis from \"@/views/analysis/index.vue\";\r\nimport {logoutApi} from \"@/common/api/service/user/userApi\";\r\nimport {inhaPercentChange} from \"@/common/helpers/common/classPercent\";\r\nimport axios from \"axios\";\r\nimport {\r\n  getCbcCodeList,\r\n  getCbcPathData, getLisPathData,\r\n  getLisWbcRbcData,\r\n  inhaCbc,\r\n  inhaDataSend\r\n} from \"@/common/helpers/lisCbc/inhaCbcLis\";\r\nimport {HOSPITAL_SITE_CD_BY_NAME} from \"@/common/defines/constants/siteCd\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {sysInfoStore, runningInfoStore} from \"@/common/helpers/common/store/common\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst instance = getCurrentInstance();\r\nconst userId = ref('');\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst normalItems = ref<any>([]);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst reqArr = computed(() => store.state.commonModule);\r\nconst runningInfoBoolen = ref(false);\r\nlet countingInterStartval: any = null;\r\nlet countingInterRunval: any = null;\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slotIndex = computed(() => store.state.commonModule.slotIndex);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst isRewindingBelt = computed(() => store.state.commonModule.isRewindingBelt);\r\n\r\nconst isNsNbIntegrationLocal = computed(() => store.state.commonModule.isNsNbIntegration);\r\nconst runningArr: any = ref<any>([]);\r\nconst classArr = ref<any>([]);\r\nconst rbcArr = ref<any>([]);\r\nconst viewerCheckApp = ref('');\r\nconst projectBm = ref(false);\r\nconst parsedDataProps = ref<any>({});\r\nconst parsedDataSysInfoProps = ref<any>({});\r\nconst startStatus = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst pb100aCassette = ref<any>('');\r\nconst deleteData = ref(false);\r\nlet socketTimeoutId: number | undefined = undefined; // 타이머 ID 저장\r\nconst isFullscreen = ref<boolean>(false);\r\nlet intervalId: any;\r\nconst ipMatches = ref(false);\r\nconst barcodeNum = ref('');\r\nconst cbcFilePathSetArr = ref('');\r\nconst cbcCodeList = ref<any>([]);\r\nconst lisCodeWbcArrApp = ref<any>([]);\r\nconst lisCodeRbcArrApp = ref<any>([]);\r\nconst lisFilePath = ref('');\r\n\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('isTcpConnected', async (isTcpConnected) => {\r\n  if (isTcpConnected) {\r\n    setTimeout(async () => {\r\n      await store.dispatch('commonModule/setCommonInfo', {isTcpConnected: true});\r\n    }, 1500)\r\n  }\r\n})\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('viewerCheck', async (ip) => { // 뷰어인지 아닌지 체크하는곳\r\n  await getIpAddress(ip)\r\n});\r\n\r\nconst getIpAddress = async (ip: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if (result.data === ip) {\r\n      viewerCheckApp.value = result.data;\r\n    } else {\r\n      viewerCheckApp.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\nfunction checkFullscreenStatus() {\r\n  const {path} = router.currentRoute.value;\r\n  if (path === '/user/login') {\r\n    return;\r\n  }\r\n  isFullscreen.value = window.matchMedia('(display-mode: fullscreen)').matches;\r\n  if (!isFullscreen.value) {\r\n    showSuccessAlert(MESSAGES.FULLSCREEN_SUGGEST);\r\n  } else {\r\n    if (alertMessage.value === MESSAGES.FULLSCREEN_SUGGEST) {\r\n      hideAlert();\r\n    }\r\n  }\r\n}\r\n\r\nfunction startChecking() {\r\n  // 화면 상태를 즉시 업데이트\r\n  checkFullscreenStatus();\r\n  // 1분(60000ms)마다 체크\r\n  intervalId = setInterval(checkFullscreenStatus, 60000);\r\n}\r\n\r\n\r\nwatch(reqArr.value, async (newVal) => {\r\n  if (!newVal.reqArr) return;\r\n  const uniqueReqArr = removeDuplicateJobCmd(newVal.reqArr);\r\n  const notSysRunInfo = uniqueReqArr.filter((item: any) => !['SYSINFO', 'RUNNING_INFO'].includes(item.jobCmd));\r\n\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return;\r\n  }\r\n\r\n  if (deleteData.value) {\r\n    deleteData.value = false;\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return\r\n  }\r\n\r\n  if (uniqueReqArr.length === 0) return;\r\n\r\n\r\n  // `notSysRunInfo`와 `uniqueReqArr` 처리\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n  } else {\r\n    await sendMessage(uniqueReqArr[0]);\r\n  }\r\n\r\n  // `reqArrPaste` 상태 초기화\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nonBeforeMount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('viewerCheck', {\r\n    type: 'SEND_DATA',\r\n    payload: window.APP_API_BASE_URL\r\n  });\r\n});\r\n\r\nwindow.addEventListener('beforeunload', async function (event: any) {\r\n  await logoutApi({userId: userId.value});\r\n  await store.dispatch('commonModule/setCommonInfo', {firstLoading: false});\r\n});\r\n\r\n\r\nconst leave = async (event: any) => {\r\n  event.preventDefault();\r\n  if (!ipMatches.value) {\r\n    const result = await getDeviceIpApi();\r\n    const ipAddress = `ip=${result.data}`\r\n    const url = `http://${result.data}:3000/close?${ipAddress}`;\r\n    await axios.get(url);\r\n  } else {\r\n    await EventBus.publish('childEmitSocketData', tcpReq().embedStatus.exit);\r\n  }\r\n};\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  pbVersion.value = window.MACHINE_VERSION;\r\n})\r\nconst isIpMatching = (url: any, ip: any) => {\r\n  // URL 에서 IP 주소 추출\r\n  const urlPattern = /http:\\/\\/([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+):/;\r\n  const match = url.match(urlPattern);\r\n  if (match && match[1]) {\r\n    // 추출된 IP 주소와 주어진 IP 주소 비교\r\n    return match[1] === ip;\r\n  }\r\n  return false;\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await cellImgGet();\r\n  await getNormalRange();\r\n  await getDeviceInfo();\r\n  startChecking();\r\n  const result = await getDeviceIpApi();\r\n  ipMatches.value = isIpMatching(window.APP_API_BASE_URL, result.data);\r\n\r\n  if (!projectBm.value) {\r\n    cbcFilePathSetArr.value = await getCbcPathData();\r\n    cbcCodeList.value = await getCbcCodeList();\r\n    const {lisCodeWbcArr, lisCodeRbcArr} = await getLisWbcRbcData();\r\n    lisCodeWbcArrApp.value = lisCodeWbcArr;\r\n    lisCodeRbcArrApp.value = lisCodeRbcArr;\r\n    const {lisFilePathSetArr} = await getLisPathData();\r\n    lisFilePath.value = lisFilePathSetArr;\r\n  }\r\n\r\n  window.addEventListener('beforeunload', leave);\r\n\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n    userId.value = userModuleDataGet.value.id\r\n  }\r\n\r\n  if (!commonDataGet.value.isRunningState) {\r\n    if (!commonDataGet.value.firstLoading && ipMatches.value && window.FORCE_VIEWER === 'main') {\r\n      countingInterStartval = setInterval(async () => {\r\n        await startSysPostWebSocket();\r\n      }, 400);\r\n\r\n      countingInterRunval = setInterval(async () => {\r\n        if (!commonDataGet.value.runningInfoStop) {\r\n          await runInfoPostWebSocket();\r\n        }\r\n      }, 500);\r\n      await store.dispatch('commonModule/setCommonInfo', {firstLoading: true});\r\n    }\r\n  }\r\n  EventBus.subscribe('childEmitSocketData', emitSocketData);\r\n});\r\n\r\nonBeforeUnmount(async () => {\r\n  window.removeEventListener('beforeunload', leave);\r\n\r\n  if (countingInterRunval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n  if (countingInterStartval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n});\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('chat', async (data) => {\r\n  await socketData(data);\r\n});\r\n\r\nasync function socketData(data: any) {\r\n  if (commonDataGet.value.viewerCheck !== 'main') {\r\n    return;\r\n  }\r\n  deleteData.value = false;\r\n  try {\r\n    if (typeof data === 'string') {\r\n      await showSuccessAlert(MESSAGES.TCP_DiSCONNECTED);\r\n      return\r\n    }\r\n    const textDecoder = new TextDecoder('utf-8');\r\n    const stringData = textDecoder.decode(data);\r\n\r\n    const parsedData = JSON.parse(stringData);\r\n    const parseDataWarp = parsedData;\r\n\r\n    if (alertMessage.value === MESSAGES.TCP_DiSCONNECTED) {\r\n      hideAlert();\r\n    }\r\n\r\n    // 시스템정보 스토어에 담기\r\n    switch (parseDataWarp.jobCmd) {\r\n      case 'RBC_RE_CLASSIFICATION':\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReDataClass: true});\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReData: true});\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReDataCheck: false});\r\n        break;\r\n      case 'SYSINFO':\r\n        parsedDataSysInfoProps.value = parseDataWarp;\r\n        const res = await sysInfoStore(parseDataWarp);\r\n        if (res !== null) {\r\n          showCoreErrorAlert(res);\r\n          const isAlarm = sessionStorage.getItem('isAlarm');\r\n          if (isAlarm === 'true') {\r\n            await store.dispatch('commonModule/setCommonInfo', {isErrorAlarm: true}); // 오류 알람을 킨다.\r\n          }\r\n        }\r\n        break;\r\n      case 'INIT':\r\n        barcodeNum.value = '';\r\n        await store.dispatch('commonModule/setCommonInfo', {initValData: false});\r\n        sendSettingInfo();\r\n        break;\r\n      case 'START':\r\n        barcodeNum.value = '';\r\n        await runnStart();\r\n        break;\r\n      case 'RUNNING_INFO':\r\n        parsedDataProps.value = parseDataWarp;\r\n        runningInfoBoolen.value = true;\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        break;\r\n      case 'STOP':\r\n        console.log('stop!=--------------------------')\r\n        barcodeNum.value = '';\r\n        await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RUNNING_COMP':// 완료가 된 상태이므로 각 페이지에 완료가 되었다는 정보를 저장한다.\r\n        barcodeNum.value = '';\r\n        await runnComp();\r\n        break;\r\n      case 'PAUSE':\r\n        barcodeNum.value = '';\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: true}); // 일시정지 상태로 변경한다.\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RESTART':\r\n        barcodeNum.value = '';\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: false}); // start 가 되면 false로 변경\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        runningInfoBoolen.value = true;\r\n        startStatus.value = true;\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        classArr.value = [];\r\n        rbcArr.value = [];\r\n        break;\r\n      case 'RECOVERY':\r\n        barcodeNum.value = '';\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: false});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        break;\r\n      case 'ERROR_CLEAR':\r\n        showAlert.value = false;\r\n        console.log('ERROR CLEAR');\r\n        break;\r\n    }\r\n\r\n    async function runnComp() {\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n      await store.dispatch('commonModule/setCommonInfo', {embeddedNumber: String(data?.iCasStat)});\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: false}); // 시스템이 돌아가는 상태를 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {isCompleteAlarm: true}); // 알람을 킨다.\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'stop'});// 슬라이드가 끝났으므로 stop을 넣어서 끝낸다.\r\n      await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n      runningInfoBoolen.value = false;\r\n      startStatus.value = false;\r\n    }\r\n\r\n    async function runnStart() {\r\n      await store.dispatch('commonModule/setCommonInfo', { isRunningState: true });// 실행중이라는 여부를 보낸다\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'}); // 첫 슬라이드가 시작되었음을 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: 'start',});\r\n      await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n      await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      startStatus.value = true;\r\n      classArr.value = [];\r\n      rbcArr.value = [];\r\n      runningInfoBoolen.value = true;\r\n    }\r\n\r\n    async function runningInfoCheckStore(data: any | undefined) {\r\n      const regex = /[1,2,9]/g;\r\n      if (String(data?.iCasStat) !== '999999999999') { // 스캔중일때는 pass + 완료상태일때도\r\n        const dataICasStat = String(data?.iCasStat);\r\n        const currentSlot = data?.slotInfo;\r\n        const str: any = data?.iCasStat;\r\n        const iCasStatArr: any = [...str];\r\n        const lastCompleteIndex = iCasStatArr.lastIndexOf(\"3\") === -1 ? 0 : iCasStatArr.lastIndexOf(\"3\") + 1;\r\n\r\n        // if (iCasStatArr.lastIndexOf(\"2\") === 0) {\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n        }\r\n        if (data?.iCasStat.indexOf(\"2\") !== -1) {\r\n          await store.dispatch('commonModule/setCommonInfo', {slideProceeding: data?.iCasStat.indexOf(\"2\")});\r\n        }\r\n\r\n        if (pbVersion.value === '100a') {\r\n          if (data?.iCasChange === '1') {\r\n            pb100aCassette.value = 'reset';\r\n          } else {\r\n            pb100aCassette.value = '';\r\n          }\r\n        }\r\n\r\n        // iCasStat (0 - 없음, 1 - 있음, 2 - 진행중, 3 - 완료, 4 - 에러, 9 - 스캔)\r\n        if ((dataICasStat.search(regex) < 0) || data?.oCasStat === '111111111111' && !commonDataGet.value.runningInfoStop) {\r\n          tcpReq().embedStatus.runIngComp.reqUserId = userModuleDataGet.value.userId;\r\n          if (pbVersion.value !== '100a') {\r\n            await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n            await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n          } else {\r\n            if (data?.workingDone === 'Y') {\r\n              await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n              await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n            }\r\n          }\r\n          await saveTestHistory(data, data?.slotInfo?.slotNo);\r\n          return;\r\n        }\r\n\r\n        await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'});\r\n        //슬라이드 변경시 데이터 저장\r\n        if (currentSlot?.isLowPowerScan === 'Y' && currentSlot?.testType === '03') {// running info 종료\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.pause});\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        } else {\r\n          if (lastCompleteIndex !== slotIndex.value) {\r\n            await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'afterChange'});\r\n            await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n            await saveTestHistory(runningArr.value, runningArr.value?.slotInfo?.slotNo);\r\n            await store.dispatch('commonModule/setCommonInfo', {runningSlotId: currentSlot?.slotId});\r\n            await store.dispatch('commonModule/setCommonInfo', {slotIndex: lastCompleteIndex})\r\n          }\r\n        }\r\n        // 데이터 넣는 부분\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          runningArr.value = data;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function saveTestHistory(params: any, idx: any, slotId?: any, lastCompleteIndex?: any) {\r\n      const completeSlot = params.slotInfo;\r\n      if (completeSlot) {\r\n\r\n        completeSlot.userId = userId.value;\r\n        completeSlot.cassetId = params.cassetId;\r\n        completeSlot.isNormal = 'Y' // PB 비정상 클래스 체크\r\n\r\n        const { isNormal, classInfo } = checkPbNormalCell(completeSlot.wbcInfo, normalItems.value);\r\n        completeSlot.isNormal = isNormal;\r\n\r\n        const classElements = classArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n        const rbcArrElements = rbcArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n\r\n        const matchedWbcInfo = classElements[0];\r\n        const newWbcInfo = {\r\n          wbcInfo: matchedWbcInfo?.wbcInfo,\r\n          nonRbcClassList: matchedWbcInfo?.nonRbcClassList,\r\n          totalCount: matchedWbcInfo?.totalCount,\r\n          maxWbcCount: matchedWbcInfo?.maxWbcCount,\r\n        }\r\n        let wbcInfoAfter: any = [];\r\n        let wbcInfoNewVal: any = [];\r\n        const getDefaultWbcInfo = () => !projectBm.value ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]};\r\n        const getDefaultWbcInfoAfter = () => !projectBm.value ? [basicWbcArr] : [basicBmClassList];\r\n        const path = pbiaRootDir.value;\r\n        const folderPath = !projectBm.value ? '01_WBC_Classification' : '04_BM_Classification';\r\n        const url_new = `${path}/${completeSlot.slotId}/${folderPath}/${completeSlot.slotId}.json`;\r\n        const response_new = await readJsonFile({fullPath: url_new});\r\n\r\n        for (const el of newWbcInfo?.wbcInfo[0]) {\r\n          if (!el.images) {\r\n            el.images = []; // images 프로퍼티가 없으면 추가하고 빈 배열로 초기화\r\n          }\r\n        }\r\n\r\n        for (const el of response_new?.data) {\r\n          const prefix = el.FILE_NM?.split('_')[0];\r\n          let fileNm = '';\r\n\r\n          if (isNsNbIntegrationLocal.value === 'Y') {\r\n            fileNm = (prefix === 'NEB' || prefix === 'NES') ? 'NE' : prefix;\r\n          } else {\r\n            fileNm = (prefix === 'NES') ? 'NS' : (prefix === 'NEB') ? 'NB' : prefix;\r\n          }\r\n\r\n          const findWbcIndex = newWbcInfo?.wbcInfo[0].findIndex((elW: any) => elW.title === fileNm);\r\n\r\n          if (findWbcIndex !== -1) { // 유효한 인덱스인지 확인\r\n            newWbcInfo?.wbcInfo[0][findWbcIndex].images.push({\r\n              fileName: el.FILE_NM\r\n            });\r\n          }\r\n        }\r\n\r\n\r\n        const updateWbcInfo = () => Object.keys(newWbcInfo).length === 0 ? getDefaultWbcInfo() : newWbcInfo;\r\n        const updateWbcInfoAfter = () => Object.keys(newWbcInfo).length === 0 ? getDefaultWbcInfoAfter() : newWbcInfo?.wbcInfo[0];\r\n        const rbcInfoAfter = !projectBm.value ? rbcArrElements[0].rbcInfo : [];\r\n        let submitState = '';\r\n        if (siteCd.value === HOSPITAL_SITE_CD_BY_NAME['인하대병원'] && completeSlot.testType !== '04') {\r\n          // 인하대 WBC 정보를 저장\r\n          newWbcInfo.wbcInfo[0] = await inhaPercentChange(completeSlot, updateWbcInfoAfter());\r\n\r\n          // WBC 정보 업데이트\r\n          wbcInfoNewVal = updateWbcInfo();\r\n          wbcInfoAfter = updateWbcInfoAfter();\r\n          // 바코드 번호가 다를 경우 이벤트 버스에 저장\r\n          if (barcodeNum.value !== completeSlot.barcodeNo) {\r\n            await inhaCbc(cbcFilePathSetArr.value, completeSlot, cbcCodeList.value, 'lisUpload');\r\n            await inhaDataSend(wbcInfoAfter, rbcInfoAfter, completeSlot.barcodeNo, lisFilePath.value, inhaTestCode.value, lisCodeWbcArrApp.value, lisCodeRbcArrApp.value, completeSlot, userModuleDataGet.value.id)\r\n            barcodeNum.value = completeSlot?.barcodeNo;\r\n            submitState = 'lisCbc';\r\n          }\r\n        } else {\r\n          // 기본 WBC 정보로 업데이트\r\n          wbcInfoNewVal = updateWbcInfo();\r\n          wbcInfoAfter = updateWbcInfoAfter();\r\n          submitState = '';\r\n        }\r\n\r\n\r\n        const traySlotFirstNumber = pbVersion.value === '100a' ? `${params.traySlot}` : '1'\r\n\r\n        const newObj = {\r\n          slotNo: completeSlot.slotNo,\r\n          lock_status: false,\r\n          traySlot: traySlotFirstNumber + '-' + idx,\r\n          barcodeNo: completeSlot.barcodeNo,\r\n          patientId: completeSlot.patientId,\r\n          patientNm: completeSlot.patientNm,\r\n          gender: completeSlot.gender,\r\n          birthDay: completeSlot.birthDay,\r\n          wbcCount: completeSlot.wbcCount,\r\n          slotId: completeSlot.slotId,\r\n          orderDttm: completeSlot.orderDttm,\r\n          testType: completeSlot.testType,\r\n          analyzedDttm: tcpReq().embedStatus.settings.saveReqDttm,\r\n          tactTime: completeSlot.tactTime,\r\n          maxWbcCount: completeSlot.maxWbcCount,\r\n          bf_lowPowerPath: completeSlot.bf_lowPowerPath,\r\n          wbcInfo: wbcInfoNewVal,\r\n          wbcInfoAfter: wbcInfoAfter,\r\n          rbcInfo: !projectBm.value ? {\r\n            pltCount: completeSlot.pltCount,\r\n            malariaCount: completeSlot.malariaCount,\r\n            maxRbcCount: completeSlot.maxRbcCount,\r\n            rbcClass: rbcArrElements[0].rbcInfo,\r\n          } : [],\r\n          rbcInfoAfter: rbcInfoAfter,\r\n          bminfo: completeSlot.bminfo,\r\n          cassetId: completeSlot.cassetId,\r\n          isNormal: completeSlot.isNormal,\r\n          submitState: submitState,\r\n          submitOfDate: '',\r\n          submitUserId: '',\r\n          isNsNbIntegration: isNsNbIntegrationLocal.value || '',\r\n          wbcMemo: '',\r\n          rbcMemo: '',\r\n          abnormalClassInfo: classInfo\r\n        }\r\n\r\n        await saveRunningInfo(newObj, slotId, lastCompleteIndex);\r\n      }\r\n    }\r\n\r\n    async function saveRunningInfo(runningInfo: any, slotId: any, last: any) {\r\n      try {\r\n        let result: ApiResponse<void>;\r\n        result = await createRunningApi({userId: Number(userId.value), runingInfoDtoItems: runningInfo});\r\n\r\n        if (result) {\r\n          if (slotId) {\r\n            console.log('save successful');\r\n          }\r\n          delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const result = await getDeviceInfoApi();\r\n    if (result) {\r\n      sessionStorage.setItem('autoStart', result.data[0]?.autoStart);\r\n      await store.dispatch('commonModule/setCommonInfo', { siteCd: result.data[0]?.siteCd });\r\n      localStorage.setItem('siteCd', result.data[0]?.siteCd);\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Error handling device information\", err);\r\n  }\r\n}\r\n\r\nconst delayedEmit = (type: string, payload: string, delay: number) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\nconst rbcAppUpdate = (data: any) => {\r\n  rbcArr.value[data.iCasStatArr] = data.rbc;\r\n}\r\n\r\nconst classAppUpdateLast = (data: any) => {\r\n  classArr.value[data.iCasStatArr] = data.classInfo;\r\n}\r\n\r\n// jobCmd가 중복되지 않도록 배열 필터링\r\nconst removeDuplicateJobCmd = (reqArr: any) => {\r\n  const uniqueJobCmds = new Set(); // 중복을 체크하기 위한 Set 생성\r\n  const uniqueReqArr: any = []; // 중복되지 않은 jobCmd를 담을 배열\r\n  reqArr.forEach((req: any) => {\r\n    if (!uniqueJobCmds.has(req.jobCmd)) {\r\n      uniqueJobCmds.add(req.jobCmd); // Set에 jobCmd 추가\r\n      uniqueReqArr.push(req); // 유니크한 jobCmd인 경우 배열에 추가\r\n    }\r\n  });\r\n  return uniqueReqArr;\r\n};\r\n\r\nconst startSysPostWebSocket = async () => {\r\n  tcpReq().embedStatus.sysInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.sysInfo;\r\n  let autoStart: string | number = sessionStorage.getItem('autoStart') || 1;\r\n  if (autoStart === 'true') autoStart = 1;\r\n  else if (autoStart === 'false') autoStart = 0;\r\n\r\n  if (window.MACHINE_VERSION === '100a') {\r\n    Object.assign(req, {isRewindingBelt: isRewindingBelt.value});\r\n    Object.assign(req, {autoStart: autoStart});\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst runInfoPostWebSocket = async () => {\r\n  if (!runningInfoBoolen.value) {\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.runningInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.runningInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst emitSocketData = async (payload: any) => {\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: payload});\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcReDataCheck: true});\r\n};\r\n\r\nconst sendSettingInfo = () => {\r\n  const req = {\r\n    jobCmd: 'SETTINGS',\r\n    reqUserId: '',\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    pbiaRootDir: pbiaRootDir.value || '',\r\n    oilCount: '1000',\r\n    isOilReset: 'N',\r\n    deviceType: '01',\r\n    // uiVersion: 'uimd-pb-comm_v2.0.102',\r\n    isNsNbIntegration: isNsNbIntegrationLocal.value,\r\n  };\r\n\r\n  store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n}\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\r\n// 메시지를 보내는 함수\r\nconst sendMessage = async (payload: any) => {\r\n  const executeAfterDelay = async () => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n      type: 'SEND_DATA',\r\n      payload: payload\r\n    });\r\n  };\r\n  await executeAfterDelay();\r\n  deleteData.value = true;\r\n};\r\n\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        await store.dispatch('commonModule/setCommonInfo', {isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'});\r\n        sessionStorage.setItem('isNsNbIntegration', data?.isNsNbIntegration ? 'Y' : 'N');\r\n        sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n        sessionStorage.setItem('isAlarm', String(data?.isAlarm));\r\n        const keepPageType = window.PROJECT_TYPE === 'pb' ? 'keepPage' : 'bmKeepPage';\r\n        sessionStorage.setItem(keepPageType, String(data?.keepPage));\r\n        await store.dispatch('commonModule/setCommonInfo', { showLISUploadAfterCheckingAll: data?.lisUploadCheckAll });\r\n        sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n        sessionStorage.setItem('edgeShotLPCount', String(data?.edgeShotLPCount));\r\n        sessionStorage.setItem('edgeShotHPCount', String(data?.edgeShotHPCount));\r\n        sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nconst getRbcData = () => {\r\n  //\r\n}\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showCoreErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'coreError'\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst hideAlert = () => {\r\n  if (alertType.value === 'coreError') errorClear();\r\n  showAlert.value = false;\r\n};\r\n\r\nconst errorClear = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.errorClear });\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #ffffff;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=2d714aae&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { Plugin } from 'vue';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\ndeclare module '@vue/runtime-core' {\r\n    interface ComponentCustomProperties {\r\n        $socket: Socket;\r\n        $socketError: boolean;\r\n    }\r\n}\r\n\r\nconst apiBaseUrl = window.MAIN_WEBSOCKET_IP || 'http://192.168.0.131:3002';\r\n\r\nconst socketPlugin: Plugin = {\r\n    install: (app) => {\r\n        const socket: Socket = io(`${apiBaseUrl}`, {\r\n            transports: ['websocket'],\r\n            withCredentials: true,\r\n            reconnection: true,            // 자동 재연결 활성화\r\n            reconnectionAttempts: 15,      // 재연결 시도 횟수\r\n            reconnectionDelay: 3000,       // 재연결 시도 간격 (3초)\r\n            timeout: 30000,                // 서버 응답 대기 시간 (30초)\r\n        });\r\n\r\n        // 다음 ping 전송을 위한 타이머를 저장할 변수\r\n        let pingTimeout: NodeJS.Timeout | null = null;\r\n\r\n        // 연결이 성공했을 때 실행되는 핸들러\r\n        socket.on('connect', () => {\r\n            console.log('WebSocket connected');\r\n            app.config.globalProperties.$socketError = false;\r\n            sendPing();\r\n            if (pingTimeout) {\r\n                clearTimeout(pingTimeout);\r\n                pingTimeout = null;\r\n            }\r\n        });\r\n\r\n        // 연결이 끊어졌을 때 실행되는 핸들러\r\n        socket.on('disconnect', () => {\r\n            console.log('WebSocket disconnected');\r\n            app.config.globalProperties.$socketError = true;\r\n            console.log('연결이 끊어졌습니다. 재연결을 시도합니다.');\r\n            sendPing();\r\n            if (pingTimeout) {\r\n                clearTimeout(pingTimeout);\r\n                pingTimeout = null;\r\n            }\r\n        });\r\n\r\n        // 연결 오류가 발생했을 때 실행되는 핸들러\r\n        socket.on('connect_error', (error) => {\r\n            console.error('WebSocket connection error:', error);\r\n            app.config.globalProperties.$socketError = true;\r\n            sendPing();\r\n            if (pingTimeout) {\r\n                clearTimeout(pingTimeout);\r\n                pingTimeout = null;\r\n            }\r\n            console.log('서버와의 연결에 문제가 발생했습니다. 재연결을 시도합니다.');\r\n        });\r\n\r\n        socket.on('pong', (latency) => {\r\n            console.log(`Pong received with latency: ${latency}ms`);\r\n        });\r\n\r\n        function sendPing() {\r\n            if (socket.connected) {\r\n                socket.emit('ping');  // 서버에 ping 메시지를 전송\r\n                console.log('Ping sent to server');\r\n            }\r\n\r\n            // 다음 ping 전송 예약\r\n            pingTimeout = setTimeout(sendPing, 10000); // 10초 후에 다시 ping 전송\r\n        }\r\n\r\n        // 전역 속성에 소켓 인스턴스 등록\r\n        app.config.globalProperties.$socket = socket;\r\n        app.config.globalProperties.$socketError = false; // 연결 상태 확인용 추가 속성\r\n\r\n        // Vue 컴포넌트가 해제될 때 소켓 연결을 정리\r\n        // const originalUnmount = app.unmount.bind(app);\r\n        //\r\n        // app.unmount = () => {\r\n        //     socket.disconnect(); // 소켓 연결 해제\r\n        //     if (pingTimeout) {\r\n        //         clearTimeout(pingTimeout); // 컴포넌트가 해제될 때 pingTimeout 제거\r\n        //     }\r\n        //     originalUnmount(); // 기존 unmount 호출\r\n        // };\r\n    },\r\n};\r\n\r\nexport default socketPlugin;\r\n","// src/icons/customIcons.ts\r\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\n\r\nconst faHalfCircleUp: IconDefinition = {\r\n    prefix: 'fac',\r\n    iconName: 'half-circle-up',\r\n    icon: [\r\n        512, // width\r\n        512, // height\r\n        [], // ligatures\r\n        'e002', // unicode\r\n        'M256 0c141.385 0 256 114.615 256 256H0C0 114.615 114.615 0 256 0z' // SVG path data for top half circle\r\n    ]\r\n};\r\n\r\nconst faHalfCircleDown: IconDefinition = {\r\n    prefix: 'fac',\r\n    iconName: 'half-circle-down',\r\n    icon: [\r\n        512, // width\r\n        512, // height\r\n        [], // ligatures\r\n        'e003', // unicode\r\n        'M256 512c-141.385 0-256-114.615-256-256h512c0 141.385-114.615 256-256 256z' // SVG path data for bottom half circle\r\n    ]\r\n};\r\n\r\nexport { faHalfCircleUp, faHalfCircleDown };\r\n","// src/apollo.ts\r\nimport {ApolloClient, InMemoryCache} from '@apollo/client/core';\r\nimport {provideApolloClient} from '@vue/apollo-composable';\r\n\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n// GraphQL 서버의 URL (NestJS 백엔드에서 제공하는 GraphQL 엔드포인트)\r\nconst apolloClient = new ApolloClient({\r\n    uri: `${apiBaseUrl}/graphql`,\r\n    cache: new InMemoryCache({\r\n    }),\r\n});\r\n\r\nexport function useProvideApolloClient() {\r\n    provideApolloClient(apolloClient);\r\n}","// main.ts\r\nimport { createApp } from 'vue';\r\nimport App from './App.vue';\r\nimport router from './router';\r\nimport store from './store';\r\nimport './assets/css/global.css';\r\nimport './assets/css/color.css';\r\nimport './assets/css/layout.css';\r\nimport './assets/css/layoutExtraWide.css';\r\nimport './assets/css/icoBtn.css';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n// @ts-ignore\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\n// @ts-ignore\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\nimport socketPlugin from '@/plugins/socketPlugin';\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faHalfCircleUp, faHalfCircleDown } from './icons/customIcons'; // 커스텀 아이콘 불러오기\r\nimport { useProvideApolloClient } from '@/graphql/apollo';\r\n\r\nlibrary.add(fas);\r\nlibrary.add(faCircle);\r\nlibrary.add(faHalfCircleUp);\r\nlibrary.add(faHalfCircleDown); // 커스텀 아이콘 추가\r\n\r\nconst app = createApp(App);\r\n\r\n\r\n// Vuex store 및 router 등록\r\napp.use(router);\r\napp.use(store);\r\napp.use(socketPlugin);\r\n\r\napp.component('font-awesome-icon', FontAwesomeIcon);\r\nuseProvideApolloClient();\r\n\r\napp.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkuimdCell\"] = self[\"webpackChunkuimdCell\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(2963); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","RUNNING_INFO_INTERFACE_CODE","I_CAS_STAT_ID_LIST","cd","cdNm","testType","value","text","bmTestType","RBC_CODE_CLASS_ID","SIZE","CATEGORY_ID","NORMAL","MACROCYTE","MICROCTYE","ANISOCYTOSIS","CHROMIA","HYPERCHROMIC","HYPOCHROMIC","POLYCHROMIA","SHAPE","POLIKILOCYTOSIS","TARGET_CELL","BURR_CELL","ACANTHOCYTE","OVALOCYTE","SCHISTOCYTE","SICKLE_CELL","STOMATOCYTE","TEAR_DROP_CELL","SPHEROCYTE","INCLUSION_BODY","HOWELL_JOLLY_BODY","BASOPHILIC_STIPPLING","MALARIA","OTHERS","PLATELET","SHOWING_RBC_SHAPE_CLASS_IDS","stringToDateTime","str","year","month","day","hour","minute","second","substring","getTestTypeText","matchingOption","find","option","getBmTestTypeText","getBarcodeDetailImageUrl","imageName","iaRootPath","slotId","barcodeDirName","apiBaseUrl","window","APP_API_BASE_URL","HOSPITAL_SITE_CD_BY_NAME","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_defineComponent","__name","props","setup","__props","store","useStore","embeddedStatusJobCmd","computed","state","embeddedStatusModule","siteCd","commonModule","processInfoItem","ref","prevOilCount","projectBm","getCurrentInstance","currentCardCount","currentCardName","watch","async","newVal","length","sysInfo","oilCount","onMounted","PROJECT_TYPE","parsedData","oldVal","runningInfoGet","deep","data","jobCmd","currentSlot","slotInfo","cassetteNo","cassetId","barcodeId","barcodeNo","patientId","patientName","patientNm","orderDate","orderDttm","analyzedDttm","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","_createTextVNode","_toDisplayString","wbcCount","_unref","_Fragment","key","__exports__","WBC_COUNT_OPTIONS","BM_COUNT_OPTIONS","STITCH_COUNT_OPTIONS","SLIDE_CARD_12A","INPUT","slotNo","slotState","OUTPUT","SLIDE_CARD_100A","MESSAGES","MSG","TOOLTIP","BARCODE_COPY","MEMO","CONFIRM","CLASS_MOVE","LIS_UPLOAD","COUNT_PERCENT","IA_ROOT_PATH","NS_NB_INTEGRATION","ALARM","KEEP_PAGE","DOWNLOAD_SAVE_PATH","DOWNLOAD","UPLOAD","OPEN_DOWNLOAD_SAVE_PATH","LIS_UPLOAD_CHECK","TOAST","SUCCESS","ERROR","BARCODE_COPIED","SETTING_SAVE","SETTING_UPDATE","SETTING_NOT_SAVE","SYSTEM","PROCESS_ALREADY_RUNNING","STOP_PROCESS","getDateTimeStr","now","moment","formattedTime","format","getDateTimeYYYYMMDDHHmmss","dateString","momentObj","getDateTimeStrForUI","formatDateString","getCountToTime","timeCount","Math","floor","minutes","seconds","pad","String","padStart","formatDate","date","getFullYear","getMonth","toString","getDate","tcpReq","reqDttm","saveReqDttm","embedStatus","start","reqUserId","startAction","stitchCount","runningMode","positionMargin","wbcPositionMargin","pltPositionMargin","init","restart","bfSelectFiles","stop","isEmergency","isUserStop","end","runningInfo","pause","runIngComp","recovery","settings","pbiaRootDir","isOilReset","deviceType","isNsNbIntegration","oilPrime","gripperOpen","cameraReset","exit","searchCardCount","errorClear","useHttpClient","httpGet","url","parameters","type","httpGetAct","endpoint","callImg","options","headers","axios","defaults","withCredentials","slush","MAIN_API_IP","response","get","Promise","undefined","success","reject","httpPost","payload","contentType","formData","httpPostAct","responseType","post","httpPut","httpPutAct","put","httpDelete","httpDeleteAct","delete","apiConstants","lisSend","ywmcCbcCheck","requiresToken","ywmcLisPostSend","saveComment","cbcImgGet","auth","refresh","processInfo","list","rbcclassification","wbcclassification","user","register","login","logout","userCheck","getUsers","userDataPut","deleteUser","cellImgAnalyzedPost","cellImgAdd","cellImgGet","cellImgPut","rbcDegree","rbcDegreeAdd","wbcCustomClass","create","update","wbcHotKeys","bfHotKeys","normalRange","imagePrint","lisCode","lisCodeRbc","cbcCode","filePathSet","runCount","minCount","detail","classInfoDetail","classInfoDetailSelectQuery","classInfoMenuDetailSelectQuery","pageUpDown","updatePcIpState","clearPcIpState","removePageAllData","folder","folders","classOrder","remainingCount","qualityCheck","crc","crcSettingCreate","crcGet","crcPut","crcDel","images","move","moveClassImage","jsonReader","jsonCreate","dziReader","pdf","filesystem","copy","cleanup","existsFile","fileSearch","readGetJpg","createDirectory","fileCreate","cbcSaveData","errLogsRead","fileTxtRead","readFileEUCKR","H7Read","H7Message","noFlagHl7","H7MessageCustom","Hl7Create","device","getDeviceInfo","ip","updateDeviceInfo","download","backUpDate","checkIsPossibleToBackup","openDrive","upload","restoreData","checkDuplicated","checkPossibleUploadFile","excel","execute","browser","nodeExit","img","checkImageExists","report","crcRemarkCreate","crcRemarkFindAll","crcRemarkRemove","crcRemarkUpdate","crcSearch","crcDataCreate","crcDataFindAll","crcDataRemove","crcDataUpdate","crcOptionGet","crcOptionCreate","crcOptionUpdate","crcRecoCreate","crcRecoFindAll","crcRecoRemove","crcRecoUpdate","crcRecoSearch","crcCommentCreate","crcCommentFindAll","crcCommentRemove","crcCommentUpdate","crcCommentSearch","saveDataCreate","saveDataSlotIdGet","saveDataPutData","saveDataDelete","httpClient","createCellImgApi","request","getCellImgApi","putCellImgApi","createRbcDegreeApi","putRbcDegreeApi","getRbcDegreeApi","createWbcCustomClassApi","updateWbcCustomClassApi","getWbcCustomClassApi","createWbcHotKeysApi","updateWbcHotKeysApi","getWbcHotKeysApi","createBfHotKeysApi","updateBfHotKeysApi","getBfHotKeysApi","createNormalRangeApi","updateNormalRangeApi","getNormalRangeApi","createImagePrintApi","updateImagePrintApi","getImagePrintApi","createLisCodeWbcApi","updateLisCodeWbcApi","getLisCodeWbcApi","createLisCodeRbcApi","updateLisCodeRbcApi","getLisCodeRbcApi","createCbcCodeRbcApi","updateCbcCodeRbcApi","getCbcCodeRbcApi","createFilePathSetApi","updateFilePathSetApi","getFilePathSetApi","createRunInfoWbcApi","updateRunInfoApi","getRunInfoApi","createMinCountApi","updateMinCountApi","getMinCountApi","getLisCodeApi","getDrivesApi","createOrderClassApi","getOrderClassApi","putOrderClassApi","createCrcApi","updateCrcApi","deleteCrcApi","createCrcRemarkApi","crcRemarkGet","crcSearchGet","queryString","entries","filter","encodeURIComponent","join","updateCrcRemarkApi","deleteCrcRemarkApi","createCrcDataApi","crcDataGet","updateCrcDataApi","deleteCrcDataApi","createCrcOptionApi","updateCrcOptionApi","createCrcRecoApi","crcRecoGet","crcRecoSearchGet","updateCrcRecoApi","deleteCrcRecoApi","createCrcCommentApi","crcCommentGet","crcCommentSearchGet","updateCrcCommentApi","deleteCrcCommentApi","saveDataCreateApi","saveDataSlotIdGetApi","saveDataPutDataApi","EventBus","constructor","_defineProperty","subscribe","eventName","handler","this","events","push","publish","args","handlers","unsubscribe","h","typeClass","emit","__emit","hideAlert","testTypeList","testBmTypeList","AnalysisList","bmAnalysisList","AnalysisList2","stitchCountList","edgeShotTypeList","EDGE_SHOT_COUNT_LIST_LP","EDGE_SHOT_COUNT_LIST_HP","POSITION_MARGIN_LIST","defaultCbcList_0011","classCd","fullNm","isSelected","defaultCbcList","rbcClassList","categoryId","categoryNm","classInfo","classId","classNm","degree","malariaCount","currentRbcResults","defaultRbcDegree","degree1","degree2","degree3","abbreviation","orderIdx","bmHotKeys","min","max","unit","imagePrintAndWbc","checked","imagePrintAndBm","lisCodeWbcOption","LIS_CODE_RBC_OPTION","minRunCount","minGPCount","minPACount","wbcRunningCount","wbcTargetCount","lisHotKeyAndLisFilePathAndUrl","lisHotKey","lisFilePath","cbcFilePath","DIR_NAME","HOWELL_JOLLY","NO_MALARIA","RBC_CLASS","RBC_IMAGE","BARCODE","WBC_CLASS","BF","BF_HIGH","BF_CLASS","settingName","cellImageAnalyzed","WBC_CUSTOM_CLASS","customNum","typeConvertConfirmText","SAVE","DELETE","typeConvertCloseText","LEAVE","CLOSE","hideConfirm","okConfirm","createDeviceInfoApi","getDeviceInfoApi","putDeviceInfoApi","getDeviceIpApi","userModuleDataGet","userModule","viewerCheck","projectType","countType","runInfo","executeState","executeModule","isPause","isRunningState","userStop","isRecoveryRun","isInit","userId","analysisType","commonDataGet","showStopBtn","btnStatus","showAlert","alertType","alertMessage","testTypeArr","emits","showConfirm","confirmType","confirmMessage","filteredWbcCount","is100A","newUserId","oldUserId","initDataExecute","onBeforeMount","MACHINE_VERSION","nextTick","setWbcRunningCount","initData","loginSetData","dispatch","resetAnalyzing","newRunInfo","newVals","newBfSelectFiles","newEmbeddedStatusJobCmd","newIsPause","newUserStop","newIsRecoveryRun","newIsInit","Number","autoStart","toggleStartStop","emitSocketData","sendSearchCardCount","action","FORCE_VIEWER","showSuccessAlert","IDS_ERROR_ALREADY_RUNNING","IDS_RECOVER_GRIPPER_CONDITION","rbcPositionMargin","sessionStorage","getItem","edgeShotType","assign","includes","defaultCount","edgeShotCount","InfoData","startEmbedded","IDS_ERROR_STOP_PROCESS","message","handleOkConfirm","sendInit","alreadyInitialized","sendRewindBelt","isRewindingBelt","newObj","result","diffCellAnalyzingCount","pbsCellAnalyzingCount","bfCellAnalyzingCount","console","error","runCountResult","runCountData","filteredRunCountData","deviceData","_component_font_awesome_icon","_resolveComponent","_withDirectives","$event","disabled","onChange","_renderList","_vModelSelect","onClick","_createVNode","icon","_normalizeClass","onMousedown","onMouseup","flip","_createCommentVNode","style","_createBlock","Alert","onHide","Confirm","onOkConfirm","width","height","x1","y1","x2","y2","_hoisted_13","_hoisted_14","runningInfoModule","initValData","timeDataGet","timeModule","timeNum","size","strokeWidth","progressColor","radius","circumference","PI","dashoffset","maxWbcCount","eqStatCd","slideTime","totalSlideTime","countingInterval","countingIntervalTotal","slideCardData","totalElapsedTimeCount","elapsedTimeCount","isBlinking","interval","isBm","fixEqStatCd","pbVersion","iCasExist","oCasExist","nnn","item","newData","updateInputState","iCasStat","oCasStat","stopTotalCounting","stopCounting","regex","dataICasStat","search","newValsObj","JSON","parse","stringify","runningSlotId","startTotalCounting","newSlot","slotArray","changeSlideState","changeSlide","slideBooleanState","slideIs","startCounting","clearInterval","stateCd","cellCount","percentage","calculateDashOffset","setInterval","pb100aCassette","forEach","source","target","index","charAt","setItem","onBeforeUnmount","removeItem","changeWqStatCd","getSlotStateClass","casExistChangeText","val","offset","attributeName","from","to","dur","repeatCount","dx","dy","stdDeviation","cx","cy","r","stroke","fill","_vShow","reverse","dspOrderList","log","startStatus","existingItemIndex","findIndex","inputCassetteArr","completedCassetteIndex","lastIndexOf","stateCdObj","slot","colspan","basicWbcArr","basicBmClassList","defaultWbcClassList","defaultBmClassList","basicWbcArrClint","title","name","count","percent","order","basicBmClassListClint","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","storeEm","dspWbcClassList","dspBfClassList","totalCount","updateDataArray","wbcInfo","newSlotInfo","wbcinfoType","bmIsBoolen","bmInfo","wbcInfoArray","arrType","areAllCountsZero","classList","every","classGroup","category","allCountsAreZero","flat","updateCounts","iCasStatArr","selectNonWbc","wbcArray","getIncludesStrBySiteCd","arraysBySiteCd","includesStr","includesStr2","arraysForSiteCd","calculateWbcPercentages","wbcList","total","totalVal","toFixed","updatePercentages","shouldRenderCategory","targetArray","getStringArrayBySiteCd","formattedPercent","getCategoryName","outerIndex","innerIndex","nWbcItem","basicRbcArr","dspRbcClassList","maxRbcCount","pltCount","bfSelectModeList","rbcDegreeStandard","getRbcDegreeData","rbcInfo","lowPowerPath","Array","isArray","wbcInfoArr","calcRbcDegree","sort","a","b","seqNo","rbcInfos","sizeTotal","chromiaTotal","originalData","rbcCategory","rbcClass","idx1","idx2","degreeStandard","originalDegree","degreeCount","isNaN","setDegree","poikiloDegree","rbc","onClickBfImg","event","lowPower","existingIndex","splice","rowStart","rowIndex","slice","colIndex","src","path","ref_for","classIndex","degreeIndex","generateUniqueId","random","getImageUrl","types","folderPath","match","fileName","imageUrl","runningPath","pathItem","image","unshift","_Transition","mode","default","_withCtx","alt","_","progressData","reactive","progressBarText","progressBarPercent","progressArr","parsedDataSysInfo","step","progressNo","progressName","progressPercent","immediate","completed","active","waiting","_normalizeStyle","transition","GaugeBar","router","rbcUpdate","classInfoUpdate","initDataChangeText","Execute","onInitDataChangeText","ProcessInfo","orderList","isClass","RenewalWorking","workingView","onRbcUpdate","onClassInfoUpdate","FoundingCells","_component_Fragment","Analysis","createUser","logoutApi","getAllUsersApi","getUserApi","putUserDataApi","deleteUserApi","employeeNo","idVal","nameVal","passwordRepeat","password","userType","goLoginPage","createAccount","currentDate","Date","showErrorAlert","subscriptionDate","_vModelText","rbcClassListArr","defaultCellImgData","testTypeCd","diffWbcPositionMargin","diffRbcPositionMargin","diffPltPositionMargin","edgeShotLPCount","edgeShotHPCount","isAlarm","alarmCount","keepPage","lisUploadCheckAll","backupPath","backupStartDate","backupEndDate","settingsConstant","initializeAllSettings","firstGetSettings","getRequest","initializeType","sendingFormStr","sendingForm","defaultItem","createRequest","anotherDefaultValue","defaultComputedValueForCreateRequest","afterResponse","cellImgSet","toISOString","split","autoBackUpMonth","autoBackUpStartDate","combindDegree","rbcDegreeList","classItem","showLISUploadAfterCheckingAll","defaultDegree","readJsonFile","readDziFile","readFileTxt","readH7File","readNoFlagHl7Message","readCustomH7Message","createH17","isAutoLoginEnabled","isTcpConnected","isViewer","forceViewer","uimdOpenIp","progress","progressOnOff","MAIN_WEBSOCKET_IP","checkIsViewer","startProgress","newValue","setTimeout","isAutoLogginable","getStoredUser","localStorage","loginUser","getDeviceInfoFromTxt","filePath","iniFileData","deviceBarcodePattern","siteCdPattern","deviceBarcode","deviceInfoObj","deviceSerialNm","deviceItem","goJoinPage","getIpAddress","updateAccount","deviceInfo","document","documentElement","requestFullscreen","resFlag","placeholder","onKeydown","backUpDateApi","downloadPossibleApi","openDriveApi","uploadBackupApi","uploadPossibleApi","checkPossibleUploadFileApi","okConfirm2","isVisible","Boolean","position","className","disableScroll","body","overflow","enableScroll","scrollToTop","scrollTo","top","behavior","rowspan","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","instance","useRouter","showUploadModal","analysisVal","downloadRootPath","uploadRootPath","local","toDate","saveHttpType","drive","backupDrive","cellimgId","uploadSlotIdObj","duplicated","nonDuplicated","possibleUploadCount","impossibleUploadCount","enteringRouterPath","settingChangedChecker","settingType","isRestoring","isDownloading","isLoadingProgressBar","showDownloadConfirm","downloadConfirmMessage","downloadDto","totalFileCount","successFileCount","downloadUploadType","intervalId","deletableDownloadFiles","loadingState","showUploadSelectModal","possibleUploadFileNames","selectedUploadFile","showTutorialImage","apiUrl","tooltipVisible","nsNbIntegration","alarm","downloadSavePath","openDownloadSavePath","machineVersion","appContext","config","globalProperties","$socket","on","downloadUploadObj","isFinished","downloadUploadStopWebSocket","isDownloadOrUploading","updateFileCounts","getApiUrl","driveGet","cellAfterSettingObj","LP","HP","afterSettingFormattedString","checkIsMovingWhenSettingNotSaved","tmp","filterNumbersOnly","input","filteredValue","replace","trim","saveData","backUpData","savePlace","backupPlace","dataKey","settingNotSaved","cellBeforeSettingObj","beforeSettingFormattedString","add","settingSaveSuccess","UPDATE_SUCCESSFULLY","keepPageType","toggleNsNbIntegration","toggleAlarm","toggleKeepPage","informationFontHover","hoverStatus","uploadConfirm","startDate","endDate","page","searchText","nrCount","wbcTotal","dayQuery","uploadDto","destinationUploadPath","originUploadPath","uploadType","handlePolling","uploadCancel","handleDownloadClose","duration","handleDownload","downloadDtoObj","downloadType","sendingDownloadStartDate","sendingDownloadEndDate","originDownloadPath","destinationDownloadPath","createBackup","isSameOrBefore","isPossibleToBackup","handleSelectUploadFile","openSourceDrive","handleUploadSelectFile","totalMove","successMove","handleUploadSelectModalClose","tooltipVisibleFunc","visible","pbsAnalysisValuesRowIndex","onMouseenter","onMouseleave","smearTop","commonPositionMargin","SETTING_INFO_IA_ROOT_PATH_KO","Tooltip","onInput","Datepicker","modelValue","SETTING_INFO_UPLOAD_KO","COPY","MOVE","CANCEL","folderName","_vModelRadio","ConfirmThreeBtn","confirmFirstText","confirmSecondText","closeText","onOkConfirm2","rbcClassListArrAfterSettingObj","onResetDegree","createRbcDegreeData","settingSaveFailure","processData","categoryMap","Map","has","existingCategory","existingClassIndex","ci","newCategory","set","values","isBlinkingGripper","isBlinkCameraReset","blinkTimeout","cameraResetTimeOut","newIsRunningState","onScan","onGripperOpen","clearTimeout","onCameraReset","toggleAutoStart","wbcCustomItems","getWbcCustomClasses","saveWbcCustomClass","validateCustomClass","updateResult","classArr","settingUpdateFailure","filterEnglishAndNumbers","field","existingClassFullNmArr","existingClassAbbreivationArr","wbcCustomItem","maxlength","wbcHotKeysItems","getWbcHotKeyClasses","wbcHotKeysItemsAfterSettingObj","bfHotKeysItems","getBfHotKeyClasses","bfHotKeysAfterSettingObj","saveBfCustomClass","normalItems","getNormalRange","normalItemsAfterSettingObj","saveNormalRange","normalRangeItems","wbcInfoChangeVal","dragIndex","dragOffsetY","getOrderClass","classOrderAfterSettingObj","wbcCustomItemClassIds","Set","wbcCustomClassDefaultIds","classIds","maxOrderIdx","obj","saveOrderClassSave","startDrag","clientY","getBoundingClientRect","drop","preventDefault","movedItem","idx","draggable","onDragstart","onDragover","_withModifiers","onDrop","wbcRunInfoCountArr","getWbcRunningCountData","wbcRunInfoCountArrAfterSettingObj","runInfoData","saveWbcRunningCount","wbcRunCountItems","wbcRunning","namespaced","latestDate","mutations","setUserMutation","actions","setUserAction","commit","wbcDiffVal","analysisTypeSet","wbcDiffValSet","stitchCountSet","setAnalysisType","setWbcDiffValSet","setStitchCountSet","workingViewModule","equipmentStatusCode","time","output","setEquipmentStatusCode","setWbcCount","setSlideTime","setTime","setSlotInfo","setWorkingViewInfo","isDoorOpen","storageSize","autoStartTimer","setEmbeddedStatusJobCmd","setUserStop","setIsRecoveryRun","setIsPause","setSysInfo","setIsInit","setEmbeddedStatusInfo","orderListModule","setRunningInfo","setChangeSlide","setSlideBoolean","updateRunningInfo","toUpperCase","embeddedNumber","isCompleteAlarm","isErrorAlarm","slideProceeding","isRequestInProgress","startInfoBoolen","runningInfoBoolen","runningInfoStop","reqArr","firstLoading","slotIndex","runningArr","rbcArr","clonedWbcInfo","clonedRbcInfo","moveImgIsBool","classInfoSort","chatRunningData","cbcLayer","inhaTestCode","rbcReData","rbcReDataClass","rbcInfoAfterData","resetRbcArr","selectedSampleId","classInfoArr","rbcReDataCheck","appAlertOpen","dataBasePageReset","dbListDataFirstNum","dbListDataLastNum","rbcImagePageNumber","slideDataReset","setStartEmbedded","setEqStatCd","setIsRunningState","setTotalCount","setEmbeddedNumber","setIsCompleteAlarm","setIsErrorAlarm","setBfSelectFiles","setSlideProceeding","setTotalSlideTime","setIaRootPath","setRunningSlotId","setIsRequestInProgress","setStartInfoBoolen","setRunningInfoBoolen","setRunningInfoStop","setReqArr","shiftReqArr","shift","setReqArrPaste","setResFlag","setFirstLoading","setSlotIndex","setViewerCheck","setRunningArr","setClassArr","setRbcArr","setProcessInfo","setOrderList","setLoginSetData","setDeviceSerialNm","setSiteCd","setClonedWbcInfo","setClonedRbcInfo","setMoveImgIsBool","setClassInfoSort","setChatRunningData","setSelectedSampleId","setCbcLayer","setInhaTestCode","setRbcReData","setRbcReDataClass","setResetRbcArr","setRbcInfoAfterData","setClassInfoArr","setRbcReDataCheck","setAppAlertOpen","setDataBasePageReset","setResetAnalyzing","setTestType","setIsNsNbIntegration","setBeforeSettingFormattedString","setAfterSettingFormattedString","setSettingChangedChecker","setDbListDataFirstNum","setDbListDataLastNum","setIsTcpConnected","setInitValData","setEnteringRouterPath","setSettingType","setIsDownloadOrUploading","setIsRewindingBelt","setRbcImagePageNumber","setShowLISUploadAfterCheckingAll","setSlideDataReset","setCommonInfo","hasOwnProperty","dataBaseSetDataModule","dataBaseSetData","setDataBaseSetData","resultCode","resultMsg","errorLevel","processingCode","existingSlot","existing","setTimeInfo","initialState","lock_status","traySlot","gender","birthDay","tactTime","bf_lowPowerPath","isNormal","wbcInfoAfter","rbcInfoAfter","submitState","submitOfDate","submitUserId","rbcInfoPosAfter","wbcMemo","rbcMemo","pcIp","cbcPatientNo","cbcPatientNm","cbcSex","cbcAge","img_drive_root_path","hosName","abnormalClassInfo","slideDataModule","setId","setLockStatus","lockStatus","setTraySlot","setSlotNo","setBarcodeNo","setPatientId","setPatientNm","setGender","setBirthDay","setSlotId","setOrderDttm","setAnalyzedDttm","setTactTime","setMaxWbcCount","setBfLowPowerPath","bfLowPowerPath","setCassetId","setIsNormal","setWbcInfo","setWbcInfoAfter","setRbcInfo","setRbcInfoAfter","setSubmitState","setSubmitOfDate","setSubmitUserId","setRbcInfoPosAfter","setWbcMemo","setRbcMemo","setPcIp","setCbcPatientNo","setCbcPatientNm","setCbcSex","setCbcAge","setImgDriveRootPath","imgDriveRootPath","setHosName","setAbnormalClassInfo","resetState","updateSlideData","resetSlideData","createStore","modules","settingUpdate","settingUpdatingData","cellImageObj","cellImageId","imagePrintItems","lisCodeItems","lisCodeWbcArr","lisCodeRbcArr","minCountItems","minCountArr","cbcCodeItems","filePathSetItems","activeTab","movingTab","activateTab","tabName","activeTabComponent","CellImageAnalyzed","RbcDegree","DeviceControls","WbcCustomClass","WbcHotKey","BfHotKey","NormalRange","WbcOrder","WbcRunningCount","_resolveDynamicComponent","closeLayer","isMasterId","toLowerCase","isUserAdminType","isObjectEmpty","object","storedUser","currentUserId","allUsers","userSearchOption","userSearchOptions","userTypeOptions","inputText","isModalVisible","selectedUserData","selectedUserId","formattedSubscriptionDate","formattedLatestDate","getAllUsers","filterUsers","users","searchOption","searchQuery","searchField","onSearch","filteredUsers","putSelectedUserData","currentUserData","getSelectedUser","selectedUserIdParam","openLayer","onModalOpen","handleDeleteUser","Modal","onAfterOpen","header","content","for","readonly","imagePrintAndWbcArr","selectedItems","allChecked","getImagePrintData","newItem","saveImagePrint","toggleAllChecks","_vModelCheckbox","afterSetting","setLisCodeWbcByCustomClass","lisCodeWbcClassIds","newItems","settingObj","saveLisCode","rbcResult","minCountResult","updateRbcResult","updateMinCountResult","is","wbcResult","wbcData","rbcData","minCountData","cbcCodeArr","editingCBCCd","cbcCodeArrAfterSetting","saveCbcCode","addCBCCode","maxCBCCode","cbcCodeCd","defaultCBCCode","deleteCBCCode","cbcCd","editCBC","CBCCd","clearEditing","items","required","moType","pageName","masterId","arrData","lisCodeMatchingInfo","lisValMatchingInfo","editIndex","rows","i","morphologyType","newArr","editCrcArr","changeEtc","eve","nes","updateCrcArr","updatedItem","delCrcArr","moTypeTextChange","txt","contentArr","changeSelect","rbcCrcDiv","crcTitle","crcType","crcContent","opItem","crcCode","crcCodeMatching","crcPercentText","isToggle","crcArr","crcData","crcDefaultMode","lisTwoMode","crcConnect","crcOptionPutWhether","crcOptionId","crcRemarkCountArr","crcPassWord","crcOptionApi","crcMode","crcRemarkCount","nameChange","changeCrcRemarkCount","countId","addCrcArr","onUpdateCrc","onDeleteCrc","findId","saveCrcData","crcDefaultModeOn","lisTwoModeOn","crcConnectOn","CrcCompontent","script","render","filePathSetArr","getFilePathSetData","handleKeyDown","allowedKeys","test","isSpecialKey","currentValue","saveFilePathSet","updateHotKey","updateFilePath","updateCbcFilePath","selectTab","selectedTabComponent","ImagePrint","LisCode","FilePathSet","CRC","ARL","qualityCheckOpen","isProjectBm","projectVersionArr","engineVersionArr","swVersion","core","deepNet","bmEngineVersion","seg","cell","pbEngineVersion","wbc","rbcClassify","rbcPltCrop","singleSeg","setVersions","getEngineVersion","PROJECT_VERSION","tcpVersionPattern","coreVersionPattern","bmSegPattern","bmCellPattern","pbSegPattern","pbWbcPattern","pbRbcPattern","pbRbcPltCropPattern","pbSingleSegPattern","tabs","viewerTabs","currentTab","changeTab","tab","components","LoginAccount","AnalysisDatabase","Report","QualityCheck","Version","viewerComponents","storedTab","currentTabComponent","createRunningApi","updateRunningApi","getRunningApi","deleteRunningApi","detailRunningApi","pageUpDownRunnIngApi","updatePcIpStateApi","removePageAllDataApi","percentWithNoError","inhaPercentChange","runningInfoData","excludedTitles","wbcItem","maxItem","percentTotal","percentN2","seoulStMaryPercentChange","originWbcInfo","changingWbcInfo","totalPercent","round","parseFloat","reduce","sum","incheonStMaryPercentChange","incheonGilPercentChange","nonWbcTitles","addPercentWbcInfo","itemPercent","ceil","wbcInfoPercentArr","adjustedItems","adjustPercentages","adjustedItem","adjusted","rounded","p","difference","decimalParts","decimal","abs","adjustIndex","_hoisted_65","_hoisted_66","_hoisted_67","printContent","slideData","selectItems","orderClass","nonWbcIdList","rbcInfoPathAfter","rbcTotalVal","sizeChromiaTotal","chromiaTotalTwo","shapeBodyTotal","shapeOthersCount","printReady","getDetailRunningInfo","rbcTotalAndReCount","calcShapeOthersCount","printPage","shapeOthers","getShapeOthers","artifact","doubleNormal","url_Old","response_old","fullPath","otherCount","url_new","response_new","newJsonData","rbcItem","newRbcData","foundElementIndex","el","newRbcDataObj","posX","posY","chromiaTotalval","shapeBodyTotalVal","shapeBodyTotalVal2","lastIndex","pathCategory","cat","pathClass","countReAdd","hiddenImages","handleImageError","itemId","percentageChange","calculateRbcTotalByCategoryId","totalPLT","malariaTotal","lastElement","xel","filteredWbcInfo","showImage","noImageList","wbcArr","percentChangeBySiteCd","compressedContent","pako","innerHTML","level","fetch","method","ok","blob","URL","createObjectURL","isEdge","navigator","userAgent","link","createElement","href","appendChild","click","removeChild","open","revokeObjectURL","oArr","sortArr","sortedWbcInfoData","sortWbcInfo","newSortArr","nameA","nameB","closePrint","ref_key","onError","coordinates","GetRunningInfoByIdDocument","gql","useGetRunningInfoByIdQuery","variables","reactiveVariables","reactiveOptions","VueApolloComposable","loadMoreRef","selectedItemId","itemObj","myIp","loadingDelay","contextMenu","x","y","rightClickItem","printOnOff","selectItemWbc","selectAllCheckbox","barcodeImg","isCtrlKeyPressed","isShiftKeyPressed","firstShiftKeyStr","lastShiftKeyStr","socketTimeoutId","scrollableDiv","barCodeImageShowError","selectedItemsUsedInDelete","dbDataFindByIdUsedInDelete","popupItemId","addEventListener","handleOutsideClick","handleKeyUp","abnormalClassInfoOpen","isOpen","ctrlKey","shiftKey","onUnmounted","removeEventListener","loadingDelayParents","watchEffect","dbData","filteredItems","observer","IntersectionObserver","handleIntersection","root","rootMargin","threshold","observe","selectItem","removeCheckBox","printClose","printStart","resetContextMenu","editOrderData","editData","classificationRowDbClick","rowDbClick","selectAllItems","dbDataItem","contextMenuElement","querySelector","contains","rowRightClick","wbcInfoData","sortedArray","clientX","IDS_ERROR_SELECT_A_TARGET_ITEM","handleShiftSelection","startId","endId","handleCheckboxChange","entry","isIntersecting","intersectionRatio","ipAddress","then","delayedEmit","catch","delay","loading","fetchPolicy","getRunningInfoByIdGQL","dbDataEditSet","updatedRuningInfo","localDbData","indexToUpdate","runingInfoDtoItems","deleteRow","lockRow","idsToDeleteArr","rootPaths","apiUrlTmp","ids","submitStateChangeText","onImageError","showDeleteConfirm","pilePath","getClassOrder","selectedItem","newSelectedItem","setWbcTotalAndPercent","sortClassOrder","integrationFindNe","returnText","neFindItem","acc","calculatePercentage","showClassificationResults","classificationResult","showClassificationNonWbcResults","allImages","selectedImage","createAllImages","clickImage","selectImageText","isSelectedImage","hideImage","imageSet","executeExcelCreate","fileSysPost","fileSysCopy","fileSysClean","fileSysExistsFile","fileSearchApi","createFile","createCbcFile","getFolders","errLogsReadApi","inhaCbc","cbcFilePathSetArr","cbcCodeList","funcType","errMessage","cbcWorkList","cbcDataArray","UPLOAD_PLEASE_CBC","machine","episode","baseUrl","correctedString","jsonObject","res","readFileTxtRes","returnCode","testCode","regNo","sex","age","testCodeList","codes","codeArray","parms","inhaDataSend","lisFilePathSetArr","lisBtnColor","UPLOAD_PLEASE_LIS","resultStr","tmpList","tmpStr","inhaTestSendCode","LIS_CD","IA_CD","MIN_COUNT","rbcTmp","IA_CATEGORY_CD","IA_CLASS_CD","rbcTmp2","parmsLisCopy","localTime","resRunningItem","IDS_MSG_SUCCESS","noAlert","getLisWbcRbcData","newWbcDataArr","CD_NM","newRbcDataArr","rbcDataItem","CATEGORY_NM","CLASS_NM","getLisPathData","getCbcPathData","getCbcCodeList","sdCbcAutoMatiching","MCV","MCHC","Hb","WBC","PLT","EOSINO","NEUTRO","LYMPHO","MONO","RBC","returnArr","cbcFileNameExtract","foldersPath","cbcDataArr","filterCbcDataArr","latestFile","latest","currentFile","parseDateString","dateMatch","rawDate","isAutoCBCMatching","cbcData","isAdultNormalCBC","newRbcArr","results","rbcNormalRanges","normalRangeFirst","normalRangeLast","cbcNormalRanges","wbcNormalRanges","info","cbcDataGet","fileNm","msg","segments","cbcSegment","fields","sanitizedClassCd","lisSendSD","nowCrcData","sendingApp","sendingFacility","receivingApp","receivingFacility","dateTime","security","messageType","messageControlId","processingId","hl7VersionId","customData","pidData","lisHttpSendSD","apiKey","interfaceId","dataText","sdWorklistsAPI","workDate","sdPatientNameGetAPI","reqNoList","workDateStart","workDateEnd","workList","workListValue","workListShowValue","datepicker","selectedDate","newWorkList","prevVal","formattedDate","dateFormat","handleClose","reqDate","testDate","receiptNo","testYn","bufferDelay","dbGetData","today","thirtyDaysAgo","setDate","searchType","prevPage","titleItem","titleItemArr","wbcCountOrder","classListToggle","bmClassIsBoolen","prevDataPage","reqDataPrev","checkedSelectedItems","eventTriggered","selectedItemIdFalse","notStartLoading","barcodeInput","isPrintingExcel","rbcInfoAfterVal","rbcInfoBeforeVal","inputTimeout","inputBuffer","showPopupTable","previousValue","lastInputTime","isBarcodeScannerInput","handleStateVal","initDbData","closeClassListBox","focus","handleGlobalKeydown","setDateToday","handleInput","currentTime","timeDiff","trimmedValue","openCheckList","currentRoute","handleEnter","selectBox","selectButton","classListToggleEvent","changeTestType","updateFilter","lastSearchParams","loadLastSearchParams","getDbData","saveLastSearchParams","storedSearchParams","pageNum","pageChange","requestData","pageSize","startDay","endDay","wbcInfoItems","dateA","dateB","diff","barcodeNoList","formatedStartDate","formatedEndDate","patientDataResult","equalBarcodeData","patItem","reqNo","patName","diffInMs","getTime","diffInDays","disableSelectItem","loadMoreData","loadPrevData","exportToExcel","convertRbcData","excecuteExcel","checkedItem","beforeRbcData","afterRbcData","dataList","reDegree","areDegreesIdentical","sendingItem","before","after","beforeItem","beforeCategoryId","rbcInfoItem","classInfoItem","beforeClassId","rbcDetailItem","classInfoDetailItem","Malaria","Others","Platelet","afterItem","createRbcJson","arr1","arr2","item1","item2","j","classInfo1","classInfo2","sendingData","jsonString","utf8Data","TextEncoder","encode","compressedData","Blob","FormData","append","shapeTotalVal","inclusionBody","afterCategory","afterClassItem","rbcInfoArray","dateRefresh","checkListItem","_withKeys","_KeepAlive","ListTable","onLoadMoreData","onLoadPrevData","onInitData","onSelectItem","onRefresh","onCheckListItem","onDisableSelectItem","ListInfo","ListWbcImg","ListBmImg","PopupTable","rulers","VISIBLE_SIZE_OPTIONS","VISIBLE_CHROMIA_OPTIONS","VISIBLE_SHAPE_OPTIONS","VISIBLE_INCLUSION_BODY_OPTIONS","VISIBLE_OTHERS_OPTIONS","VISIBLE_RBC_OPTIONS","UpdateRunningInfoDocument","cbcUpdateDocument","memoUpdateDocument","rbcUpdateDocument","useUpdateRunningInfoMutation","cbcUpdateMutation","memoUpdateMutation","rbcUpdateMutation","gqlGenericUpdate","mutationHook","originalDb","updateDtos","mutate","onDone","updateDto","checkedClassIndices","memo","sliderValue","memoModal","isBefore","except","selectedClass","allCheckType","jsonIsBool","bodyTotal","shapeTotal","rbcSendtimerId","timeoutId","rbcResponseOldArr","confirm","rightClickItemSet","afterChange","isCommitChanged","allCheckClear","newRbcPageNumber","processItems","argument","showCheckbox","availableClassIds","handleClick","notCanvasClickVal","toggleCheckbox","clickChangeSens","checkValue","isChecked","othersCategoryItems","startsWith","checkedCategoryIdArr","isShapeOrInclusionBodyClicked","some","optionsMap","setCheckedClassIndices","availableOptions","updateClassInfoArr","pageNumber","classChange","sensitivity","resetTimer","sensRbcReJsonSend","rbcInfoAfterSensitivity","anyWay","selectedClassVal","findClass","toggleAll","allCheck","baseClassIds","allClassIds","allCheckboxes","flatMap","categoryCheckboxes","categoryClassIdStrArr","hasCategoryId","checkbox","validCategories","validCategoryId","oldItem","updataClassInfoaArr","onClickDegree","updateRunningInfoGQL","memoOpen","memoCancel","memoChange","enterAppliedRbcMemo","replaceAll","commitConfirmed","IDS_MSG_CONFIRM_SLIDE","onCommit","color","moveImgPost","moveClassImagePost","VIEWER_CHECK","malariaList","noMalariaList","selectedClickImages","selectedImageSrc","indexBeforePressingShift","draggedImages","imageExist","modalOpen","modalImageWidth","modalImageHeight","getImageList","json","err","handleBodyClick","outerClickCloseModal","closeModal","handleOpenModal","malaria","zoomIn","newWidth","newHeight","zoomOut","closest","handleClickImage","section","imgName","clickedImage","startIdx","endIdx","onDragStart","targetSection","draggedImage","moveImage","pathNew","sourceFolder","destinationFolder","imgNameArr","onDblclick","noMalaria","SOUND_ERROR_ALARM","Audio","errorAlarm","SOUND_COMPLETE_ALARM","completeAlarm","openseadragonPrefixUrl","viewer","imgSet_img_list","imgBrightness","imageRgb","isGrid","isMagnifyingGlass","ruler","activeRuler","showSelect","rulerXResolution","rulerPos","prevPosX","prevPosY","left","rulerSize","rulerWidth","tilingViewerLayer","tileExist","newItemClassInfoArr","canvasOverlay","drawPath","moveRbcClass","selectBoxX","selectBoxY","classInfoArrNewReData","canvasCurrentHeight","canvasCurrentWitdh","fileNameResultArr","imagePageType","zoomRatio","maxNumberOfLines","initElement","initGetRulerWidthHeight","closeSelectBox","dziWidthHeight","urlImage","imageFileName","imageResponse","extractWidthHeightFromDzi","xmlString","parser","DOMParser","xmlDoc","parseFromString","sizeElement","getElementsByTagName","tileSizeEl","tileSize","getAttribute","moveRbcClassEvent","existingOverlays","getElementsByClassName","newAsrr","moveRbcClassItem","removeDiv","rbcInfoPathAfterJsonCreate","drawRbcMarker","overlaysArray","overlay","removeOverlay","compareData","jsonData","removeRbcMarker","olElements","querySelectorAll","validClassNmSet","rbcMarker","rbcClassRightClick","currentTarget","HTMLElement","imgNum","sss","getElementById","destroy","canvas","ctx","getContext","clearRect","beginPath","colors","lineWidth","strokeStyle","classItemPosX","classItemPosY","rectPath","Path2D","ddrr","rect","tilesInfo","fetchTilesInfo","OpenSeadragon","animationTime","navigatorSizeRatio","showNavigator","sequenceMode","defaultZoomLevel","prefixUrl","tileSources","showReferenceStrip","gestureSettingsMouse","clickToZoom","minZoomLevel","zoomPerScroll","viewportMargins","bottom","right","visibilityRatio","initialMaxZoomLevel","maxZoomLevel","viewport","element","moveHandler","existingMagCanvas","drawer","magCanvas","magCtx","magWidth","magHeight","zoomLevel","border","borderRadius","zIndex","drawImage","visibility","addOverlay","location","addHandler","Image","Size","Width","Height","fullPageButton","buttons","button","tooltip","isFullPage","exitFullscreen","setFullPage","fullPage","backgroundColor","pageIndex","notCanvasClick","removeRuler","drawRuler","parentElement","container","originalEvent","clickPos","pointFromPixel","canvasPos","isItemSelected","selectItm","setAttribute","opacity","overlayRect","imageToViewportRectangle","itemPos","existingOverlay","previousOverlay","updateOverlay","fileNames","endsWith","fileNameResult","extractSubStringBeforeFiles","xmlns","Url","Format","Overlap","TileSize","searchString","endIndex","indexOf","toggleViewer","viewerType","imgSetOpen","changeImgBrightness","brightness","red","green","blue","imageContainer","changeImageRgb","rgbValue","rgbReset","brightnessReset","onClickGrid","drawLines","removeGridLines","imageHeight","world","getItemAt","getContentSize","imageWidth","zoom","getZoom","numberOfLines","minGap","linePosition","drawLine","lineElement","background","userSelect","pointerEvents","gridLines","line","remove","onClickRuler","divtilingViewer","viewportToImageZoom","rulerOverlay","display","justifyContent","alignItems","clientWidth","clientHeight","refreshRuler","isPress","onmousedown","onmouseup","onwheel","deltaY","parent","onmousemove","offsetLeft","offsetTop","rSize","titleElement","fontSize","flexDirection","handleReCenterRuler","handleTransitionEnd","handleRulerWidth","isPLT","baseResolution","onClickZoom","xResolutionPattern","onContextmenu","resData","route","useRoute","isButtonDisabled","pageMoveDeleteStop","isLoading","isNext","moveWbc","changeSlideByLisUpload","deleteConnectionStatus","upDownBlockAccess","pageGo","pageUpDownRunnIng","reqParams","direction","processNextDbIndex","handleDataResponse","dbId","resClassInfo","updateUpDown","selectWbc","selectItemsNewVal","isActive","lisCbcClick","onRight","ywmcLisPostSendApi","ywmcSaveCommentPostSendApi","cbcImgGetApi","ywmcCbcDataLoad","exam_ymd_unit","latestCbcData","slip","exam_cd","text_rslt","numeric_rslt","textVal","numVal","spc","cbcDataVal","lisSendYwmc","selectItemsVal","cbcPopup","cbcDataList","firstCbcDatafilename","datachoice","initCbcData","crcCbcDataLoad","cbcDataProcess","cbcListOpen","cbcDataChoice","commonCbc","updateCbcData","cbcDataListClose","cmcSeoulCbc","kuahGilHosCbc","inhaCbcLoad","cbcYwmcDataMatching","updateRunningApiPost","slipVal","pt_no","pt_nm","cbcWorkListVal","cbcPatientNoVal","cbcPatientNmVal","cbcSexVal","cbcAgeVal","loadingVal","params","fileData","fileSysExistsFileParms","directoryPath","keyword","fileListName","isExistsFile","fileSearchApiPram","fileParams","destination","fileSysCleanParams","isDuplicate","flgNm","submit_id","business_id","instcd","bcno","xml","xml2json","compact","spcworklist","worklist","parameter","cbcItem","tclsscrnnm","_cdata","inptrslt","cham","slideStatus","slideStatusDesc","newSlideData","condition","description","cbcPatientName","hospitalName","allUnCheck","isBeforeUpdate","refreshClass","classInfoArrUpdate","classInfoArrUpdateRe","unChecked","ClassInfoMenu","onRefreshClass","DetailHeader","LisCbc","RbcClass","onIsBeforeUpdate","onClassInfoArrUpdate","onClassInfoArrUpdateRe","RbcImageList","onNotCanvasClick","onUnChecked","BUSINESS_ID","INST_CD","EQMT_CD","CbcWbcTestCdList_0002","removeDuplicatesById","seenIds","newProps","showLISUploadButton","wbcInfoVal","wbcInfoAfterVal","wbcInfoBeforeVal","toastMessage","toastMessageType","TOAST_MSG_SUCCESS","toggleLock","totalBeforeCount","totalAfterCount","okMessageType","customClassArr","submittedScreen","lisCodeWbcArrApp","lisCodeRbcArrApp","isHotKeyPressed","barcodeCopy","classMoveLock","beforeCountPercent","afterCountPercent","lisUpload","getCustomClass","mountedMethod","lisFilePathSetArrVar","lisHotKeyVal","beforeAfterChange","keyName","uploadLis","lisModalOpen","IDS_MSG_UPLOAD_LIS","goClass","wbcClassTileChange","updateOriginalDb","toggleLockEvent","textarea","select","execCommand","showToast","TOAST_MSG_BAR_CODE_SUCCESS","cmcSeoulLisAndCbcDataGet","inhaDataSendLoad","gilDataSendLoad","godaeAnamDataSendLoad","uimdTestCbcLisDataGet","codeList","resultCbc","cbcJson","fiveDiffWorkList","wbcDiffCountItem","testcd","wbcTemp","fiveDiffItem","uniqueItems","totalPercentRounded","updatedWbcTemp","nsPercentItem","ancResult","paramsLisCopyLogData","checkUserAuth","isUserAuth","empNo","separator1","fromCharCode","separator2","terminator","paramsResult","newparams","ex_interface","userid","eqmtcd","testcont","testcontcd","execdeptcd","resultFlag","ResultFlag","resultflag","_text","paramsDataCbcLisLog","frontendSendData","processSendData","uimdDefaultData","frontendData","lisLastReportVal","error2","errText","IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID","goDaeData","goDae","lisFileUrlCreate","fileCreateRes","sendLisMessage","filepath","lisBtnColorVal","TOAST_MSG_ERROR","seq","kumcMergePercent","kumcBandPercent","updateItem","newPercent","appendData","filename","fileRes","errorCode","errorMessage","succ","fail","userNm","getUsernm","usernm","enterAppliedWbcMemo","getStringValue","customClassItems","availableCustomClassArr","wbcBeforeInfo","wbcAfterInfo","customClassItem","customItem","current","wbcBeforeArr","wbcAfterArr","wbcInfoAfterValForTotalCount","filterByTitle","wbcInfoBeforeValForTotalCount","totalCountSet","createPercent","isChanged","isBeforeAfterChanged","sortedBeforeImages","sortedAfterImages","beforeSet","afterSet","areEqual","isNonWbc","titleArr","showType","titleInArray","toastPosition","_createStaticVNode","ToastNotification","passWord","passWordCheck","passWordClose","remarkArr","newRemarkCode","newRemarkContent","editedCode","editedContent","searchRemark","crcDefaultModeVal","crcPassWordVal","passWordPass","passLayout","loadRemarks","returnPassWordCheck","searchRemarkData","searchParam","remarkAllContent","addRemark","scrollToBottom","deleteRemark","scrollContainer","scrollTop","scrollHeight","startEdit","saveEdit","cancelEdit","typeToText","okSelect","selectedRemarks","cancelSelect","PassWordCheck","onReturnPassWordCheck","onPassWordClose","crcSetArrP","addEditType","editItem","crcDataArr","plt","crcRemark","crcRecommendation","codeVal","crcSetArr","isRemark","remarkList","recoList","isRecommendation","commentList","isComment","crcComment","convertToNewlines","pushCrcData","dataArray","percentText","updateSelect","closeIsCrcAddChild","openSelect","closeSelect","initializeList","remarkContent","remarkallContentPush","newList","updateList","remarkCountReturnCode","onUpdateSelect","Remark","onCancel","onListUpdated","delType","isCrcAdd","loadCrcData","deleteSelectedItems","deleteCrcItem","openCrcAdd","close","all","selectAll","toggleOpen","pageRefresh","remark","_Teleport","CrcAdd","onCloseIsCrcAdd","Chart","BarController","BarElement","PointElement","CategoryScale","LinearScale","Legend","Title","LineController","LineElement","labels","autoNomarlCheck","normalRangeData","dataValues","datasets","label","borderColor","borderWidth","barThickness","pointRadius","pointBackgroundColor","responsive","plugins","legend","scales","grid","ticks","font","beginAtZero","borderDash","arrDataWbc","arrDataRbc","arrDataPlt","crcReport","arrDataRbcLeft","arrDataRbcRight","arrDataWbcLeft","arrDataWbcRight","arrDataPltLeft","arrDataPltRight","nowCrcDataVal","captureAndConvert","initializeData","html2canvas","useCORS","allowTaint","dataUrl","toDataURL","byteString","atob","ab","ArrayBuffer","ia","Uint8Array","charCodeAt","hexString","arrayBufferToHex","saveToDatabase","getImageDimensions","hex","hexToBlob","onload","onerror","byteNumbers","parseInt","substr","byteArray","buffer","bytes","imgData","image_rslt","rslt_stus","wrk_no","aa","highImg","findAfterArr","selectWbcImgArr","projectTypeReturn","selectCode","codeCloseChild","isAutoCBCMatchingArr","selectedImages","closeWbcSelectChild","toggleImageSelection","isImageSelected","selected","confirmSelection","crcDataVal","passWordType","isContent","trrur","passWordPassLis","showDropdown","morphologyMapping","lastChnageInputCrcData","nowCrcDataRef","captureAndConvertOk","autoCBCMatchingShow","IsWbcImageSelect","ywmcSlip","cbcFlag","selectWbcImgSend","arr","saveDataGet","crcSettingData","remarkListVal","commentListVal","recoListVal","newMorphMapSet","dataAutoComputeLoad","updateCbcDataToDatabase","closeWbcSelect","selectOption","codeSelect","codeClose","resetBool","selectedCode","changeCode","hideDropdownWithDelay","filteredOptions","lisClick","lisStart","updateCrcDataWithCode","crcSetData","nowItem","matchingItem","changeCrcData","margeData","matchingKeys","contents","updateCrcContent","categoryMapping","lisCommonDataWhether","yamcSendLisUpdate","tsmp_no","setDataYWmc","resText","lisFunc","commonSucessLis","adminPassword","cellStatus","isDefaultPassword","closePassModal","handleSuccess","handleFailure","filterArr","tempSaveLocalStorage","tempSaveDataEmpty","checkTextAreaMaxLength","cbcFlagLength","onFocus","onBlur","onChangeCrcData","CrcList","CellStatusDashBoard","AutoCBCMatching","onCodeSelect","onCodeClose","ResultImage","onResetBool","WbcImageSelect","onCloseWbcSelect","onSelectWbcImgSend","nonWbcTitleArr","nonWbcClassList","handleClickOutside","classOrderChanged","stopPropagation","wbcArrs","sortedWbcInfo","submitStateChanged","changedSubmitState","uploadLisChangeSlide","hospitalNm","onSubmitStateChanged","WbcClass","onClassOrderChanged","onUploadLisChangeSlide","Crc","nonRbcClassList","Print","onPrintClose","wps","backgroundImage","hideSideNavigatorImage","imgOn","findWbcClass","localSlotId","isZoomed","currentOverlay","imgType","wpsImgClickInfoData","wpsInitElement","currentClass","FILE_NM","adjustNavBar","boxX1","POSX1","boxY1","POSY1","boxX2","POSX2","boxY2","POSY2","boxWidth","boxHeight","drawBoxOnCanvas","navBar","navBarCanvas","parentNode","realWidth","realHeight","scaleFactor","navigatorHeight","navigatorWidth","navigatorAutoFade","navigatorBackground","showFullPageControl","showSequenceControl","showZoomControl","showHomeControl","zoomPerClick","navigatorButton","srcRest","srcGroup","srcHover","srcDown","nav","buttonGroup","zoomRect","fitBounds","extracted","findWbcClassVal","zoomToBox","viewportRect","zoomFactor","adjustedRect","overlayDiv","Type","buildPyramid","updateWbcInfo","Function","classCompareShow","selectedTitle","setRef","replaceFileNamePrefix","onDragOver","isBorderChanged","wbcReset","wbcInfoRefresh","imageSize","wpsShow","isAllClassesChecked","expose","__expose","refsArray","cellRef","firstClassObj","firstItemIndex","lastItemIndex","lastClassObj","clickableItem","scrollToElement","targetElement","scrollIntoView","wbcInfoArrChild","toRefs","firstClass","lastClass","previousFirstClass","previousLastClass","newSelectItems","wbcInfoAfwbcInfo","updateFirstLastClass","debouncedUpdate","debounce","timestamp","uniqueKey","imgIndex","classImgChange","handleScroll","isAtBottom","wpsImgClickInfo","handleImageLoad","itemIndex","updateClassValue","previousClass","classObj","$emit","imageIndex","onLoad","wpsDiv","cellImgBox","onScroll","Wps","onBorderDel","onBorderOn","checkPbNormalCell","norMalRange","neutrophilCount","resultObj","range","initCBCData","imageDriveRootPath","draggedItemIndex","draggedImageIndex","firstClickedImageIndex","draggedCircleIndex","draggedCircleIndexArr","draggedCircleImgIndex","shiftClickImages","rollbackHistory","selectSizeTitle","cellMarkerIcon","imgSet","zoomValue","selectItemImageArr","moveRightClickArr","showSize","contextMenuVisible","contextMenuX","contextMenuY","targetItem","$imageGalleryRef","isLoadedSlideData","isWpsShow","blockClicks","checkWps","imgSetLocalStorage","drawCellMarker","currentMoveImgIsBool","borderDel","borderOn","wpsFolderCheck","handleZoom","newSize","handleUpdateCellRef","refValue","classCompare","imgPixelConvertToPercent","percentConvertToPixel","storedBrightness","storedRgb","imageSizeCopy","nextPage","isNextFalse","handleRightClick","openContextMenu","showSizeControl","menuHeight","screenHeight","innerHeight","mouseX","mouseY","menuX","menuY","menuWidth","innerWidth","moveSelectedImages","itemIdx","matchingItemFind","infoItem","addToRollbackHistory","draggedItem","matchingItemIndex","excludeClassName","upDown","upDownData","customClassData","getCustomSessionData","findDelData","dataItems","wbcinfo","wbcPush","foundObject","itemsToDelete","prefix","replacements","modifiedPrefix","openModal","handleWheel","imgResize","jsonImageDat","imageElement","foundItem","widthRatio","ORG_WIDTH","heightRatio","ORG_HEIGHT","rectWidth","rectHeight","allCheckChange","allCheckInsert","idxKey","imgSizeReset","reset","selectedSizeTitle","changeImageSize","requestAnimationFrame","updateImageSize","newPercentValue","displayValue","onDragOverCircle","onDropCircle","updatedWbcInfo","moveSelectedImagesToTargetItem","targetIndex","selectedImagesToMove","sourceItemIndex","sourceItem","correspondingItem","itemImg","dataItem","wbcInfoIdArr","handleMoveImages","selectImage","classInfoitem","imageIndexInSelected","targetItemIndex","originalOnDrop","draggedItems","targetItems","keyMove","wbcInfosArr","sourceFolders","destinationFolders","formattedTargetItemId","classInfoBagic","newArrIdx","imgAttr","removeDuplicateImages","seItem","removeDuplicatesByProperty","findImage","draggedItemIdx","draggedItemObj","selectedImagesFileNames","filteredImages","array","property","seen","uniqueFileNames","uniqueImages","notWbcAfterSave","originalDbVal","uniqueData","uniqueImagesForItem","rollbackChanges","prevWbcInfo","pop","rollbackImages","findUndefinedImages","sourceWbcInfo","targetWbcInfo","infoArray","sourceIndex","sourceImage","targetImage","currentWbcInfo","sourceFolderInfo","destinationFolderInfo","status","updateCBCData","incomingSlideData","cbcChangeData","updatedRunningInfo","allClassesChecked","onIsNextFalse","onUpdateSlideDataByCBCData","ClassInfo","onNextPage","onScrollEvent","ImageGallery","onAllCheckChange","onSelectImage","onOpenModal","onHideImage","onHandleRightClick","onOnDrop","onOnDragStart","onOnDropCircle","onOnDragOverCircle","onScrollToElement","onAllClassesChecked","onWheel","paImages","idealZoneImages","idealStitchImages","megaImages","particleImageUrls","idealZoneImageUrls","idealStitchImageUrls","megaImageUrls","strArray","buttonOfen","viewerSmall","getImgUrl","bmOldDataDivision","getImageUrlsSmallImg","returnVal","resp","openInViewer","bmOldData","urlTileSources","showFullScreenControl","showRotationControl","customButton","transform","cursor","padding","closeViewer","addControl","anchor","ABSOLUTE","dimensions","tilingViewerElement","containerWidth","aspectRatio","dynamicHeight","preventDefaultAction","viewerElement","newImgHeight","newImgWidth","viewerHeight","bool","imgRef","TilingViewer","LeftImgList","createRouter","history","createWebHistory","routes","component","HomeView","JoinView","loginView","setting","Database","databaseDetail","DatabaseWhole","DatabaseRbc","beforeEach","next","currentUser","beforeSetting","gradientStart","gradientEnd","closeNoti","errArr","desc","soln","appHeaderLeftHidden","isBlinkingPrime","storagePercent","ErrLogOpen","eqStatCdData","oilCountData","storagePercentData","oilVisible","maxOilCount","statusBarWrapper","statusBar","rootDir","isErrorAlarmRunning","isCompleteAlarmRunning","noRouterPush","isCompleteAlarmInterval","isErrorAlarmInterval","isPlayingCompleteAlarm","isPlayingErrorAlarm","clickType","userSetOutUl","isStartCountUpdated","mouseClick","mounseLeave","storage","userSetOutToggle","updateDateTime","toLocaleDateString","toLocaleTimeString","errLogOn","errLogLoad","fullTimestamp","E_TYPE","E_CODE","E_DESC","E_SOLN","E_NAME","clear","fullscreenElement","fullScreen","timerId","closeUserSetBox","preventScroll","passive","autoStartTimerNumber","eqStatCdChangeVal","oilCountChangeVal","storagePercentChangeVal","newIsErrorAlarm","play","newIsCompleteAlarm","LOGOUT","eqStatCdVal","onReset","getPercent","progressBarWidth","offsetWidth","onPrime","closeErrLog","openErrLogOver","closeErrLogLeave","errMouseSet","_component_router_link","_imports_0","ProgressBar","animationDuration","showGlowEffect","onMouseover","ErrLog","onCloseErrLog","onErrMouseSet","sysInfoStore","resultCd","embeddedInfoData","isRecovery","deviceInfoData","runningInfoStore","countingInterStartval","countingInterRunval","isNsNbIntegrationLocal","viewerCheckApp","parsedDataProps","parsedDataSysInfoProps","deleteData","isFullscreen","ipMatches","barcodeNum","checkFullscreenStatus","matchMedia","matches","FULLSCREEN_SUGGEST","startChecking","uniqueReqArr","removeDuplicateJobCmd","notSysRunInfo","sendMessage","reqArrPaste","leave","isIpMatching","urlPattern","socketData","TCP_DiSCONNECTED","textDecoder","TextDecoder","stringData","decode","parseDataWarp","showCoreErrorAlert","sendSettingInfo","runnStart","runningInfoCheckStore","runnComp","lastCompleteIndex","iCasChange","workingDone","saveTestHistory","isLowPowerScan","completeSlot","classElements","rbcArrElements","matchedWbcInfo","newWbcInfo","wbcInfoNewVal","getDefaultWbcInfo","getDefaultWbcInfoAfter","findWbcIndex","elW","updateWbcInfoAfter","traySlotFirstNumber","bminfo","saveRunningInfo","last","startSysPostWebSocket","runInfoPostWebSocket","rbcAppUpdate","classAppUpdateLast","uniqueJobCmds","executeAfterDelay","_component_router_view","AppHeader","bmComponent","onClassAppUpdateLast","onRbcAppUpdate","onErrorClear","socketPlugin","install","app","socket","io","transports","reconnection","reconnectionAttempts","reconnectionDelay","timeout","pingTimeout","sendPing","connected","$socketError","latency","faHalfCircleUp","iconName","faHalfCircleDown","apolloClient","ApolloClient","uri","cache","InMemoryCache","useProvideApolloClient","provideApolloClient","library","fas","faCircle","createApp","App","use","FontAwesomeIcon","mount","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","n","getter","__esModule","d","definition","defineProperty","enumerable","g","globalThis","prop","prototype","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}